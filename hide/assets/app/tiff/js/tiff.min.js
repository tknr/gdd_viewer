/**
   ----
   zlib: http://www.zlib.net/
   Copyright (C) 1995-2013 Jean-loup Gailly and Mark Adler

   This software is provided 'as-is', without any express or implied
   warranty.  In no event will the authors be held liable for any damages
   arising from the use of this software.

   Permission is granted to anyone to use this software for any purpose,
   including commercial applications, and to alter it and redistribute it
   freely, subject to the following restrictions:

   1. The origin of this software must not be misrepresented; you must not
   claim that you wrote the original software. If you use this software
   in a product, an acknowledgment in the product documentation would be
   appreciated but is not required.
   2. Altered source versions must be plainly marked as such, and must not be
   misrepresented as being the original software.
   3. This notice may not be removed or altered from any source distribution.

   Jean-loup Gailly        Mark Adler
   jloup@gzip.org          madler@alumni.caltech.edu


   The data format used by the zlib library is described by RFCs (Request for
   Comments) 1950 to 1952 in the files http://tools.ietf.org/html/rfc1950
   (zlib format), rfc1951 (deflate format) and rfc1952 (gzip format).
   ----
   LibTIFF: http://www.remotesensing.org/libtiff/
   Copyright (c) 1988-1997 Sam Leffler
   Copyright (c) 1991-1997 Silicon Graphics, Inc.

   Permission to use, copy, modify, distribute, and sell this software and 
   its documentation for any purpose is hereby granted without fee, provided
   that (i) the above copyright notices and this permission notice appear in
   all copies of the software and related documentation, and (ii) the names of
   Sam Leffler and Silicon Graphics may not be used in any advertising or
   publicity relating to the software without the specific, prior written
   permission of Sam Leffler and Silicon Graphics.

   THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  

   IN NO EVENT SHALL SAM LEFFLER OR SILICON GRAPHICS BE LIABLE FOR
   ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND,
   OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
   WHETHER OR NOT ADVISED OF THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF 
   LIABILITY, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE 
   OF THIS SOFTWARE.
*/
(function(window){var Module;Module||(Module=eval("(function() { try { return Module || {} } catch(e) { return {} } })()"));var moduleOverrides={},key;for(key in Module)Module.hasOwnProperty(key)&&(moduleOverrides[key]=Module[key]);var ENVIRONMENT_IS_NODE="object"===typeof process&&"function"===typeof require,ENVIRONMENT_IS_WEB="object"===typeof window,ENVIRONMENT_IS_WORKER="function"===typeof importScripts,ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;
if(ENVIRONMENT_IS_NODE){Module.print=function(m){process.stdout.write(m+"\n")};Module.printErr=function(m){process.stderr.write(m+"\n")};var nodeFS=require("fs"),nodePath=require("path");Module.read=function(m,d){m=nodePath.normalize(m);var c=nodeFS.readFileSync(m);c||m==nodePath.resolve(m)||(m=path.join(__dirname,"..","src",m),c=nodeFS.readFileSync(m));c&&!d&&(c=c.toString());return c};Module.readBinary=function(m){return Module.read(m,!0)};Module.load=function(m){globalEval(read(m))};Module.arguments=
process.argv.slice(2);module.exports=Module}ENVIRONMENT_IS_SHELL&&(Module.print=print,"undefined"!=typeof printErr&&(Module.printErr=printErr),Module.read=read,Module.readBinary=function(m){return read(m,"binary")},"undefined"!=typeof scriptArgs?Module.arguments=scriptArgs:"undefined"!=typeof arguments&&(Module.arguments=arguments),this.Module=Module);ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER&&(Module.print=function(m){console.log(m)},Module.printErr=function(m){console.log(m)},this.Module=Module);
if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)Module.read=function(m){var d=new XMLHttpRequest;d.open("GET",m,!1);d.send(null);return d.responseText},"undefined"!=typeof arguments&&(Module.arguments=arguments);if(ENVIRONMENT_IS_WORKER){var TRY_USE_DUMP=!1;Module.print=TRY_USE_DUMP&&"undefined"!==typeof dump?function(m){dump(m)}:function(m){};Module.load=importScripts}
if(!(ENVIRONMENT_IS_WORKER||ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_NODE||ENVIRONMENT_IS_SHELL))throw"Unknown runtime environment. Where are we?";function globalEval(m){eval.call(null,m)}"undefined"==!Module.load&&Module.read&&(Module.load=function(m){globalEval(Module.read(m))});Module.print||(Module.print=function(){});Module.printErr||(Module.printErr=Module.print);Module.arguments||(Module.arguments=[]);Module.print=Module.print;Module.printErr=Module.printErr;Module.preRun=[];Module.postRun=[];
for(key in moduleOverrides)moduleOverrides.hasOwnProperty(key)&&(Module[key]=moduleOverrides[key]);
var Runtime={stackSave:function(){return STACKTOP},stackRestore:function(m){STACKTOP=m},forceAlign:function(m,d){d=d||4;if(1==d)return m;if(isNumber(m)&&isNumber(d))return Math.ceil(m/d)*d;if(isNumber(d)&&isPowerOfTwo(d)){var c=log2(d);return"(((("+m+")+"+(d-1)+")>>"+c+")<<"+c+")"}return"Math.ceil(("+m+")/"+d+")*"+d},isNumberType:function(m){return m in Runtime.INT_TYPES||m in Runtime.FLOAT_TYPES},isPointerType:function(m){return"*"==m[m.length-1]},isStructType:function(m){return isPointerType(m)?
!1:isArrayType(m)||/<?{ ?[^}]* ?}>?/.test(m)?!0:"%"==m[0]},INT_TYPES:{i1:0,i8:0,i16:0,i32:0,i64:0},FLOAT_TYPES:{"float":0,"double":0},or64:function(m,d){var c=m|0|d|0,a=4294967296*(Math.round(m/4294967296)|Math.round(d/4294967296));return c+a},and64:function(m,d){var c=(m|0)&(d|0),a=4294967296*(Math.round(m/4294967296)&Math.round(d/4294967296));return c+a},xor64:function(m,d){var c=(m|0)^(d|0),a=4294967296*(Math.round(m/4294967296)^Math.round(d/4294967296));return c+a},getNativeTypeSize:function(m,
d){if(1==Runtime.QUANTUM_SIZE)return 1;var c={"%i1":1,"%i8":1,"%i16":2,"%i32":4,"%i64":8,"%float":4,"%double":8}["%"+m];c||("*"==m.charAt(m.length-1)?c=Runtime.QUANTUM_SIZE:"i"==m[0]&&(c=parseInt(m.substr(1)),assert(0==c%8),c/=8));return c},getNativeFieldSize:function(m){return Math.max(Runtime.getNativeTypeSize(m),Runtime.QUANTUM_SIZE)},dedup:function(m,d){var c={};return d?m.filter(function(a){return c[a[d]]?!1:c[a[d]]=!0}):m.filter(function(a){return c[a]?!1:c[a]=!0})},set:function(){for(var m=
"object"===typeof arguments[0]?arguments[0]:arguments,d={},c=0;c<m.length;c++)d[m[c]]=0;return d},STACK_ALIGN:8,getAlignSize:function(m,d,c){return"i64"==m||"double"==m||c?8:m?Math.min(d||(m?Runtime.getNativeFieldSize(m):0),Runtime.QUANTUM_SIZE):Math.min(d,8)},calculateStructAlignment:function(m){m.flatSize=0;m.alignSize=0;var d=[],c=-1,a=0;m.flatIndexes=m.fields.map(function(b){a++;var e;if(Runtime.isNumberType(b)||Runtime.isPointerType(b))e=Runtime.getNativeTypeSize(b),b=Runtime.getAlignSize(b,
e);else if(Runtime.isStructType(b))"0"===b[1]?(e=0,b=m.alignSize||QUANTUM_SIZE):(e=Types.types[b].flatSize,b=Runtime.getAlignSize(null,Types.types[b].alignSize));else if("b"==b[0])e=b.substr(1)|0,b=1;else throw"Unclear type in struct: "+b+", in "+m.name_+" :: "+dump(Types.types[m.name_]);m.packed&&(b=1);m.alignSize=Math.max(m.alignSize,b);b=Runtime.alignMemory(m.flatSize,b);m.flatSize=b+e;0<=c&&d.push(b-c);return c=b});m.flatSize=Runtime.alignMemory(m.flatSize,m.alignSize);0==d.length?m.flatFactor=
m.flatSize:1==Runtime.dedup(d).length&&(m.flatFactor=d[0]);m.needsFlattening=1!=m.flatFactor;return m.flatIndexes},generateStructInfo:function(m,d,c){var a,b;if(d){c=c||0;a=("undefined"===typeof Types?Runtime.typeInfo:Types.types)[d];if(!a)return null;if(a.fields.length!=m.length)return printErr("Number of named fields must match the type for "+d+": possibly duplicate struct names. Cannot return structInfo"),null;b=a.flatIndexes}else a={fields:m.map(function(a){return a[0]})},b=Runtime.calculateStructAlignment(a);
var e={__size__:a.flatSize};d?m.forEach(function(d,f){if("string"===typeof d)e[d]=b[f]+c;else{var k,h;for(h in d)k=h;e[k]=Runtime.generateStructInfo(d[k],a.fields[f],b[f])}}):m.forEach(function(a,c){e[a[1]]=b[c]});return e},dynCall:function(m,d,c){if(c&&c.length)return assert(c.length==m.length-1),FUNCTION_TABLE[d].apply(null,c);assert(1==m.length);return FUNCTION_TABLE[d]()},addFunction:function(m){var d=FUNCTION_TABLE,c=d.length;d.push(m);d.push(0);return c},removeFunction:function(m){FUNCTION_TABLE[m]=
null},warnOnce:function(m){Runtime.warnOnce.shown||(Runtime.warnOnce.shown={});Runtime.warnOnce.shown[m]||(Runtime.warnOnce.shown[m]=1,Module.printErr(m))},funcWrappers:{},getFuncWrapper:function(m,d){assert(d);Runtime.funcWrappers[m]||(Runtime.funcWrappers[m]=function(){return Runtime.dynCall(d,m,arguments)});return Runtime.funcWrappers[m]},UTF8Processor:function(){var m=[],d=0;this.processCChar=function(c){c&=255;d&&(m.push(c),d--);if(0==m.length){if(128>c)return String.fromCharCode(c);m.push(c);
d=191<c&&224>c?1:2;return""}if(0<d)return"";c=m[0];var a=m[1],b=m[2];c=191<c&&224>c?String.fromCharCode((c&31)<<6|a&63):String.fromCharCode((c&15)<<12|(a&63)<<6|b&63);m.length=0;return c};this.processJSString=function(c){c=unescape(encodeURIComponent(c));for(var a=[],b=0;b<c.length;b++)a.push(c.charCodeAt(b));return a}},stackAlloc:function(m){var d=STACKTOP;STACKTOP=STACKTOP+m|0;STACKTOP=STACKTOP+7>>3<<3;assert((STACKTOP|0)<(STACK_MAX|0))|0;return d},staticAlloc:function(m){var d=STATICTOP;STATICTOP=
STATICTOP+(assert(!staticSealed),m)|0;STATICTOP=STATICTOP+7>>3<<3;return d},dynamicAlloc:function(m){var d=DYNAMICTOP;DYNAMICTOP=DYNAMICTOP+(assert(0<DYNAMICTOP),m)|0;DYNAMICTOP=DYNAMICTOP+7>>3<<3;DYNAMICTOP>=TOTAL_MEMORY&&enlargeMemory();return d},alignMemory:function(m,d){return Math.ceil(m/(d?d:8))*(d?d:8)},makeBigInt:function(m,d,c){return c?(m>>>0)+4294967296*(d>>>0):(m>>>0)+4294967296*(d|0)},GLOBAL_BASE:8,QUANTUM_SIZE:4,__dummy__:0},__THREW__=0,setjmpId=1,setjmpLabels={},ABORT=!1,undef=0,tempValue,
tempInt,tempBigInt,tempInt2,tempBigInt2,tempPair,tempBigIntI,tempBigIntR,tempBigIntS,tempBigIntP,tempBigIntD,tempI64,tempI64b,tempRet0,tempRet1,tempRet2,tempRet3,tempRet4,tempRet5,tempRet6,tempRet7,tempRet8,tempRet9;function assert(m,d){m||abort("Assertion failed: "+d)}var globalScope=this;function ccall(m,d,c,a){return ccallFunc(getCFunc(m),d,c,a)}Module.ccall=ccall;
function getCFunc(m){try{var d=Module["_"+m];d||(d=eval("_"+m))}catch(c){}assert(d,"Cannot call unknown function "+m+" (perhaps LLVM optimizations or closure removed it?)");return d}
function ccallFunc(m,d,c,a){function b(a,b){if("string"==b){if(null===a||void 0===a||0===a)return 0;e||(e=Runtime.stackSave());var c=Runtime.stackAlloc(a.length+1);writeStringToMemory(a,c);return c}return"array"==b?(e||(e=Runtime.stackSave()),c=Runtime.stackAlloc(a.length),writeArrayToMemory(a,c),c):a}var e=0,g=0;a=a?a.map(function(a){return b(a,c[g++])}):[];m=function(a,b){if("string"==b)return Pointer_stringify(a);assert("array"!=b);return a}(m.apply(null,a),d);e&&Runtime.stackRestore(e);return m}
function cwrap(m,d,c){var a=getCFunc(m);return function(){return ccallFunc(a,d,c,Array.prototype.slice.call(arguments))}}Module.cwrap=cwrap;
function setValue(m,d,c,a){c=c||"i8";"*"===c.charAt(c.length-1)&&(c="i32");switch(c){case "i1":HEAP8[m]=d;break;case "i8":HEAP8[m]=d;break;case "i16":HEAP16[m>>1]=d;break;case "i32":HEAP32[m>>2]=d;break;case "i64":tempI64=[d>>>0,Math.min(Math.floor(d/4294967296),4294967295)>>>0];HEAP32[m>>2]=tempI64[0];HEAP32[m+4>>2]=tempI64[1];break;case "float":HEAPF32[m>>2]=d;break;case "double":HEAPF64[m>>3]=d;break;default:abort("invalid type for setValue: "+c)}}Module.setValue=setValue;
function getValue(m,d,c){d=d||"i8";"*"===d.charAt(d.length-1)&&(d="i32");switch(d){case "i1":return HEAP8[m];case "i8":return HEAP8[m];case "i16":return HEAP16[m>>1];case "i32":return HEAP32[m>>2];case "i64":return HEAP32[m>>2];case "float":return HEAPF32[m>>2];case "double":return HEAPF64[m>>3];default:abort("invalid type for setValue: "+d)}return null}Module.getValue=getValue;var ALLOC_NORMAL=0,ALLOC_STACK=1,ALLOC_STATIC=2,ALLOC_DYNAMIC=3,ALLOC_NONE=4;Module.ALLOC_NORMAL=ALLOC_NORMAL;
Module.ALLOC_STACK=ALLOC_STACK;Module.ALLOC_STATIC=ALLOC_STATIC;Module.ALLOC_DYNAMIC=ALLOC_DYNAMIC;Module.ALLOC_NONE=ALLOC_NONE;
function allocate(m,d,c,a){var b,e;"number"===typeof m?(b=!0,e=m):(b=!1,e=m.length);var g="string"===typeof d?d:null;c=c==ALLOC_NONE?a:[_malloc,Runtime.stackAlloc,Runtime.staticAlloc,Runtime.dynamicAlloc][void 0===c?ALLOC_STATIC:c](Math.max(e,g?1:d.length));if(b){a=c;assert(0==(c&3));for(m=c+(e&-4);a<m;a+=4)HEAP32[a>>2]=0;for(m=c+e;a<m;)HEAP8[a++|0]=0;return c}if("i8"===g)return m.subarray||m.slice?HEAPU8.set(m,c):HEAPU8.set(new Uint8Array(m),c),c;a=0;for(var f,k;a<e;){var h=m[a];"function"===typeof h&&
(h=Runtime.getFunctionIndex(h));b=g||d[a];0===b?a++:(assert(b,"Must know what type to store in allocate!"),"i64"==b&&(b="i32"),setValue(c+a,h,b),k!==b&&(f=Runtime.getNativeTypeSize(b),k=b),a+=f)}return c}Module.allocate=allocate;
function Pointer_stringify(m,d){for(var c=!1,a,b=0;;){assert(m+b<TOTAL_MEMORY);a=HEAPU8[m+b|0];if(128<=a)c=!0;else if(0==a&&!d)break;b++;if(d&&b==d)break}d||(d=b);var e="";if(!c){for(;0<d;)a=String.fromCharCode.apply(String,HEAPU8.subarray(m,m+Math.min(d,1024))),e=e?e+a:a,m+=1024,d-=1024;return e}c=new Runtime.UTF8Processor;for(b=0;b<d;b++)assert(m+b<TOTAL_MEMORY),a=HEAPU8[m+b|0],e+=c.processCChar(a);return e}Module.Pointer_stringify=Pointer_stringify;var PAGE_SIZE=4096;
function alignMemoryPage(m){return m+4095>>12<<12}var HEAP,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64,STATIC_BASE=0,STATICTOP=0,staticSealed=!1,STACK_BASE=0,STACKTOP=0,STACK_MAX=0,DYNAMIC_BASE=0,DYNAMICTOP=0;
function enlargeMemory(){Module.printErr("Warning: Enlarging memory arrays, this is not fast, and ALLOW_MEMORY_GROWTH is not fully tested with all optimizations on! "+[DYNAMICTOP,TOTAL_MEMORY]);assert(DYNAMICTOP>=TOTAL_MEMORY);for(assert(4<TOTAL_MEMORY);TOTAL_MEMORY<=DYNAMICTOP;)TOTAL_MEMORY=alignMemoryPage(2*TOTAL_MEMORY);assert(TOTAL_MEMORY<=Math.pow(2,30));var m=HEAP8,d=new ArrayBuffer(TOTAL_MEMORY);Module.HEAP8=HEAP8=new Int8Array(d);Module.HEAP16=HEAP16=new Int16Array(d);Module.HEAP32=HEAP32=
new Int32Array(d);Module.HEAPU8=HEAPU8=new Uint8Array(d);Module.HEAPU16=HEAPU16=new Uint16Array(d);Module.HEAPU32=HEAPU32=new Uint32Array(d);Module.HEAPF32=HEAPF32=new Float32Array(d);Module.HEAPF64=HEAPF64=new Float64Array(d);HEAP8.set(m)}var TOTAL_STACK=Module.TOTAL_STACK||5242880,TOTAL_MEMORY=Module.TOTAL_MEMORY||16777216,FAST_MEMORY=Module.FAST_MEMORY||2097152;assert(!!Int32Array&&!!Float64Array&&!!(new Int32Array(1)).subarray&&!!(new Int32Array(1)).set,"Cannot fallback to non-typed array case: Code is too specialized");
var buffer=new ArrayBuffer(TOTAL_MEMORY);HEAP8=new Int8Array(buffer);HEAP16=new Int16Array(buffer);HEAP32=new Int32Array(buffer);HEAPU8=new Uint8Array(buffer);HEAPU16=new Uint16Array(buffer);HEAPU32=new Uint32Array(buffer);HEAPF32=new Float32Array(buffer);HEAPF64=new Float64Array(buffer);HEAP32[0]=255;assert(255===HEAPU8[0]&&0===HEAPU8[3],"Typed arrays 2 must be run on a little-endian system");Module.HEAP=HEAP;Module.HEAP8=HEAP8;Module.HEAP16=HEAP16;Module.HEAP32=HEAP32;Module.HEAPU8=HEAPU8;
Module.HEAPU16=HEAPU16;Module.HEAPU32=HEAPU32;Module.HEAPF32=HEAPF32;Module.HEAPF64=HEAPF64;function callRuntimeCallbacks(m){for(;0<m.length;){var d=m.shift();if("function"==typeof d)d();else{var c=d.func;"number"===typeof c?void 0===d.arg?Runtime.dynCall("v",c):Runtime.dynCall("vi",c,[d.arg]):c(void 0===d.arg?null:d.arg)}}}var __ATPRERUN__=[],__ATINIT__=[],__ATMAIN__=[],__ATEXIT__=[],__ATPOSTRUN__=[],runtimeInitialized=!1;
function preRun(){if(Module.preRun)for("function"==typeof Module.preRun&&(Module.preRun=[Module.preRun]);Module.preRun.length;)addOnPreRun(Module.preRun.shift());callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){runtimeInitialized||(runtimeInitialized=!0,callRuntimeCallbacks(__ATINIT__))}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__)}
function postRun(){if(Module.postRun)for("function"==typeof Module.postRun&&(Module.postRun=[Module.postRun]);Module.postRun.length;)addOnPostRun(Module.postRun.shift());callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(m){__ATPRERUN__.unshift(m)}Module.addOnPreRun=Module.addOnPreRun=addOnPreRun;function addOnInit(m){__ATINIT__.unshift(m)}Module.addOnInit=Module.addOnInit=addOnInit;function addOnPreMain(m){__ATMAIN__.unshift(m)}Module.addOnPreMain=Module.addOnPreMain=addOnPreMain;
function addOnExit(m){__ATEXIT__.unshift(m)}Module.addOnExit=Module.addOnExit=addOnExit;function addOnPostRun(m){__ATPOSTRUN__.unshift(m)}Module.addOnPostRun=Module.addOnPostRun=addOnPostRun;function intArrayFromString(m,d,c){m=(new Runtime.UTF8Processor).processJSString(m);c&&(m.length=c);d||m.push(0);return m}Module.intArrayFromString=intArrayFromString;
function intArrayToString(m){for(var d=[],c=0;c<m.length;c++){var a=m[c];255<a&&(assert(!1,"Character code "+a+" ("+String.fromCharCode(a)+")  at offset "+c+" not in 0x00-0xFF."),a&=255);d.push(String.fromCharCode(a))}return d.join("")}Module.intArrayToString=intArrayToString;function writeStringToMemory(m,d,c){m=intArrayFromString(m,c);for(c=0;c<m.length;)HEAP8[d+c|0]=m[c],c+=1}Module.writeStringToMemory=writeStringToMemory;
function writeArrayToMemory(m,d){for(var c=0;c<m.length;c++)HEAP8[d+c|0]=m[c]}Module.writeArrayToMemory=writeArrayToMemory;function unSign(m,d,c,a){return 0<=m?m:32>=d?2*Math.abs(1<<d-1)+m:Math.pow(2,d)+m}function reSign(m,d,c,a){if(0>=m)return m;c=32>=d?Math.abs(1<<d-1):Math.pow(2,d-1);m>=c&&(32>=d||m>c)&&(m=-2*c+m);return m}Math.imul||(Math.imul=function(m,d){var c=m&65535,a=d&65535;return c*a+((m>>>16)*a+c*(d>>>16)<<16)|0});Math.imul=Math.imul;
var runDependencies=0,runDependencyTracking={},calledInit=!1,calledRun=!1,runDependencyWatcher=null;
function addRunDependency(m){runDependencies++;Module.monitorRunDependencies&&Module.monitorRunDependencies(runDependencies);m?(assert(!runDependencyTracking[m]),runDependencyTracking[m]=1,null===runDependencyWatcher&&"undefined"!==typeof setInterval&&(runDependencyWatcher=setInterval(function(){var d=!1,c;for(c in runDependencyTracking)d||(d=!0,Module.printErr("still waiting on run dependencies:")),Module.printErr("dependency: "+c);d&&Module.printErr("(end of list)")},1E4))):Module.printErr("warning: run dependency added without ID")}
Module.addRunDependency=addRunDependency;function removeRunDependency(m){runDependencies--;Module.monitorRunDependencies&&Module.monitorRunDependencies(runDependencies);m?(assert(runDependencyTracking[m]),delete runDependencyTracking[m]):Module.printErr("warning: run dependency removed without ID");0==runDependencies&&(null!==runDependencyWatcher&&(clearInterval(runDependencyWatcher),runDependencyWatcher=null),!calledRun&&shouldRunNow&&run())}Module.removeRunDependency=removeRunDependency;
Module.preloadedImages={};Module.preloadedAudios={};function loadMemoryInitializer(m){function d(c){HEAPU8.set(c,STATIC_BASE)}addOnPreRun(function(){ENVIRONMENT_IS_NODE||ENVIRONMENT_IS_SHELL?d(Module.readBinary(m)):Browser.asyncLoad(m,function(c){d(c)},function(c){throw"could not load memory initializer "+m;})})}STATIC_BASE=8;STATICTOP=STATIC_BASE+149552;__ATINIT__.push({func:function(){runPostSets()}});var _stderr;_stderr=_stderr=allocate([0,0,0,0,0,0,0,0],"i8",ALLOC_STATIC);
allocate([21,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,1,0,48,70,2,0,0,0,0,0,0,0,0,0,8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,125,0,0,168,157,0,0,32,70,2,0,128,120,0,0,240,112,0,0,96,107,0,0,192,102,0,0,248,98,0,0,136,93,0,0,32,70,2,0,7,0,3,0,0,0,6,0,3,0,0,0,3,0,3,0,0,0,1,0,1,0,0,0,3,0,2,0,0,0,6,0,2,0,0,0,7,0,2,0,0,0,0,0,0,0,0,0,95,155,125,62,4,0,0,0,52,161,121,62,6,0,4,0,3,124,119,62,7,0,10,0,62,149,115,62,9,0,17,0,88,145,113,62,10,0,26,0,132,185,109,62,12,0,36,0,27,213,105,62,14,0,48,0,112,176,103,62,15,0,62,0,57,
181,99,62,17,0,77,0,41,179,97,62,18,0,94,0,240,220,91,62,21,0,112,0,179,209,89,62,22,0,133,0,63,199,87,62,23,0,155,0,59,229,81,62,26,0,178,0,144,219,79,62,27,0,204,0,226,6,76,62,29,0,231,0,181,55,72,62,31,0,4,1,152,52,70,62,32,0,35,1,97,111,66,62,34,0,67,1,104,175,62,62,36,0,101,1,104,175,62,62,36,0,137,1,102,249,58,62,38,0,173,1,144,76,55,62,40,0,211,1,92,173,51,62,42,0,251,1,8,33,48,62,44,0,37,2,8,33,48,62,44,0,81,2,160,168,44,62,46,0,125,2,160,168,44,62,46,0,171,2,52,128,39,62,49,0,217,2,12,115,
34,62,52,0,10,3,12,115,34,62,52,0,62,3,12,115,34,62,52,0,114,3,174,129,29,62,55,0,166,3,174,129,29,62,55,0,221,3,226,172,24,62,58,0,20,4,226,172,24,62,58,0,78,4,2,44,18,62,62,0,136,4,2,44,18,62,62,0,198,4,2,44,18,62,62,0,4,5,167,150,13,62,65,0,66,5,167,150,13,62,65,0,131,5,167,150,13,62,65,0,196,5,134,86,7,62,69,0,5,6,134,86,7,62,69,0,74,6,159,59,1,62,73,0,143,6,159,59,1,62,73,0,216,6,159,59,1,62,73,0,33,7,80,138,246,61,77,0,106,7,80,138,246,61,77,0,183,7,80,138,246,61,77,0,4,8,80,138,246,61,77,0,
81,8,159,88,231,61,82,0,158,8,159,88,231,61,82,0,240,8,159,88,231,61,82,0,66,9,191,14,220,61,86,0,148,9,191,14,220,61,86,0,234,9,191,14,220,61,86,0,64,10,191,14,220,61,86,0,150,10,161,128,205,61,91,0,236,10,161,128,205,61,91,0,71,11,161,128,205,61,91,0,162,11,108,209,194,61,95,0,253,11,108,209,194,61,95,0,92,12,108,209,194,61,95,0,187,12,108,209,194,61,95,0,26,13,12,202,180,61,100,0,121,13,12,202,180,61,100,0,221,13,12,202,180,61,100,0,65,14,12,202,180,61,100,0,165,14,136,245,166,61,105,0,9,15,136,
245,166,61,105,0,114,15,136,245,166,61,105,0,219,15,136,245,166,61,105,0,68,16,185,80,153,61,110,0,173,16,185,80,153,61,110,0,27,17,185,80,153,61,110,0,137,17,185,80,153,61,110,0,247,17,161,219,139,61,115,0,101,18,161,219,139,61,115,0,216,18,161,219,139,61,115,0,75,19,161,219,139,61,115,0,190,19,144,50,130,61,119,0,49,20,144,50,130,61,119,0,168,20,144,50,130,61,119,0,31,21,144,50,130,61,119,0,150,21,120,94,106,61,124,0,13,22,120,94,106,61,124,0,137,22,120,94,106,61,124,0,5,23,120,94,106,61,124,0,
129,23,166,213,80,61,129,0,253,23,166,213,80,61,129,0,126,24,166,213,80,61,129,0,255,24,166,213,80,61,129,0,128,25,166,213,80,61,129,0,1,26,18,190,55,61,134,0,130,26,18,190,55,61,134,0,8,27,18,190,55,61,134,0,142,27,18,190,55,61,134,0,20,28,199,45,38,61,138,0,154,28,199,45,38,61,138,0,36,29,199,45,38,61,138,0,174,29,199,45,38,61,138,0,56,30,52,216,20,61,142,0,194,30,52,216,20,61,142,0,80,31,52,216,20,61,142,0,222,31,52,216,20,61,142,0,108,32,47,164,3,61,146,0,250,32,47,164,3,61,146,0,140,33,47,164,
3,61,146,0,30,34,47,164,3,61,146,0,176,34,27,241,228,60,150,0,66,35,27,241,228,60,150,0,216,35,27,241,228,60,150,0,110,36,75,120,194,60,154,0,4,37,75,120,194,60,154,0,158,37,75,120,194,60,154,0,56,38,75,120,194,60,154,0,210,38,218,198,159,60,158,0,108,39,218,198,159,60,158,0,10,40,218,198,159,60,158,0,168,40,65,17,139,60,161,0,70,41,65,17,139,60,161,0,231,41,65,17,139,60,161,0,136,42,65,17,139,60,161,0,41,43,207,19,79,60,165,0,202,43,207,19,79,60,165,0,111,44,207,19,79,60,165,0,20,45,75,177,35,60,
168,0,185,45,75,177,35,60,168,0,97,46,75,177,35,60,168,0,9,47,216,183,19,60,170,0,177,47,216,183,19,60,170,0,91,48,216,183,19,60,170,0,5,49,250,183,203,59,173,0,175,49,250,183,203,59,173,0,92,50,188,4,167,59,175,0,9,51,188,4,167,59,175,0,184,51,188,4,167,59,175,0,103,52,18,23,128,59,177,0,22,53,18,23,128,59,177,0,199,53,175,90,25,59,177,0,120,54,197,144,28,59,170,0,41,55,34,252,139,58,164,0,211,55,122,169,216,58,157,0,119,56,14,245,59,58,150,0,20,57,218,140,211,58,143,0,170,57,201,142,141,57,136,
0,57,58,97,193,253,57,129,0,193,58,138,146,144,58,123,0,66,59,155,202,162,58,115,0,189,59,170,182,155,58,109,0,48,60,136,131,132,58,103,0,157,60,47,220,57,58,97,0,4,61,137,207,157,57,89,0,101,61,193,85,30,59,82,0,190,61,187,14,85,59,76,0,16,62,216,186,84,59,69,0,92,62,58,177,135,59,62,0,161,62,69,101,195,59,55,0,223,62,116,209,16,60,47,0,22,63,64,222,43,60,40,0,69,63,0,55,139,60,31,0,109,63,133,208,193,60,21,0,140,63,0,0,0,0,1,0,0,0,0,0,0,0,255,255,255,255,254,0,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,
0,0,0,0,0,5,0,1,0,248,99,0,0,0,0,0,0,255,0,0,0,1,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,1,0,184,99,0,0,0,0,0,0,0,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,1,0,0,0,136,99,0,0,0,0,0,0,1,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,1,0,1,0,88,99,0,0,0,0,0,0,2,1,0,0,255,255,255,255,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,6,0,0,0,232,98,0,0,0,0,0,0,3,1,0,0,255,255,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,7,0,0,0,32,98,0,0,0,0,0,0,6,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,8,0,0,0,136,97,0,0,0,0,0,0,7,
1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,9,0,1,0,168,96,0,0,0,0,0,0,8,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,112,96,0,0,0,0,0,0,9,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,208,95,0,0,0,0,0,0,10,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,10,0,0,0,64,95,0,0,0,0,0,0,13,1,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,248,94,0,0,0,0,0,0,14,1,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,160,94,0,0,0,0,0,0,15,1,0,0,255,255,255,255,2,0,0,0,
0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,56,94,0,0,0,0,0,0,16,1,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,88,93,0,0,0,0,0,0,17,1,0,0,255,255,255,255,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,16,93,0,0,0,0,0,0,18,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,15,0,0,0,176,92,0,0,0,0,0,0,21,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,16,0,0,0,48,92,0,0,0,0,0,0,22,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,17,0,0,0,8,92,0,0,0,0,0,0,23,1,0,0,255,255,255,255,16,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,24,0,0,0,192,91,0,0,0,0,0,0,24,1,0,0,254,255,255,255,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,18,0,1,0,152,91,0,0,0,0,0,0,25,1,0,0,254,255,255,255,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,19,0,1,0,112,91,0,0,0,0,0,0,26,1,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,3,0,1,0,96,91,0,0,0,0,0,0,27,1,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,3,0,1,0,80,91,0,0,0,0,0,0,28,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,20,0,0,0,216,90,0,0,0,0,0,0,29,1,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,136,
90,0,0,0,0,0,0,30,1,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,4,0,1,0,48,90,0,0,0,0,0,0,31,1,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,4,0,1,0,136,89,0,0,0,0,0,0,32,1,0,0,255,255,255,255,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,80,89,0,0,0,0,0,0,33,1,0,0,255,255,255,255,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,89,0,0,0,0,0,0,34,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,240,88,0,0,0,0,0,0,35,1,0,0,255,255,255,255,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,88,164,0,0,0,0,0,0,40,1,
0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,22,0,1,0,72,164,0,0,0,0,0,0,41,1,0,0,2,0,2,0,3,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,23,0,1,0,56,164,0,0,0,0,0,0,44,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,248,163,0,0,0,0,0,0,45,1,0,0,255,255,255,255,3,0,0,0,0,0,0,0,51,0,0,0,0,0,0,0,44,0,1,0,144,163,0,0,0,0,0,0,49,1,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,40,163,0,0,0,0,0,0,50,1,0,0,20,0,20,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,96,162,0,0,0,0,0,0,59,1,0,0,255,255,255,255,
2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,88,162,0,0,0,0,0,0,60,1,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,56,162,0,0,0,0,0,0,62,1,0,0,2,0,2,0,5,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,65,0,1,0,32,162,0,0,0,0,0,0,63,1,0,0,6,0,6,0,5,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,65,0,1,0,248,161,0,0,0,0,0,0,64,1,0,0,255,255,255,255,3,0,0,0,0,0,0,0,51,0,0,0,0,0,0,0,26,0,1,0,232,161,0,0,0,0,0,0,65,1,0,0,2,0,2,0,3,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,37,0,1,0,216,161,0,0,0,0,0,0,66,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,
6,0,0,0,0,0,0,0,2,0,0,0,144,161,0,0,0,0,0,0,67,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,2,0,0,0,40,161,0,0,0,0,0,0,68,1,0,0,255,255,1,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,176,160,0,0,0,0,0,0,69,1,0,0,255,255,1,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,56,160,0,0,0,0,0,0,74,1,0,0,255,255,255,255,18,0,0,0,0,0,0,0,38,0,0,0,0,0,0,0,49,0,1,1,48,160,0,0,240,27,0,0,76,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,0,0,0,160,0,0,0,0,0,0,77,1,0,0,255,255,255,255,2,0,0,0,0,0,0,0,27,0,0,0,
0,0,0,0,46,0,1,1,232,159,0,0,0,0,0,0,78,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,144,159,0,0,0,0,0,0,80,1,0,0,2,0,2,0,3,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,65,0,0,0,120,159,0,0,0,0,0,0,81,1,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,104,159,0,0,0,0,0,0,82,1,0,0,255,255,255,255,3,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,31,0,0,1,200,158,0,0,0,0,0,0,83,1,0,0,255,255,255,255,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,32,0,0,0,136,158,0,0,0,0,0,0,84,1,0,0,254,255,255,255,0,0,0,0,0,0,0,0,11,0,0,
0,0,0,0,0,33,0,1,0,48,158,0,0,0,0,0,0,85,1,0,0,254,255,255,255,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,34,0,1,0,184,157,0,0,0,0,0,0,87,1,0,0,255,255,253,255,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,1,152,157,0,0,0,0,0,0,88,1,0,0,1,0,1,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,80,157,0,0,0,0,0,0,88,1,0,0,1,0,1,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,80,157,0,0,0,0,0,0,89,1,0,0,1,0,1,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,8,157,0,0,0,0,0,0,17,2,0,0,3,0,3,0,5,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,65,0,0,0,224,
156,0,0,0,0,0,0,18,2,0,0,2,0,2,0,3,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,39,0,0,0,168,156,0,0,0,0,0,0,19,2,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,40,0,0,0,144,156,0,0,0,0,0,0,20,2,0,0,6,0,6,0,5,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,41,0,1,0,80,156,0,0,0,0,0,0,188,2,0,0,253,255,253,255,1,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,65,0,0,1,232,155,0,0,0,0,0,0,227,128,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,31,0,0,0,104,155,0,0,0,0,0,0,228,128,0,0,254,255,255,255,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,32,0,0,0,88,155,0,0,0,
0,0,0,229,128,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,35,0,0,0,56,155,0,0,0,0,0,0,230,128,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,36,0,0,0,8,155,0,0,0,0,0,0,20,130,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,65,0,1,0,192,154,0,0,0,0,0,0,21,130,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,65,0,1,0,160,154,0,0,0,0,0,0,22,130,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,144,154,0,0,0,0,0,0,23,130,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,120,154,0,0,0,0,0,0,
24,130,0,0,1,0,1,0,11,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,65,0,1,0,208,153,0,0,0,0,0,0,25,130,0,0,16,0,16,0,11,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,65,0,1,0,120,153,0,0,0,0,0,0,26,130,0,0,16,0,16,0,11,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,65,0,1,0,32,153,0,0,0,0,0,0,152,130,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,88,152,0,0,0,0,0,0,187,131,0,0,253,255,253,255,4,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,65,0,0,1,8,152,0,0,0,0,0,0,73,134,0,0,253,255,253,255,1,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,65,0,0,1,224,151,
0,0,0,0,0,0,105,135,0,0,1,0,1,0,18,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,65,0,0,0,128,151,0,0,0,55,0,0,115,135,0,0,253,255,253,255,7,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,65,0,0,1,72,151,0,0,0,0,0,0,37,136,0,0,1,0,1,0,18,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,65,0,0,0,56,151,0,0,0,0,0,0,92,136,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,6,0,0,0,65,0,1,0,0,151,0,0,0,0,0,0,93,136,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,65,0,1,0,120,150,0,0,0,0,0,0,94,136,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,6,0,0,0,65,0,1,0,224,149,0,
0,0,0,0,0,95,136,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,65,0,1,0,112,149,0,0,0,0,0,0,63,146,0,0,1,0,1,0,12,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,0,0,168,148,0,0,0,0,0,0,5,160,0,0,1,0,1,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,0,0,0,128,148,0,0,0,0,0,0,18,198,0,0,4,0,4,0,1,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,65,0,0,0,80,148,0,0,0,0,0,0,19,198,0,0,4,0,4,0,1,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,65,0,0,0,16,148,0,0,0,0,0,0,20,198,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,232,147,0,0,0,
0,0,0,21,198,0,0,255,255,255,255,1,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,1,1,184,147,0,0,0,0,0,0,22,198,0,0,255,255,255,255,1,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,0,1,168,147,0,0,0,0,0,0,23,198,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,0,0,56,147,0,0,0,0,0,0,24,198,0,0,255,255,255,255,3,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,65,0,0,1,240,146,0,0,0,0,0,0,25,198,0,0,2,0,2,0,3,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,65,0,0,0,144,146,0,0,0,0,0,0,26,198,0,0,255,255,255,255,5,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,
0,146,0,0,0,0,0,0,27,198,0,0,255,255,255,255,10,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,232,145,0,0,0,0,0,0,28,198,0,0,255,255,255,255,10,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,168,145,0,0,0,0,0,0,29,198,0,0,255,255,255,255,4,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,65,0,0,1,120,145,0,0,0,0,0,0,30,198,0,0,2,0,2,0,5,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,65,0,0,0,96,145,0,0,0,0,0,0,92,198,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,0,0,72,145,0,0,0,0,0,0,31,198,0,0,2,0,2,0,5,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,65,
0,0,0,48,145,0,0,0,0,0,0,32,198,0,0,2,0,2,0,5,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,65,0,0,0,184,144,0,0,0,0,0,0,33,198,0,0,255,255,255,255,10,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,72,144,0,0,0,0,0,0,34,198,0,0,255,255,255,255,10,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,224,143,0,0,0,0,0,0,35,198,0,0,255,255,255,255,10,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,24,143,0,0,0,0,0,0,36,198,0,0,255,255,255,255,10,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,0,143,0,0,0,0,0,0,37,198,0,0,255,255,255,255,10,0,0,0,0,0,
0,0,36,0,0,0,0,0,0,0,65,0,0,1,160,142,0,0,0,0,0,0,38,198,0,0,255,255,255,255,10,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,104,142,0,0,0,0,0,0,39,198,0,0,255,255,255,255,5,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,80,142,0,0,0,0,0,0,40,198,0,0,255,255,255,255,5,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,64,142,0,0,0,0,0,0,41,198,0,0,2,0,2,0,5,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,65,0,0,0,48,142,0,0,0,0,0,0,42,198,0,0,1,0,1,0,10,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,0,0,104,141,0,0,0,0,0,0,43,198,0,0,1,0,1,0,5,0,
0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,0,0,32,141,0,0,0,0,0,0,44,198,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,0,0,200,140,0,0,0,0,0,0,45,198,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,65,0,0,0,80,140,0,0,0,0,0,0,46,198,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,0,0,56,140,0,0,0,0,0,0,47,198,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,128,139,0,0,0,0,0,0,48,198,0,0,4,0,4,0,5,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,65,0,0,0,112,139,0,0,0,0,0,0,49,198,0,0,1,0,1,0,5,0,0,0,0,0,0,0,
11,0,0,0,0,0,0,0,65,0,0,0,24,139,0,0,0,0,0,0,50,198,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,0,0,0,139,0,0,0,0,0,0,51,198,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,0,0,240,138,0,0,0,0,0,0,52,198,0,0,255,255,255,255,1,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,0,1,208,138,0,0,0,0,0,0,53,198,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,0,0,152,138,0,0,0,0,0,0,90,198,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,0,0,16,138,0,0,0,0,0,0,91,198,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,
0,65,0,0,0,192,137,0,0,0,0,0,0,93,198,0,0,16,0,16,0,1,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,65,0,0,0,176,137,0,0,0,0,0,0,139,198,0,0,255,255,255,255,1,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,1,1,88,137,0,0,0,0,0,0,140,198,0,0,255,255,255,255,7,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,0,1,64,137,0,0,0,0,0,0,141,198,0,0,4,0,4,0,4,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,65,0,0,0,248,136,0,0,0,0,0,0,142,198,0,0,255,255,255,255,4,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,65,0,0,1,232,136,0,0,0,0,0,0,143,198,0,0,255,255,255,255,7,0,0,0,0,
0,0,0,28,0,0,0,0,0,0,0,65,0,0,1,208,136,0,0,0,0,0,0,144,198,0,0,255,255,255,255,10,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,168,136,0,0,0,0,0,0,145,198,0,0,255,255,255,255,7,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,0,1,96,136,0,0,0,0,0,0,146,198,0,0,255,255,255,255,10,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,65,0,0,1,8,136,0,0,0,0,0,0,27,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,168,135,0,0,0,0,0,0,90,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,0,0,160,135,0,0,0,0,0,0,144,1,0,0,1,0,1,0,13,0,0,
0,0,0,0,0,6,0,0,0,0,0,0,0,65,0,0,0,88,135,0,0,0,0,0,0,145,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,65,0,0,0,48,135,0,0,0,0,0,0,146,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,65,0,0,0,0,135,0,0,0,0,0,0,147,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,65,0,0,0,240,134,0,0,0,0,0,0,148,1,0,0,4,0,4,0,1,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,65,0,0,0,224,134,0,0,0,0,0,0,149,1,0,0,1,0,1,0,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,65,0,0,0,112,134,0,0,0,0,0,0,177,1,0,0,255,255,255,255,10,0,0,0,0,0,0,0,36,0,0,0,0,
0,0,0,65,0,0,1,24,134,0,0,0,0,0,0,178,1,0,0,255,255,255,255,3,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,65,0,0,1,208,133,0,0,0,0,0,0,179,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,65,0,0,0,176,133,0,0,0,0,0,0,47,2,0,0,255,255,255,255,4,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,65,0,0,1,160,133,0,0,0,0,0,0,172,135,0,0,2,0,2,0,4,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,65,0,0,0,80,133,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,151,0,0,0,176,6,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,0,0,0,0,253,255,255,255,254,255,255,255,255,255,255,255,
12,0,8,0,140,0,8,0,76,0,8,0,204,0,8,0,44,0,8,0,172,0,8,0,108,0,8,0,236,0,8,0,28,0,8,0,156,0,8,0,92,0,8,0,220,0,8,0,60,0,8,0,188,0,8,0,124,0,8,0,252,0,8,0,2,0,8,0,130,0,8,0,66,0,8,0,194,0,8,0,34,0,8,0,162,0,8,0,98,0,8,0,226,0,8,0,18,0,8,0,146,0,8,0,82,0,8,0,210,0,8,0,50,0,8,0,178,0,8,0,114,0,8,0,242,0,8,0,10,0,8,0,138,0,8,0,74,0,8,0,202,0,8,0,42,0,8,0,170,0,8,0,106,0,8,0,234,0,8,0,26,0,8,0,154,0,8,0,90,0,8,0,218,0,8,0,58,0,8,0,186,0,8,0,122,0,8,0,250,0,8,0,6,0,8,0,134,0,8,0,70,0,8,0,198,0,8,0,38,0,
8,0,166,0,8,0,102,0,8,0,230,0,8,0,22,0,8,0,150,0,8,0,86,0,8,0,214,0,8,0,54,0,8,0,182,0,8,0,118,0,8,0,246,0,8,0,14,0,8,0,142,0,8,0,78,0,8,0,206,0,8,0,46,0,8,0,174,0,8,0,110,0,8,0,238,0,8,0,30,0,8,0,158,0,8,0,94,0,8,0,222,0,8,0,62,0,8,0,190,0,8,0,126,0,8,0,254,0,8,0,1,0,8,0,129,0,8,0,65,0,8,0,193,0,8,0,33,0,8,0,161,0,8,0,97,0,8,0,225,0,8,0,17,0,8,0,145,0,8,0,81,0,8,0,209,0,8,0,49,0,8,0,177,0,8,0,113,0,8,0,241,0,8,0,9,0,8,0,137,0,8,0,73,0,8,0,201,0,8,0,41,0,8,0,169,0,8,0,105,0,8,0,233,0,8,0,25,0,8,0,
153,0,8,0,89,0,8,0,217,0,8,0,57,0,8,0,185,0,8,0,121,0,8,0,249,0,8,0,5,0,8,0,133,0,8,0,69,0,8,0,197,0,8,0,37,0,8,0,165,0,8,0,101,0,8,0,229,0,8,0,21,0,8,0,149,0,8,0,85,0,8,0,213,0,8,0,53,0,8,0,181,0,8,0,117,0,8,0,245,0,8,0,13,0,8,0,141,0,8,0,77,0,8,0,205,0,8,0,45,0,8,0,173,0,8,0,109,0,8,0,237,0,8,0,29,0,8,0,157,0,8,0,93,0,8,0,221,0,8,0,61,0,8,0,189,0,8,0,125,0,8,0,253,0,8,0,19,0,9,0,19,1,9,0,147,0,9,0,147,1,9,0,83,0,9,0,83,1,9,0,211,0,9,0,211,1,9,0,51,0,9,0,51,1,9,0,179,0,9,0,179,1,9,0,115,0,9,0,115,
1,9,0,243,0,9,0,243,1,9,0,11,0,9,0,11,1,9,0,139,0,9,0,139,1,9,0,75,0,9,0,75,1,9,0,203,0,9,0,203,1,9,0,43,0,9,0,43,1,9,0,171,0,9,0,171,1,9,0,107,0,9,0,107,1,9,0,235,0,9,0,235,1,9,0,27,0,9,0,27,1,9,0,155,0,9,0,155,1,9,0,91,0,9,0,91,1,9,0,219,0,9,0,219,1,9,0,59,0,9,0,59,1,9,0,187,0,9,0,187,1,9,0,123,0,9,0,123,1,9,0,251,0,9,0,251,1,9,0,7,0,9,0,7,1,9,0,135,0,9,0,135,1,9,0,71,0,9,0,71,1,9,0,199,0,9,0,199,1,9,0,39,0,9,0,39,1,9,0,167,0,9,0,167,1,9,0,103,0,9,0,103,1,9,0,231,0,9,0,231,1,9,0,23,0,9,0,23,1,9,
0,151,0,9,0,151,1,9,0,87,0,9,0,87,1,9,0,215,0,9,0,215,1,9,0,55,0,9,0,55,1,9,0,183,0,9,0,183,1,9,0,119,0,9,0,119,1,9,0,247,0,9,0,247,1,9,0,15,0,9,0,15,1,9,0,143,0,9,0,143,1,9,0,79,0,9,0,79,1,9,0,207,0,9,0,207,1,9,0,47,0,9,0,47,1,9,0,175,0,9,0,175,1,9,0,111,0,9,0,111,1,9,0,239,0,9,0,239,1,9,0,31,0,9,0,31,1,9,0,159,0,9,0,159,1,9,0,95,0,9,0,95,1,9,0,223,0,9,0,223,1,9,0,63,0,9,0,63,1,9,0,191,0,9,0,191,1,9,0,127,0,9,0,127,1,9,0,255,0,9,0,255,1,9,0,0,0,7,0,64,0,7,0,32,0,7,0,96,0,7,0,16,0,7,0,80,0,7,0,48,
0,7,0,112,0,7,0,8,0,7,0,72,0,7,0,40,0,7,0,104,0,7,0,24,0,7,0,88,0,7,0,56,0,7,0,120,0,7,0,4,0,7,0,68,0,7,0,36,0,7,0,100,0,7,0,20,0,7,0,84,0,7,0,52,0,7,0,116,0,7,0,3,0,8,0,131,0,8,0,67,0,8,0,195,0,8,0,35,0,8,0,163,0,8,0,99,0,8,0,227,0,8,0,32,28,0,0,224,45,0,0,1,1,0,0,30,1,0,0,15,0,0,0,0,0,0,0,0,0,5,0,16,0,5,0,8,0,5,0,24,0,5,0,4,0,5,0,20,0,5,0,12,0,5,0,28,0,5,0,2,0,5,0,18,0,5,0,10,0,5,0,26,0,5,0,6,0,5,0,22,0,5,0,14,0,5,0,30,0,5,0,1,0,5,0,17,0,5,0,9,0,5,0,25,0,5,0,5,0,5,0,21,0,5,0,13,0,5,0,29,0,5,0,3,
0,5,0,19,0,5,0,11,0,5,0,27,0,5,0,7,0,5,0,23,0,5,0,184,32,0,0,88,46,0,0,0,0,0,0,30,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,208,46,0,0,0,0,0,0,19,0,0,0,7,0,0,0,0,0,0,0,61,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,66,0,0,0,168,123,0,0,0,0,0,0,0,0,0,0,13,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,40,70,2,0,0,0,0,0,22,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,40,70,2,0,0,0,0,0,80,104,111,116,111,109,101,116,114,105,99,73,110,116,101,114,112,114,101,116,97,116,105,111,110,0,0,0,0,0,
0,0,4,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,
4,4,4,4,4,4,4,5,5,5,5,6,6,7,8,105,110,105,116,89,67,98,67,114,67,111,110,118,101,114,115,105,111,110,0,0,0,0,0,105,110,105,116,67,73,69,76,97,98,67,111,110,118,101,114,115,105,111,110,0,0,0,0,16,0,16,0,16,0,16,0,16,0,16,0,16,0,16,0,17,0,17,0,17,0,17,0,18,0,18,0,18,0,18,0,19,0,19,0,19,0,19,0,20,0,20,0,20,0,20,0,21,0,21,0,21,0,21,0,16,0,72,0,78,0,0,0,3,0,4,0,5,0,6,0,7,0,8,0,9,0,10,0,11,0,13,0,15,0,17,0,19,0,23,0,27,0,31,0,35,0,43,0,51,0,59,0,67,0,83,0,99,0,115,0,131,0,163,0,195,0,227,0,2,1,0,0,0,0,
0,0,16,0,16,0,16,0,16,0,17,0,17,0,18,0,18,0,19,0,19,0,20,0,20,0,21,0,21,0,22,0,22,0,23,0,23,0,24,0,24,0,25,0,25,0,26,0,26,0,27,0,27,0,28,0,28,0,29,0,29,0,64,0,64,0,1,0,2,0,3,0,4,0,5,0,7,0,9,0,13,0,17,0,25,0,33,0,49,0,65,0,97,0,129,0,193,0,1,1,129,1,1,2,1,3,1,4,1,6,1,8,1,12,1,16,1,24,1,32,1,48,1,64,1,96,0,0,0,0,16,0,17,0,18,0,0,0,8,0,7,0,9,0,6,0,10,0,5,0,11,0,4,0,12,0,3,0,13,0,2,0,14,0,1,0,15,0,0,0,3,0,1,0,0,0,0,0,96,7,0,0,0,8,80,0,0,8,16,0,20,8,115,0,18,7,31,0,0,8,112,0,0,8,48,0,0,9,192,0,16,7,10,
0,0,8,96,0,0,8,32,0,0,9,160,0,0,8,0,0,0,8,128,0,0,8,64,0,0,9,224,0,16,7,6,0,0,8,88,0,0,8,24,0,0,9,144,0,19,7,59,0,0,8,120,0,0,8,56,0,0,9,208,0,17,7,17,0,0,8,104,0,0,8,40,0,0,9,176,0,0,8,8,0,0,8,136,0,0,8,72,0,0,9,240,0,16,7,4,0,0,8,84,0,0,8,20,0,21,8,227,0,19,7,43,0,0,8,116,0,0,8,52,0,0,9,200,0,17,7,13,0,0,8,100,0,0,8,36,0,0,9,168,0,0,8,4,0,0,8,132,0,0,8,68,0,0,9,232,0,16,7,8,0,0,8,92,0,0,8,28,0,0,9,152,0,20,7,83,0,0,8,124,0,0,8,60,0,0,9,216,0,18,7,23,0,0,8,108,0,0,8,44,0,0,9,184,0,0,8,12,0,0,8,140,
0,0,8,76,0,0,9,248,0,16,7,3,0,0,8,82,0,0,8,18,0,21,8,163,0,19,7,35,0,0,8,114,0,0,8,50,0,0,9,196,0,17,7,11,0,0,8,98,0,0,8,34,0,0,9,164,0,0,8,2,0,0,8,130,0,0,8,66,0,0,9,228,0,16,7,7,0,0,8,90,0,0,8,26,0,0,9,148,0,20,7,67,0,0,8,122,0,0,8,58,0,0,9,212,0,18,7,19,0,0,8,106,0,0,8,42,0,0,9,180,0,0,8,10,0,0,8,138,0,0,8,74,0,0,9,244,0,16,7,5,0,0,8,86,0,0,8,22,0,64,8,0,0,19,7,51,0,0,8,118,0,0,8,54,0,0,9,204,0,17,7,15,0,0,8,102,0,0,8,38,0,0,9,172,0,0,8,6,0,0,8,134,0,0,8,70,0,0,9,236,0,16,7,9,0,0,8,94,0,0,8,30,
0,0,9,156,0,20,7,99,0,0,8,126,0,0,8,62,0,0,9,220,0,18,7,27,0,0,8,110,0,0,8,46,0,0,9,188,0,0,8,14,0,0,8,142,0,0,8,78,0,0,9,252,0,96,7,0,0,0,8,81,0,0,8,17,0,21,8,131,0,18,7,31,0,0,8,113,0,0,8,49,0,0,9,194,0,16,7,10,0,0,8,97,0,0,8,33,0,0,9,162,0,0,8,1,0,0,8,129,0,0,8,65,0,0,9,226,0,16,7,6,0,0,8,89,0,0,8,25,0,0,9,146,0,19,7,59,0,0,8,121,0,0,8,57,0,0,9,210,0,17,7,17,0,0,8,105,0,0,8,41,0,0,9,178,0,0,8,9,0,0,8,137,0,0,8,73,0,0,9,242,0,16,7,4,0,0,8,85,0,0,8,21,0,16,8,2,1,19,7,43,0,0,8,117,0,0,8,53,0,0,9,
202,0,17,7,13,0,0,8,101,0,0,8,37,0,0,9,170,0,0,8,5,0,0,8,133,0,0,8,69,0,0,9,234,0,16,7,8,0,0,8,93,0,0,8,29,0,0,9,154,0,20,7,83,0,0,8,125,0,0,8,61,0,0,9,218,0,18,7,23,0,0,8,109,0,0,8,45,0,0,9,186,0,0,8,13,0,0,8,141,0,0,8,77,0,0,9,250,0,16,7,3,0,0,8,83,0,0,8,19,0,21,8,195,0,19,7,35,0,0,8,115,0,0,8,51,0,0,9,198,0,17,7,11,0,0,8,99,0,0,8,35,0,0,9,166,0,0,8,3,0,0,8,131,0,0,8,67,0,0,9,230,0,16,7,7,0,0,8,91,0,0,8,27,0,0,9,150,0,20,7,67,0,0,8,123,0,0,8,59,0,0,9,214,0,18,7,19,0,0,8,107,0,0,8,43,0,0,9,182,0,
0,8,11,0,0,8,139,0,0,8,75,0,0,9,246,0,16,7,5,0,0,8,87,0,0,8,23,0,64,8,0,0,19,7,51,0,0,8,119,0,0,8,55,0,0,9,206,0,17,7,15,0,0,8,103,0,0,8,39,0,0,9,174,0].concat([0,8,7,0,0,8,135,0,0,8,71,0,0,9,238,0,16,7,9,0,0,8,95,0,0,8,31,0,0,9,158,0,20,7,99,0,0,8,127,0,0,8,63,0,0,9,222,0,18,7,27,0,0,8,111,0,0,8,47,0,0,9,190,0,0,8,15,0,0,8,143,0,0,8,79,0,0,9,254,0,96,7,0,0,0,8,80,0,0,8,16,0,20,8,115,0,18,7,31,0,0,8,112,0,0,8,48,0,0,9,193,0,16,7,10,0,0,8,96,0,0,8,32,0,0,9,161,0,0,8,0,0,0,8,128,0,0,8,64,0,0,9,225,
0,16,7,6,0,0,8,88,0,0,8,24,0,0,9,145,0,19,7,59,0,0,8,120,0,0,8,56,0,0,9,209,0,17,7,17,0,0,8,104,0,0,8,40,0,0,9,177,0,0,8,8,0,0,8,136,0,0,8,72,0,0,9,241,0,16,7,4,0,0,8,84,0,0,8,20,0,21,8,227,0,19,7,43,0,0,8,116,0,0,8,52,0,0,9,201,0,17,7,13,0,0,8,100,0,0,8,36,0,0,9,169,0,0,8,4,0,0,8,132,0,0,8,68,0,0,9,233,0,16,7,8,0,0,8,92,0,0,8,28,0,0,9,153,0,20,7,83,0,0,8,124,0,0,8,60,0,0,9,217,0,18,7,23,0,0,8,108,0,0,8,44,0,0,9,185,0,0,8,12,0,0,8,140,0,0,8,76,0,0,9,249,0,16,7,3,0,0,8,82,0,0,8,18,0,21,8,163,0,19,
7,35,0,0,8,114,0,0,8,50,0,0,9,197,0,17,7,11,0,0,8,98,0,0,8,34,0,0,9,165,0,0,8,2,0,0,8,130,0,0,8,66,0,0,9,229,0,16,7,7,0,0,8,90,0,0,8,26,0,0,9,149,0,20,7,67,0,0,8,122,0,0,8,58,0,0,9,213,0,18,7,19,0,0,8,106,0,0,8,42,0,0,9,181,0,0,8,10,0,0,8,138,0,0,8,74,0,0,9,245,0,16,7,5,0,0,8,86,0,0,8,22,0,64,8,0,0,19,7,51,0,0,8,118,0,0,8,54,0,0,9,205,0,17,7,15,0,0,8,102,0,0,8,38,0,0,9,173,0,0,8,6,0,0,8,134,0,0,8,70,0,0,9,237,0,16,7,9,0,0,8,94,0,0,8,30,0,0,9,157,0,20,7,99,0,0,8,126,0,0,8,62,0,0,9,221,0,18,7,27,0,
0,8,110,0,0,8,46,0,0,9,189,0,0,8,14,0,0,8,142,0,0,8,78,0,0,9,253,0,96,7,0,0,0,8,81,0,0,8,17,0,21,8,131,0,18,7,31,0,0,8,113,0,0,8,49,0,0,9,195,0,16,7,10,0,0,8,97,0,0,8,33,0,0,9,163,0,0,8,1,0,0,8,129,0,0,8,65,0,0,9,227,0,16,7,6,0,0,8,89,0,0,8,25,0,0,9,147,0,19,7,59,0,0,8,121,0,0,8,57,0,0,9,211,0,17,7,17,0,0,8,105,0,0,8,41,0,0,9,179,0,0,8,9,0,0,8,137,0,0,8,73,0,0,9,243,0,16,7,4,0,0,8,85,0,0,8,21,0,16,8,2,1,19,7,43,0,0,8,117,0,0,8,53,0,0,9,203,0,17,7,13,0,0,8,101,0,0,8,37,0,0,9,171,0,0,8,5,0,0,8,133,
0,0,8,69,0,0,9,235,0,16,7,8,0,0,8,93,0,0,8,29,0,0,9,155,0,20,7,83,0,0,8,125,0,0,8,61,0,0,9,219,0,18,7,23,0,0,8,109,0,0,8,45,0,0,9,187,0,0,8,13,0,0,8,141,0,0,8,77,0,0,9,251,0,16,7,3,0,0,8,83,0,0,8,19,0,21,8,195,0,19,7,35,0,0,8,115,0,0,8,51,0,0,9,199,0,17,7,11,0,0,8,99,0,0,8,35,0,0,9,167,0,0,8,3,0,0,8,131,0,0,8,67,0,0,9,231,0,16,7,7,0,0,8,91,0,0,8,27,0,0,9,151,0,20,7,67,0,0,8,123,0,0,8,59,0,0,9,215,0,18,7,19,0,0,8,107,0,0,8,43,0,0,9,183,0,0,8,11,0,0,8,139,0,0,8,75,0,0,9,247,0,16,7,5,0,0,8,87,0,0,8,
23,0,64,8,0,0,19,7,51,0,0,8,119,0,0,8,55,0,0,9,207,0,17,7,15,0,0,8,103,0,0,8,39,0,0,9,175,0,0,8,7,0,0,8,135,0,0,8,71,0,0,9,239,0,16,7,9,0,0,8,95,0,0,8,31,0,0,9,159,0,20,7,99,0,0,8,127,0,0,8,63,0,0,9,223,0,18,7,27,0,0,8,111,0,0,8,47,0,0,9,191,0,0,8,15,0,0,8,143,0,0,8,79,0,0,9,255,0,16,5,1,0,23,5,1,1,19,5,17,0,27,5,1,16,17,5,5,0,25,5,1,4,21,5,65,0,29,5,1,64,16,5,3,0,24,5,1,2,20,5,33,0,28,5,1,32,18,5,9,0,26,5,1,8,22,5,129,0,64,5,0,0,16,5,2,0,23,5,129,1,19,5,25,0,27,5,1,24,17,5,7,0,25,5,1,6,21,5,97,0,
29,5,1,96,16,5,4,0,24,5,1,3,20,5,49,0,28,5,1,48,18,5,13,0,26,5,1,12,22,5,193,0,64,5,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,88,110,0,0,0,0,0,0,4,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0,0,0,0,0,0,0,0,0,0,0,216,109,0,0,0,0,0,0,70,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,6,0,0,0,66,0,1,0,8,109,0,0,0,0,0,0,71,1,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,67,0,1,0,128,108,0,0,0,0,0,0,72,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,6,0,0,0,68,0,1,0,40,108,0,0,0,0,0,0,0,0,0,0,37,1,0,0,1,0,1,0,4,0,
0,0,0,0,0,0,6,0,0,0,6,0,0,0,73,0,0,0,48,141,0,0,0,0,0,0,0,0,0,0,36,1,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,6,0,0,0,73,0,0,0,168,138,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,5,0,0,0,5,0,0,0,
6,0,0,0,6,0,0,0,7,0,0,0,7,0,0,0,8,0,0,0,8,0,0,0,9,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,11,0,0,0,11,0,0,0,12,0,0,0,12,0,0,0,13,0,0,0,13,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,3,0,0,0,7,0,0,0,0,0,0,0,154,130,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,40,155,0,0,0,0,0,0,157,130,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,0,152,0,0,0,0,0,0,34,136,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,
0,0,0,65,0,1,0,96,148,0,0,0,0,0,0,36,136,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,192,145,0,0,0,0,0,0,39,136,0,0,255,255,255,255,3,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,65,0,1,1,184,142,0,0,0,0,0,0,40,136,0,0,255,255,255,255,7,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,1,1,232,139,0,0,0,0,0,0,0,144,0,0,4,0,4,0,7,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,65,0,1,0,112,137,0,0,0,0,0,0,3,144,0,0,20,0,20,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,64,135,0,0,0,0,0,0,4,144,0,0,20,0,20,0,2,0,0,0,0,0,0,0,1,0,0,
0,0,0,0,0,65,0,1,0,56,133,0,0,0,0,0,0,1,145,0,0,4,0,4,0,7,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,65,0,1,0,96,131,0,0,0,0,0,0,2,145,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,96,129,0,0,0,0,0,0,1,146,0,0,1,0,1,0,10,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,16,128,0,0,0,0,0,0,2,146,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,88,126,0,0,0,0,0,0,3,146,0,0,1,0,1,0,10,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,112,125,0,0,0,0,0,0,4,146,0,0,1,0,1,0,10,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,120,
124,0,0,0,0,0,0,5,146,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,96,123,0,0,0,0,0,0,6,146,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,160,122,0,0,0,0,0,0,7,146,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,136,122,0,0,0,0,0,0,8,146,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,240,121,0,0,0,0,0,0,9,146,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,112,121,0,0,0,0,0,0,10,146,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,112,120,0,0,0,0,0,0,20,146,0,
0,255,255,255,255,3,0,0,0,0,0,0,0,30,0,0,0,0,0,0,0,65,0,1,1,184,118,0,0,0,0,0,0,124,146,0,0,255,255,255,255,7,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,1,1,144,118,0,0,0,0,0,0,134,146,0,0,255,255,255,255,7,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,1,1,152,117,0,0,0,0,0,0,144,146,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,64,116,0,0,0,0,0,0,145,146,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,40,116,0,0,0,0,0,0,146,146,0,0,255,255,255,255,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,
1,0,64,115,0,0,0,0,0,0,0,160,0,0,4,0,4,0,7,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,65,0,1,0,176,114,0,0,0,0,0,0,1,160,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,40,114,0,0,0,0,0,0,2,160,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,65,0,1,0,224,113,0,0,0,0,0,0,3,160,0,0,1,0,1,0,4,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,65,0,1,0,168,112,0,0,0,0,0,0,4,160,0,0,13,0,13,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,224,111,0,0,0,0,0,0,11,162,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,56,111,0,0,0,0,0,0,12,
162,0,0,255,255,255,255,7,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,1,1,152,110,0,0,0,0,0,0,14,162,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,48,110,0,0,0,0,0,0,15,162,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,232,108,0,0,0,0,0,0,16,162,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,200,108,0,0,0,0,0,0,20,162,0,0,2,0,2,0,3,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,65,0,1,0,88,108,0,0,0,0,0,0,21,162,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,24,108,0,0,0,0,0,0,23,162,0,0,1,0,
1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,184,107,0,0,0,0,0,0,0,163,0,0,1,0,1,0,7,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,65,0,1,0,80,107,0,0,0,0,0,0,1,163,0,0,1,0,1,0,7,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,65,0,1,0,152,106,0,0,0,0,0,0,2,163,0,0,255,255,255,255,7,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,1,1,240,105,0,0,0,0,0,0,1,164,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,104,105,0,0,0,0,0,0,2,164,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,248,104,0,0,0,0,0,0,3,164,0,0,1,0,1,0,3,0,0,0,0,0,0,0,
4,0,0,0,0,0,0,0,65,0,1,0,152,104,0,0,0,0,0,0,4,164,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,56,104,0,0,0,0,0,0,5,164,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,144,103,0,0,0,0,0,0,6,164,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,120,103,0,0,0,0,0,0,7,164,0,0,1,0,1,0,5,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,65,0,1,0,72,103,0,0,0,0,0,0,8,164,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,176,102,0,0,0,0,0,0,9,164,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,56,
102,0,0,0,0,0,0,10,164,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,0,102,0,0,0,0,0,0,11,164,0,0,255,255,255,255,7,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,65,0,1,1,64,101,0,0,0,0,0,0,12,164,0,0,1,0,1,0,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,65,0,1,0,8,101,0,0,0,0,0,0,32,164,0,0,33,0,33,0,2,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,65,0,1,0,128,100,0,0,0,0,0,0,1,0,0,0,0,0,0,0,56,0,0,0,32,47,0,0,139,108,79,64,134,201,196,191,128,72,255,190,126,29,120,191,197,32,240,63,195,100,42,61,211,188,99,61,96,229,80,190,199,75,135,
63,0,0,200,66,0,0,200,66,0,0,200,66,255,0,0,0,255,0,0,0,255,0,0,0,0,0,128,63,0,0,128,63,0,0,128,63,154,153,25,64,154,153,25,64,154,153,25,64,0,0,0,0,49,46,50,46,56,0,0,0,0,0,0,0,150,48,7,119,44,97,14,238,186,81,9,153,25,196,109,7,143,244,106,112,53,165,99,233,163,149,100,158,50,136,219,14,164,184,220,121,30,233,213,224,136,217,210,151,43,76,182,9,189,124,177,126,7,45,184,231,145,29,191,144,100,16,183,29,242,32,176,106,72,113,185,243,222,65,190,132,125,212,218,26,235,228,221,109,81,181,212,244,199,
133,211,131,86,152,108,19,192,168,107,100,122,249,98,253,236,201,101,138,79,92,1,20,217,108,6,99,99,61,15,250,245,13,8,141,200,32,110,59,94,16,105,76,228,65,96,213,114,113,103,162,209,228,3,60,71,212,4,75,253,133,13,210,107,181,10,165,250,168,181,53,108,152,178,66,214,201,187,219,64,249,188,172,227,108,216,50,117,92,223,69,207,13,214,220,89,61,209,171,172,48,217,38,58,0,222,81,128,81,215,200,22,97,208,191,181,244,180,33,35,196,179,86,153,149,186,207,15,165,189,184,158,184,2,40,8,136,5,95,178,217,
12,198,36,233,11,177,135,124,111,47,17,76,104,88,171,29,97,193,61,45,102,182,144,65,220,118,6,113,219,1,188,32,210,152,42,16,213,239,137,133,177,113,31,181,182,6,165,228,191,159,51,212,184,232,162,201,7,120,52,249,0,15,142,168,9,150,24,152,14,225,187,13,106,127,45,61,109,8,151,108,100,145,1,92,99,230,244,81,107,107,98,97,108,28,216,48,101,133,78,0,98,242,237,149,6,108,123,165,1,27,193,244,8,130,87,196,15,245,198,217,176,101,80,233,183,18,234,184,190,139,124,136,185,252,223,29,221,98,73,45,218,21,
243,124,211,140,101,76,212,251,88,97,178,77,206,81,181,58,116,0,188,163,226,48,187,212,65,165,223,74,215,149,216,61,109,196,209,164,251,244,214,211,106,233,105,67,252,217,110,52,70,136,103,173,208,184,96,218,115,45,4,68,229,29,3,51,95,76,10,170,201,124,13,221,60,113,5,80,170,65,2,39,16,16,11,190,134,32,12,201,37,181,104,87,179,133,111,32,9,212,102,185,159,228,97,206,14,249,222,94,152,201,217,41,34,152,208,176,180,168,215,199,23,61,179,89,129,13,180,46,59,92,189,183,173,108,186,192,32,131,184,237,
182,179,191,154,12,226,182,3,154,210,177,116,57,71,213,234,175,119,210,157,21,38,219,4,131,22,220,115,18,11,99,227,132,59,100,148,62,106,109,13,168,90,106,122,11,207,14,228,157,255,9,147,39,174,0,10,177,158,7,125,68,147,15,240,210,163,8,135,104,242,1,30,254,194,6,105,93,87,98,247,203,103,101,128,113,54,108,25,231,6,107,110,118,27,212,254,224,43,211,137,90,122,218,16,204,74,221,103,111,223,185,249,249,239,190,142,67,190,183,23,213,142,176,96,232,163,214,214,126,147,209,161,196,194,216,56,82,242,223,
79,241,103,187,209,103,87,188,166,221,6,181,63,75,54,178,72,218,43,13,216,76,27,10,175,246,74,3,54,96,122,4,65,195,239,96,223,85,223,103,168,239,142,110,49,121,190,105,70,140,179,97,203,26,131,102,188,160,210,111,37,54,226,104,82,149,119,12,204,3,71,11,187,185,22,2,34,47,38,5,85,190,59,186,197,40,11,189,178,146,90,180,43,4,106,179,92,167,255,215,194,49,207,208,181,139,158,217,44,29,174,222,91,176,194,100,155,38,242,99,236,156,163,106,117,10,147,109,2,169,6,9,156,63,54,14,235,133,103,7,114,19,87,0,
5,130,74,191,149,20,122,184,226,174,43,177,123,56,27,182,12,155,142,210,146,13,190,213,229,183,239,220,124,33,223,219,11,212,210,211,134,66,226,212,241,248,179,221,104,110,131,218,31,205,22,190,129,91,38,185,246,225,119,176,111,119,71,183,24,230,90,8,136,112,106,15,255,202,59,6,102,92,11,1,17,255,158,101,143,105,174,98,248,211,255,107,97,69,207,108,22,120,226,10,160,238,210,13,215,84,131,4,78,194,179,3,57,97,38,103,167,247,22,96,208,77,71,105,73,219,119,110,62,74,106,209,174,220,90,214,217,102,11,
223,64,240,59,216,55,83,174,188,169,197,158,187,222,127,207,178,71,233,255,181,48,28,242,189,189,138,194,186,202,48,147,179,83,166,163,180,36,5,54,208,186,147,6,215,205,41,87,222,84,191,103,217,35,46,122,102,179,184,74,97,196,2,27,104,93,148,43,111,42,55,190,11,180,161,142,12,195,27,223,5,90,141,239,2,45,0,0,0,0,65,49,27,25,130,98,54,50,195,83,45,43,4,197,108,100,69,244,119,125,134,167,90,86,199,150,65,79,8,138,217,200,73,187,194,209,138,232,239,250,203,217,244,227,12,79,181,172,77,126,174,181,142,
45,131,158,207,28,152,135,81,18,194,74,16,35,217,83,211,112,244,120,146,65,239,97,85,215,174,46,20,230,181,55,215,181,152,28,150,132,131,5,89,152,27,130,24,169,0,155,219,250,45,176,154,203,54,169,93,93,119,230,28,108,108,255,223,63,65,212,158,14,90,205,162,36,132,149,227,21,159,140,32,70,178,167,97,119,169,190,166,225,232,241,231,208,243,232,36,131,222,195,101,178,197,218,170,174,93,93,235,159,70,68,40,204,107,111,105,253,112,118,174,107,49,57,239,90,42,32,44,9,7,11,109,56,28,18,243,54,70,223,178,
7,93,198,113,84,112,237,48,101,107,244,247,243,42,187,182,194,49,162,117,145,28,137,52,160,7,144,251,188,159,23,186,141,132,14,121,222,169,37,56,239,178,60,255,121,243,115,190,72,232,106,125,27,197,65,60,42,222,88,5,79,121,240,68,126,98,233,135,45,79,194,198,28,84,219,1,138,21,148,64,187,14,141,131,232,35,166,194,217,56,191,13,197,160,56,76,244,187,33,143,167,150,10,206,150,141,19,9,0,204,92,72,49,215,69,139,98,250,110,202,83,225,119,84,93,187,186,21,108,160,163,214,63,141,136,151,14,150,145,80,152,
215,222,17,169,204,199,210,250,225,236,147,203,250,245,92,215,98,114,29,230,121,107,222,181,84,64,159,132,79,89,88,18,14,22,25,35,21,15,218,112,56,36,155,65,35,61,167,107,253,101,230,90,230,124,37,9,203,87,100,56,208,78,163,174,145,1,226,159,138,24,33,204,167,51,96,253,188,42,175,225,36,173,238,208,63,180,45,131,18,159,108,178,9,134,171,36,72,201,234,21,83,208,41,70,126,251,104,119,101,226,246,121,63,47,183,72,36,54,116,27,9,29,53,42,18,4,242,188,83,75,179,141,72,82,112,222,101,121,49,239,126,96,
254,243,230,231,191,194,253,254,124,145,208,213,61,160,203,204,250,54,138,131,187,7,145,154,120,84,188,177,57,101,167,168,75,152,131,59,10,169,152,34,201,250,181,9,136,203,174,16,79,93,239,95,14,108,244,70,205,63,217,109,140,14,194,116,67,18,90,243,2,35,65,234,193,112,108,193,128,65,119,216,71,215,54,151,6,230,45,142,197,181,0,165,132,132,27,188,26,138,65,113,91,187,90,104,152,232,119,67,217,217,108,90,30,79,45,21,95,126,54,12,156,45,27,39,221,28,0,62,18,0,152,185,83,49,131,160,144,98,174,139,209,
83,181,146,22,197,244,221,87,244,239,196,148,167,194,239,213,150,217,246,233,188,7,174,168,141,28,183,107,222,49,156,42,239,42,133,237,121,107,202,172,72,112,211,111,27,93,248,46,42,70,225,225,54,222,102,160,7,197,127,99,84,232,84,34,101,243,77,229,243,178,2,164,194,169,27,103,145,132,48,38,160,159,41,184,174,197,228,249,159,222,253,58,204,243,214,123,253,232,207,188,107,169,128,253,90,178,153,62,9,159,178,127,56,132,171,176,36,28,44,241,21,7,53,50,70,42,30,115,119,49,7,180,225,112,72,245,208,107,
81,54,131,70,122,119,178,93,99,78,215,250,203,15,230,225,210,204,181,204,249,141,132,215,224,74,18,150,175,11,35,141,182,200,112,160,157,137,65,187,132,70,93,35,3,7,108,56,26,196,63,21,49,133,14,14,40,66,152,79,103,3,169,84,126,192,250,121,85,129,203,98,76,31,197,56,129,94,244,35,152,157,167,14,179,220,150,21,170,27,0,84,229,90,49,79,252,153,98,98,215,216,83,121,206,23,79,225,73,86,126,250,80,149,45,215,123,212,28,204,98,19,138,141,45,82,187,150,52,145,232,187,31,208,217,160,6,236,243,126,94,173,
194,101,71,110,145,72,108,47,160,83,117,232,54,18,58,169,7,9,35,106,84,36,8,43,101,63,17,228,121,167,150,165,72,188,143,102,27,145,164,39,42,138,189,224,188,203,242,161,141,208,235,98,222,253,192,35,239,230,217,189,225,188,20,252,208,167,13,63,131,138,38,126,178,145,63,185,36,208,112,248,21,203,105,59,70,230,66,122,119,253,91,181,107,101,220,244,90,126,197,55,9,83,238,118,56,72,247,177,174,9,184,240,159,18,161,51,204,63,138,114,253,36,147,0,0,0,0,55,106,194,1,110,212,132,3,89,190,70,2,220,168,9,7,
235,194,203,6,178,124,141,4,133,22,79,5,184,81,19,14,143,59,209,15,214,133,151,13,225,239,85,12,100,249,26,9,83,147,216,8,10,45,158,10,61,71,92,11,112,163,38,28,71,201,228,29,30,119,162,31,41,29,96,30,172,11,47,27,155,97,237,26,194,223,171,24,245,181,105,25,200,242,53,18,255,152,247,19,166,38,177,17,145,76,115,16,20,90,60,21,35,48,254,20,122,142,184,22,77,228,122,23,224,70,77,56,215,44,143,57,142,146,201,59,185,248,11,58,60,238,68,63,11,132,134,62,82,58,192,60,101,80,2,61,88,23,94,54,111,125,156,
55,54,195,218,53,1,169,24,52,132,191,87,49,179,213,149,48,234,107,211,50,221,1,17,51,144,229,107,36,167,143,169,37,254,49,239,39,201,91,45,38,76,77,98,35,123,39,160,34,34,153,230,32,21,243,36,33,40,180,120,42,31,222,186,43,70,96,252,41,113,10,62,40,244,28,113,45,195,118,179,44,154,200,245,46,173,162,55,47,192,141,154,112,247,231,88,113,174,89,30,115,153,51,220,114,28,37,147,119,43,79,81,118,114,241,23,116,69,155,213,117,120,220,137,126,79,182,75,127,22,8,13,125,33,98,207,124,164,116,128,121,147,30,
66,120,202,160,4,122,253,202,198,123,176,46,188,108,135,68,126,109,222,250,56,111,233,144,250,110,108,134,181,107,91,236,119,106,2,82,49,104,53,56,243,105,8,127,175,98,63,21,109,99,102,171,43,97,81,193,233,96,212,215,166,101,227,189,100,100,186,3,34,102,141,105,224,103,32,203,215,72,23,161,21,73,78,31,83,75,121,117,145,74,252,99,222,79,203,9,28,78,146,183,90,76,165,221,152,77,152,154,196,70,175,240,6,71,246,78,64,69,193,36,130,68,68,50,205,65,115,88,15,64,42,230,73,66,29,140,139,67,80,104,241,84,
103,2,51,85,62,188,117,87,9,214,183,86,140,192,248,83,187,170,58,82,226,20,124,80,213,126,190,81,232,57,226,90,223,83,32,91,134,237,102,89,177,135,164,88,52,145,235,93,3,251,41,92,90,69,111,94,109,47,173,95,128,27,53,225,183,113,247,224,238,207,177,226,217,165,115,227,92,179,60,230,107,217,254,231,50,103,184,229,5,13,122,228,56,74,38,239,15,32,228,238,86,158,162,236,97,244,96,237,228,226,47,232,211,136,237,233,138,54,171,235,189,92,105,234,240,184,19,253,199,210,209,252,158,108,151,254,169,6,85,255,
44,16,26,250,27,122,216,251,66,196,158,249,117,174,92,248,72,233,0,243,127,131,194,242,38,61,132,240,17,87,70,241,148,65,9,244,163,43,203,245,250,149,141,247,205,255,79,246,96,93,120,217,87,55,186,216,14,137,252,218,57,227,62,219,188,245,113,222,139,159,179,223,210,33,245,221,229,75,55,220,216,12,107,215,239,102,169,214,182,216,239,212,129,178,45,213,4,164,98,208,51,206,160,209,106,112,230,211,93,26,36,210,16,254,94,197,39,148,156,196,126,42,218,198,73,64,24,199,204,86,87,194,251,60,149,195,162,130,
211,193,149,232,17,192,168,175,77,203,159,197,143,202,198,123,201,200,241,17,11,201,116,7,68,204,67,109,134,205,26,211,192,207,45,185,2,206,64,150,175,145,119,252,109,144,46,66,43,146,25,40,233,147,156,62,166,150,171,84,100,151,242,234,34,149,197,128,224,148,248,199,188,159,207,173,126,158,150,19,56,156,161,121,250,157,36,111,181,152,19,5,119,153,74,187,49,155,125,209,243,154,48,53,137,141,7,95,75,140,94,225,13,142,105,139,207,143,236,157,128,138,219,247,66,139,130,73,4,137,181,35,198,136,136,100,
154,131,191,14,88,130,230,176,30,128,209,218,220,129,84,204,147,132,99,166,81,133,58,24,23,135,13,114,213,134,160,208,226,169,151,186,32,168,206,4,102,170,249,110,164,171,124,120,235,174,75,18,41,175,18,172,111,173,37,198,173,172,24,129,241,167,47,235,51,166,118,85,117,164,65,63,183,165,196,41,248,160,243,67,58,161,170,253,124,163,157,151,190,162,208,115,196,181,231,25,6,180,190,167,64,182,137,205,130,183,12,219,205,178,59,177,15,179,98,15,73,177,85,101,139,176,104,34,215,187,95,72,21,186,6,246,83,
184,49,156,145,185,180,138,222,188,131,224,28,189,218,94,90,191,237,52,152,190,0,0,0,0,101,103,188,184,139,200,9,170,238,175,181,18,87,151,98,143,50,240,222,55,220,95,107,37,185,56,215,157,239,40,180,197,138,79,8,125,100,224,189,111,1,135,1,215,184,191,214,74,221,216,106,242,51,119,223,224,86,16,99,88,159,87,25,80,250,48,165,232,20,159,16,250,113,248,172,66,200,192,123,223,173,167,199,103,67,8,114,117,38,111,206,205,112,127,173,149,21,24,17,45,251,183,164,63,158,208,24,135,39,232,207,26,66,143,115,
162,172,32,198,176,201,71,122,8,62,175,50,160,91,200,142,24,181,103,59,10,208,0,135,178,105,56,80,47,12,95,236,151,226,240,89,133,135,151,229,61,209,135,134,101,180,224,58,221,90,79,143,207,63,40,51,119,134,16,228,234,227,119,88,82,13,216,237,64,104,191,81,248,161,248,43,240,196,159,151,72,42,48,34,90,79,87,158,226,246,111,73,127,147,8,245,199,125,167,64,213,24,192,252,109,78,208,159,53,43,183,35,141,197,24,150,159,160,127,42,39,25,71,253,186,124,32,65,2,146,143,244,16,247,232,72,168,61,88,20,155,
88,63,168,35,182,144,29,49,211,247,161,137,106,207,118,20,15,168,202,172,225,7,127,190,132,96,195,6,210,112,160,94,183,23,28,230,89,184,169,244,60,223,21,76,133,231,194,209,224,128,126,105,14,47,203,123,107,72,119,195,162,15,13,203,199,104,177,115,41,199,4,97,76,160,184,217,245,152,111,68,144,255,211,252,126,80,102,238,27,55,218,86,77,39,185,14,40,64,5,182,198,239,176,164,163,136,12,28,26,176,219,129,127,215,103,57,145,120,210,43,244,31,110,147,3,247,38,59,102,144,154,131,136,63,47,145,237,88,147,
41,84,96,68,180,49,7,248,12,223,168,77,30,186,207,241,166,236,223,146,254,137,184,46,70,103,23,155,84,2,112,39,236,187,72,240,113,222,47,76,201,48,128,249,219,85,231,69,99,156,160,63,107,249,199,131,211,23,104,54,193,114,15,138,121,203,55,93,228,174,80,225,92,64,255,84,78,37,152,232,246,115,136,139,174,22,239,55,22,248,64,130,4,157,39,62,188,36,31,233,33,65,120,85,153,175,215,224,139,202,176,92,51,59,182,89,237,94,209,229,85,176,126,80,71,213,25,236,255,108,33,59,98,9,70,135,218,231,233,50,200,130,
142,142,112,212,158,237,40,177,249,81,144,95,86,228,130,58,49,88,58,131,9,143,167,230,110,51,31,8,193,134,13,109,166,58,181,164,225,64,189,193,134,252,5,47,41,73,23,74,78,245,175,243,118,34,50,150,17,158,138,120,190,43,152,29,217,151,32,75,201,244,120,46,174,72,192,192,1,253,210,165,102,65,106,28,94,150,247,121,57,42,79,151,150,159,93,242,241,35,229,5,25,107,77,96,126,215,245,142,209,98,231,235,182,222,95,82,142,9,194,55,233,181,122,217,70,0,104,188,33,188,208,234,49,223,136,143,86,99,48,97,249,214,
34,4,158,106,154,189,166,189,7,216,193,1,191,54,110,180,173,83,9,8,21,154,78,114,29,255,41,206,165,17,134,123,183,116,225,199,15,205,217,16,146,168,190,172,42,70,17,25,56,35,118,165,128,117,102,198,216,16,1,122,96,254,174,207,114,155,201,115,202,34,241,164,87,71,150,24,239,169,57,173,253,204,94,17,69,6,238,77,118,99,137,241,206,141,38,68,220,232,65,248,100,81,121,47,249,52,30,147,65,218,177,38,83,191,214,154,235,233,198,249,179,140,161,69,11,98,14,240,25,7,105,76,161,190,81,155,60,219,54,39,132,53,
153,146,150,80,254,46,46,153,185,84,38,252,222,232,158,18,113,93,140,119,22,225,52,206,46,54,169,171,73,138,17,69,230,63,3,32,129,131,187,118,145,224,227,19,246,92,91,253,89,233,73,152,62,85,241,33,6,130,108,68,97,62,212,170,206,139,198,207,169,55,126,56,65,127,214,93,38,195,110,179,137,118,124,214,238,202,196,111,214,29,89,10,177,161,225,228,30,20,243,129,121,168,75,215,105,203,19,178,14,119,171,92,161,194,185,57,198,126,1,128,254,169,156,229,153,21,36,11,54,160,54,110,81,28,142,167,22,102,134,194,
113,218,62,44,222,111,44,73,185,211,148,240,129,4,9,149,230,184,177,123,73,13,163,30,46,177,27,72,62,210,67,45,89,110,251,195,246,219,233,166,145,103,81,31,169,176,204,122,206,12,116,148,97,185,102,241,6,5,222,0,0,0,0,119,7,48,150,238,14,97,44,153,9,81,186,7,109,196,25,112,106,244,143,233,99,165,53,158,100,149,163,14,219,136,50,121,220,184,164,224,213,233,30,151,210,217,136,9,182,76,43,126,177,124,189,231,184,45,7,144,191,29,145,29,183,16,100,106,176,32,242,243,185,113,72,132,190,65,222,26,218,212,
125,109,221,228,235,244,212,181,81,131,211,133,199,19,108,152,86,100,107,168,192,253,98,249,122,138,101,201,236,20,1,92,79,99,6,108,217,250,15,61,99,141,8,13,245,59,110,32,200,76,105,16,94,213,96,65,228,162,103,113,114,60,3,228,209,75,4,212,71,210,13,133,253,165,10,181,107,53,181,168,250,66,178,152,108,219,187,201,214,172,188,249,64,50,216,108,227,69,223,92,117,220,214,13,207,171,209,61,89,38,217,48,172,81,222,0,58,200,215,81,128,191,208,97,22,33,180,244,181,86,179,196,35,207,186,149,153,184,189,
165,15,40,2,184,158,95,5,136,8,198,12,217,178,177,11,233,36,47,111,124,135,88,104,76,17,193,97,29,171,182,102,45,61,118,220,65,144,1,219,113,6,152,210,32,188,239,213,16,42,113,177,133,137,6,182,181,31,159,191,228,165,232,184,212,51,120,7,201,162,15,0,249,52,150,9,168,142,225,14,152,24,127,106,13,187,8,109,61,45,145,100,108,151,230,99,92,1,107,107,81,244,28,108,97,98,133,101,48,216,242,98,0,78,108,6,149,237,27,1,165,123,130,8,244,193,245,15,196,87,101,176,217,198,18,183,233,80,139,190,184,234,252,
185,136,124,98,221,29,223,21,218,45,73,140,211,124,243,251,212,76,101,77,178,97,88,58,181,81,206,163,188,0,116,212,187,48,226,74,223,165,65,61,216,149,215,164,209,196,109,211,214,244,251,67,105,233,106,52,110,217,252,173,103,136,70,218,96,184,208,68,4,45,115,51,3,29,229,170,10,76,95,221,13,124,201,80,5,113,60,39,2,65,170,190,11,16,16,201,12,32,134,87,104,181,37,32,111,133,179,185,102,212,9,206,97,228,159,94,222,249,14,41,217,201,152,176,208,152,34,199,215,168,180,89,179,61,23,46,180,13,129,183,189,
92,59,192,186,108,173,237,184,131,32,154,191,179,182,3,182,226,12,116,177,210,154,234,213,71,57,157,210,119,175,4,219,38,21,115,220,22,131,227,99,11,18,148,100,59,132,13,109,106,62,122,106,90,168,228,14,207,11,147,9,255,157,10,0,174,39,125,7,158,177,240,15,147,68,135,8,163,210,30,1,242,104,105,6,194,254,247,98,87,93,128,101,103,203,25,108,54,113,110,107,6,231,254,212,27,118,137,211,43,224,16,218,122,90,103,221,74,204,249,185,223,111,142,190,239,249,23,183,190,67,96,176,142,213,214,214,163,232,161,
209,147,126,56,216,194,196,79,223,242,82,209,187,103,241,166,188,87,103,63,181,6,221,72,178,54,75,216,13,43,218,175,10,27,76,54,3,74,246,65,4,122,96,223,96,239,195,168,103,223,85,49,110,142,239,70,105,190,121,203,97,179,140,188,102,131,26,37,111,210,160,82,104,226,54,204,12,119,149,187,11,71,3,34,2,22,185,85,5,38,47,197,186,59,190,178,189,11,40,43,180,90,146,92,179,106,4,194,215,255,167,181,208,207,49,44,217,158,139,91,222,174,29,155,100,194,176,236,99,242,38,117,106,163,156,2,109,147,10,156,9,6,
169,235,14,54,63,114,7,103,133,5,0,87,19,149,191,74,130,226,184,122,20,123,177,43,174,12,182,27,56,146,210,142,155,229,213,190,13,124,220,239,183,11,219,223,33,134,211,210,212,241,212,226,66,104,221,179,248,31,218,131,110,129,190,22,205,246,185,38,91,111,176,119,225,24,183,71,119,136,8,90,230,255,15,106,112,102,6,59,202,17,1,11,92,143,101,158,255,248,98,174,105,97,107,255,211,22,108,207,69,160,10,226,120,215,13,210,238,78,4,131,84,57,3,179,194,167,103,38,97,208,96,22,247,73,105,71,77,62,110,119,219,
174,209,106,74,217,214,90,220,64,223,11,102,55,216,59,240,169,188,174,83,222,187,158,197,71,178,207,127,48,181,255,233,189,189,242,28,202,186,194,138,83,179,147,48,36,180,163,166,186,208,54,5,205,215,6,147,84,222,87,41,35,217,103,191,179,102,122,46,196,97,74,184,93,104,27,2,42,111,43,148,180,11,190,55,195,12,142,161,90,5,223,27,45,2,239,141,0,0,0,0,25,27,49,65,50,54,98,130,43,45,83,195,100,108,197,4,125,119,244,69,86,90,167,134,79,65,150,199,200,217,138,8,209,194,187,73,250,239,232,138,227,244,217,
203,172,181,79,12,181,174,126,77,158,131,45,142,135,152,28,207,74,194,18,81,83,217,35,16,120,244,112,211,97,239,65,146,46,174,215,85,55,181,230,20,28,152,181,215,5,131,132,150,130,27,152,89,155,0,169,24,176,45,250,219,169,54,203,154,230,119,93,93,255,108,108,28,212,65,63,223,205,90,14,158,149,132,36,162,140,159,21,227,167,178,70,32,190,169,119,97,241,232,225,166,232,243,208,231,195,222,131,36,218,197,178,101,93,93,174,170,68,70,159,235,111,107,204,40,118,112,253,105,57,49,107,174,32,42,90,239,11,
7,9,44,18,28,56,109,223,70,54,243,198,93,7,178,237,112,84,113,244,107,101,48,187,42,243,247,162,49,194,182,137,28,145,117,144,7,160,52,23,159,188,251,14,132,141,186,37,169,222,121,60,178,239,56,115,243,121,255,106,232,72,190,65,197,27,125,88,222,42,60,240,121,79,5,233,98,126,68,194,79,45,135,219,84,28,198,148,21,138,1,141,14,187,64,166,35,232,131,191,56,217,194,56,160,197,13,33,187,244,76,10,150,167,143,19,141,150,206,92,204,0,9,69,215,49,72,110,250,98,139,119,225,83,202,186,187,93,84,163,160,108,
21,136,141,63,214,145,150,14,151,222,215,152,80,199,204,169,17,236,225,250,210,245,250,203,147,114,98,215,92,107,121,230,29,64,84,181,222,89,79,132,159,22,14,18,88,15,21,35,25,36,56,112,218,61,35,65,155,101,253,107,167,124,230,90,230,87,203,9,37,78,208,56,100,1,145,174,163,24,138,159,226,51,167,204,33,42,188,253,96,173,36,225,175,180,63,208,238,159,18,131,45,134,9,178,108,201,72,36,171,208,83,21,234,251,126,70,41,226,101,119,104,47,63,121,246,54,36,72,183,29,9,27,116,4,18,42,53,75,83,188,242,82,72,
141,179,121,101,222,112,96,126,239,49,231,230,243,254,254,253,194,191,213,208,145,124,204,203,160,61,131,138,54,250,154,145,7,187,177,188,84,120,168,167,101,57,59,131,152,75,34,152,169,10,9,181,250,201,16,174,203,136,95,239,93,79,70,244,108,14,109,217,63,205,116,194,14,140,243,90,18,67,234,65,35,2,193,108,112,193,216,119,65,128,151,54,215,71,142,45,230,6,165,0,181,197,188,27,132,132,113,65,138,26,104,90,187,91,67,119,232,152,90,108,217,217,21,45,79,30,12,54,126,95,39,27,45,156,62,0,28,221,185,152,
0,18,160,131,49,83,139,174,98,144,146,181,83,209,221,244,197,22,196,239,244,87,239,194,167,148,246,217,150,213,174,7,188,233,183,28,141,168,156,49,222,107,133,42,239,42,202,107,121,237,211,112,72,172,248,93,27,111,225,70,42,46,102,222,54,225,127,197,7,160,84,232,84,99,77,243,101,34,2,178,243,229,27,169,194,164,48,132,145,103,41,159,160,38,228,197,174,184,253,222,159,249,214,243,204,58,207,232,253,123,128,169,107,188,153,178,90,253,178,159,9,62,171,132,56,127,44,28,36,176,53,7,21,241,30,42,70,50,7,
49,119,115,72,112,225,180,81,107,208,245,122,70,131,54,99,93,178,119,203,250,215,78,210,225,230,15,249,204,181,204,224,215,132,141,175,150,18,74,182,141,35,11,157,160,112,200,132,187,65,137,3,35,93,70,26,56,108,7,49,21,63,196,40,14,14,133,103,79,152,66,126,84,169,3,85,121,250,192,76,98,203,129,129,56,197,31,152,35,244,94,179,14,167,157,170,21,150,220,229,84,0,27,252,79,49,90,215,98,98,153,206,121,83,216,73,225,79,23,80,250,126,86,123,215,45,149,98,204,28,212,45,141,138,19,52,150,187,82,31,187,232,
145,6,160,217,208,94,126,243,236,71,101,194,173,108,72,145,110,117,83,160,47,58,18,54,232,35,9,7,169,8,36,84,106,17,63,101,43,150,167,121,228,143,188,72,165,164,145,27,102,189,138,42,39,242,203,188,224,235,208,141,161,192,253,222,98,217,230,239,35,20,188,225,189,13,167,208,252,38,138,131,63,63,145,178,126,112,208,36,185,105,203,21,248,66,230,70,59,91,253,119,122,220,101,107,181,197,126,90,244,238,83,9,55,247,72,56,118,184,9,174,177,161,18,159,240,138,63,204,51,147,36,253,114,0,0,0,0,1,194,106,55,
3,132,212,110,2,70,190,89,7,9,168,220,6,203,194,235,4,141,124,178,5,79,22,133,14,19,81,184,15,209,59,143,13,151,133,214,12,85,239,225,9,26,249,100,8,216,147,83,10,158,45,10,11,92,71,61,28,38,163,112,29,228,201,71,31,162,119,30,30,96,29,41,27,47,11,172,26,237,97,155,24,171,223,194,25,105,181,245,18,53,242,200,19,247,152,255,17,177,38,166,16,115,76,145,21,60,90,20,20,254,48,35,22,184,142,122,23,122,228,77,56,77,70,224,57,143,44,215,59,201,146,142,58,11,248,185,63,68,238,60,62,134,132,11]).concat([60,
192,58,82,61,2,80,101,54,94,23,88,55,156,125,111,53,218,195,54,52,24,169,1,49,87,191,132,48,149,213,179,50,211,107,234,51,17,1,221,36,107,229,144,37,169,143,167,39,239,49,254,38,45,91,201,35,98,77,76,34,160,39,123,32,230,153,34,33,36,243,21,42,120,180,40,43,186,222,31,41,252,96,70,40,62,10,113,45,113,28,244,44,179,118,195,46,245,200,154,47,55,162,173,112,154,141,192,113,88,231,247,115,30,89,174,114,220,51,153,119,147,37,28,118,81,79,43,116,23,241,114,117,213,155,69,126,137,220,120,127,75,182,79,125,
13,8,22,124,207,98,33,121,128,116,164,120,66,30,147,122,4,160,202,123,198,202,253,108,188,46,176,109,126,68,135,111,56,250,222,110,250,144,233,107,181,134,108,106,119,236,91,104,49,82,2,105,243,56,53,98,175,127,8,99,109,21,63,97,43,171,102,96,233,193,81,101,166,215,212,100,100,189,227,102,34,3,186,103,224,105,141,72,215,203,32,73,21,161,23,75,83,31,78,74,145,117,121,79,222,99,252,78,28,9,203,76,90,183,146,77,152,221,165,70,196,154,152,71,6,240,175,69,64,78,246,68,130,36,193,65,205,50,68,64,15,88,
115,66,73,230,42,67,139,140,29,84,241,104,80,85,51,2,103,87,117,188,62,86,183,214,9,83,248,192,140,82,58,170,187,80,124,20,226,81,190,126,213,90,226,57,232,91,32,83,223,89,102,237,134,88,164,135,177,93,235,145,52,92,41,251,3,94,111,69,90,95,173,47,109,225,53,27,128,224,247,113,183,226,177,207,238,227,115,165,217,230,60,179,92,231,254,217,107,229,184,103,50,228,122,13,5,239,38,74,56,238,228,32,15,236,162,158,86,237,96,244,97,232,47,226,228,233,237,136,211,235,171,54,138,234,105,92,189,253,19,184,240,
252,209,210,199,254,151,108,158,255,85,6,169,250,26,16,44,251,216,122,27,249,158,196,66,248,92,174,117,243,0,233,72,242,194,131,127,240,132,61,38,241,70,87,17,244,9,65,148,245,203,43,163,247,141,149,250,246,79,255,205,217,120,93,96,216,186,55,87,218,252,137,14,219,62,227,57,222,113,245,188,223,179,159,139,221,245,33,210,220,55,75,229,215,107,12,216,214,169,102,239,212,239,216,182,213,45,178,129,208,98,164,4,209,160,206,51,211,230,112,106,210,36,26,93,197,94,254,16,196,156,148,39,198,218,42,126,199,
24,64,73,194,87,86,204,195,149,60,251,193,211,130,162,192,17,232,149,203,77,175,168,202,143,197,159,200,201,123,198,201,11,17,241,204,68,7,116,205,134,109,67,207,192,211,26,206,2,185,45,145,175,150,64,144,109,252,119,146,43,66,46,147,233,40,25,150,166,62,156,151,100,84,171,149,34,234,242,148,224,128,197,159,188,199,248,158,126,173,207,156,56,19,150,157,250,121,161,152,181,111,36,153,119,5,19,155,49,187,74,154,243,209,125,141,137,53,48,140,75,95,7,142,13,225,94,143,207,139,105,138,128,157,236,139,
66,247,219,137,4,73,130,136,198,35,181,131,154,100,136,130,88,14,191,128,30,176,230,129,220,218,209,132,147,204,84,133,81,166,99,135,23,24,58,134,213,114,13,169,226,208,160,168,32,186,151,170,102,4,206,171,164,110,249,174,235,120,124,175,41,18,75,173,111,172,18,172,173,198,37,167,241,129,24,166,51,235,47,164,117,85,118,165,183,63,65,160,248,41,196,161,58,67,243,163,124,253,170,162,190,151,157,181,196,115,208,180,6,25,231,182,64,167,190,183,130,205,137,178,205,219,12,179,15,177,59,177,73,15,98,176,
139,101,85,187,215,34,104,186,21,72,95,184,83,246,6,185,145,156,49,188,222,138,180,189,28,224,131,191,90,94,218,190,152,52,237,0,0,0,0,184,188,103,101,170,9,200,139,18,181,175,238,143,98,151,87,55,222,240,50,37,107,95,220,157,215,56,185,197,180,40,239,125,8,79,138,111,189,224,100,215,1,135,1,74,214,191,184,242,106,216,221,224,223,119,51,88,99,16,86,80,25,87,159,232,165,48,250,250,16,159,20,66,172,248,113,223,123,192,200,103,199,167,173,117,114,8,67,205,206,111,38,149,173,127,112,45,17,24,21,63,164,
183,251,135,24,208,158,26,207,232,39,162,115,143,66,176,198,32,172,8,122,71,201,160,50,175,62,24,142,200,91,10,59,103,181,178,135,0,208,47,80,56,105,151,236,95,12,133,89,240,226,61,229,151,135,101,134,135,209,221,58,224,180,207,143,79,90,119,51,40,63,234,228,16,134,82,88,119,227,64,237,216,13,248,81,191,104,240,43,248,161,72,151,159,196,90,34,48,42,226,158,87,79,127,73,111,246,199,245,8,147,213,64,167,125,109,252,192,24,53,159,208,78,141,35,183,43,159,150,24,197,39,42,127,160,186,253,71,25,2,65,32,
124,16,244,143,146,168,72,232,247,155,20,88,61,35,168,63,88,49,29,144,182,137,161,247,211,20,118,207,106,172,202,168,15,190,127,7,225,6,195,96,132,94,160,112,210,230,28,23,183,244,169,184,89,76,21,223,60,209,194,231,133,105,126,128,224,123,203,47,14,195,119,72,107,203,13,15,162,115,177,104,199,97,4,199,41,217,184,160,76,68,111,152,245,252,211,255,144,238,102,80,126,86,218,55,27,14,185,39,77,182,5,64,40,164,176,239,198,28,12,136,163,129,219,176,26,57,103,215,127,43,210,120,145,147,110,31,244,59,38,
247,3,131,154,144,102,145,47,63,136,41,147,88,237,180,68,96,84,12,248,7,49,30,77,168,223,166,241,207,186,254,146,223,236,70,46,184,137,84,155,23,103,236,39,112,2,113,240,72,187,201,76,47,222,219,249,128,48,99,69,231,85,107,63,160,156,211,131,199,249,193,54,104,23,121,138,15,114,228,93,55,203,92,225,80,174,78,84,255,64,246,232,152,37,174,139,136,115,22,55,239,22,4,130,64,248,188,62,39,157,33,233,31,36,153,85,120,65,139,224,215,175,51,92,176,202,237,89,182,59,85,229,209,94,71,80,126,176,255,236,25,
213,98,59,33,108,218,135,70,9,200,50,233,231,112,142,142,130,40,237,158,212,144,81,249,177,130,228,86,95,58,88,49,58,167,143,9,131,31,51,110,230,13,134,193,8,181,58,166,109,189,64,225,164,5,252,134,193,23,73,41,47,175,245,78,74,50,34,118,243,138,158,17,150,152,43,190,120,32,151,217,29,120,244,201,75,192,72,174,46,210,253,1,192,106,65,102,165,247,150,94,28,79,42,57,121,93,159,150,151,229,35,241,242,77,107,25,5,245,215,126,96,231,98,209,142,95,222,182,235,194,9,142,82,122,181,233,55,104,0,70,217,208,
188,33,188,136,223,49,234,48,99,86,143,34,214,249,97,154,106,158,4,7,189,166,189,191,1,193,216,173,180,110,54,21,8,9,83,29,114,78,154,165,206,41,255,183,123,134,17,15,199,225,116,146,16,217,205,42,172,190,168,56,25,17,70,128,165,118,35,216,198,102,117,96,122,1,16,114,207,174,254,202,115,201,155,87,164,241,34,239,24,150,71,253,173,57,169,69,17,94,204,118,77,238,6,206,241,137,99,220,68,38,141,100,248,65,232,249,47,121,81,65,147,30,52,83,38,177,218,235,154,214,191,179,249,198,233,11,69,161,140,25,240,
14,98,161,76,105,7,60,155,81,190,132,39,54,219,150,146,153,53,46,46,254,80,38,84,185,153,158,232,222,252,140,93,113,18,52,225,22,119,169,54,46,206,17,138,73,171,3,63,230,69,187,131,129,32,227,224,145,118,91,92,246,19,73,233,89,253,241,85,62,152,108,130,6,33,212,62,97,68,198,139,206,170,126,55,169,207,214,127,65,56,110,195,38,93,124,118,137,179,196,202,238,214,89,29,214,111,225,161,177,10,243,20,30,228,75,168,121,129,19,203,105,215,171,119,14,178,185,194,161,92,1,126,198,57,156,169,254,128,36,21,153,
229,54,160,54,11,142,28,81,110,134,102,22,167,62,218,113,194,44,111,222,44,148,211,185,73,9,4,129,240,177,184,230,149,163,13,73,123,27,177,46,30,67,210,62,72,251,110,89,45,233,219,246,195,81,103,145,166,204,176,169,31,116,12,206,122,102,185,97,148,222,5,6,241,0,0,0,0,0,0,0,0,74,1,0,0,4,0,4,0,8,0,4,0,10,0,0,0,4,0,5,0,16,0,8,0,10,0,0,0,4,0,6,0,32,0,32,0,10,0,0,0,4,0,4,0,16,0,16,0,200,0,0,0,8,0,16,0,32,0,32,0,200,0,0,0,8,0,16,0,128,0,128,0,200,0,0,0,8,0,32,0,128,0,0,1,200,0,0,0,32,0,128,0,2,1,0,4,200,
0,0,0,32,0,2,1,2,1,0,16,200,0,0,0,16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0,7,0,0,0,8,0,0,0,10,0,0,0,12,0,0,0,14,0,0,0,16,0,0,0,20,0,0,0,24,0,0,0,28,0,0,0,32,0,0,0,40,0,0,0,48,0,0,0,56,0,0,0,64,0,0,0,80,0,0,0,96,0,0,0,112,0,0,0,128,0,0,0,160,0,0,0,192,0,0,0,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,6,0,0,0,8,0,0,0,12,0,0,0,16,0,0,0,24,0,0,0,32,0,0,0,48,0,0,0,64,0,0,0,96,0,0,0,128,0,0,0,192,0,0,0,0,1,0,0,
128,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,6,0,0,0,8,0,0,0,12,0,0,0,16,0,0,0,24,0,0,0,32,0,0,0,48,0,0,0,64,0,0,0,96,0,0,71,114,97,121,82,101,115,112,111,110,115,101,85,110,105,116,0,0,0,0,0,0,0,0,90,76,105,98,32,101,114,114,111,114,58,32,37,115,0,0,70,114,101,101,66,121,116,101,67,111,117,110,116,115,0,0,68,97,116,97,32,98,117,102,102,101,114,32,116,111,111,32,115,109,97,108,108,32,116,111,32,104,111,108,100,32,116,105,108,101,32,37,108,117,0,0,70,114,101,101,79,102,102,115,101,116,115,0,0,0,0,0,73,110,
116,101,114,110,97,108,32,101,114,114,111,114,44,32,117,110,107,110,111,119,110,32,116,97,103,32,48,120,37,120,0,0,0,0,0,0,0,0,89,80,111,115,105,116,105,111,110,0,0,0,0,0,0,0,40,99,99,48,37,114,111,119,115,105,122,101,41,61,61,48,0,0,0,0,0,0,0,0,115,112,32,33,61,32,78,85,76,76,0,0,0,0,0,0,78,111,116,32,97,32,84,73,70,70,32,102,105,108,101,44,32,98,97,100,32,66,105,103,84,73,70,70,32,111,102,102,115,101,116,115,105,122,101,32,37,100,32,40,48,120,37,120,41,0,0,0,0,0,0,0,76,90,87,68,101,99,111,100,101,
58,32,83,116,114,105,112,32,37,100,32,110,111,116,32,116,101,114,109,105,110,97,116,101,100,32,119,105,116,104,32,69,79,73,32,99,111,100,101,0,0,0,0,0,0,0,0,88,80,111,115,105,116,105,111,110,0,0,0,0,0,0,0,109,117,115,116,32,98,101,32,101,105,116,104,101,114,32,76,111,103,76,85,86,32,111,114,32,76,111,103,76,0,0,0,83,111,114,114,121,44,32,76,111,103,76,32,100,97,116,97,32,109,117,115,116,32,104,97,118,101,32,37,115,61,37,100,0,0,0,0,0,0,0,0,80,97,103,101,78,97,109,101,0,0,0,0,0,0,0,0,76,105,110,101,
32,108,101,110,103,116,104,32,109,105,115,109,97,116,99,104,0,0,0,0,37,115,58,32,67,97,110,32,110,111,116,32,114,101,97,100,32,84,73,70,70,32,100,105,114,101,99,116,111,114,121,32,101,110,116,114,121,46,0,0,80,108,97,110,97,114,67,111,110,102,105,103,117,114,97,116,105,111,110,0,0,0,0,0,67,111,109,112,114,101,115,115,105,111,110,32,115,99,104,101,109,101,32,37,117,32,37,115,32,100,101,99,111,100,105,110,103,32,105,115,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,0,0,0,105,110,118,
97,108,105,100,32,99,111,100,101,32,108,101,110,103,116,104,115,32,115,101,116,0,0,0,0,0,0,0,0,116,105,108,101,115,0,0,0,89,82,101,115,111,108,117,116,105,111,110,0,0,0,0,0,88,82,101,115,111,108,117,116,105,111,110,0,0,0,0,0,77,97,120,83,97,109,112,108,101,86,97,108,117,101,0,0,67,67,73,84,84,32,71,114,111,117,112,32,51,0,0,0,37,115,58,32,37,115,0,0,77,105,110,83,97,109,112,108,101,86,97,108,117,101,0,0,69,110,99,111,100,101,114,32,101,114,114,111,114,58,32,37,115,0,0,0,0,0,0,0,83,116,114,105,112,
66,121,116,101,67,111,117,110,116,115,0,116,105,102,95,122,105,112,46,99,0,0,0,0,0,0,0,37,108,108,117,58,32,73,110,118,97,108,105,100,32,116,105,108,101,32,98,121,116,101,32,99,111,117,110,116,44,32,116,105,108,101,32,37,108,117,0,82,111,119,115,80,101,114,83,116,114,105,112,0,0,0,0,84,73,70,70,70,105,101,108,100,87,105,116,104,84,97,103,0,0,0,0,0,0,0,0,83,97,109,112,108,101,115,80,101,114,80,105,120,101,108,0,114,111,119,115,105,122,101,32,62,32,48,0,0,0,0,0,69,110,99,111,100,101,114,32,101,114,
114,111,114,58,32,37,115,0,0,0,0,0,0,0,78,111,116,32,97,32,84,73,70,70,32,102,105,108,101,44,32,98,97,100,32,118,101,114,115,105,111,110,32,110,117,109,98,101,114,32,37,100,32,40,48,120,37,120,41,0,0,0,115,112,45,62,100,101,99,95,99,111,100,101,116,97,98,32,33,61,32,78,85,76,76,0,79,114,105,101,110,116,97,116,105,111,110,0,0,0,0,0,73,110,97,112,112,114,111,112,114,105,97,116,101,32,112,104,111,116,111,109,101,116,114,105,99,32,105,110,116,101,114,112,114,101,116,97,116,105,111,110,32,37,100,32,102,
111,114,32,83,71,73,76,111,103,32,99,111,109,112,114,101,115,115,105,111,110,59,32,37,115,0,0,73,110,107,83,101,116,0,0,83,116,114,105,112,79,102,102,115,101,116,115,0,0,0,0,80,114,101,109,97,116,117,114,101,32,69,79,76,0,0,0,37,115,58,32,67,97,110,32,110,111,116,32,114,101,97,100,32,84,73,70,70,32,100,105,114,101,99,116,111,114,121,32,99,111,117,110,116,0,0,0,77,111,100,101,108,0,0,0,37,115,32,37,115,32,100,101,99,111,100,105,110,103,32,105,115,32,110,111,116,32,105,109,112,108,101,109,101,110,116,
101,100,0,0,0,0,0,0,0,105,110,99,111,109,112,97,116,105,98,108,101,32,118,101,114,115,105,111,110,0,0,0,0,37,108,117,58,32,67,111,108,32,111,117,116,32,111,102,32,114,97,110,103,101,44,32,109,97,120,32,37,108,117,0,0,79,117,116,32,111,102,32,109,101,109,111,114,121,32,114,101,97,100,105,110,103,32,111,102,32,34,37,115,34,59,32,116,97,103,32,105,103,110,111,114,101,100,0,0,0,0,0,0,116,111,111,32,109,97,110,121,32,108,101,110,103,116,104,32,111,114,32,100,105,115,116,97,110,99,101,32,115,121,109,98,
111,108,115,0,0,0,0,0,67,97,110,110,111,116,32,104,97,110,100,108,101,32,122,101,114,111,32,110,117,109,98,101,114,32,111,102,32,37,115,0,77,97,107,101,0,0,0,0,70,114,97,99,116,105,111,110,97,108,32,115,99,97,110,108,105,110,101,115,32,99,97,110,110,111,116,32,98,101,32,114,101,97,100,0,0,0,0,0,83,97,110,105,116,121,32,99,104,101,99,107,32,111,110,32,115,105,122,101,32,111,102,32,34,37,115,34,32,118,97,108,117,101,32,102,97,105,108,101,100,59,32,116,97,103,32,105,103,110,111,114,101,100,0,0,73,109,
97,103,101,68,101,115,99,114,105,112,116,105,111,110,0,0,0,0,0,0,0,0,67,97,110,110,111,116,32,104,97,110,100,108,101,32,100,105,102,102,101,114,101,110,116,32,118,97,108,117,101,115,32,112,101,114,32,115,97,109,112,108,101,32,102,111,114,32,34,37,115,34,59,32,116,97,103,32,105,103,110,111,114,101,100,0,68,111,99,117,109,101,110,116,78,97,109,101,0,0,0,0,67,67,73,84,84,32,82,76,69,47,87,0,0,0,0,0,73,110,99,111,114,114,101,99,116,32,118,97,108,117,101,32,102,111,114,32,34,37,115,34,59,32,116,97,103,
32,105,103,110,111,114,101,100,0,0,0,70,105,108,108,79,114,100,101,114,0,0,0,0,0,0,0,90,76,105,98,32,99,97,110,110,111,116,32,100,101,97,108,32,119,105,116,104,32,98,117,102,102,101,114,115,32,116,104,105,115,32,115,105,122,101,0,73,110,118,97,108,105,100,32,89,67,98,67,114,32,115,117,98,115,97,109,112,108,105,110,103,32,40,37,100,120,37,100,41,0,0,0,0,0,0,0,73,79,32,101,114,114,111,114,32,100,117,114,105,110,103,32,114,101,97,100,105,110,103,32,111,102,32,34,37,115,34,59,32,116,97,103,32,105,103,
110,111,114,101,100,0,0,0,0,67,101,108,108,76,101,110,103,116,104,0,0,0,0,0,0,73,110,116,101,103,101,114,32,97,114,105,116,104,109,101,116,105,99,32,111,118,101,114,102,108,111,119,0,0,0,0,0,37,108,117,58,32,83,97,109,112,108,101,32,111,117,116,32,111,102,32,114,97,110,103,101,44,32,109,97,120,32,37,108,117,0,0,0,0,0,0,0,37,108,117,58,32,84,105,108,101,32,111,117,116,32,111,102,32,114,97,110,103,101,44,32,109,97,120,32,37,108,117,0,73,110,99,111,109,112,97,116,105,98,108,101,32,116,121,112,101,32,
102,111,114,32,34,37,115,34,59,32,116,97,103,32,105,103,110,111,114,101,100,0,67,101,108,108,87,105,100,116,104,0,0,0,0,0,0,0,73,110,99,111,114,114,101,99,116,32,99,111,117,110,116,32,102,111,114,32,34,37,115,34,59,32,116,97,103,32,105,103,110,111,114,101,100,0,0,0,84,104,114,101,115,104,104,111,108,100,105,110,103,0,0,0,79,117,116,32,111,102,32,109,101,109,111,114,121,32,97,108,108,111,99,97,116,105,110,103,32,37,108,100,32,98,121,116,101,32,116,101,109,112,32,98,117,102,102,101,114,46,0,0,90,76,
105,98,32,99,97,110,110,111,116,32,100,101,97,108,32,119,105,116,104,32,98,117,102,102,101,114,115,32,116,104,105,115,32,115,105,122,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,32,114,101,97,100,105,110,103,32,111,102,32,34,37,115,34,0,0,0,78,111,116,32,97,32,84,73,70,70,32,111,114,32,77,68,73,32,102,105,108,101,44,32,98,97,100,32,109,97,103,105,99,32,110,117,109,98,101,114,32,37,100,32,40,48,120,37,120,41,0,0,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,76,90,87,32,104,97,115,
104,32,116,97,98,108,101,0,0,0,0,0,80,104,111,116,111,109,101,116,114,105,99,73,110,116,101,114,112,114,101,116,97,116,105,111,110,0,0,0,0,0,0,0,99,99,37,114,111,119,108,101,110,32,61,61,32,48,0,0,83,111,114,114,121,44,32,99,97,110,32,110,111,116,32,104,97,110,100,108,101,32,115,101,112,97,114,97,116,101,100,32,105,109,97,103,101,32,119,105,116,104,32,37,115,61,37,100,0,0,0,0,0,0,0,0,83,97,110,105,116,121,32,99,104,101,99,107,32,111,110,32,115,105,122,101,32,111,102,32,34,37,115,34,32,118,97,108,
117,101,32,102,97,105,108,101,100,0,0,0,0,0,0,0,67,111,109,112,114,101,115,115,105,111,110,0,0,0,0,0,37,115,32,97,116,32,108,105,110,101,32,37,117,32,111,102,32,37,115,32,37,117,32,40,103,111,116,32,37,117,44,32,101,120,112,101,99,116,101,100,32,37,117,41,0,0,0,0,67,97,110,110,111,116,32,104,97,110,100,108,101,32,100,105,102,102,101,114,101,110,116,32,118,97,108,117,101,115,32,112,101,114,32,115,97,109,112,108,101,32,102,111,114,32,34,37,115,34,0,0,0,0,0,0,37,115,58,32,83,101,101,107,32,101,114,114,
111,114,32,97,99,99,101,115,115,105,110,103,32,84,73,70,70,32,100,105,114,101,99,116,111,114,121,0,37,108,117,58,32,83,116,114,105,112,32,111,117,116,32,111,102,32,114,97,110,103,101,44,32,109,97,120,32,37,108,117,0,0,0,0,0,0,0,0,66,105,116,115,80,101,114,83,97,109,112,108,101,0,0,0,98,117,102,102,101,114,32,101,114,114,111,114,0,0,0,0,73,110,99,111,114,114,101,99,116,32,118,97,108,117,101,32,102,111,114,32,34,37,115,34,0,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,115,116,111,114,101,100,32,98,108,
111,99,107,32,108,101,110,103,116,104,115,0,0,0,0,73,109,97,103,101,76,101,110,103,116,104,0,0,0,0,0,73,109,97,103,101,76,101,110,103,116,104,0,0,0,0,0,73,79,32,101,114,114,111,114,32,100,117,114,105,110,103,32,114,101,97,100,105,110,103,32,111,102,32,34,37,115,34,0,73,109,97,103,101,87,105,100,116,104,0,0,0,0,0,0,73,110,99,111,109,112,97,116,105,98,108,101,32,116,121,112,101,32,102,111,114,32,34,37,115,34,0,0,0,0,0,0,79,108,100,83,117,98,102,105,108,101,84,121,112,101,0,0,67,67,73,84,84,32,82,76,
69,0,0,0,0,0,0,0,73,110,99,111,114,114,101,99,116,32,99,111,117,110,116,32,102,111,114,32,34,37,115,34,0,0,0,0,0,0,0,0,83,117,98,102,105,108,101,84,121,112,101,0,0,0,0,0,115,112,45,62,115,116,97,116,101,32,61,61,32,90,83,84,65,84,69,95,73,78,73,84,95,69,78,67,79,68,69,0,73,110,116,101,103,101,114,32,111,118,101,114,102,108,111,119,0,0,0,0,0,0,0,0,73,110,118,97,108,105,100,32,84,73,70,70,32,100,105,114,101,99,116,111,114,121,59,32,116,97,103,115,32,97,114,101,32,110,111,116,32,115,111,114,116,101,
100,32,105,110,32,97,115,99,101,110,100,105,110,103,32,111,114,100,101,114,0,0,73,109,97,103,101,85,110,105,113,117,101,73,68,0,0,0,73,110,118,97,108,105,100,32,89,67,98,67,114,32,115,117,98,115,97,109,112,108,105,110,103,0,0,0,0,0,0,0,68,97,116,97,32,98,117,102,102,101,114,32,116,111,111,32,115,109,97,108,108,32,116,111,32,104,111,108,100,32,115,116,114,105,112,32,37,108,117,0,67,97,110,110,111,116,32,100,101,116,101,114,109,105,110,101,32,115,105,122,101,32,111,102,32,117,110,107,110,111,119,110,
32,116,97,103,32,116,121,112,101,32,37,100,0,0,0,0,83,117,98,106,101,99,116,68,105,115,116,97,110,99,101,82,97,110,103,101,0,0,0,0,102,111,114,32,34,83,116,114,105,112,66,121,116,101,67,111,117,110,116,115,34,32,97,114,114,97,121,0,0,0,0,0,68,101,118,105,99,101,83,101,116,116,105,110,103,68,101,115,99,114,105,112,116,105,111,110,0,0,0,0,0,0,0,0,115,112,45,62,101,110,99,111,100,101,116,105,108,101,32,33,61,32,78,85,76,76,0,0,37,100,32,98,105,116,32,105,110,112,117,116,32,110,111,116,32,115,117,112,
112,111,114,116,101,100,32,105,110,32,80,105,120,97,114,76,111,103,0,0,84,73,70,70,32,100,105,114,101,99,116,111,114,121,32,105,115,32,109,105,115,115,105,110,103,32,114,101,113,117,105,114,101,100,32,34,37,115,34,32,102,105,101,108,100,0,0,0,69,114,114,111,114,32,119,114,105,116,105,110,103,32,84,73,70,70,32,104,101,97,100,101,114,0,0,0,0,0,0,0,115,112,32,33,61,32,78,85,76,76,0,0,0,0,0,0,83,104,97,114,112,110,101,115,115,0,0,0,0,0,0,0,115,112,32,33,61,32,48,0,67,111,108,111,114,32,99,104,97,110,
110,101,108,115,0,0,102,111,114,32,73,70,68,32,108,105,115,116,0,0,0,0,83,97,116,117,114,97,116,105,111,110,0,0,0,0,0,0,70,114,97,99,116,105,111,110,97,108,32,115,99,97,110,108,105,110,101,115,32,99,97,110,110,111,116,32,98,101,32,114,101,97,100,0,0,0,0,0,65,116,116,101,109,112,116,32,116,111,32,114,101,115,101,116,32,102,105,101,108,100,32,111,110,32,100,105,114,101,99,116,111,114,121,32,110,111,116,32,97,108,114,101,97,100,121,32,111,110,32,100,105,115,107,46,0,0,0,0,0,0,0,0,67,111,110,116,114,
97,115,116,0,0,0,0,0,0,0,0,105,110,115,117,102,102,105,99,105,101,110,116,32,109,101,109,111,114,121,0,0,0,0,0,105,110,118,97,108,105,100,32,98,108,111,99,107,32,116,121,112,101,0,0,0,0,0,0,80,108,97,110,97,114,99,111,110,102,105,103,32,116,97,103,32,118,97,108,117,101,32,97,115,115,117,109,101,100,32,105,110,99,111,114,114,101,99,116,44,32,97,115,115,117,109,105,110,103,32,100,97,116,97,32,105,115,32,99,111,110,116,105,103,32,105,110,115,116,101,97,100,32,111,102,32,99,104,117,110,107,121,0,0,0,
0,0,71,97,105,110,67,111,110,116,114,111,108,0,0,0,0,0,67,97,110,32,110,111,116,32,114,101,97,100,32,84,73,70,70,32,100,105,114,101,99,116,111,114,121,0,0,0,0,0,83,99,101,110,101,67,97,112,116,117,114,101,84,121,112,101,0,0,0,0,0,0,0,0,70,111,99,97,108,76,101,110,103,116,104,73,110,51,53,109,109,70,105,108,109,0,0,0,83,97,110,105,116,121,32,99,104,101,99,107,32,111,110,32,100,105,114,101,99,116,111,114,121,32,99,111,117,110,116,32,102,97,105,108,101,100,44,32,122,101,114,111,32,116,97,103,32,100,
105,114,101,99,116,111,114,105,101,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,0,0,84,97,103,32,0,0,0,0,79,108,100,45,115,116,121,108,101,32,74,80,69,71,0,0,67,97,110,32,110,111,116,32,114,101,97,100,32,84,73,70,70,32,100,105,114,101,99,116,111,114,121,32,99,111,117,110,116,0,0,0,0,0,0,0,68,105,103,105,116,97,108,90,111,111,109,82,97,116,105,111,0,0,0,0,0,0,0,0,115,112,32,33,61,32,78,85,76,76,0,0,0,0,0,0,84,73,70,70,84,105,108,101,82,111,119,83,105,122,101,0,37,46,49,48,48,115,
58,32,67,97,110,32,110,111,116,32,114,101,97,100,32,84,73,70,70,32,100,105,114,101,99,116,111,114,121,0,0,0,0,0,87,104,105,116,101,66,97,108,97,110,99,101,0,0,0,0,82,101,97,100,32,101,114,114,111,114,32,111,110,32,115,116,114,105,112,32,37,108,117,59,32,103,111,116,32,37,108,108,117,32,98,121,116,101,115,44,32,101,120,112,101,99,116,101,100,32,37,108,108,117,0,0,116,111,32,114,101,97,100,32,84,73,70,70,32,100,105,114,101,99,116,111,114,121,0,0,69,120,112,111,115,117,114,101,77,111,100,101,0,0,0,0,
116,105,102,95,112,114,101,100,105,99,116,46,99,0,0,0,83,97,110,105,116,121,32,99,104,101,99,107,32,111,110,32,100,105,114,101,99,116,111,114,121,32,99,111,117,110,116,32,102,97,105,108,101,100,44,32,116,104,105,115,32,105,115,32,112,114,111,98,97,98,108,121,32,110,111,116,32,97,32,118,97,108,105,100,32,73,70,68,32,111,102,102,115,101,116,0,67,117,115,116,111,109,82,101,110,100,101,114,101,100,0,0,115,112,45,62,101,110,99,111,100,101,112,102,117,110,99,32,33,61,32,78,85,76,76,0,115,112,32,33,61,32,
48,0,37,115,58,32,67,97,110,32,110,111,116,32,114,101,97,100,32,84,73,70,70,32,100,105,114,101,99,116,111,114,121,32,99,111,117,110,116,0,0,0,67,97,110,110,111,116,32,114,101,97,100,32,84,73,70,70,32,104,101,97,100,101,114,0,110,98,105,116,115,32,60,61,32,66,73,84,83,95,77,65,88,0,0,0,0,0,0,0,67,70,65,80,97,116,116,101,114,110,0,0,0,0,0,0,85,110,107,110,111,119,110,32,101,110,99,111,100,105,110,103,32,37,100,32,102,111,114,32,76,111,103,76,117,118,32,99,111,109,112,114,101,115,115,105,111,110,0,0,
0,0,0,0,83,111,114,114,121,44,32,99,97,110,32,110,111,116,32,104,97,110,100,108,101,32,82,71,66,32,105,109,97,103,101,32,119,105,116,104,32,37,115,61,37,100,0,0,0,0,0,0,37,115,58,32,83,101,101,107,32,101,114,114,111,114,32,97,99,99,101,115,115,105,110,103,32,84,73,70,70,32,100,105,114,101,99,116,111,114,121,0,116,105,102,95,112,105,120,97,114,108,111,103,46,99,0,0,83,99,101,110,101,84,121,112,101,0,0,0,0,0,0,0,77,101,114,103,105,110,103,32,67,67,73,84,84,32,70,97,120,32,52,32,99,111,100,101,99,45,
115,112,101,99,105,102,105,99,32,116,97,103,115,32,102,97,105,108,101,100,0,0,68,105,115,99,97,114,100,105,110,103,32,37,108,117,32,98,121,116,101,115,32,116,111,32,97,118,111,105,100,32,98,117,102,102,101,114,32,111,118,101,114,114,117,110,0,0,0,0,112,100,105,114,0,0,0,0,77,101,109,111,114,121,32,109,97,112,112,101,100,32,102,105,108,101,115,32,110,111,116,32,99,117,114,114,101,110,116,108,121,32,115,117,112,112,111,114,116,101,100,32,102,111,114,32,116,104,105,115,32,111,112,101,114,97,116,105,
111,110,46,0,70,105,108,101,83,111,117,114,99,101,0,0,0,0,0,0,100,97,116,97,32,101,114,114,111,114,0,0,0,0,0,0,48,0,0,0,0,0,0,0,104,101,97,100,101,114,32,99,114,99,32,109,105,115,109,97,116,99,104,0,0,0,0,0,102,105,105,32,33,61,32,70,65,73,76,69,68,95,70,73,73,0,0,0,0,0,0,0,34,37,115,34,58,32,66,97,100,32,109,111,100,101,0,0,83,101,110,115,105,110,103,77,101,116,104,111,100,0,0,0,70,114,97,99,116,105,111,110,97,108,32,115,99,97,110,108,105,110,101,115,32,99,97,110,110,111,116,32,98,101,32,114,101,
97,100,0,0,0,0,0,102,105,112,45,62,102,105,101,108,100,95,114,101,97,100,99,111,117,110,116,61,61,84,73,70,70,95,86,65,82,73,65,66,76,69,50,0,0,0,0,69,120,112,111,115,117,114,101,73,110,100,101,120,0,0,0,67,111,110,115,101,99,117,116,105,118,101,66,97,100,70,97,120,76,105,110,101,115,0,0,102,105,112,45,62,102,105,101,108,100,95,112,97,115,115,99,111,117,110,116,61,61,49,0,83,117,98,106,101,99,116,76,111,99,97,116,105,111,110,0,74,80,69,71,0,0,0,0,116,105,102,95,108,122,119,46,99,0,0,0,0,0,0,0,67,
108,101,97,110,70,97,120,68,97,116,97,0,0,0,0,102,105,112,45,62,102,105,101,108,100,95,114,101,97,100,99,111,117,110,116,61,61,84,73,70,70,95,86,65,82,73,65,66,76,69,0,0,0,0,0,87,97,114,110,105,110,103,44,32,0,0,0,0,0,0,0,70,111,99,97,108,80,108,97,110,101,82,101,115,111,108,117,116,105,111,110,85,110,105,116,0,0,0,0,0,0,0,0,70,111,99,97,108,80,108,97,110,101,89,82,101,115,111,108,117,116,105,111,110,0,0,0,115,112,32,33,61,32,48,0,66,97,100,70,97,120,76,105,110,101,115,0,0,0,0,0,84,73,70,70,78,117,
109,98,101,114,79,102,84,105,108,101,115,0,0,0,0,0,0,0,105,110,99,111,114,114,101,99,116,32,99,111,117,110,116,32,102,111,114,32,102,105,101,108,100,32,34,37,115,34,44,32,101,120,112,101,99,116,101,100,32,37,100,44,32,103,111,116,32,37,100,0,0,0,0,0,87,114,111,110,103,32,98,105,116,115,112,101,114,115,97,109,112,108,101,32,118,97,108,117,101,32,40,37,100,41,44,32,84,104,117,110,100,101,114,32,100,101,99,111,100,101,114,32,111,110,108,121,32,115,117,112,112,111,114,116,115,32,52,98,105,116,115,32,
112,101,114,32,115,97,109,112,108,101,46,0,78,101,88,84,0,0,0,0,73,110,116,101,103,101,114,32,111,118,101,114,102,108,111,119,0,0,0,0,0,0,0,0,70,97,120,70,105,108,108,70,117,110,99,0,0,0,0,0,73,110,118,97,108,105,100,32,115,116,114,105,112,32,98,121,116,101,32,99,111,117,110,116,32,37,108,108,117,44,32,115,116,114,105,112,32,37,108,117,0,0,0,0,0,0,0,0,102,105,112,45,62,102,105,101,108,100,95,114,101,97,100,99,111,117,110,116,62,61,49,0,70,111,99,97,108,80,108,97,110,101,88,82,101,115,111,108,117,
116,105,111,110,0,0,0,116,105,102,95,108,117,118,46,99,0,0,0,0,0,0,0,70,97,120,77,111,100,101,0,105,110,99,111,114,114,101,99,116,32,99,111,117,110,116,32,102,111,114,32,102,105,101,108,100,32,34,37,115,34,44,32,101,120,112,101,99,116,101,100,32,50,44,32,103,111,116,32,37,100,0,0,0,0,0,0,83,112,97,116,105,97,108,70,114,101,113,117,101,110,99,121,82,101,115,112,111,110,115,101,0,0,0,0,0,0,0,0,115,112,32,33,61,32,78,85,76,76,0,0,0,0,0,0,90,76,105,98,32,101,114,114,111,114,58,32,37,115,0,0,115,112,45,
62,118,115,101,116,112,97,114,101,110,116,32,33,61,32,48,0,0,0,0,0,102,105,112,45,62,102,105,101,108,100,95,114,101,97,100,99,111,117,110,116,61,61,50,0,79,110,101,32,111,102,32,116,104,101,32,99,108,105,101,110,116,32,112,114,111,99,101,100,117,114,101,115,32,105,115,32,78,85,76,76,32,112,111,105,110,116,101,114,46,0,0,0,70,108,97,115,104,69,110,101,114,103,121,0,0,0,0,0,115,112,45,62,101,110,99,95,104,97,115,104,116,97,98,32,33,61,32,78,85,76,76,0,85,110,107,110,111,119,110,32,100,97,116,97,32,
102,111,114,109,97,116,32,37,100,32,102,111,114,32,76,111,103,76,117,118,32,99,111,109,112,114,101,115,115,105,111,110,0,0,0,32,32,67,111,110,115,101,99,117,116,105,118,101,32,66,97,100,32,70,97,120,32,76,105,110,101,115,58,32,37,108,117,10,0,0,0,0,0,0,0,83,97,109,112,108,101,115,47,112,105,120,101,108,0,0,0,102,105,112,45,62,102,105,101,108,100,95,114,101,97,100,99,111,117,110,116,61,61,49,0,82,101,108,97,116,101,100,83,111,117,110,100,70,105,108,101,0,0,0,0,0,0,0,0,84,73,70,70,73,110,105,116,67,
67,73,84,84,70,97,120,52,0,0,0,0,0,0,0,32,32,66,97,100,32,70,97,120,32,76,105,110,101,115,58,32,37,108,117,10,0,0,0,118,97,108,117,101,62,61,48,46,48,0,0,0,0,0,0,65,83,67,73,73,32,118,97,108,117,101,32,102,111,114,32,116,97,103,32,34,37,115,34,32,100,111,101,115,32,110,111,116,32,101,110,100,32,105,110,32,110,117,108,108,32,98,121,116,101,0,0,0,0,0,0,83,97,110,105,116,121,32,99,104,101,99,107,32,111,110,32,116,97,103,32,99,111,117,110,116,32,102,97,105,108,101,100,44,32,108,105,107,101,108,121,32,
99,111,114,114,117,112,116,32,84,73,70,70,0,0,0,80,105,120,101,108,89,68,105,109,101,110,115,105,111,110,0,83,111,114,114,121,44,32,114,101,113,117,101,115,116,101,100,32,99,111,109,112,114,101,115,115,105,111,110,32,109,101,116,104,111,100,32,105,115,32,110,111,116,32,99,111,110,102,105,103,117,114,101,100,0,0,0,115,116,114,101,97,109,32,101,114,114,111,114,0,0,0,0,32,40,37,117,32,61,32,48,120,37,120,41,10,0,0,0,42,112,97,32,60,61,32,48,120,70,70,70,70,70,70,70,70,85,76,0,0,0,0,0,65,83,67,73,73,
32,118,97,108,117,101,32,102,111,114,32,116,97,103,32,34,37,115,34,32,99,111,110,116,97,105,110,115,32,110,117,108,108,32,98,121,116,101,32,105,110,32,118,97,108,117,101,59,32,118,97,108,117,101,32,105,110,99,111,114,114,101,99,116,108,121,32,116,114,117,110,99,97,116,101,100,32,100,117,114,105,110,103,32,114,101,97,100,105,110,103,32,100,117,101,32,116,111,32,105,109,112,108,101,109,101,110,116,97,116,105,111,110,32,108,105,109,105,116,97,116,105,111,110,115,0,0,0,0,0,0,117,110,107,110,111,119,110,
32,104,101,97,100,101,114,32,102,108,97,103,115,32,115,101,116,0,0,0,0,0,0,0,0,116,105,102,95,100,105,114,114,101,97,100,46,99,0,0,0,80,105,120,101,108,88,68,105,109,101,110,115,105,111,110,0,32,117,110,99,111,114,114,101,99,116,101,100,32,101,114,114,111,114,115,0,0,0,0,0,112,97,32,33,61,32,48,0,102,105,112,45,62,102,105,101,108,100,95,112,97,115,115,99,111,117,110,116,61,61,48,0,67,111,108,111,114,83,112,97,99,101,0,0,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,115,116,114,105,112,32,
98,117,102,102,101,114,0,0,0,0,0,0,0,32,114,101,99,101,105,118,101,114,32,114,101,103,101,110,101,114,97,116,101,100,0,0,0,99,111,117,110,116,60,48,120,56,48,48,48,48,48,48,48,0,0,0,0,0,0,0,0,102,105,112,45,62,115,101,116,95,102,105,101,108,100,95,116,121,112,101,33,61,84,73,70,70,95,83,69,84,71,69,84,95,73,78,84,0,0,0,0,70,108,97,115,104,112,105,120,86,101,114,115,105,111,110,0,78,111,110,101,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,66,38,87,32,109,97,112,112,105,110,103,32,116,97,98,
108,101,0,0,32,99,108,101,97,110,0,0,116,105,102,45,62,116,105,102,95,102,108,97,103,115,38,84,73,70,70,95,66,73,71,84,73,70,70,0,0,0,0,0,102,105,112,45,62,115,101,116,95,102,105,101,108,100,95,116,121,112,101,33,61,84,73,70,70,95,83,69,84,71,69,84,95,79,84,72,69,82,0,0,46,10,0,0,0,0,0,0,83,117,98,83,101,99,84,105,109,101,68,105,103,105,116,105,122,101,100,0,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,90,73,80,32,115,116,97,116,101,32,98,108,111,99,107,0,0,0,0,78,111,32,115,112,97,99,101,
32,102,111,114,32,112,104,111,116,111,109,101,116,114,105,99,32,99,111,110,118,101,114,115,105,111,110,32,116,97,98,108,101,0,0,0,0,0,0,0,32,32,70,97,120,32,68,97,116,97,58,0,0,0,0,0,99,111,117,110,116,60,48,120,50,48,48,48,48,48,48,48,0,0,0,0,0,0,0,0,37,108,117,58,32,83,97,109,112,108,101,32,111,117,116,32,111,102,32,114,97,110,103,101,44,32,109,97,120,32,37,108,117,0,0,0,0,0,0,0,78,111,32,100,101,102,105,110,105,116,105,111,110,32,102,111,117,110,100,32,102,111,114,32,116,97,103,32,37,100,0,0,84,
111,111,32,109,117,99,104,0,0,0,0,0,0,0,0,83,117,98,83,101,99,84,105,109,101,79,114,105,103,105,110,97,108,0,0,0,0,0,0,83,117,98,83,101,99,84,105,109,101,0,0,0,0,0,0,73,110,118,97,108,105,100,32,89,67,98,67,114,32,115,117,98,115,97,109,112,108,105,110,103,32,40,37,100,120,37,100,41,0,0,0,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,80,97,108,101,116,116,101,32,109,97,112,112,105,110,103,32,116,97,98,108,101,0,0,0,0,0,0,32,40,37,108,117,32,61,32,48,120,37,108,120,41,10,0,100,97,116,97,108,
101,110,103,116,104,60,48,120,56,48,48,48,48,48,48,48,85,76,0,73,110,116,101,103,101,114,32,111,118,101,114,102,108,111,119,0,0,0,0,0,0,0,0,84,73,70,70,70,101,116,99,104,78,111,114,109,97,108,84,97,103,0,0,0,0,0,0,84,104,117,110,100,101,114,83,99,97,110,0,0,0,0,0,65,115,115,117,109,105,110,103,32,56,45,98,105,116,32,99,111,108,111,114,109,97,112,0,37,115,69,79,76,32,112,97,100,100,105,110,103,0,0,0,73,79,32,101,114,114,111,114,32,119,114,105,116,105,110,103,32,116,97,103,32,100,97,116,97,0,0,0,0,
0,0,0,70,97,105,108,101,100,32,116,111,32,97,108,108,111,99,97,116,101,32,102,105,101,108,100,115,32,97,114,114,97,121,0,82,101,97,100,68,105,114,69,110,116,114,121,65,114,114,97,121,0,0,0,0,0,0,0,116,105,102,95,102,97,120,51,46,99,0,0,0,0,0,0,85,115,101,114,67,111,109,109,101,110,116,0,0,0,0,0,40,99,99,37,40,98,112,115,42,115,116,114,105,100,101,41,41,61,61,48,0,0,0,0,70,97,105,108,101,100,32,116,111,32,105,110,105,116,105,97,108,105,122,101,32,67,73,69,32,76,42,97,42,98,42,45,62,82,71,66,32,99,
111,110,118,101,114,115,105,111,110,32,115,116,97,116,101,46,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,80,105,120,97,114,76,111,103,32,115,116,97,116,101,32,98,108,111,99,107,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,100,105,114,91,109,93,46,116,100,105,114,95,116,97,103,33,61,116,97,103,0,0,0,0,40,116,109,115,105,122,101,95,116,41,100,97,116,97,115,105,122,101,62,48,0,0,0,0,37,115,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,32,40,84,73,70,70,32,115,116,114,117,99,116,117,114,101,41,0,0,0,
0,0,0,116,105,102,95,100,117,109,112,109,111,100,101,46,99,0,0,77,97,107,101,114,78,111,116,101,0,0,0,0,0,0,0,116,105,102,45,62,116,105,102,95,100,97,116,97,32,33,61,32,48,0,0,0,0,0,0,83,117,98,106,101,99,116,65,114,101,97,0,0,0,0,0,37,115,58,32,78,111,32,115,112,97,99,101,32,102,111,114,32,76,111,103,76,117,118,32,115,116,97,116,101,32,98,108,111,99,107,0,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,67,73,69,32,76,42,97,42,98,42,45,62,82,71,66,32,99,111,110,118,101,114,115,105,111,110,32,
115,116,97,116,101,46,0,0,37,115,50,45,100,32,101,110,99,111,100,105,110,103,0,0,99,111,117,110,116,60,48,120,52,48,48,48,48,48,48,48,0,0,0,0,0,0,0,0,83,111,114,114,121,44,32,99,97,110,32,110,111,116,32,104,97,110,100,108,101,32,99,111,110,116,105,103,117,111,117,115,32,100,97,116,97,32,119,105,116,104,32,37,115,61,37,100,44,32,97,110,100,32,37,115,61,37,100,32,97,110,100,32,66,105,116,115,47,83,97,109,112,108,101,61,37,100,0,0,102,111,114,32,115,116,114,105,112,32,97,114,114,97,121,0,77,101,114,
103,105,110,103,32,67,67,73,84,84,32,70,97,120,32,51,32,99,111,100,101,99,45,115,112,101,99,105,102,105,99,32,116,97,103,115,32,102,97,105,108,101,100,0,0,103,116,84,105,108,101,83,101,112,97,114,97,116,101,0,0,32,32,71,114,111,117,112,32,51,32,79,112,116,105,111,110,115,58,0,0,0,0,0,0,65,116,116,101,109,112,116,32]).concat([116,111,32,119,114,105,116,101,32,118,97,108,117,101,32,108,97,114,103,101,114,32,116,104,97,110,32,48,120,70,70,70,70,70,70,70,70,32,105,110,32,67,108,97,115,115,105,99,32,84,
73,70,70,32,102,105,108,101,46,0,0,0,0,0,115,105,122,101,62,48,0,0,69,114,114,111,114,32,119,114,105,116,105,110,103,32,100,105,114,101,99,116,111,114,121,32,108,105,110,107,0,0,0,0,70,111,99,97,108,76,101,110,103,116,104,0,0,0,0,0,102,105,108,101,32,101,114,114,111,114,0,0,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,116,105,108,101,32,98,117,102,102,101,114,0,0,0,0,0,0,0,0,37,115,117,110,99,111,109,112,114,101,115,115,101,100,32,100,97,116,97,0,0,0,0,0,69,114,114,111,114,32,119,114,105,
116,105,110,103,32,84,73,70,70,32,104,101,97,100,101,114,0,0,0,0,0,0,0,67,111,109,112,114,101,115,115,105,111,110,32,97,108,103,111,114,105,116,104,109,32,100,111,101,115,32,110,111,116,32,115,117,112,112,111,114,116,32,114,97,110,100,111,109,32,97,99,99,101,115,115,0,0,0,0,105,110,118,97,108,105,100,32,119,105,110,100,111,119,32,115,105,122,101,0,0,0,0,0,82,101,103,105,115,116,101,114,105,110,103,32,97,110,111,110,121,109,111,117,115,32,102,105,101,108,100,32,119,105,116,104,32,116,97,103,32,37,
100,32,40,48,120,37,120,41,32,102,97,105,108,101,100,0,0,0,70,108,97,115,104,0,0,0,103,116,83,116,114,105,112,83,101,112,97,114,97,116,101,0,32,32,71,114,111,117,112,32,52,32,79,112,116,105,111,110,115,58,0,0,0,0,0,0,69,114,114,111,114,32,119,114,105,116,105,110,103,32,83,117,98,73,70,68,32,100,105,114,101,99,116,111,114,121,32,108,105,110,107,0,0,0,0,0,102,111,114,32,99,104,111,112,112,101,100,32,34,83,116,114,105,112,79,102,102,115,101,116,115,34,32,97,114,114,97,121,0,0,0,0,0,0,0,0,76,105,103,
104,116,83,111,117,114,99,101,0,0,0,0,0,69,114,114,111,114,32,117,112,100,97,116,105,110,103,32,84,73,70,70,32,104,101,97,100,101,114,0,0,0,0,0,0,73,110,116,101,103,101,114,32,111,118,101,114,102,108,111,119,32,105,110,32,37,115,0,0,32,0,0,0,0,0,0,0,73,79,32,101,114,114,111,114,32,119,114,105,116,105,110,103,32,100,105,114,101,99,116,111,114,121,0,0,0,0,0,0,102,111,114,32,99,104,111,112,112,101,100,32,34,83,116,114,105,112,66,121,116,101,67,111,117,110,116,115,34,32,97,114,114,97,121,0,0,0,0,0,77,
101,116,101,114,105,110,103,77,111,100,101,0,0,0,0,84,97,103,32,0,0,0,0,83,117,98,106,101,99,116,68,105,115,116,97,110,99,101,0,105,109,103,45,62,85,97,84,111,65,97,61,61,78,85,76,76,0,0,0,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,71,114,111,117,112,32,51,47,52,32,114,101,102,101,114,101,110,99,101,32,108,105,110,101,0,0,0,110,97,60,110,100,105,114,0,116,100,45,62,116,100,95,112,108,97,110,97,114,99,111,110,102,105,103,32,61,61,32,80,76,65,78,65,82,67,79,78,70,73,71,95,67,79,78,84,73,
71,0,0,0,0,0,0,37,115,58,32,0,0,0,0,37,115,58,32,67,97,110,110,111,116,32,109,111,100,105,102,121,32,116,97,103,32,34,37,115,34,32,119,104,105,108,101,32,119,114,105,116,105,110,103,0,0,0,0,0,0,0,0,77,97,120,65,112,101,114,116,117,114,101,86,97,108,117,101,0,0,0,0,0,0,0,0,77,101,114,103,105,110,103,32,68,101,102,108,97,116,101,32,99,111,100,101,99,45,115,112,101,99,105,102,105,99,32,116,97,103,115,32,102,97,105,108,101,100,0,0,0,0,0,0,80,114,101,100,105,99,116,111,114,0,0,0,0,0,0,0,105,110,118,97,
108,105,100,32,100,105,115,116,97,110,99,101,32,116,111,111,32,102,97,114,32,98,97,99,107,0,0,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,0,0,102,111,114,32,71,114,111,117,112,32,51,47,52,32,114,117,110,32,97,114,114,97,121,115,0,0,0,0,0,0,0,0,77,97,120,105,109,117,109,32,84,73,70,70,32,102,105,108,101,32,115,105,122,101,32,101,120,99,101,101,100,101,100,0,37,108,117,58,32,68,101,112,116,104,32,111,117,116,32,111,102,32,114,97,110,103,101,44,32,109,97,120,32,37,108,117,0,0,0,0,0,0,0,0,78,
111,116,32,101,110,111,117,103,104,0,0,0,0,0,0,37,115,58,32,85,110,107,110,111,119,110,32,37,115,116,97,103,32,37,117,0,0,0,0,69,120,112,111,115,117,114,101,66,105,97,115,86,97,108,117,101,0,0,0,0,0,0,0,73,110,118,97,108,105,100,32,116,100,95,115,97,109,112,108,101,115,112,101,114,112,105,120,101,108,32,118,97,108,117,101,0,0,0,0,0,0,0,0,115,112,45,62,118,103,101,116,112,97,114,101,110,116,32,33,61,32,78,85,76,76,0,0,105,109,103,45,62,66,105,116,100,101,112,116,104,49,54,84,111,56,61,61,78,85,76,
76,0,0,0,0,0,0,0,0,82,111,119,32,112,105,120,101,108,115,32,105,110,116,101,103,101,114,32,111,118,101,114,102,108,111,119,32,40,114,111,119,112,105,120,101,108,115,32,37,117,41,0,0,0,0,0,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,0,0,37,115,58,32,73,110,118,97,108,105,100,32,73,110,107,78,97,109,101,115,32,118,97,108,117,101,59,32,101,120,112,101,99,116,105,110,103,32,37,100,32,110,97,109,101,115,44,32,102,111,117,110,100,32,37,100,0,0,0,0,0,0,0,0,66,114,105,103,104,116,110,101,115,115,
86,97,108,117,101,0,115,112,45,62,118,115,101,116,112,97,114,101,110,116,32,33,61,32,78,85,76,76,0,0,84,73,70,70,83,101,116,70,105,101,108,100,0,0,0,0,110,101,101,100,32,100,105,99,116,105,111,110,97,114,121,0,116,105,102,95,103,101,116,105,109,97,103,101,46,99,0,0,66,105,116,115,47,115,97,109,112,108,101,32,109,117,115,116,32,98,101,32,49,32,102,111,114,32,71,114,111,117,112,32,51,47,52,32,101,110,99,111,100,105,110,103,47,100,101,99,111,100,105,110,103,0,0,0,48,0,0,0,0,0,0,0,67,97,110,110,111,116,
32,104,97,110,100,108,101,32,122,101,114,111,32,115,116,114,105,112,32,115,105,122,101,0,0,0,83,101,116,116,105,110,103,32,117,112,32,102,105,101,108,100,32,105,110,102,111,32,102,97,105,108,101,100,0,0,0,0,80,97,99,107,66,105,116,115,0,0,0,0,0,0,0,0,65,112,101,114,116,117,114,101,86,97,108,117,101,0,0,0,82,101,97,100,32,101,114,114,111,114,32,97,116,32,115,99,97,110,108,105,110,101,32,37,108,117,44,32,115,116,114,105,112,32,37,108,117,59,32,103,111,116,32,37,108,108,117,32,98,121,116,101,115,44,
32,101,120,112,101,99,116,101,100,32,37,108,108,117,0,0,0,0,77,101,114,103,105,110,103,32,80,114,101,100,105,99,116,111,114,32,99,111,100,101,99,45,115,112,101,99,105,102,105,99,32,116,97,103,115,32,102,97,105,108,101,100,0,0,0,0,37,117,32,40,48,120,37,120,41,10,0,0,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,89,67,98,67,114,45,62,82,71,66,32,99,111,110,118,101,114,115,105,111,110,32,115,116,97,116,101,0,0,0,0,0,0,0,0,77,101,114,103,105,110,103,32,80,105,120,97,114,76,111,103,32,99,111,
100,101,99,45,115,112,101,99,105,102,105,99,32,116,97,103,115,32,102,97,105,108,101,100,0,0,0,0,0,115,112,32,33,61,32,78,85,76,76,0,0,0,0,0,0,78,111,116,32,101,110,111,117,103,104,32,100,97,116,97,32,102,111,114,32,115,99,97,110,108,105,110,101,32,37,108,117,0,0,0,0,0,0,0,0,111,45,62,102,105,101,108,100,95,112,97,115,115,99,111,117,110,116,61,61,49,0,0,0,67,97,110,110,111,116,32,104,97,110,100,108,101,32,122,101,114,111,32,116,105,108,101,32,115,105,122,101,0,0,0,0,110,46,97,49,54,61,61,49,0,0,0,
0,0,0,0,0,37,115,58,32,66,97,100,32,118,97,108,117,101,32,37,117,32,102,111,114,32,34,37,115,34,32,116,97,103,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,76,90,87,32,115,116,97,116,101,32,98,108,111,99,107,0,0,0,0,83,104,117,116,116,101,114,83,112,101,101,100,86,97,108,117,101,0,0,0,0,0,0,0,82,101,97,100,32,101,114,114,111,114,32,97,116,32,115,99,97,110,108,105,110,101,32,37,108,117,59,32,103,111,116,32,37,108,108,117,32,98,121,116,101,115,44,32,101,120,112,101,99,116,101,100,32,37,108,108,
117,0,0,0,0,0,0,0,77,101,114,103,105,110,103,32,83,71,73,76,111,103,32,99,111,100,101,99,45,115,112,101,99,105,102,105,99,32,116,97,103,115,32,102,97,105,108,101,100,0,0,0,0,0,0,0,102,108,111,97,116,105,110,103,32,112,111,105,110,116,32,112,114,101,100,105,99,116,111,114,32,0,0,0,0,0,0,0,83,71,73,76,111,103,69,110,99,111,100,101,0,0,0,0,116,112,97,114,109,32,60,32,57,0,0,0,0,0,0,0,111,45,62,102,105,101,108,100,95,114,101,97,100,99,111,117,110,116,61,61,84,73,70,70,95,86,65,82,73,65,66,76,69,50,0,
0,0,0,0,0,77,105,115,115,105,110,103,32,110,101,101,100,101,100,32,37,115,32,116,97,103,0,0,0,67,97,110,110,111,116,32,104,97,110,100,108,101,32,122,101,114,111,32,115,99,97,110,108,105,110,101,32,115,105,122,101,0,0,0,0,0,0,0,0,99,117,115,116,111,109,32,116,97,103,32,98,105,110,97,114,121,32,111,98,106,101,99,116,0,0,0,0,0,0,0,0,67,111,109,112,114,101,115,115,101,100,66,105,116,115,80,101,114,80,105,120,101,108,0,0,83,101,101,107,32,101,114,114,111,114,32,97,116,32,115,99,97,110,108,105,110,101,
32,37,108,117,44,32,115,116,114,105,112,32,37,108,117,0,0,0,84,73,70,70,73,110,105,116,67,67,73,84,84,70,97,120,51,0,0,0,0,0,0,0,116,105,102,95,100,105,114,46,99,0,0,0,0,0,0,0,104,111,114,105,122,111,110,116,97,108,32,100,105,102,102,101,114,101,110,99,105,110,103,32,0,0,0,0,0,0,0,0,78,111,116,32,101,110,111,117,103,104,32,100,97,116,97,32,102,111,114,32,115,99,97,110,108,105,110,101,32,37,108,117,44,32,101,120,112,101,99,116,101,100,32,97,32,114,101,113,117,101,115,116,32,102,111,114,32,97,116,32,
109,111,115,116,32,37,108,108,100,32,98,121,116,101,115,44,32,103,111,116,32,97,32,114,101,113,117,101,115,116,32,102,111,114,32,37,108,108,100,32,98,121,116,101,115,0,0,0,0,0,0,0,83,71,73,76,111,103,68,97,116,97,70,109,116,0,0,0,115,112,32,33,61,32,48,0,111,45,62,102,105,101,108,100,95,116,121,112,101,61,61,84,73,70,70,95,85,78,68,69,70,73,78,69,68,0,0,0,87,114,111,110,103,32,34,83,116,114,105,112,66,121,116,101,67,111,117,110,116,115,34,32,102,105,101,108,100,44,32,105,103,110,111,114,105,110,103,
32,97,110,100,32,99,97,108,99,117,108,97,116,105,110,103,32,102,114,111,109,32,105,109,97,103,101,108,101,110,103,116,104,0,0,0,0,0,0,0,0,69,114,114,111,114,32,102,101,116,99,104,105,110,103,32,100,105,114,101,99,116,111,114,121,32,108,105,110,107,0,0,0,37,115,58,32,78,117,108,108,32,99,111,117,110,116,32,102,111,114,32,34,37,115,34,32,40,116,121,112,101,32,37,100,44,32,119,114,105,116,101,99,111,117,110,116,32,37,100,44,32,112,97,115,115,99,111,117,110,116,32,37,100,41,0,0,105,110,118,97,108,105,
100,32,108,105,116,101,114,97,108,47,108,101,110,103,116,104,32,99,111,100,101,0,0,0,0,0,67,111,109,112,111,110,101,110,116,115,67,111,110,102,105,103,117,114,97,116,105,111,110,0,82,101,97,100,32,101,114,114,111,114,32,97,116,32,114,111,119,32,37,108,117,44,32,99,111,108,32,37,108,117,44,32,116,105,108,101,32,37,108,117,59,32,103,111,116,32,37,108,108,117,32,98,121,116,101,115,44,32,101,120,112,101,99,116,101,100,32,37,108,108,117,0,110,111,110,101,32,0,0,0,78,111,116,32,101,110,111,117,103,104,
32,100,97,116,97,32,97,116,32,114,111,119,32,37,108,117,32,40,115,104,111,114,116,32,37,108,108,117,32,112,105,120,101,108,115,41,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,115,116,97,116,101,32,98,108,111,99,107,0,0,0,0,0,0,0,0,111,45,62,102,105,101,108,100,95,116,121,112,101,61,61,84,73,70,70,95,76,79,78,71,0,0,0,0,0,0,0,0,66,111,103,117,115,32,34,83,116,114,105,112,66,121,116,101,67,111,117,110,116,115,34,32,102,105,101,108,100,44,32,105,103,110,111,114,105,110,103,32,97,110,100,32,99,97,
108,99,117,108,97,116,105,110,103,32,102,114,111,109,32,105,109,97,103,101,108,101,110,103,116,104,0,0,0,0,0,0,0,0,117,110,107,110,111,119,110,32,99,111,109,112,114,101,115,115,105,111,110,32,109,101,116,104,111,100,0,0,0,0,0,0,85,110,107,110,111,119,110,32,102,105,101,108,100,32,119,105,116,104,32,116,97,103,32,37,100,32,40,48,120,37,120,41,32,101,110,99,111,117,110,116,101,114,101,100,0,0,0,0,116,105,108,101,0,0,0,0,49,46,50,46,56,0,0,0,102,105,112,45,62,102,105,101,108,100,95,119,114,105,116,101,
99,111,117,110,116,61,61,84,73,70,70,95,86,65,82,73,65,66,76,69,50,0,0,0,70,97,105,108,101,100,32,116,111,32,114,101,97,100,32,100,105,114,101,99,116,111,114,121,32,97,116,32,111,102,102,115,101,116,32,37,108,117,0,0,68,97,116,101,84,105,109,101,68,105,103,105,116,105,122,101,100,0,0,0,0,0,0,0,73,109,97,103,101,76,97,121,101,114,0,0,0,0,0,0,82,101,97,100,32,101,114,114,111,114,32,97,116,32,114,111,119,32,37,108,117,44,32,99,111,108,32,37,108,117,59,32,103,111,116,32,37,108,108,117,32,98,121,116,101,
115,44,32,101,120,112,101,99,116,101,100,32,37,108,108,117,0,0,0,83,116,114,105,112,82,111,119,67,111,117,110,116,115,0,0,84,56,50,79,112,116,105,111,110,115,0,0,0,0,0,0,32,32,80,114,101,100,105,99,116,111,114,58,32,0,0,0,73,109,97,103,101,66,97,115,101,67,111,108,111,114,0,0,78,111,32,115,117,112,112,111,114,116,32,102,111,114,32,99,111,110,118,101,114,116,105,110,103,32,117,115,101,114,32,100,97,116,97,32,102,111,114,109,97,116,32,116,111,32,76,111,103,76,117,118,0,0,0,0,68,101,99,111,100,101,0,
0,77,101,114,103,105,110,103,32,99,111,109,109,111,110,32,67,67,73,84,84,32,70,97,120,32,99,111,100,101,99,45,115,112,101,99,105,102,105,99,32,116,97,103,115,32,102,97,105,108,101,100,0,0,0,0,0,111,45,62,102,105,101,108,100,95,114,101,97,100,99,111,117,110,116,61,61,49,0,0,0,77,111,100,101,78,117,109,98,101,114,0,0,0,0,0,0,84,73,70,70,32,100,105,114,101,99,116,111,114,121,32,105,115,32,109,105,115,115,105,110,103,32,114,101,113,117,105,114,101,100,32,34,83,116,114,105,112,66,121,116,101,67,111,117,
110,116,115,34,32,102,105,101,108,100,44,32,99,97,108,99,117,108,97,116,105,110,103,32,102,114,111,109,32,105,109,97,103,101,108,101,110,103,116,104,0,0,0,0,0,0,0,0,86,101,114,115,105,111,110,89,101,97,114,0,0,0,0,0,67,111,100,105,110,103,77,101,116,104,111,100,115,0,0,0,70,97,120,80,114,111,102,105,108,101,0,0,0,0,0,0,37,115,58,32,66,97,100,32,102,105,101,108,100,32,116,121,112,101,32,37,100,32,102,111,114,32,34,37,115,34,0,0,80,114,111,102,105,108,101,84,121,112,101,0,0,0,0,0,68,97,116,101,84,105,
109,101,79,114,105,103,105,110,97,108,0,0,0,0,0,0,0,0,71,108,111,98,97,108,80,97,114,97,109,101,116,101,114,115,73,70,68,0,0,0,0,0,83,101,101,107,32,101,114,114,111,114,32,97,116,32,114,111,119,32,37,108,117,44,32,99,111,108,32,37,108,117,44,32,116,105,108,101,32,37,108,117,0,0,0,0,0,0,0,0,73,110,100,101,120,101,100,0,80,101,114,83,97,109,112,108,101,0,0,0,0,0,0,0,115,112,45,62,100,101,99,111,100,101,114,111,119,32,33,61,32,78,85,76,76,0,0,0,37,115,58,32,70,97,105,108,101,100,32,116,111,32,97,108,
108,111,99,97,116,101,32,115,112,97,99,101,32,102,111,114,32,108,105,115,116,32,111,102,32,99,117,115,116,111,109,32,118,97,108,117,101,115,0,0,67,117,114,114,101,110,116,80,114,101,80,114,111,102,105,108,101,77,97,116,114,105,120,0,83,71,73,76,111,103,32,99,111,109,112,114,101,115,115,105,111,110,32,99,97,110,110,111,116,32,104,97,110,100,108,101,32,110,111,110,45,99,111,110,116,105,103,117,111,117,115,32,100,97,116,97,0,0,0,0,37,115,0,0,0,0,0,0,67,117,114,114,101,110,116,73,67,67,80,114,111,102,
105,108,101,0,0,0,0,0,0,0,73,110,105,116,67,67,73,84,84,70,97,120,51,0,0,0,111,45,62,102,105,101,108,100,95,116,121,112,101,61,61,84,73,70,70,95,83,72,79,82,84,0,0,0,0,0,0,0,65,115,83,104,111,116,80,114,101,80,114,111,102,105,108,101,77,97,116,114,105,120,0,0,83,116,114,105,112,66,121,116,101,67,111,117,110,116,115,0,65,115,83,104,111,116,73,67,67,80,114,111,102,105,108,101,0,0,0,0,0,0,0,0,77,97,115,107,101,100,65,114,101,97,115,0,0,0,0,0,65,99,116,105,118,101,65,114,101,97,0,0,0,0,0,0,115,99,97,
110,108,105,110,101,0,0,0,0,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,34,84,114,97,110,115,102,101,114,70,117,110,99,116,105,111,110,34,32,116,97,103,0,0,0,0,0,79,114,105,103,105,110,97,108,82,97,119,70,105,108,101,68,97,116,97,0,0,0,0,0,79,114,105,103,105,110,97,108,82,97,119,70,105,108,101,78,97,109,101,0,0,0,0,0,69,120,105,102,86,101,114,115,105,111,110,0,0,0,0,0,67,97,110,32,110,111,116,32,114,101,97,100,32,115,99,97,110,108,105,110,101,115,32,102,114,111,109,32,97,32,116,105,108,
101,100,32,105,109,97,103,101,0,0,0,0,0,0,0,82,97,119,68,97,116,97,85,110,105,113,117,101,73,68,0,67,97,108,105,98,114,97,116,105,111,110,73,108,108,117,109,105,110,97,110,116,50,0,0,115,112,45,62,100,101,99,111,100,101,112,102,117,110,99,32,33,61,32,78,85,76,76,0,37,115,58,32,83,111,114,114,121,44,32,99,97,110,110,111,116,32,110,101,115,116,32,83,117,98,73,70,68,115,0,0,67,97,108,105,98,114,97,116,105,111,110,73,108,108,117,109,105,110,97,110,116,49,0,0,116,100,45,62,116,100,95,112,104,111,116,111,
109,101,116,114,105,99,32,61,61,32,80,72,79,84,79,77,69,84,82,73,67,95,76,79,71,76,85,86,0,0,0,0,0,0,0,0,78,111,32,34,112,117,116,34,32,114,111,117,116,105,110,101,32,115,101,116,117,112,108,59,32,112,114,111,98,97,98,108,121,32,99,97,110,32,110,111,116,32,104,97,110,100,108,101,32,105,109,97,103,101,32,102,111,114,109,97,116,0,0,0,77,97,107,101,114,78,111,116,101,83,97,102,101,116,121,0,71,114,111,117,112,51,79,112,116,105,111,110,115,0,0,0,111,45,62,102,105,101,108,100,95,112,97,115,115,99,111,
117,110,116,61,61,48,0,0,0,68,78,71,80,114,105,118,97,116,101,68,97,116,97,0,0,67,111,108,111,114,109,97,112,0,0,0,0,0,0,0,0,83,104,97,100,111,119,83,99,97,108,101,0,0,0,0,0,65,110,116,105,65,108,105,97,115,83,116,114,101,110,103,116,104,0,0,0,0,0,0,0,67,104,114,111,109,97,66,108,117,114,82,97,100,105,117,115,0,0,0,0,0,0,0,0,37,115,32,99,111,109,112,114,101,115,115,105,111,110,32,115,117,112,112,111,114,116,32,105,115,32,110,111,116,32,99,111,110,102,105,103,117,114,101,100,0,0,0,0,0,0,0,0,37,115,
58,32,67,97,110,110,111,116,32,111,112,101,110,0,76,101,110,115,73,110,102,111,0,0,0,0,0,0,0,0,67,97,109,101,114,97,83,101,114,105,97,108,78,117,109,98,101,114,0,0,0,0,0,0,40,115,99,104,101,109,101,32,61,61,32,67,79,77,80,82,69,83,83,73,79,78,95,68,69,70,76,65,84,69,41,32,124,124,32,40,115,99,104,101,109,101,32,61,61,32,67,79,77,80,82,69,83,83,73,79,78,95,65,68,79,66,69,95,68,69,70,76,65,84,69,41,0,0,0,0,0,0,0,0,79,112,116,111,101,108,101,99,116,114,105,99,67,111,110,118,101,114,115,105,111,110,70,
97,99,116,111,114,0,0,0,0,67,97,110,32,110,111,116,32,114,101,97,100,32,116,105,108,101,115,32,102,114,111,109,32,97,32,115,116,114,105,112,112,101,100,32,105,109,97,103,101,0,0,0,0,0,0,0,0,76,105,110,101,97,114,82,101,115,112,111,110,115,101,76,105,109,105,116,0,0,0,0,0,66,97,121,101,114,71,114,101,101,110,83,112,108,105,116,0,40,111,99,99,48,37,114,111,119,115,105,122,101,41,61,61,48,0,0,0,0,0,0,0,78,111,110,115,116,97,110,100,97,114,100,32,116,105,108,101,32,108,101,110,103,116,104,32,37,100,44,
32,99,111,110,118,101,114,116,32,102,105,108,101,0,0,0,0,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,76,90,87,32,99,111,100,101,32,116,97,98,108,101,0,0,0,0,0,66,97,115,101,108,105,110,101,83,104,97,114,112,110,101,115,115,0,0,0,0,0,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,83,71,73,76,111,103,32,116,114,97,110,115,108,97,116,105,111,110,32,98,117,102,102,101,114,0,0,78,111,32,34,103,101,116,34,32,114,111,117,116,105,110,101,32,115,101,116,117,112,0,0,66,97,115,101,108,105,110,101,
78,111,105,115,101,0,0,0,71,114,111,117,112,52,79,112,116,105,111,110,115,0,0,0,111,45,62,102,105,101,108,100,95,114,101,97,100,99,111,117,110,116,61,61,84,73,70,70,95,86,65,82,73,65,66,76,69,0,0,0,0,0,0,0,66,97,115,101,108,105,110,101,69,120,112,111,115,117,114,101,0,0,0,0,0,0,0,0,37,108,117,58,32,82,111,119,32,111,117,116,32,111,102,32,114,97,110,103,101,44,32,109,97,120,32,37,108,117,0,0,105,110,99,111,114,114,101,99,116,32,108,101,110,103,116,104,32,99,104,101,99,107,0,0,83,97,109,112,108,101,
115,80,101,114,80,105,120,101,108,32,116,97,103,32,105,115,32,109,105,115,115,105,110,103,44,32,97,112,112,108,121,105,110,103,32,99,111,114,114,101,99,116,32,83,97,109,112,108,101,115,80,101,114,80,105,120,101,108,32,118,97,108,117,101,32,111,102,32,51,0,0,0,0,0,37,115,32,100,97,116,97,32,97,116,32,115,99,97,110,108,105,110,101,32,37,108,117,32,40,37,108,108,117,32,33,61,32,37,108,108,117,41,0,0,65,115,83,104,111,116,87,104,105,116,101,88,89,0,0,0,65,115,83,104,111,116,78,101,117,116,114,97,108,
0,0,0,65,110,97,108,111,103,66,97,108,97,110,99,101,0,0,0,37,100,0,0,0,0,0,0,82,101,100,117,99,116,105,111,110,77,97,116,114,105,120,50,0,0,0,0,0,0,0,0,87,114,105,116,101,32,101,114,114,111,114,32,97,116,32,115,99,97,110,108,105,110,101,32,37,108,117,0,0,0,0,0,82,101,100,117,99,116,105,111,110,77,97,116,114,105,120,49,0,0,0,0,0,0,0,0,73,83,79,83,112,101,101,100,82,97,116,105,110,103,115,0,84,73,70,70,78,117,109,98,101,114,79,102,83,116,114,105,112,115,0,0,0,0,0,0,70,105,108,101,32,110,111,116,32,
111,112,101,110,32,102,111,114,32,114,101,97,100,105,110,103,0,0,0,0,0,0,0,67,97,109,101,114,97,67,97,108,105,98,114,97,116,105,111,110,50,0,0,0,0,0,0,67,97,109,101,114,97,67,97,108,105,98,114,97,116,105,111,110,49,0,0,0,0,0,0,115,112,45,62,100,101,99,111,100,101,116,105,108,101,32,33,61,32,78,85,76,76,0,0,80,105,120,97,114,76,111,103,32,99,111,109,112,114,101,115,115,105,111,110,32,99,97,110,39,116,32,104,97,110,100,108,101,32,98,105,116,115,32,100,101,112,116,104,47,100,97,116,97,32,102,111,114,
109,97,116,32,99,111,109,98,105,110,97,116,105,111,110,32,40,100,101,112,116,104,58,32,37,100,41,0,0,0,0,0,0,0,0,111,99,99,32,62,61,32,99,111,100,101,112,45,62,108,101,110,103,116,104,0,0,0,0,78,111,110,115,116,97,110,100,97,114,100,32,116,105,108,101,32,119,105,100,116,104,32,37,100,44,32,99,111,110,118,101,114,116,32,102,105,108,101,0,67,111,108,111,114,77,97,116,114,105,120,50,0,0,0,0,78,111,32,115,117,112,112,111,114,116,32,102,111,114,32,99,111,110,118,101,114,116,105,110,103,32,117,115,101,
114,32,100,97,116,97,32,102,111,114,109,97,116,32,116,111,32,76,111,103,76,0,0,0,0,0,0,83,111,114,114,121,44,32,99,97,110,32,110,111,116,32,104,97,110,100,108,101,32,105,109,97,103,101,0,0,0,0,0,67,111,108,111,114,77,97,116,114,105,120,49,0,0,0,0,85,110,99,111,109,112,114,101,115,115,101,100,32,100,97,116,97,32,40,110,111,116,32,115,117,112,112,111,114,116,101,100,41,32,97,116,32,108,105,110,101,32,37,117,32,111,102,32,37,115,32,37,117,32,40,120,32,37,117,41,0,0,0,0,111,45,62,102,105,101,108,100,
95,116,121,112,101,61,61,84,73,70,70,95,65,83,67,73,73,0,0,0,0,0,0,0,68,101,102,97,117,108,116,67,114,111,112,83,105,122,101,0,105,110,99,111,114,114,101,99,116,32,100,97,116,97,32,99,104,101,99,107,0,0,0,0,83,97,109,112,108,101,115,80,101,114,80,105,120,101,108,32,116,97,103,32,105,115,32,109,105,115,115,105,110,103,44,32,97,115,115,117,109,105,110,103,32,99,111,114,114,101,99,116,32,83,97,109,112,108,101,115,80,101,114,80,105,120,101,108,32,118,97,108,117,101,32,105,115,32,51,0,0,0,0,0,68,101,102,
97,117,108,116,67,114,111,112,79,114,105,103,105,110,0,0,0,0,0,0,0,66,101,115,116,81,117,97,108,105,116,121,83,99,97,108,101,0,0,0,0,0,0,0,0,68,101,102,97,117,108,116,83,99,97,108,101,0,0,0,0,76,90,77,65,0,0,0,0,87,104,105,116,101,76,101,118,101,108,0,0,0,0,0,0,77,97,120,105,109,117,109,32,84,73,70,70,32,102,105,108,101,32,115,105,122,101,32,101,120,99,101,101,100,101,100,0,66,108,97,99,107,76,101,118,101,108,68,101,108,116,97,86,0,0,0,0,0,0,0,0,83,112,101,99,116,114,97,108,83,101,110,115,105,116,
105,118,105,116,121,0,0,0,0,0,40,99,99,32,38,32,55,41,32,61,61,32,48,0,0,0,66,108,97,99,107,76,101,118,101,108,68,101,108,116,97,72,0,0,0,0,0,0,0,0,66,108,97,99,107,76,101,118,101,108,0,0,0,0,0,0,34,80,114,101,100,105,99,116,111,114,34,32,118,97,108,117,101,32,37,100,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,0,0,0,0,0,85,110,115,117,112,112,111,114,116,101,100,32,98,105,116,115,47,115,97,109,112,108,101,58,32,37,100,0,0,0,0,0,79,108,100,45,115,116,121,108,101,32,76,90,87,32,99,111,100,
101,115,44,32,99,111,110,118,101,114,116,32,102,105,108,101,0,0,0,0,0,0,0,116,118,45,62,99,111,117,110,116,32,61,61,32,49,0,0,66,108,97,99,107,76,101,118,101,108,82,101,112,101,97,116,68,105,109,0,0,0,0,0,116,100,45,62,116,100,95,112,104,111,116,111,109,101,116,114,105,99,32,61,61,32,80,72,79,84,79,77,69,84,82,73,67,95,76,79,71,76,0,0,79,117,116,32,111,102,32,109,101,109,111,114,121,32,102,111,114,32,99,111,108,111,114,109,97,112,32,99,111,112,121,0,76,105,110,101,97,114,105,122,97,116,105,111,110,
84,97,98,108,101,0,0,0,0,0,0,116,101,45,62,114,117,110,108,101,110,32,61,61,32,54,52,42,40,115,112,97,110,62,62,54,41,0,0,0,0,0,0,116,105,102,95,100,105,114,119,114,105,116,101,46,99,0,0,67,70,65,76,97,121,111,117,116,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,100,105,115,116,97,110,99,101,32,116,111,111,32,102,97,114,32,98,97,99,107,0,0,0,66,105,116,115,80,101,114,83,97,109,112,108,101,32,116,97,103,32,105,115,32,109,105,115,115,105,110,103,44,32,97,115,115,117,109,105,110,103,32,56,32,98,105,116,
115,32,112,101,114,32,115,97,109,112,108,101,0,0,0,0,0,0,0,0,67,70,65,80,108,97,110,101,67,111,108,111,114,0,0,0,76,111,99,97,108,105,122,101,100,67,97,109,101,114,97,77,111,100,101,108,0,0,0,0,95,84,73,70,70,83,101,116,117,112,70,105,101,108,100,115,0,0,0,0,0,0,0,0,85,110,105,113,117,101,67,97,109,101,114,97,77,111,100,101,108,0,0,0,0,0,0,0,83,71,73,76,111,103,50,52,0,0,0,0,0,0,0,0,68,78,71,66,97,99,107,119,97,114,100,86,101,114,115,105,111,110,0,0,0,0,0,0,83,71,73,76,111,103,0,0,83,101,101,107,
32,101,114,114,111,114,32,97,116,32,115,99,97,110,108,105,110,101,32,37,108,117,0,0,0,0,0,0,68,78,71,86,101,114,115,105,111,110,0,0,0,0,0,0,69,120,112,111,115,117,114,101,80,114,111,103,114,97,109,0,40,99,99,32,38,32,51,41,32,61,61,32,48,0,0,0,73,110,116,101,114,111,112,101,114,97,98,105,108,105,116,121,73,70,68,79,102,102,115,101,116,0,0,0,0,0,0,0,115,112,32,33,61,32,48,0,83,116,111,78,105,116,115,0,70,108,111,97,116,105,110,103,32,112,111,105,110,116,32,34,80,114,101,100,105,99,116,111,114,34,32,
110,111,116,32,115,117,112,112,111,114,116,101,100,32,119,105,116,104,32,37,100,32,100,97,116,97,32,102,111,114,109,97,116,0,0,0,0,115,116,114,105,100,101,32,37,108,117,32,105,115,32,110,111,116,32,97,32,109,117,108,116,105,112,108,101,32,111,102,32,115,97,109,112,108,101,32,99,111,117,110,116,44,32,37,108,117,44,32,100,97,116,97,32,116,114,117,110,99,97,116,101,100,46,0,0,0,0,0,0,66,111,103,117,115,32,101,110,99,111,100,105,110,103,44,32,108,111,111,112,32,105,110,32,116,104,101,32,99,111,100,101,
32,116,97,98,108,101,59,32,115,99,97,110,108,105,110,101,32,37,100,0,0,0,0,0,70,97,120,68,99,115,0,0,68,111,116,82,97,110,103,101,0,0,0,0,0,0,0,0,115,112,45,62,116,98,117,102,108,101,110,32,62,61,32,110,112,105,120,101,108,115,0,0,77,105,115,115,105,110,103,32,114,101,113,117,105,114,101,100,32,34,67,111,108,111,114,109,97,112,34,32,116,97,103,0,115,99,104,101,109,101,32,61,61,32,67,79,77,80,82,69,83,83,73,79,78,95,80,73,88,65,82,76,79,71,0,0,70,97,120,82,101,99,118,84,105,109,101,0,0,0,0,0,70,114,
97,99,116,105,111,110,97,108,32,115,99,97,110,108,105,110,101,115,32,99,97,110,110,111,116,32,98,101,32,119,114,105,116,116,101,110,0,0,84,101,114,109,105,110,97,116,105,110,103,32,80,97,99,107,66,105,116,115,68,101,99,111,100,101,32,100,117,101,32,116,111,32,108,97,99,107,32,111,102,32,100,97,116,97,46,0,69,114,114,111,114,32,102,108,117,115,104,105,110,103,32,100,97,116,97,32,98,101,102,111,114,101,32,100,105,114,101,99,116,111,114,121,32,119,114,105,116,101,0,0,0,0,0,0,70,97,120,83,117,98,65,100,
100,114,101,115,115,0,0,0,105,110,118,97,108,105,100,32,100,105,115,116,97,110,99,101,32,99,111,100,101,0,0,0,80,104,111,116,111,109,101,116,114,105,99,32,116,97,103,32,118,97,108,117,101,32,97,115,115,117,109,101,100,32,105,110,99,111,114,114,101,99,116,44,32,97,115,115,117,109,105,110,103,32,100,97,116,97,32,105,115,32,89,67,98,67,114,32,105,110,115,116,101,97,100,32,111,102,32,82,71,66,0,0,116,105,102,95,111,112,101,110,46,99,0,0,0,0,0,0,70,97,120,82,101,99,118,80,97,114,97,109,115,0,0,0,78,111,
116,32,101,110,111,117,103,104,32,100,97,116,97,32,102,111,114,32,115,99,97,110,108,105,110,101,32,37,108,100,0,0,0,0,0,0,0,0,71,80,83,73,70,68,79,102,102,115,101,116,0,0,0,0,73,67,67,32,80,114,111,102,105,108,101,0,0,0,0,0,76,90,87,0,0,0,0,0,115,99,104,101,109,101,32,61,61,32,67,79,77,80,82,69,83,83,73,79,78,95,76,90,87,0,0,0,0,0,0,0,69,88,73,70,73,70,68,79,102,102,115,101,116,0,0,0,78,111,116,32,101,110,111,117,103,104,32,100,97,116,97,32,97,116,32,115,99,97,110,108,105,110,101,32,37,108,117,32,
40,115,104,111,114,116,32,37,108,117,32,98,121,116,101,115,41,0,0,0,0,0,0,0,116,100,45,62,116,100,95,110,115,116,114,105,112,115,32,62,32,48,0,0,0,0,0,0,80,104,111,116,111,115,104,111,112,0,0,0,0,0,0,0,40,99,99,32,37,32,51,41,32,61,61,32,48,0,0,0,70,78,117,109,98,101,114,0,82,105,99,104,84,73,70,70,73,80,84,67,0,0,0,0,115,99,104,101,109,101,32,61,61,32,67,79,77,80,82,69,83,83,73,79,78,95,83,71,73,76,79,71,50,52,32,124,124,32,115,99,104,101,109,101,32,61,61,32,67,79,77,80,82,69,83,83,73,79,78,95,83,
71,73,76,79,71,0,0,67,111,112,121,114,105,103,104,116,0,0,0,0,0,0,0,72,111,114,105,122,111,110,116,97,108,32,100,105,102,102,101,114,101,110,99,105,110,103,32,34,80,114,101,100,105,99,116,111,114,34,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,119,105,116,104,32,37,100,45,98,105,116,32,115,97,109,112,108,101,115,0,0,0,78,111,116,32,101,110,111,117,103,104,32,100,97,116,97,32,97,116,32,115,99,97,110,108,105,110,101,32,37,108,117,32,40,115,104,111,114,116,32,37,108,117,32,98,121,116,101,
115,41,0,0,0,0,0,0,0,78,111,116,32,101,110,111,117,103,104,32,100,97,116,97,32,97,116,32,115,99,97,110,108,105,110,101,32,37,100,32,40,115,104,111,114,116,32,37,108,108,117,32,98,121,116,101,115,41,0,0,0,0,0,0,0,77,97,116,114,105,120,87,111,114,108,100,84,111,67,97,109,101,114,97,0,0,0,0,0,115,112,32,33,61,32,78,85,76,76,0,0,0,0,0,0,85,110,107,110,111,119,110,0,83,111,114,114,121,44,32,99,97,110,32,110,111,116,32,104,97,110,100,108,101,32,105,109,97,103,101,32,119,105,116,104,32,37,115,61,37,100,
0,0,77,97,116,114,105,120,87,111,114,108,100,84,111,83,99,114,101,101,110,0,0,0,0,0,108,101,110,103,116,104,32,60,32,57,0,0,0,0,0,0,69,114,114,111,114,32,112,111,115,116,45,101,110,99,111,100,105,110,103,32,98,101,102,111,114,101,32,100,105,114,101,99,116,111,114,121,32,119,114,105,116,101,0,0,0,0,0,0,70,105,101,108,100,79,102,86,105,101,119,67,111,116,97,110,103,101,110,116,0,0,0,0,83,111,114,114,121,44,32,99,97,110,32,110,111,116,32,104,97,110,100,108,101,32,105,109,97,103,101,115,32,119,105,116,
104,32,37,100,45,98,105,116,32,115,97,109,112,108,101,115,0,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,108,105,116,101,114,97,108,47,108,101,110,103,116,104,32,99,111,100,101,0,0,0,0,0,80,104,111,116,111,109,101,116,114,105,99,32,116,97,103,32,105,115,32,109,105,115,115,105,110,103,44,32,97,115,115,117,109,105,110,103,32,100,97,116,97,32,105,115,32,89,67,98,67,114,0,0,0,0,0,0,84,101,120,116,117,114,101,87,114,97,112,77,111,100,101,115,0,0,0,0,0,0,0,0,84,101,120,116,117,114,101,70,111,114,109,97,
116,0,0,0,73,109,97,103,101,70,117,108,108,76,101,110,103,116,104,0,80,105,120,97,114,76,111,103,0,0,0,0,0,0,0,0,73,109,97,103,101,70,117,108,108,87,105,100,116,104,0,0,68,101,99,111,100,105,110,103,32,101,114,114,111,114,32,97,116,32,115,99,97,110,108,105,110,101,32,37,108,117,44,32,37,115,0,0,0,0,0,0,116,105,102,95,119,114,105,116,101,46,99,0,0,0,0,0,84,105,108,101,68,101,112,116,104,0,0,0,0,0,0,0,40,99,99,32,38,32,49,41,32,61,61,32,48,0,0,0,69,120,112,111,115,117,114,101,84,105,109,101,0,0,0,0,
73,109,97,103,101,68,101,112,116,104,0,0,0,0,0,0,120,32,61,61,32,108,97,115,116,120,0,0,0,0,0,0,68,97,116,97,84,121,112,101,0,0,0,0,0,0,0,0,77,97,116,116,101,105,110,103,0,0,0,0,0,0,0,0,40,99,99,37,115,116,114,105,100,101,41,61,61,48,0,0,68,101,99,111,100,105,110,103,32,101,114,114,111,114,32,97,116,32,115,99,97,110,108,105,110,101,32,37,108,117,44,32,37,115,0,0,0,0,0,0,110,32,62,32,48,0,0,0,111,99,99,32,62,61,32,108,101,110,0,0,0,0,0,0,115,32,61,61,32,48,0,0,80,108,97,110,97,114,99,111,110,102,105,
103,117,114,97,116,105,111,110,0,0,0,0,0,88,77,76,80,97,99,107,101,116,0,0,0,0,0,0,0,66,97,100,32,99,111,100,101,32,119,111,114,100,32,97,116,32,108,105,110,101,32,37,117,32,111,102,32,37,115,32,37,117,32,40,120,32,37,117,41,0,0,0,0,0,0,0,0,37,115,58,32,67,97,110,32,110,111,116,32,119,114,105,116,101,32,84,73,70,70,32,100,105,114,101,99,116,111,114,121,32,101,110,116,114,121,46,0,82,101,102,101,114,101,110,99,101,66,108,97,99,107,87,104,105,116,101,0,0,0,0,0,105,110,118,97,108,105,100,32,100,105,
115,116,97,110,99,101,115,32,115,101,116,0,0,0,117,110,107,110,111,119,110,32,116,97,103,110,97,109,101,0,89,67,98,67,114,80,111,115,105,116,105,111,110,105,110,103,0,0,0,0,0,0,0,0,89,67,98,67,114,83,117,98,115,97,109,112,108,105,110,103,0,0,0,0,0,0,0,0,69,114,114,111,114,32,102,101,116,99,104,105,110,103,32,100,105,114,101,99,116,111,114,121,32,99,111,117,110,116,0,0,89,67,98,67,114,67,111,101,102,102,105,99,105,101,110,116,115,0,0,0,0,0,0,0,65,100,111,98,101,68,101,102,108,97,116,101,0,0,0,0,89,
67,108,105,112,80,97,116,104,85,110,105,116,115,0,0,115,112,45,62,115,116,97,116,101,32,61,61,32,90,83,84,65,84,69,95,73,78,73,84,95,68,69,67,79,68,69,0,105,110,118,97,108,105,100,32,100,105,115,116,97,110,99,101,32,99,111,100,101,0,0,0,88,67,108,105,112,80,97,116,104,85,110,105,116,115,0,0,78,111,32,115,112,97,99,101,32,102,111,114,32,100,97,116,97,32,98,117,102,102,101,114,32,97,116,32,115,99,97,110,108,105,110,101,32,37,108,117,0,0,0,0,0,0,0,0,84,97,103,32,37,100,0,0,67,108,105,112,80,97,116,104,
0,0,0,0,0,0,0,0,115,116,114,101,97,109,32,101,110,100,0,0,0,0,0,0,83,77,97,120,83,97,109,112,108,101,86,97,108,117,101,0,40,99,99,37,40,50,42,115,116,114,105,100,101,41,41,61,61,48,0,0,0,0,0,0,37,115,0,0,0,0,0,0,87,114,111,110,103,32,108,101,110,103,116,104,32,111,102,32,100,101,99,111,100,101,100,32,115,116,114,105,110,103,58,32,100,97,116,97,32,112,114,111,98,97,98,108,121,32,99,111,114,114,117,112,116,101,100,32,97,116,32,115,99,97,110,108,105,110,101,32,37,100,0,0,83,77,105,110,83,97,109,112,
108,101,86,97,108,117,101,0,88,89,90,44,32,76,117,118,0,0,0,0,0,0,0,0,112,115,101,117,100,111,45,0,83,111,114,114,121,44,32,99,97,110,32,110,111,116,32,104,97,110,100,108,101,32,76,111,103,76,117,118,32,105,109,97,103,101,115,32,119,105,116,104,32,37,115,61,37,100,0,0,83,97,109,112,108,101,70,111,114,109,97,116,0,0,0,0,80,114,101,109,97,116,117,114,101,32,69,79,70,32,97,116,32,108,105,110,101,32,37,117,32,111,102,32,37,115,32,37,117,32,40,120,32,37,117,41,0,0,0,0,0,0,0,0,69,120,116,114,97,83,97,109,
112,108,101,115,0,0,0,0,86,97,108,117,101,32,101,120,99,101,101,100,115,32,51,50,98,105,116,32,114,97,110,103,101,32,111,102,32,111,117,116,112,117,116,32,116,121,112,101,46,0,0,0,0,0,0,0,68,101,102,108,97,116,101,0,105,110,118,97,108,105,100,32,108,105,116,101,114,97,108,47,108,101,110,103,116,104,115,32,115,101,116,0,0,0,0,0,83,116,114,105,112,79,102,102,115,101,116,115,0,0,0,0,105,110,99,111,114,114,101,99,116,32,104,101,97,100,101,114,32,99,104,101,99,107,0,0,67,111,109,112,114,101,115,115,105,
111,110,0,0,0,0,0,84,97,114,103,101,116,80,114,105,110,116,101,114,0,0,0,68,111,116,82,97,110,103,101,0,0,0,0,0,0,0,0,115,116,114,105,112,0,0,0,78,117,109,98,101,114,79,102,73,110,107,115,0,0,0,0,70,97,105,108,101,100,32,116,111,32,97,108,108,111,99,97,116,101,32,109,101,109,111,114,121,32,102,111,114,32,37,115,32,40,37,108,100,32,101,108,101,109,101,110,116,115,32,111,102,32,37,108,100,32,98,121,116,101,115,32,101,97,99,104,41,0,0,0,0,0,0,0,73,110,107,78,97,109,101,115,0,0,0,0,0,0,0,0,37,115,0,0,
0,0,0,0,73,110,107,83,101,116,0,0]).concat([40,116,105,102,45,62,116,105,102,95,102,108,97,103,115,38,84,73,70,70,95,78,79,82,69,65,68,82,65,87,41,61,61,48,0,0,0,0,0,0,83,117,98,73,70,68,0,0,84,105,108,101,66,121,116,101,67,111,117,110,116,115,0,0,40,99,99,37,40,52,42,115,116,114,105,100,101,41,41,61,61,48,0,0,0,0,0,0,49,46,50,46,53,0,0,0,40,116,111,102,102,95,116,41,116,105,102,45,62,116,105,102,95,115,105,122,101,61,61,110,0,0,0,0,0,0,0,0,67,111,114,114,117,112,116,101,100,32,76,90,87,32,116,97,
98,108,101,32,97,116,32,115,99,97,110,108,105,110,101,32,37,100,0,0,0,0,0,0,84,105,108,101,79,102,102,115,101,116,115,0,0,0,0,0,89,44,32,76,0,0,0,0,37,115,58,32,73,110,118,97,108,105,100,32,37,115,116,97,103,32,34,37,115,34,32,40,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,99,111,100,101,99,41,0,83,111,114,114,121,44,32,76,111,103,76,117,118,32,100,97,116,97,32,109,117,115,116,32,104,97,118,101,32,37,115,61,37,100,32,111,114,32,37,100,0,0,0,0,0,0,0,0,84,105,108,101,76,101,110,
103,116,104,0,0,0,0,0,0,115,116,114,105,112,0,0,0,102,111,114,32,102,105,101,108,100,32,98,117,102,102,101,114,46,0,0,0,0,0,0,0,67,111,109,112,114,101,115,115,105,111,110,32,115,99,104,101,109,101,32,37,117,32,37,115,32,101,110,99,111,100,105,110,103,32,105,115,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,0,0,0,84,105,108,101,87,105,100,116,104,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,99,111,100,101,32,45,45,32,109,105,115,115,105,110,103,32,101,110,100,45,111,102,45,98,108,
111,99,107,0,0,0,0,84,105,108,101,79,102,102,115,101,116,115,0,0,0,0,0,72,97,108,102,116,111,110,101,72,105,110,116,115,0,0,0,67,111,108,111,114,77,97,112,0,0,0,0,0,0,0,0,80,114,105,109,97,114,121,67,104,114,111,109,97,116,105,99,105,116,105,101,115,0,0,0,73,83,79,32,74,66,73,71,0,0,0,0,0,0,0,0,87,104,105,116,101,80,111,105,110,116,0,0,0,0,0,0,49,46,50,46,53,0,0,0,72,111,115,116,67,111,109,112,117,116,101,114,0,0,0,0,116,105,102,95,114,101,97,100,46,99,0,0,0,0,0,0,65,114,116,105,115,116,0,0,68,97,
116,101,84,105,109,101,0,0,0,0,0,0,0,0,115,112,45,62,101,110,99,111,100,101,114,111,119,32,33,61,32,78,85,76,76,0,0,0,80,105,120,97,114,76,111,103,32,99,111,109,112,114,101,115,115,105,111,110,32,99,97,110,39,116,32,104,97,110,100,108,101,32,37,100,32,98,105,116,32,108,105,110,101,97,114,32,101,110,99,111,100,105,110,103,115,0,0,0,0,0,0,0,78,111,116,32,97,32,84,73,70,70,32,102,105,108,101,44,32,98,97,100,32,66,105,103,84,73,70,70,32,117,110,117,115,101,100,32,37,100,32,40,48,120,37,120,41,0,0,0,76,
90,87,68,101,99,111,100,101,58,32,67,111,114,114,117,112,116,101,100,32,76,90,87,32,116,97,98,108,101,32,97,116,32,115,99,97,110,108,105,110,101,32,37,100,0,0,0,83,111,102,116,119,97,114,101,0,0,0,0,0,0,0,0,83,71,73,76,111,103,32,99,111,109,112,114,101,115,115,105,111,110,32,115,117,112,112,111,114,116,101,100,32,111,110,108,121,32,102,111,114,32,37,115,44,32,111,114,32,114,97,119,32,100,97,116,97,0,0,0,95,84,73,70,70,86,71,101,116,70,105,101,108,100,0,0,67,111,109,112,114,101,115,115,105,111,110,
0,0,0,0,0,84,114,97,110,115,102,101,114,70,117,110,99,116,105,111,110,0,0,0,0,0,0,0,0,116,105,108,101,0,0,0,0,37,115,58,32,67,111,117,108,100,32,110,111,116,32,102,105,110,100,32,116,97,103,32,37,100,46,0,0,0,0,0,0,37,115,32,37,115,32,101,110,99,111,100,105,110,103,32,105,115,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,0,0,0,0,0,0,67,111,108,111,114,82,101,115,112,111,110,115,101,85,110,105,116,0,0,0,0,0,0,0,105,110,118,97,108,105,100,32,98,105,116,32,108,101,110,103,116,104,32,
114,101,112,101,97,116,0,0,0,0,0,0,0,115,116,114,105,112,115,0,0,80,97,103,101,78,117,109,98,101,114,0,0,0,0,0,0,82,101,115,111,108,117,116,105,111,110,85,110,105,116,0,0,71,114,97,121,82,101,115,112,111,110,115,101,67,117,114,118,101,0,0,0,0,0,0,0,67,67,73,84,84,32,71,114,111,117,112,32,52,0,0,0,73,110,116,101,103,101,114,32,111,118,101,114,102,108,111,119,32,105,110,32,37,115,0,0,114,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,7,0,0,0,15,0,0,0,31,0,0,0,63,0,0,0,127,0,0,0,255,0,0,0,0,0,0,0,0,1,2,3,4,5,
6,7,8,8,9,9,10,10,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,
25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,0,1,2,3,4,4,5,5,6,6,6,6,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,
13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,16,17,18,18,19,19,20,
20,20,20,21,21,21,21,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,
28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,115,119,97,98,72,111,114,65,99,99,51,50,0,0,0,0,115,119,97,98,72,111,114,65,99,99,49,54,0,0,0,0,112,117,116,115,112,97,110,0,104,111,114,68,105,102,102,56,0,0,0,0,0,0,0,0,104,111,114,68,105,102,102,51,50,0,0,0,0,0,0,0,104,111,114,68,105,102,102,49,54,0,0,0,0,0,
0,0,104,111,114,65,99,99,56,0,104,111,114,65,99,99,51,50,0,0,0,0,0,0,0,0,104,111,114,65,99,99,49,54,0,0,0,0,0,0,0,0,102,112,68,105,102,102,0,0,102,112,65,99,99,0,0,0,95,84,73,70,70,86,83,101,116,70,105,101,108,100,0,0,95,84,73,70,70,83,119,97,98,54,52,66,105,116,68,97,116,97,0,0,0,0,0,0,95,84,73,70,70,83,119,97,98,51,50,66,105,116,68,97,116,97,0,0,0,0,0,0,95,84,73,70,70,83,119,97,98,50,52,66,105,116,68,97,116,97,0,0,0,0,0,0,95,84,73,70,70,83,119,97,98,49,54,66,105,116,68,97,116,97,0,0,0,0,0,0,95,
84,73,70,70,70,97,120,51,102,105,108,108,114,117,110,115,0,0,0,0,0,0,0,90,73,80,83,101,116,117,112,69,110,99,111,100,101,0,0,90,73,80,83,101,116,117,112,68,101,99,111,100,101,0,0,90,73,80,80,114,101,69,110,99,111,100,101,0,0,0,0,90,73,80,80,114,101,68,101,99,111,100,101,0,0,0,0,90,73,80,69,110,99,111,100,101,0,0,0,0,0,0,0,90,73,80,68,101,99,111,100,101,0,0,0,0,0,0,0,90,73,80,67,108,101,97,110,117,112,0,0,0,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,83,117,98,
105,102,100,0,0,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,68,97,116,97,0,0,0,0,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,83,115,104,111,114,116,65,114,114,97,121,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,83,108,111,110,103,65,114,114,97,121,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,
101,100,83,108,111,110,103,56,65,114,114,97,121,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,83,104,111,114,116,65,114,114,97,121,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,82,97,116,105,111,110,97,108,0,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,76,111,110,103,65,114,114,97,121,0,0,0,84,73,70,70,87,114,105,116,101,
68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,76,111,110,103,56,65,114,114,97,121,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,73,102,100,65,114,114,97,121,0,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,73,102,100,56,65,114,114,97,121,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,70,108,111,97,
116,65,114,114,97,121,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,68,111,117,98,108,101,65,114,114,97,121,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,83,101,99,0,0,0,84,73,70,70,82,101,97,100,82,97,119,84,105,108,101,49,0,0,0,0,0,0,0,0,84,73,70,70,82,101,97,100,82,97,119,83,116,114,105,112,49,0,0,0,0,0,0,0,84,73,70,70,82,101,97,100,68,105,114,101,99,116,111,114,121,0,0,0,0,0,0,0,84,73,70,70,82,101,97,100,68,105,114,
69,110,116,114,121,79,117,116,112,117,116,69,114,114,0,0,0,0,0,0,0,84,73,70,70,82,101,97,100,68,105,114,69,110,116,114,121,68,97,116,97,0,0,0,0,84,73,70,70,82,101,97,100,68,105,114,69,110,116,114,121,65,114,114,97,121,0,0,0,84,73,70,70,82,101,97,100,66,117,102,102,101,114,83,101,116,117,112,0,0,0,0,0,84,73,70,70,80,114,101,100,105,99,116,111,114,73,110,105,116,0,0,0,0,0,0,0,84,73,70,70,80,114,101,100,105,99,116,111,114,67,108,101,97,110,117,112,0,0,0,0,84,73,70,70,73,110,105,116,90,73,80,0,0,0,0,
0,84,73,70,70,73,110,105,116,83,71,73,76,111,103,0,0,84,73,70,70,73,110,105,116,80,105,120,97,114,76,111,103,0,0,0,0,0,0,0,0,84,73,70,70,73,110,105,116,76,90,87,0,0,0,0,0,84,73,70,70,70,101,116,99,104,68,105,114,101,99,116,111,114,121,0,0,0,0,0,0,84,73,70,70,67,108,105,101,110,116,79,112,101,110,0,0,84,73,70,70,65,112,112,101,110,100,84,111,83,116,114,105,112,0,0,0,0,0,0,0,80,114,101,100,105,99,116,111,114,86,83,101,116,70,105,101,108,100,0,0,0,0,0,0,80,114,101,100,105,99,116,111,114,86,71,101,116,
70,105,101,108,100,0,0,0,0,0,0,80,114,101,100,105,99,116,111,114,69,110,99,111,100,101,84,105,108,101,0,0,0,0,0,80,114,101,100,105,99,116,111,114,69,110,99,111,100,101,82,111,119,0,0,0,0,0,0,80,114,101,100,105,99,116,111,114,68,101,99,111,100,101,84,105,108,101,0,0,0,0,0,80,114,101,100,105,99,116,111,114,68,101,99,111,100,101,82,111,119,0,0,0,0,0,0,80,105,120,97,114,76,111,103,83,101,116,117,112,69,110,99,111,100,101,0,0,0,0,0,80,105,120,97,114,76,111,103,83,101,116,117,112,68,101,99,111,100,101,
0,0,0,0,0,80,105,120,97,114,76,111,103,80,114,101,69,110,99,111,100,101,0,0,0,0,0,0,0,80,105,120,97,114,76,111,103,80,114,101,68,101,99,111,100,101,0,0,0,0,0,0,0,80,105,120,97,114,76,111,103,68,101,99,111,100,101,0,0,80,105,120,97,114,76,111,103,67,108,101,97,110,117,112,0,76,111,103,76,117,118,73,110,105,116,83,116,97,116,101,0,76,111,103,76,117,118,69,110,99,111,100,101,84,105,108,101,0,0,0,0,0,0,0,0,76,111,103,76,117,118,69,110,99,111,100,101,83,116,114,105,112,0,0,0,0,0,0,0,76,111,103,76,117,
118,69,110,99,111,100,101,51,50,0,0,76,111,103,76,117,118,69,110,99,111,100,101,50,52,0,0,76,111,103,76,117,118,68,101,99,111,100,101,84,105,108,101,0,0,0,0,0,0,0,0,76,111,103,76,117,118,68,101,99,111,100,101,83,116,114,105,112,0,0,0,0,0,0,0,76,111,103,76,117,118,68,101,99,111,100,101,51,50,0,0,76,111,103,76,117,118,68,101,99,111,100,101,50,52,0,0,76,111,103,76,117,118,67,108,101,97,110,117,112,0,0,0,76,111,103,76,49,54,73,110,105,116,83,116,97,116,101,0,76,111,103,76,49,54,69,110,99,111,100,101,
0,0,0,0,76,111,103,76,49,54,68,101,99,111,100,101,0,0,0,0,76,90,87,83,101,116,117,112,69,110,99,111,100,101,0,0,76,90,87,83,101,116,117,112,68,101,99,111,100,101,0,0,76,90,87,80,114,101,69,110,99,111,100,101,0,0,0,0,76,90,87,80,114,101,68,101,99,111,100,101,0,0,0,0,76,90,87,69,110,99,111,100,101,0,0,0,0,0,0,0,76,90,87,68,101,99,111,100,101,67,111,109,112,97,116,0,76,90,87,68,101,99,111,100,101,0,0,0,0,0,0,0,76,90,87,67,108,101,97,110,117,112,0,0,0,0,0,0,70,97,120,51,86,83,101,116,70,105,101,108,100,
0,0,0,70,97,120,51,86,71,101,116,70,105,101,108,100,0,0,0,70,97,120,51,80,117,116,69,79,76,0,0,0,0,0,0,70,97,120,51,80,117,116,66,105,116,115,0,0,0,0,0,70,97,120,51,80,114,105,110,116,68,105,114,0,0,0,0,70,97,120,51,80,114,101,69,110,99,111,100,101,0,0,0,70,97,120,51,80,114,101,68,101,99,111,100,101,0,0,0,70,97,120,51,67,108,101,97,110,117,112,0,0,0,0,0,68,117,109,112,77,111,100,101,69,110,99,111,100,101,0,0,67,104,111,112,85,112,83,105,110,103,108,101,85,110,99,111,109,112,114,101,115,115,101,100,
83,116,114,105,112,0,0,0,66,117,105,108,100,77,97,112,85,97,84,111,65,97,0,0,66,117,105,108,100,77,97,112,66,105,116,100,101,112,116,104,49,54,84,111,56,0,0,0,238,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,95,84,73,70,70,86,83,101,116,70,105,101,108,100,0,0,84,73,70,70,82,101,115,101,116,70,105,101,108,100,0,0,102,111,114,32,102,105,101,108,100,115,32,97,114,114,97,121,0,0,0,0,0,0,0,0,95,84,73,70,70,77,101,114,103,101,70,105,101,108,100,115,0,0,0,0,0,0,0,0,0,128,192,224,240,248,252,254,255,0,0,0,0,0,0,0,192,
114,0,0,1,0,0,0,94,1,0,0,88,151,0,0,5,0,0,0,36,1,0,0,72,126,0,0,5,128,0,0,124,0,0,0,248,116,0,0,41,128,0,0,178,0,0,0,184,109,0,0,254,127,0,0,66,1,0,0,104,108,0,0,7,0,0,0,144,0,0,0,0,104,0,0,6,0,0,0,144,0,0,0,200,99,0,0,2,0,0,0,164,0,0,0,8,95,0,0,3,128,0,0,70,1,0,0,128,91,0,0,3,0,0,0,250,0,0,0,112,164,0,0,4,0,0,0,254,0,0,0,16,162,0,0,101,135,0,0,144,0,0,0,8,159,0,0,178,128,0,0,48,1,0,0,248,156,0,0,8,0,0,0,48,1,0,0,176,154,0,0,141,128,0,0,234,0,0,0,40,148,0,0,116,135,0,0,26,0,0,0,0,148,0,0,117,135,
0,0,26,0,0,0,112,145,0,0,109,136,0,0,144,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,90,73,80,86,83,101,116,70,105,101,108,100,0,0,0,0,90,73,80,83,101,116,117,112,69,110,99,111,100,101,0,0,90,73,80,83,101,116,117,112,68,101,99,111,100,101,0,0,90,73,80,80,114,101,69,110,99,111,100,101,0,0,0,0,90,73,80,80,114,101,68,101,99,111,100,101,0,0,0,0,90,73,80,80,111,115,116,69,110,99,111,100,101,0,0,0,90,73,80,69,110,99,111,100,101,0,0,0,0,0,0,0,90,73,80,68,101,99,111,100,101,0,0,0,0,0,0,0,84,104,117,110,100,101,
114,83,101,116,117,112,68,101,99,111,100,101,0,0,0,0,0,0,84,104,117,110,100,101,114,68,101,99,111,100,101,0,0,0,84,104,117,110,100,101,114,68,101,99,111,100,101,82,111,119,0,0,0,0,0,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,84,114,97,110,115,102,101,114,102,117,110,99,116,105,111,110,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,83,117,98,105,102,100,0,0,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,
84,97,103,83,104,111,114,116,80,101,114,83,97,109,112,108,101,0,0,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,83,97,109,112,108,101,102,111,114,109,97,116,65,114,114,97,121,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,76,111,110,103,76,111,110,103,56,65,114,114,97,121,0,0,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,73,102,100,73,102,100,56,65,114,114,97,121,0,0,0,0,0,0,0,84,73,70,70,87,114,
105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,68,97,116,97,0,0,0,0,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,111,108,111,114,109,97,112,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,83,114,97,116,105,111,110,97,108,65,114,114,97,121,0,0,0,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,84,97,103,67,104,101,99,107,101,100,82,97,116,105,111,110,97,108,65,114,114,97,
121,0,0,0,0,0,0,0,84,73,70,70,87,114,105,116,101,68,105,114,101,99,116,111,114,121,83,101,99,0,0,0,84,73,70,70,86,84,105,108,101,83,105,122,101,54,52,0,84,73,70,70,86,83,116,114,105,112,83,105,122,101,0,0,84,73,70,70,86,83,116,114,105,112,83,105,122,101,54,52,0,0,0,0,0,0,0,0,135,22,153,62,162,69,22,63,213,120,233,61,0,0,0,0,84,73,70,70,84,105,108,101,83,105,122,101,0,0,0,0,84,73,70,70,84,105,108,101,82,111,119,83,105,122,101,0,84,73,70,70,83,116,114,105,112,83,105,122,101,0,0,0,84,73,70,70,83,99,
97,110,108,105,110,101,83,105,122,101,0,0,0,0,0,0,0,0,84,73,70,70,83,99,97,110,108,105,110,101,83,105,122,101,54,52,0,0,0,0,0,0,84,73,70,70,82,101,119,114,105,116,101,68,105,114,101,99,116,111,114,121,0,0,0,0,84,73,70,70,82,101,97,100,69,110,99,111,100,101,100,84,105,108,101,0,0,0,0,0,84,73,70,70,82,101,97,100,69,110,99,111,100,101,100,83,116,114,105,112,0,0,0,0,84,73,70,70,82,101,97,100,68,105,114,101,99,116,111,114,121,0,0,0,0,0,0,0,84,73,70,70,82,101,97,100,68,105,114,101,99,116,111,114,121,67,
104,101,99,107,79,114,100,101,114,0,0,0,0,0,84,73,70,70,82,101,97,100,66,117,102,102,101,114,83,101,116,117,112,0,0,0,0,0,84,73,70,70,79,112,101,110,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,
112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,
238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,84,73,70,70,76,105,110,107,68,105,114,101,99,116,111,114,121,0,0,0,0,0,0,0,84,73,70,70,73,110,105,116,90,73,80,0,0,0,0,0,84,73,70,70,73,110,105,116,83,71,73,76,111,103,0,0,84,73,70,70,73,110,105,116,80,105,120,97,114,76,111,103,0,0,0,0,0,0,0,0,84,73,70,70,73,110,105,116,76,90,87,0,0,0,0,0,84,73,70,70,70,105,108,108,84,105,108,101,0,0,0,0,84,73,70,70,70,105,108,108,83,116,114,105,112,0,0,0,84,73,70,70,70,101,116,99,104,83,116,
114,105,112,84,104,105,110,103,0,0,0,0,0,84,73,70,70,70,101,116,99,104,78,111,114,109,97,108,84,97,103,0,0,0,0,0,0,84,73,70,70,70,101,116,99,104,68,105,114,101,99,116,111,114,121,0,0,0,0,0,0,12,11,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,
0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,
0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,5,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,192,4,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,
0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,192,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,192,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,
0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,11,0,0,0,7,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,
7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,
0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,64,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,64,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,
0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,
0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,
6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,
0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,0,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,0,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,
29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,0,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,
0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,0,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,
0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,11,0,0,64,7,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,
0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,128,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,
5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,4,0,0,7,
4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,
0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,
5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0]).concat([7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,
7,4,0,0,3,0,0,0,9,9,0,0,192,5,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,192,4,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,
7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,192,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,192,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,
7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,12,0,0,64,8,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,
6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,
128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,64,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,64,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,
0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,
9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,
0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,
0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,0,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,0,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,
0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,0,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,
0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,0,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,
4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,12,0,0,64,9,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,
5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,128,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,
0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,4,0,0,7,4,0,
0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,
17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,
0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,
0,9,9,0,0,192,5,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,192,4,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,
0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,192,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,192,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,
0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,12,0,0,192,7,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,
0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,
0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,64,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,64,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,
0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,
0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,
7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,
4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,0,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,0,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,
0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,0,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,
0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,0,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,
0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,11,0,0,128,7,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,
0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,128,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,
6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,4,0,0,7,4,0,0,6,0,0,0,7,
8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,
0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,
0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,5,
0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,192,4,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,
0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,192,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,192,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,
7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,12,0,0,192,8,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,
7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,
0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,64,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,64,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,
0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,
0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,
6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0]).concat([7,4,0,0,5,
0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,0,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,0,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,
0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,0,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,
7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,0,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,
0,2,0,0,0,7,4,0,0,7,0,0,0,11,12,0,0,192,9,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,
0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,128,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,
0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,
0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,
0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,12,11,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,
7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,5,0,0,7,
4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,192,4,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,
0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,192,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,192,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,
0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,11,0,0,0,7,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,
4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,
0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,64,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,64,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,
7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,
0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,
128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,
0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,0,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,0,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,
0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,0,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,
4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,0,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,
7,0,0,0,11,11,0,0,64,7,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,
0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,128,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,
0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,
0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,
0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,
8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,5,0,0,7,4,0,0,5,0,0,0,7,8,
0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,192,4,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,
0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,192,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,192,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,
13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,12,0,0,128,8,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,
2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,
0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,64,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,64,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,
7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,
0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,
6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,
0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,0,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,0,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,
7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,0,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,
0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,0,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,12,0,0,
128,9,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,
2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,128,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,
0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,
0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,
7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,
4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0]).concat([7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,5,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,
0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,192,4,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,
0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,192,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,192,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,
0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,12,0,0,0,8,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,
7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,
0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,64,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,64,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,
14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,
0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,
7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,
0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,0,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,0,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,
12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,0,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,
0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,0,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,11,0,0,128,7,
0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,
0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,128,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,
7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,
5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,
0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,
6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,5,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,
0,0,0,9,9,0,0,192,4,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,
0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,192,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,192,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,
0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,12,0,0,0,9,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,
7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,
0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,64,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,64,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,
0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,64,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,
0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,0,0,0,0,0,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,
9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,39,0,0,0,7,6,0,0,16,0,0,0,9,8,0,0,64,2,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,55,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,45,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,53,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,192,1,0,0,7,
4,0,0,6,0,0,0,7,8,0,0,35,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,51,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,63,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,0,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,43,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,0,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,29,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,
9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,33,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,49,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,61,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,47,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,59,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,41,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,0,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,31,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,57,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,
0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,9,0,0,0,3,0,0,7,4,0,0,6,0,0,0,7,8,0,0,37,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,64,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,11,12,0,0,0,10,0,0,7,4,0,0,3,0,0,0,
7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,7,0,0,20,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,24,0,0,0,7,6,0,0,14,0,0,0,7,7,0,0,28,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,23,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,27,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,40,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,3,0,0,7,4,0,0,6,0,0,0,7,7,0,0,19,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,56,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,
8,0,0,46,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,54,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,0,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,36,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,52,0,0,0,7,6,0,0,15,0,0,0,7,8,0,0,0,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,9,9,0,0,192,6,0,0,7,4,0,0,5,0,0,0,7,8,0,0,44,0,0,0,7,6,0,0,17,0,0,0,9,9,0,0,128,5,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,
0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,30,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,6,0,0,12,0,0,0,7,5,0,0,9,0,0,0,9,6,0,0,128,6,0,0,7,4,0,0,6,0,0,0,7,8,0,0,34,0,0,0,9,5,0,0,128,0,0,0,7,8,0,0,50,0,0,0,7,6,0,0,14,0,0,0,7,8,0,0,62,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,8,0,0,48,0,0,0,7,4,0,0,3,0,0,0,7,8,0,0,60,0,0,0,7,4,0,0,5,0,0,0,7,8,0,0,42,0,0,0,7,6,0,0,16,0,0,0,9,9,0,0,128,4,0,0,7,4,0,0,6,0,0,0,7,8,0,0,32,0,0,0,7,5,0,0,8,0,0,0,7,8,0,0,58,0,0,0,9,5,0,0,64,0,0,0,7,5,0,
0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,7,0,0,22,0,0,0,7,4,0,0,3,0,0,0,7,5,0,0,11,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,26,0,0,0,7,5,0,0,9,0,0,0,9,8,0,0,128,2,0,0,7,4,0,0,6,0,0,0,7,8,0,0,38,0,0,0,9,5,0,0,128,0,0,0,7,7,0,0,25,0,0,0,7,6,0,0,15,0,0,0,9,8,0,0,128,1,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,7,6,0,0,13,0,0,0,7,4,0,0,3,0,0,0,7,7,0,0,18,0,0,0,7,4,0,0,5,0,0,0,7,7,0,0,21,0,0,0,7,6,0,0,17,0,0,0,9,7,0,0,0,1,0,0,7,4,0,0,6,0,0,0,7,6,0,0,1,0,0,0,7,5,0,0,8,0,0,0,9,6,0,0,192,
0,0,0,9,5,0,0,64,0,0,0,7,5,0,0,10,0,0,0,7,4,0,0,4,0,0,0,7,4,0,0,2,0,0,0,7,4,0,0,7,0,0,0,8,0,53,0,0,0,6,0,7,0,1,0,4,0,7,0,2,0,4,0,8,0,3,0,4,0,11,0,4,0,4,0,12,0,5,0,4,0,14,0,6,0,4,0,15,0,7,0,5,0,19,0,8,0,5,0,20,0,9,0,5,0,7,0,10,0,5,0,8,0,11,0,6,0,8,0,12,0,6,0,3,0,13,0,6,0,52,0,14,0,6,0,53,0,15,0,6,0,42,0,16,0,6,0,43,0,17,0,7,0,39,0,18,0,7,0,12,0,19,0,7,0,8,0,20,0,7,0,23,0,21,0,7,0,3,0,22,0,7,0,4,0,23,0,7,0,40,0,24,0,7,0,43,0,25,0,7,0,19,0,26,0,7,0,36,0,27,0,7,0,24,0,28,0,8,0,2,0,29,0,8,0,3,0,30,0,8,
0,26,0,31,0,8,0,27,0,32,0,8,0,18,0,33,0,8,0,19,0,34,0,8,0,20,0,35,0,8,0,21,0,36,0,8,0,22,0,37,0,8,0,23,0,38,0,8,0,40,0,39,0,8,0,41,0,40,0,8,0,42,0,41,0,8,0,43,0,42,0,8,0,44,0,43,0,8,0,45,0,44,0,8,0,4,0,45,0,8,0,5,0,46,0,8,0,10,0,47,0,8,0,11,0,48,0,8,0,82,0,49,0,8,0,83,0,50,0,8,0,84,0,51,0,8,0,85,0,52,0,8,0,36,0,53,0,8,0,37,0,54,0,8,0,88,0,55,0,8,0,89,0,56,0,8,0,90,0,57,0,8,0,91,0,58,0,8,0,74,0,59,0,8,0,75,0,60,0,8,0,50,0,61,0,8,0,51,0,62,0,8,0,52,0,63,0,5,0,27,0,64,0,5,0,18,0,128,0,6,0,23,0,192,0,
7,0,55,0,0,1,8,0,54,0,64,1,8,0,55,0,128,1,8,0,100,0,192,1,8,0,101,0,0,2,8,0,104,0,64,2,8,0,103,0,128,2,9,0,204,0,192,2,9,0,205,0,0,3,9,0,210,0,64,3,9,0,211,0,128,3,9,0,212,0,192,3,9,0,213,0,0,4,9,0,214,0,64,4,9,0,215,0,128,4,9,0,216,0,192,4,9,0,217,0,0,5,9,0,218,0,64,5,9,0,219,0,128,5,9,0,152,0,192,5,9,0,153,0,0,6,9,0,154,0,64,6,6,0,24,0,128,6,9,0,155,0,192,6,11,0,8,0,0,7,11,0,12,0,64,7,11,0,13,0,128,7,12,0,18,0,192,7,12,0,19,0,0,8,12,0,20,0,64,8,12,0,21,0,128,8,12,0,22,0,192,8,12,0,23,0,0,9,12,0,
28,0,64,9,12,0,29,0,128,9,12,0,30,0,192,9,12,0,31,0,0,10,12,0,1,0,255,255,9,0,1,0,254,255,10,0,1,0,254,255,11,0,1,0,254,255,12,0,0,0,254,255,0,0,12,7,0,0,0,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,1,4,0,0,0,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,5,6,0,0,2,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,
0,0,1,0,0,0,3,1,0,0,0,0,0,0,1,4,0,0,0,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,5,7,0,0,3,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,1,4,0,0,0,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,4,6,0,0,2,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,
0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,1,4,0,0,0,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,6,7,0,0,0,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,1,4,0,0,0,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,5,6,0,0,2,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,
3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,1,4,0,0,0,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,4,7,0,0,3,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,1,4,0,0,0,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,4,6,0,0,2,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,
0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,1,4,0,0,0,0,0,0,3,1,0,0,0,0,0,0,5,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,2,3,0,0,0,0,0,0,3,1,0,0,0,0,0,0,4,3,0,0,1,0,0,0,3,1,0,0,0,0,0,0,12,11,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,
2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,
0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,18,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0]).concat([8,2,
0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,17,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,
12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,11,0,0,0,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,
0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,23,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,
0,0,8,2,0,0,2,0,0,0,8,11,0,0,20,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,25,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,
0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,
2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,
0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,
0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,128,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,56,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,
0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,30,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,
0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,11,0,0,64,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,
0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,57,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,
8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,21,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,54,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,
2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,
0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,
0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,
0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,52,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,
8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,48,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,
2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,64,8,0,0,8,2,0,0,3,0,0,0,8,3,
0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,44,0,0,0,8,2,0,
0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,36,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,
128,1,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,
0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,
0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,
3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,28,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,
0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,60,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,
0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,40,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,
2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,64,9,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,
0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,16,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,
0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,10,0,0,64,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,
0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,
5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,
0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,
0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,18,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,
0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,17,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,
0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,192,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,
0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,50,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,34,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,
8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,128,6,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,
8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,
0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,
0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,
0,8,12,0,0,26,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,128,5,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,
0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0]).concat([8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,32,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,
0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,11,0,0,128,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,
0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,61,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,
2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,42,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,0,4,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,
0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,
0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,
2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,
0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,0,3,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,
2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,62,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,
0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,192,8,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,
0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,46,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,
0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,38,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,0,2,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,
0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,
2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,
0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,
0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,19,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,24,0,
0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,
8,11,0,0,22,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,
2,0,0,2,0,0,0,11,12,0,0,192,9,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,
3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,16,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,
0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,10,0,0,64,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,
0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,
0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,12,11,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,
0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,
8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,18,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,
2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,17,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,
0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,11,0,0,0,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,
0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,23,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,20,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,
4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,25,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,
0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,
0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,
4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,192,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,
2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,0,5,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,
0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,31,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,
0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,11,0,0,64,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,
10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,58,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,
0,0,0,8,11,0,0,21,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,128,3,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,
0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,
0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,
2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,
0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,128,2,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,
0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0]).concat([8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,49,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,
0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,128,8,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,
0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,45,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,
8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,37,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,192,1,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,
8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,
0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,
3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,
0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,29,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,0,6,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,
0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,41,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,
8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,128,9,0,0,8,2,0,0,3,0,0,0,
8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,16,0,0,0,8,
2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,10,
0,0,64,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,
2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,
0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,
8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,
0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,18,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,
0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,17,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,
2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,0,8,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,
0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,51,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,35,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,
0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,64,1,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,
0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,
5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,
0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,27,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,
4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,59,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,
0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,33,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,
0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,11,0,0,128,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,
0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,0,1,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,43,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,
0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,128,4,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,
0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,
2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,
10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,
0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,55,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,
0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,63,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,
8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,0,9,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,
2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,47,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,
0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,39,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,53,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,
0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,
0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,
0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,
2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,19,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,24,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,
0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0]).concat([8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,22,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,
0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,0,10,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,
0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,16,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,
8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,10,0,0,64,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,
4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,
0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,12,11,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,
1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,
0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,18,0,0,
0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,
10,0,0,17,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,
0,0,2,0,0,0,11,11,0,0,0,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,
0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,23,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,20,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,
3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,25,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,
0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,
0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,
2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,128,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,
3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,56,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,
0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,30,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,
0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,11,0,0,64,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,
2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,57,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,21,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,
0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,54,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,
0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,
8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,
0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,
2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,52,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,
0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,48,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,
0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,64,8,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,
0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,44,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,
12,0,0,36,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,128,1,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,
2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,
0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,
0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,
0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,28,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,60,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,
8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,40,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,
2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,64,9,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,
0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,16,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,
0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,10,0,0,64,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,
9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,
0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,
8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,
0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,18,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,
0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0]).concat([8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,17,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,
0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,192,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,
0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,50,0,0,0,8,2,0,0,3,0,0,0,
8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,34,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,192,6,0,0,
8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,
0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,
2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,
0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,26,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,
0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,192,5,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,
0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,32,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,
8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,11,0,0,128,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,
8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,61,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,42,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,
3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,64,4,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,
0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,
7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,
0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,
8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,64,3,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,
3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,62,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,
0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,192,8,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,
0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,46,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,38,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,
0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,64,2,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,
1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,
0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,
8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,
0,0,19,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,24,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,
0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,22,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,
4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,192,9,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,
3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,16,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,
0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,10,0,0,64,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,
0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,
8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,12,11,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,
3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,
0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,18,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,
9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,17,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,
0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,11,0,0,0,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,
0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,23,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,
0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,20,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,25,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,
8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,
0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,
2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,
0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,192,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,64,5,0,0,8,2,0,0,3,
0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0]).concat([8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,
0,0,31,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,
2,0,0,0,11,11,0,0,64,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,
0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,58,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,21,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,
0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,192,3,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,
0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,
8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,
0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,
1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,192,2,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,
3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,49,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,
0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,128,8,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,
0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,45,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,37,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,
0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,192,1,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,
0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,
8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,
0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,29,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,
0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,64,6,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,
1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,41,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,
0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,128,9,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,
0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,16,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,
0,8,10,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,10,0,0,64,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,
8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,
0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,
3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,
0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,18,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,
0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,17,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,
8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,0,8,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,
3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,51,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,
0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,35,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,64,1,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,
0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,
2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,
0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,
8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,27,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,59,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,
2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,33,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,
0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,11,0,0,128,7,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,
0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,12,0,0,0,1,0,0,8,2,0,0,3,0,0,0,8,3,0,
0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,43,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,13,0,0,192,4,0,0,8,2,0,
0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,
0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,
0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,
2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,9,0,0,15,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,
0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,55,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0]).concat([8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,
0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,63,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,
8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,0,9,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,
2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,47,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,39,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,
0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,12,0,0,53,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,
0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,
0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,
0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,13,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,19,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,
8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,24,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,
3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,11,0,0,22,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,
0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,11,12,0,0,0,10,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,10,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,
0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,16,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,10,0,0,0,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,
2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,10,0,0,64,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,9,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,11,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,
0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,8,0,0,14,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,6,0,0,8,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,7,0,0,12,0,0,0,8,2,0,0,3,0,0,
0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,6,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,8,5,0,0,7,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,1,0,0,0,8,2,0,0,2,0,0,0,8,4,0,0,5,0,0,0,8,2,0,0,3,0,0,0,8,3,0,0,4,0,0,0,8,2,0,0,2,0,0,0,10,0,55,0,0,0,3,0,2,0,1,0,2,0,3,0,2,0,2,0,2,0,3,0,3,0,3,0,4,0,4,0,3,0,5,0,4,0,2,0,6,0,5,0,3,0,7,0,6,0,5,0,8,0,6,0,4,0,9,0,7,0,4,0,10,0,7,0,5,0,11,0,7,0,7,0,12,0,8,0,4,0,13,0,8,0,7,0,14,0,9,0,24,0,15,0,10,0,23,0,16,0,10,0,24,0,17,0,10,0,8,0,18,0,11,0,103,0,19,0,11,0,104,0,20,
0,11,0,108,0,21,0,11,0,55,0,22,0,11,0,40,0,23,0,11,0,23,0,24,0,11,0,24,0,25,0,12,0,202,0,26,0,12,0,203,0,27,0,12,0,204,0,28,0,12,0,205,0,29,0,12,0,104,0,30,0,12,0,105,0,31,0,12,0,106,0,32,0,12,0,107,0,33,0,12,0,210,0,34,0,12,0,211,0,35,0,12,0,212,0,36,0,12,0,213,0,37,0,12,0,214,0,38,0,12,0,215,0,39,0,12,0,108,0,40,0,12,0,109,0,41,0,12,0,218,0,42,0,12,0,219,0,43,0,12,0,84,0,44,0,12,0,85,0,45,0,12,0,86,0,46,0,12,0,87,0,47,0,12,0,100,0,48,0,12,0,101,0,49,0,12,0,82,0,50,0,12,0,83,0,51,0,12,0,36,0,52,
0,12,0,55,0,53,0,12,0,56,0,54,0,12,0,39,0,55,0,12,0,40,0,56,0,12,0,88,0,57,0,12,0,89,0,58,0,12,0,43,0,59,0,12,0,44,0,60,0,12,0,90,0,61,0,12,0,102,0,62,0,12,0,103,0,63,0,10,0,15,0,64,0,12,0,200,0,128,0,12,0,201,0,192,0,12,0,91,0,0,1,12,0,51,0,64,1,12,0,52,0,128,1,12,0,53,0,192,1,13,0,108,0,0,2,13,0,109,0,64,2,13,0,74,0,128,2,13,0,75,0,192,2,13,0,76,0,0,3,13,0,77,0,64,3,13,0,114,0,128,3,13,0,115,0,192,3,13,0,116,0,0,4,13,0,117,0,64,4,13,0,118,0,128,4,13,0,119,0,192,4,13,0,82,0,0,5,13,0,83,0,64,5,13,
0,84,0,128,5,13,0,85,0,192,5,13,0,90,0,0,6,13,0,91,0,64,6,13,0,100,0,128,6,13,0,101,0,192,6,11,0,8,0,0,7,11,0,12,0,64,7,11,0,13,0,128,7,12,0,18,0,192,7,12,0,19,0,0,8,12,0,20,0,64,8,12,0,21,0,128,8,12,0,22,0,192,8,12,0,23,0,0,9,12,0,28,0,64,9,12,0,29,0,128,9,12,0,30,0,192,9,12,0,31,0,0,10,12,0,1,0,255,255,9,0,1,0,254,255,10,0,1,0,254,255,11,0,1,0,254,255,12,0,0,0,254,255,0,0,84,73,70,70,67,111,109,112,117,116,101,83,116,114,105,112,0,0,0,0,0,0,0,0,84,73,70,70,67,108,105,101,110,116,79,112,101,110,
0,0,0,128,64,192,32,160,96,224,16,144,80,208,48,176,112,240,8,136,72,200,40,168,104,232,24,152,88,216,56,184,120,248,4,132,68,196,36,164,100,228,20,148,84,212,52,180,116,244,12,140,76,204,44,172,108,236,28,156,92,220,60,188,124,252,2,130,66,194,34,162,98,226,18,146,82,210,50,178,114,242,10,138,74,202,42,170,106,234,26,154,90,218,58,186,122,250,6,134,70,198,38,166,102,230,22,150,86,214,54,182,118,246,14,142,78,206,46,174,110,238,30,158,94,222,62,190,126,254,1,129,65,193,33,161,97,225,17,145,81,209,
49,177,113,241,9,137,73,201,41,169,105,233,25,153,89,217,57,185,121,249,5,133,69,197,37,165,101,229,21,149,85,213,53,181,117,245,13,141,77,205,45,173,109,237,29,157,93,221,61,189,125,253,3,131,67,195,35,163,99,227,19,147,83,211,51,179,115,243,11,139,75,203,43,171,107,235,27,155,91,219,59,187,123,251,7,135,71,199,39,167,103,231,23,151,87,215,55,183,119,247,15,143,79,207,47,175,111,239,31,159,95,223,63,191,127,255,84,73,70,70,65,112,112,101,110,100,84,111,83,116,114,105,112,0,0,0,0,0,0,0,80,114,101,
100,105,99,116,111,114,83,101,116,117,112,0,0,80,114,101,100,105,99,116,111,114,69,110,99,111,100,101,84,105,108,101,0,0,0,0,0,80,105,120,97,114,76,111,103,86,83,101,116,70,105,101,108,100,0,0,0,0,0,0,0,80,105,120,97,114,76,111,103,83,101,116,117,112,69,110,99,111,100,101,0,0,0,0,0,80,105,120,97,114,76,111,103,83,101,116,117,112,68,101,99,111,100,101,0,0,0,0,0,80,105,120,97,114,76,111,103,80,114,101,69,110,99,111,100,101,0,0,0,0,0,0,0,80,105,120,97,114,76,111,103,80,114,101,68,101,99,111,100,101,
0,0,0,0,0,0,0,80,105,120,97,114,76,111,103,80,111,115,116,69,110,99,111,100,101,0,0,0,0,0,0,80,105,120,97,114,76,111,103,69,110,99,111,100,101,0,0,80,105,120,97,114,76,111,103,68,101,99,111,100,101,0,0,80,97,99,107,66,105,116,115,68,101,99,111,100,101,0,0,78,101,88,84,68,101,99,111,100,101,0,0,0,0,0,0,77,105,115,115,105,110,103,82,101,113,117,105,114,101,100,0,76,111,103,76,117,118,86,83,101,116,70,105,101,108,100,0,76,111,103,76,117,118,83,101,116,117,112,69,110,99,111,100,101,0,0,0,0,0,0,0,76,111,
103,76,117,118,83,101,116,117,112,68,101,99,111,100,101,0,0,0,0,0,0,0,76,111,103,76,117,118,73,110,105,116,83,116,97,116,101,0,24,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,1,0,88,130,0,0,0,0,0,0,25,0,1,0,0,0,0,0,3,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,0,1,0,184,128,0,0,0,0,0,0,76,111,103,76,117,118,68,101,99,111,100,101,51,50,0,0,76,111,103,76,117,118,68,101,99,111,100,101,50,52,0,0,76,111,103,76,49,54,73,110,105,116,83,116,97,116,101,0,76,111,103,76,49,54,68,101,99,111,100,101,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,76,90,87,83,101,116,117,112,69,110,99,111,100,101,0,0,76,90,87,83,101,116,117,112,68,101,99,111,100,101,0,0,76,90,87,80,114,101,68,101,99,111,100,101,0,0,0,0,76,90,87,68,101,99,111,100,101,0,0,0,0,0,0,0,76,90,87,68,101,99,111,100,101,67,111,109,112,97,116,0,73,110,105,116,67,67,73,84,84,70,97,120,51,0,0,0,0,0,0,0,0,0,0,0,70,97,120,52,69,110,99,111,100,101,0,0,0,0,0,0,70,97,120,52,68,101,99,111,100,101,0,0,0,0,0,0,70,97,120,51,83,101,116,117,112,83,116,97,116,101,0,0,70,97,
120,51,69,110,99,111,100,101,0,0,0,0,0,0,70,97,120,51,68,101,99,111,100,101,82,76,69,0,0,0,70,97,120,51,68,101,99,111,100,101,50,68,0,0,0,0,70,97,120,51,68,101,99,111,100,101,49,68,0,0,0,0,69,115,116,105,109,97,116,101,83,116,114,105,112,66,121,116,101,67,111,117,110,116,115,0,68,117,109,112,77,111,100,101,68,101,99,111,100,101,0,0,66,117,105,108,100,77,97,112,85,97,84,111,65,97,0,0,66,117,105,108,100,77,97,112,66,105,116,100,101,112,116,104,49,54,84,111,56,0,0,0]),"i8",ALLOC_NONE,Runtime.GLOBAL_BASE);
function runPostSets(){}var tempDoublePtr=Runtime.alignMemory(allocate(12,"i8",ALLOC_STATIC),8);assert(0==tempDoublePtr%8);function copyTempFloat(m){HEAP8[tempDoublePtr]=HEAP8[m];HEAP8[tempDoublePtr+1]=HEAP8[m+1];HEAP8[tempDoublePtr+2]=HEAP8[m+2];HEAP8[tempDoublePtr+3]=HEAP8[m+3]}
function copyTempDouble(m){HEAP8[tempDoublePtr]=HEAP8[m];HEAP8[tempDoublePtr+1]=HEAP8[m+1];HEAP8[tempDoublePtr+2]=HEAP8[m+2];HEAP8[tempDoublePtr+3]=HEAP8[m+3];HEAP8[tempDoublePtr+4]=HEAP8[m+4];HEAP8[tempDoublePtr+5]=HEAP8[m+5];HEAP8[tempDoublePtr+6]=HEAP8[m+6];HEAP8[tempDoublePtr+7]=HEAP8[m+7]}var _llvm_va_start=void 0;function _llvm_va_end(){}var _floor=Math.floor,_llvm_pow_f64=Math.pow;
function _strncmp(m,d,c){for(var a=0;a<c;){var b=HEAPU8[m+a|0],e=HEAPU8[d+a|0];if(b==e&&0==b)break;if(0==b)return-1;if(0==e)return 1;if(b==e)a++;else return b>e?1:-1}return 0}function _strlen(m){m|=0;for(var d=0,d=m;HEAP8[d];)d=d+1|0;return d-m|0}function __reallyNegative(m){return 0>m||0===m&&-Infinity===1/m}
function __formatString(m,d){function c(a){var c;"double"===a?c=HEAPF64[d+b>>3]:"i64"==a?(c=[HEAP32[d+b>>2],HEAP32[d+(b+8)>>2]],b+=8):(a="i32",c=HEAP32[d+b>>2]);b+=Math.max(Runtime.getNativeFieldSize(a),Runtime.getAlignSize(a,null,!0));return c}for(var a=m,b=0,e=[],g,f;;){var k=a;g=HEAP8[a];if(0===g)break;f=HEAP8[a+1|0];if(37==g){var h=!1,l=!1,n=!1,p=!1;a:for(;;){switch(f){case 43:h=!0;break;case 45:l=!0;break;case 35:n=!0;break;case 48:if(p)break a;else{p=!0;break}default:break a}a++;f=HEAP8[a+1|
0]}var q=0;if(42==f)q=c("i32"),a++,f=HEAP8[a+1|0];else for(;48<=f&&57>=f;)q=10*q+(f-48),a++,f=HEAP8[a+1|0];var t=!1;if(46==f){var r=0,t=!0;a++;f=HEAP8[a+1|0];if(42==f)r=c("i32"),a++;else for(;;){f=HEAP8[a+1|0];if(48>f||57<f)break;r=10*r+(f-48);a++}f=HEAP8[a+1|0]}else r=6;var s;switch(String.fromCharCode(f)){case "h":f=HEAP8[a+2|0];104==f?(a++,s=1):s=2;break;case "l":f=HEAP8[a+2|0];108==f?(a++,s=8):s=4;break;case "L":case "q":case "j":s=8;break;case "z":case "t":case "I":s=4;break;default:s=null}s&&
a++;f=HEAP8[a+1|0];switch(String.fromCharCode(f)){case "d":case "i":case "u":case "o":case "x":case "X":case "p":k=100==f||105==f;s=s||4;var v=g=c("i"+8*s),u;8==s&&(g=Runtime.makeBigInt(g[0],g[1],117==f));if(4>=s){var w=Math.pow(256,s)-1;g=(k?reSign:unSign)(g&w,8*s)}w=Math.abs(g);k="";if(100==f||105==f)u=8==s&&i64Math?i64Math.stringify(v[0],v[1],null):reSign(g,8*s,1).toString(10);else if(117==f)u=8==s&&i64Math?i64Math.stringify(v[0],v[1],!0):unSign(g,8*s,1).toString(10),g=Math.abs(g);else if(111==
f)u=(n?"0":"")+w.toString(8);else if(120==f||88==f){k=n&&0!=g?"0x":"";if(8==s&&i64Math)if(v[1]){u=(v[1]>>>0).toString(16);for(n=(v[0]>>>0).toString(16);8>n.length;)n="0"+n;u+=n}else u=(v[0]>>>0).toString(16);else if(0>g){g=-g;u=(w-1).toString(16);v=[];for(n=0;n<u.length;n++)v.push((15-parseInt(u[n],16)).toString(16));for(u=v.join("");u.length<2*s;)u="f"+u}else u=w.toString(16);88==f&&(k=k.toUpperCase(),u=u.toUpperCase())}else 112==f&&(0===w?u="(nil)":(k="0x",u=w.toString(16)));if(t)for(;u.length<
r;)u="0"+u;for(h&&(k=0>g?"-"+k:"+"+k);k.length+u.length<q;)l?u+=" ":p?u="0"+u:k=" "+k;u=k+u;u.split("").forEach(function(a){e.push(a.charCodeAt(0))});break;case "f":case "F":case "e":case "E":case "g":case "G":g=c("double");if(isNaN(g))u="nan",p=!1;else if(isFinite(g)){t=!1;s=Math.min(r,20);if(103==f||71==f)t=!0,r=r||1,s=parseInt(g.toExponential(s).split("e")[1],10),r>s&&-4<=s?(f=(103==f?"f":"F").charCodeAt(0),r-=s+1):(f=(103==f?"e":"E").charCodeAt(0),r--),s=Math.min(r,20);if(101==f||69==f)u=g.toExponential(s),
/[eE][-+]\d$/.test(u)&&(u=u.slice(0,-1)+"0"+u.slice(-1));else if(102==f||70==f)u=g.toFixed(s),0===g&&__reallyNegative(g)&&(u="-"+u);k=u.split("e");if(t&&!n)for(;1<k[0].length&&-1!=k[0].indexOf(".")&&("0"==k[0].slice(-1)||"."==k[0].slice(-1));)k[0]=k[0].slice(0,-1);else for(n&&-1==u.indexOf(".")&&(k[0]+=".");r>s++;)k[0]+="0";u=k[0]+(1<k.length?"e"+k[1]:"");69==f&&(u=u.toUpperCase());h&&0<=g&&(u="+"+u)}else u=(0>g?"-":"")+"inf",p=!1;for(;u.length<q;)u=l?u+" ":!p||"-"!=u[0]&&"+"!=u[0]?(p?"0":" ")+u:
u[0]+"0"+u.slice(1);97>f&&(u=u.toUpperCase());u.split("").forEach(function(a){e.push(a.charCodeAt(0))});break;case "s":p=(h=c("i8*"))?_strlen(h):6;t&&(p=Math.min(p,r));if(!l)for(;p<q--;)e.push(32);if(h)for(n=0;n<p;n++)e.push(HEAPU8[h++|0]);else e=e.concat(intArrayFromString("(null)".substr(0,p),!0));if(l)for(;p<q--;)e.push(32);break;case "c":for(l&&e.push(c("i8"));0<--q;)e.push(32);l||e.push(c("i8"));break;case "n":l=c("i32*");HEAP32[l>>2]=e.length;break;case "%":e.push(g);break;default:for(n=k;n<
a+2;n++)e.push(HEAP8[n])}a+=2}else e.push(g),a+=1}return e}function _snprintf(m,d,c,a){c=__formatString(c,a);a=void 0===d?c.length:Math.min(c.length,Math.max(d-1,0));if(0>m){m=-m;var b=_malloc(a+1);m=HEAP32[m>>2]=b}for(b=0;b<a;b++)HEAP8[m+b|0]=c[b];if(a<d||void 0===d)HEAP8[m+b|0]=0;return c.length}function _sprintf(m,d,c){return _snprintf(m,void 0,d,c)}function _strcpy(m,d){m|=0;d|=0;var c=0;do HEAP8[m+c|0]=HEAP8[d+c|0],c=c+1|0;while(HEAP8[d+(c-1)|0]);return m|0}
function _memcpy(m,d,c){m|=0;d|=0;c|=0;var a=0,a=m|0;if((m&3)==(d&3)){for(;m&3;){if(0==(c|0))return a|0;HEAP8[m]=HEAP8[d];m=m+1|0;d=d+1|0;c=c-1|0}for(;4<=(c|0);)HEAP32[m>>2]=HEAP32[d>>2],m=m+4|0,d=d+4|0,c=c-4|0}for(;0<(c|0);)HEAP8[m]=HEAP8[d],m=m+1|0,d=d+1|0,c=c-1|0;return a|0}var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;
function ___assert_func(m,d,c,a){throw"Assertion failed: "+(a?Pointer_stringify(a):"unknown condition")+", at: "+[m?Pointer_stringify(m):"unknown filename",d,c?Pointer_stringify(c):"unknown function"]+" at "+Error().stack;}function _strcmp(m,d){return _strncmp(m,d,TOTAL_MEMORY)}
function _qsort(m,d,c,a){if(0!=d&&0!=c){for(var b=[],e=0;e<d;e++)b.push(e);b.sort(function(b,d){return FUNCTION_TABLE[a](m+b*c,m+d*c)});var g=_malloc(d*c);_memcpy(g,m,d*c);for(e=0;e<d;e++)b[e]!=e&&_memcpy(m+e*c,g+b[e]*c,c);_free(g)}}
var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:35,EIDRM:36,ECHRNG:37,EL2NSYNC:38,EL3HLT:39,EL3RST:40,ELNRNG:41,EUNATCH:42,ENOCSI:43,EL2HLT:44,EDEADLK:45,ENOLCK:46,EBADE:50,EBADR:51,EXFULL:52,
ENOANO:53,EBADRQC:54,EBADSLT:55,EDEADLOCK:56,EBFONT:57,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:74,ELBIN:75,EDOTDOT:76,EBADMSG:77,EFTYPE:79,ENOTUNIQ:80,EBADFD:81,EREMCHG:82,ELIBACC:83,ELIBBAD:84,ELIBSCN:85,ELIBMAX:86,ELIBEXEC:87,ENOSYS:88,ENMFILE:89,ENOTEMPTY:90,ENAMETOOLONG:91,ELOOP:92,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:106,EPROTOTYPE:107,ENOTSOCK:108,ENOPROTOOPT:109,ESHUTDOWN:110,
ECONNREFUSED:111,EADDRINUSE:112,ECONNABORTED:113,ENETUNREACH:114,ENETDOWN:115,ETIMEDOUT:116,EHOSTDOWN:117,EHOSTUNREACH:118,EINPROGRESS:119,EALREADY:120,EDESTADDRREQ:121,EMSGSIZE:122,EPROTONOSUPPORT:123,ESOCKTNOSUPPORT:124,EADDRNOTAVAIL:125,ENETRESET:126,EISCONN:127,ENOTCONN:128,ETOOMANYREFS:129,EPROCLIM:130,EUSERS:131,EDQUOT:132,ESTALE:133,ENOTSUP:134,ENOMEDIUM:135,ENOSHARE:136,ECASECLASH:137,EILSEQ:138,EOVERFLOW:139,ECANCELED:140,ENOTRECOVERABLE:141,EOWNERDEAD:142,ESTRPIPE:143},___errno_state=0;
function ___setErrNo(m){return HEAP32[___errno_state>>2]=m}var _stdin=allocate(1,"i32*",ALLOC_STATIC),_stdout=allocate(1,"i32*",ALLOC_STATIC);_stderr=allocate(1,"i32*",ALLOC_STATIC);
var __impure_ptr=allocate(1,"i32*",ALLOC_STATIC),FS={currentPath:"/",nextInode:2,streams:[null],checkStreams:function(){for(var m in FS.streams)FS.streams.hasOwnProperty(m)&&assert(0<=m&&m<FS.streams.length);for(m=0;m<FS.streams.length;m++)assert("object"==typeof FS.streams[m])},ignorePermissions:!0,createFileHandle:function(m,d){"undefined"===typeof m&&(m=null);if(!d)if(m&&m.socket){for(var c=1;64>c;c++)if(!FS.streams[c]){d=c;break}assert(d,"ran out of low fds for sockets")}else for(d=Math.max(FS.streams.length,
64),c=FS.streams.length;c<d;c++)FS.streams[c]=null;FS.streams[d]&&FS.streams[d].socket&&FS.streams[d].socket.close&&FS.streams[d].socket.close();FS.streams[d]=m;return d},removeFileHandle:function(m){FS.streams[m]=null},joinPath:function(m,d){for(var c=m[0],a=1;a<m.length;a++)"/"!=c[c.length-1]&&(c+="/"),c+=m[a];d&&"/"==c[0]&&(c=c.substr(1));return c},absolutePath:function(m,d){if("string"!==typeof m)return null;void 0===d&&(d=FS.currentPath);m&&"/"==m[0]&&(d="");for(var c=(d+"/"+m).split("/").reverse(),
a=[""];c.length;){var b=c.pop();""!=b&&"."!=b&&(".."==b?1<a.length&&a.pop():a.push(b))}return 1==a.length?"/":a.join("/")},analyzePath:function(m,d,c){var a={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};m=FS.absolutePath(m);if("/"==m)a.isRoot=!0,a.exists=a.parentExists=!0,a.name="/",a.path=a.parentPath="/",a.object=a.parentObject=FS.root;else if(null!==m){c=c||0;m=m.slice(1).split("/");for(var b=FS.root,e=[""];m.length;){1==m.length&&
b.isFolder&&(a.parentExists=!0,a.parentPath=1==e.length?"/":e.join("/"),a.parentObject=b,a.name=m[0]);var g=m.shift();if(!b.isFolder){a.error=ERRNO_CODES.ENOTDIR;break}else if(!b.read){a.error=ERRNO_CODES.EACCES;break}else if(!b.contents.hasOwnProperty(g)){a.error=ERRNO_CODES.ENOENT;break}b=b.contents[g];if(b.link&&(!d||0!=m.length)){if(40<c){a.error=ERRNO_CODES.ELOOP;break}a=FS.absolutePath(b.link,e.join("/"));a=FS.analyzePath([a].concat(m).join("/"),d,c+1);break}e.push(g);0==m.length&&(a.exists=
!0,a.path=e.join("/"),a.object=b)}}return a},findObject:function(m,d){var c=FS.analyzePath(m,d);if(c.exists)return c.object;___setErrNo(c.error);return null},createObject:function(m,d,c,a,b){m||(m="/");"string"===typeof m&&(m=FS.findObject(m));if(!m)throw ___setErrNo(ERRNO_CODES.EACCES),Error("Parent path must exist.");if(!m.isFolder)throw ___setErrNo(ERRNO_CODES.ENOTDIR),Error("Parent must be a folder.");if(!m.write&&!FS.ignorePermissions)throw ___setErrNo(ERRNO_CODES.EACCES),Error("Parent folder must be writeable.");
if(!d||"."==d||".."==d)throw ___setErrNo(ERRNO_CODES.ENOENT),Error("Name must not be empty.");if(m.contents.hasOwnProperty(d))throw ___setErrNo(ERRNO_CODES.EEXIST),Error("Can't overwrite object.");m.contents[d]={read:void 0===a?!0:a,write:void 0===b?!1:b,timestamp:Date.now(),inodeNumber:FS.nextInode++};for(var e in c)c.hasOwnProperty(e)&&(m.contents[d][e]=c[e]);return m.contents[d]},createFolder:function(m,d,c,a){return FS.createObject(m,d,{isFolder:!0,isDevice:!1,contents:{}},c,a)},createPath:function(m,
d,c,a){m=FS.findObject(m);if(null===m)throw Error("Invalid parent.");for(d=d.split("/").reverse();d.length;){var b=d.pop();b&&(m.contents.hasOwnProperty(b)||FS.createFolder(m,b,c,a),m=m.contents[b])}return m},createFile:function(m,d,c,a,b){c.isFolder=!1;return FS.createObject(m,d,c,a,b)},createDataFile:function(m,d,c,a,b){if("string"===typeof c){for(var e=Array(c.length),g=0,f=c.length;g<f;++g)e[g]=c.charCodeAt(g);c=e}c={isDevice:!1,contents:c.subarray?c.subarray(0):c};return FS.createFile(m,d,c,
a,b)},createLazyFile:function(m,d,c,a,b){if("undefined"!==typeof XMLHttpRequest){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var e=function(){this.lengthKnown=!1;this.chunks=[]};e.prototype.get=function(a){if(!(a>this.length-1||0>a)){var b=a%this.chunkSize;return this.getter(Math.floor(a/this.chunkSize))[b]}};e.prototype.setDataGetter=function(a){this.getter=a};e.prototype.cacheLength=function(){var a=
new XMLHttpRequest;a.open("HEAD",c,!1);a.send(null);if(!(200<=a.status&&300>a.status||304===a.status))throw Error("Couldn't load "+c+". Status: "+a.status);var b=Number(a.getResponseHeader("Content-length")),d,e=1048576;(d=a.getResponseHeader("Accept-Ranges"))&&"bytes"===d||(e=b);var l=this;l.setDataGetter(function(a){var d=a*e,g=(a+1)*e-1,g=Math.min(g,b-1);if("undefined"===typeof l.chunks[a]){var k=l.chunks;if(d>g)throw Error("invalid range ("+d+", "+g+") or no bytes requested!");if(g>b-1)throw Error("only "+
b+" bytes available! programmer error!");var m=new XMLHttpRequest;m.open("GET",c,!1);b!==e&&m.setRequestHeader("Range","bytes="+d+"-"+g);"undefined"!=typeof Uint8Array&&(m.responseType="arraybuffer");m.overrideMimeType&&m.overrideMimeType("text/plain; charset=x-user-defined");m.send(null);if(!(200<=m.status&&300>m.status||304===m.status))throw Error("Couldn't load "+c+". Status: "+m.status);d=void 0!==m.response?new Uint8Array(m.response||[]):intArrayFromString(m.responseText||"",!0);k[a]=d}if("undefined"===
typeof l.chunks[a])throw Error("doXHR failed!");return l.chunks[a]});this._length=b;this._chunkSize=e;this.lengthKnown=!0};e=new e;Object.defineProperty(e,"length",{get:function(){this.lengthKnown||this.cacheLength();return this._length}});Object.defineProperty(e,"chunkSize",{get:function(){this.lengthKnown||this.cacheLength();return this._chunkSize}});e={isDevice:!1,contents:e}}else e={isDevice:!1,url:c};return FS.createFile(m,d,e,a,b)},createPreloadedFile:function(m,d,c,a,b,e,g,f){function k(c){function k(c){f||
FS.createDataFile(m,d,c,a,b);e&&e();removeRunDependency("cp "+h)}var p=!1;Module.preloadPlugins.forEach(function(a){!p&&a.canHandle(h)&&(a.handle(c,h,k,function(){g&&g();removeRunDependency("cp "+h)}),p=!0)});p||k(c)}Browser.init();var h=FS.joinPath([m,d],!0);addRunDependency("cp "+h);"string"==typeof c?Browser.asyncLoad(c,function(a){k(a)},g):k(c)},createLink:function(m,d,c,a,b){return FS.createFile(m,d,{isDevice:!1,link:c},a,b)},createDevice:function(m,d,c,a){if(!c&&!a)throw Error("A device must have at least one callback defined.");
return FS.createFile(m,d,{isDevice:!0,input:c,output:a},Boolean(c),Boolean(a))},forceLoadFile:function(m){if(m.isDevice||m.isFolder||m.link||m.contents)return!0;var d=!0;if("undefined"!==typeof XMLHttpRequest)throw Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(Module.read)try{m.contents=intArrayFromString(Module.read(m.url),!0)}catch(c){d=!1}else throw Error("Cannot load without read() or XMLHttpRequest.");
d||___setErrNo(ERRNO_CODES.EIO);return d},staticInit:function(){FS.root={read:!0,write:!0,isFolder:!0,isDevice:!1,timestamp:Date.now(),inodeNumber:1,contents:{}};try{FS.createFolder("/","tmp",!0,!0)}catch(m){}FS.createFolder("/","dev",!0,!0)},init:function(m,d,c){function a(){var a=function(b){null===b||10===b?(a.printer(a.buffer.join("")),a.buffer=[]):a.buffer.push(f.processCChar(b))};return a}assert(!FS.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");
FS.init.initialized=!0;m=m||Module.stdin;d=d||Module.stdout;c=c||Module.stderr;var b=!0,e=!0,g=!0;m||(b=!1,m=function(){if(!m.cache||!m.cache.length){var a;"undefined"!=typeof window&&"function"==typeof window.prompt?(a=window.prompt("Input: "),null===a&&(a=String.fromCharCode(0))):"function"==typeof readline&&(a=readline());a||(a="");m.cache=intArrayFromString(a+"\n",!0)}return m.cache.shift()});var f=new Runtime.UTF8Processor;d||(e=!1,d=a());d.printer||(d.printer=Module.print);d.buffer||(d.buffer=
[]);c||(g=!1,c=a());c.printer||(c.printer=Module.printErr);c.buffer||(c.buffer=[]);var k=FS.createDevice("/dev","stdin",m);k.isTerminal=!b;b=FS.createDevice("/dev","stdout",null,d);b.isTerminal=!e;c=FS.createDevice("/dev","stderr",null,c);c.isTerminal=!g;FS.createDevice("/dev","tty",m,d);FS.createDevice("/dev","null",function(){},function(){});FS.streams[1]={path:"/dev/stdin",object:k,position:0,isRead:!0,isWrite:!1,isAppend:!1,error:!1,eof:!1,ungotten:[]};FS.streams[2]={path:"/dev/stdout",object:b,
position:0,isRead:!1,isWrite:!0,isAppend:!1,error:!1,eof:!1,ungotten:[]};FS.streams[3]={path:"/dev/stderr",object:c,position:0,isRead:!1,isWrite:!0,isAppend:!1,error:!1,eof:!1,ungotten:[]};HEAP32[_stdin>>2]=1;HEAP32[_stdout>>2]=2;HEAP32[_stderr>>2]=3;FS.createPath("/","dev/shm/tmp",!0,!0);for(d=FS.streams.length;d<Math.max(_stdin,_stdout,_stderr)+4;d++)FS.streams[d]=null;FS.streams[_stdin]=FS.streams[1];FS.streams[_stdout]=FS.streams[2];FS.streams[_stderr]=FS.streams[3];FS.checkStreams();allocate([allocate([0,
0,0,0,_stdin,0,0,0,_stdout,0,0,0,_stderr,0,0,0],"void*",ALLOC_NORMAL)],"void*",ALLOC_NONE,__impure_ptr)},quit:function(){FS.init.initialized&&(FS.streams[2]&&0<FS.streams[2].object.output.buffer.length&&FS.streams[2].object.output(10),FS.streams[3]&&0<FS.streams[3].object.output.buffer.length&&FS.streams[3].object.output(10))},standardizePath:function(m){"./"==m.substr(0,2)&&(m=m.substr(2));return m},deleteFile:function(m){m=FS.analyzePath(m);if(!m.parentExists||!m.exists)throw"Invalid path "+m;delete m.parentObject.contents[m.name]}};
Module.FS=FS;function _send(m,d,c,a){m=FS.streams[m];if(!m)return-1;m.sender(HEAPU8.subarray(d,d+c));return c}
function _pwrite(m,d,c,a){m=FS.streams[m];if(!m||m.object.isDevice)return ___setErrNo(ERRNO_CODES.EBADF),-1;if(m.isWrite){if(m.object.isFolder)return ___setErrNo(ERRNO_CODES.EISDIR),-1;if(0>c||0>a)return ___setErrNo(ERRNO_CODES.EINVAL),-1;for(var b=m.object.contents;b.length<a;)b.push(0);for(var e=0;e<c;e++)b[a+e]=HEAPU8[d+e|0];m.object.timestamp=Date.now();return e}___setErrNo(ERRNO_CODES.EACCES);return-1}
function _write(m,d,c){var a=FS.streams[m];if(a&&"socket"in a)return _send(m,d,c,0);if(a){if(a.isWrite){if(0>c)return ___setErrNo(ERRNO_CODES.EINVAL),-1;if(a.object.isDevice){if(a.object.output){for(m=0;m<c;m++)try{a.object.output(HEAP8[d+m|0])}catch(b){return ___setErrNo(ERRNO_CODES.EIO),-1}a.object.timestamp=Date.now();return m}___setErrNo(ERRNO_CODES.ENXIO);return-1}d=_pwrite(m,d,c,a.position);-1!=d&&(a.position+=d);return d}___setErrNo(ERRNO_CODES.EACCES);return-1}___setErrNo(ERRNO_CODES.EBADF);
return-1}function _fwrite(m,d,c,a){c*=d;if(0==c)return 0;m=_write(a,m,c);return-1==m?(FS.streams[a]&&(FS.streams[a].error=!0),0):Math.floor(m/d)}function _fprintf(m,d,c){c=__formatString(d,c);d=Runtime.stackSave();m=_fwrite(allocate(c,"i8",ALLOC_STACK),1,c.length,m);Runtime.stackRestore(d);return m}
function _memset(m,d,c){m|=0;d|=0;c|=0;var a=0,b=0,e=0,g=0,a=m+c|0;if(20<=(c|0)){d&=255;g=m&3;b=d|d<<8|d<<16|d<<24;e=a&-4;if(g)for(g=m+4-g|0;(m|0)<(g|0);)HEAP8[m]=d,m=m+1|0;for(;(m|0)<(e|0);)HEAP32[m>>2]=b,m=m+4|0}for(;(m|0)<(a|0);)HEAP8[m]=d,m=m+1|0}var _llvm_memset_p0i8_i32=_memset;function _bsearch(m,d,c,a,b){for(var e=0,g,f,k;e<c;)if(g=e+c>>>1,k=d+g*a,f=FUNCTION_TABLE[b](m,k),0>f)c=g;else if(0<f)e=g+1;else return k;return 0}var _exp=Math.exp,_log=Math.log;
function _rand(){return Math.floor(2147483648*Math.random())}var _sqrt=Math.sqrt,_atan2=Math.atan2,_fabs=Math.abs,___dirent_struct_layout={__size__:1040,d_ino:0,d_name:4,d_off:1028,d_reclen:1032,d_type:1036};
function _open(m,d,c){var a=HEAP32[c>>2],b=d&3;c=0!=b;var b=1!=b,e=Boolean(d&512),g=Boolean(d&2048),f=Boolean(d&1024),k=Boolean(d&8);m=FS.analyzePath(Pointer_stringify(m));if(!m.parentExists)return ___setErrNo(m.error),-1;if(d=m.object||null){if(e&&g)return ___setErrNo(ERRNO_CODES.EEXIST),-1;if((c||f)&&d.isFolder)return ___setErrNo(ERRNO_CODES.EISDIR),-1;if(b&&!d.read||c&&!d.write)return ___setErrNo(ERRNO_CODES.EACCES),-1;if(f&&!d.isDevice)d.contents=[];else if(!FS.forceLoadFile(d))return ___setErrNo(ERRNO_CODES.EIO),
-1;m=m.path}else{if(!e)return ___setErrNo(ERRNO_CODES.ENOENT),-1;if(!m.parentObject.write)return ___setErrNo(ERRNO_CODES.EACCES),-1;d=FS.createDataFile(m.parentObject,m.name,[],a&256,a&128);m=m.parentPath+"/"+m.name}var h;if(d.isFolder){c=0;___dirent_struct_layout&&(c=_malloc(___dirent_struct_layout.__size__));a=[];for(h in d.contents)a.push(h);h=FS.createFileHandle({path:m,object:d,position:-2,isRead:!0,isWrite:!1,isAppend:!1,error:!1,eof:!1,ungotten:[],contents:a,currentEntry:c})}else h=FS.createFileHandle({path:m,
object:d,position:0,isRead:b,isWrite:c,isAppend:k,error:!1,eof:!1,ungotten:[]});FS.checkStreams();return h}function ___errno_location(){return ___errno_state}
var ___errno=___errno_location,ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",
22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"No message of desired type",36:"Identifier removed",37:"Channel number out of range",38:"Level 2 not synchronized",39:"Level 3 halted",40:"Level 3 reset",41:"Link number out of range",
42:"Protocol driver not attached",43:"No CSI structure available",44:"Level 2 halted",45:"Deadlock condition",46:"No record locks available",50:"Invalid exchange",51:"Invalid request descriptor",52:"Exchange full",53:"No anode",54:"Invalid request code",55:"Invalid slot",56:"File locking deadlock error",57:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",
67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",74:"Multihop attempted",75:"Inode is remote (not really error)",76:"Cross mount point (not really error)",77:"Trying to read unreadable message",79:"Inappropriate file type or format",80:"Given log. name not unique",81:"f.d. invalid for this operation",82:"Remote address changed",83:"Can\t access a needed shared lib",84:"Accessing a corrupted shared lib",85:".lib section in a.out corrupted",
86:"Attempting to link in too many libs",87:"Attempting to exec a shared library",88:"Function not implemented",89:"No more files",90:"Directory not empty",91:"File or path name too long",92:"Too many symbolic links",95:"Operation not supported on transport endpoint",96:"Protocol family not supported",104:"Connection reset by peer",105:"No buffer space available",106:"Address family not supported by protocol family",107:"Protocol wrong type for socket",108:"Socket operation on non-socket",109:"Protocol not available",
110:"Can't send after socket shutdown",111:"Connection refused",112:"Address already in use",113:"Connection aborted",114:"Network is unreachable",115:"Network interface is not configured",116:"Connection timed out",117:"Host is down",118:"Host is unreachable",119:"Connection already in progress",120:"Socket already connected",121:"Destination address required",122:"Message too long",123:"Unknown protocol",124:"Socket type not supported",125:"Address not available",126:"ENETRESET",127:"Socket is already connected",
128:"Socket is not connected",129:"TOOMANYREFS",130:"EPROCLIM",131:"EUSERS",132:"EDQUOT",133:"ESTALE",134:"Not supported",135:"No medium (in tape drive)",136:"No such host or network path",137:"Filename exists with different case",138:"EILSEQ",139:"Value too large for defined data type",140:"Operation canceled",141:"State not recoverable",142:"Previous owner died",143:"Streams pipe error"};
function _strerror_r(m,d,c){if(m in ERRNO_MESSAGES){if(ERRNO_MESSAGES[m].length>c-1)return ___setErrNo(ERRNO_CODES.ERANGE);m=ERRNO_MESSAGES[m];for(c=0;c<m.length;c++)HEAP8[d+c|0]=m.charCodeAt(c);return HEAP8[d+c|0]=0}return ___setErrNo(ERRNO_CODES.EINVAL)}function _strerror(m){_strerror.buffer||(_strerror.buffer=_malloc(256));_strerror_r(m,_strerror.buffer,256);return _strerror.buffer}
function _close(m){if(FS.streams[m])return FS.streams[m].currentEntry&&_free(FS.streams[m].currentEntry),FS.streams[m]=null,0;___setErrNo(ERRNO_CODES.EBADF);return-1}function _memcmp(m,d,c){m|=0;d|=0;c|=0;for(var a=0,b=0,e=0;(a|0)<(c|0);){b=HEAPU8[m+a|0];e=HEAPU8[d+a|0];if((b|0)!=(e|0))return((b|0)>(e|0)?1:-1)|0;a=a+1|0}return 0}function _vfprintf(m,d,c){return _fprintf(m,d,HEAP32[c>>2])}
function _munmap(m,d){_mmap.mappings||(_mmap.mappings={});var c=_mmap.mappings[m];if(!c)return 0;d==c.num&&(_mmap.mappings[m]=null,c.allocated&&_free(c.malloc));return 0}
function _mmap(m,d,c,a,b,e){m=!1;_mmap.mappings||(_mmap.mappings={});if(-1==b){a=_malloc(d);if(!a)return-1;_memset(a,0,d);m=!0}else{b=FS.streams[b];if(!b)return-1;b=b.object.contents;if(a&0)assert(b.buffer===HEAPU8.buffer),a=b.byteOffset,m=!1;else{if(0<e||e+d<b.length)b=b.subarray?b.subarray(e,e+d):Array.prototype.slice.call(b,e,e+d);a=_malloc(d);if(!a)return-1;HEAPU8.set(b,a);m=!0}}_mmap.mappings[a]={malloc:a,num:d,allocated:m};return a}
var ___stat_struct_layout={__size__:68,st_dev:0,st_ino:4,st_mode:8,st_nlink:12,st_uid:16,st_gid:20,st_rdev:24,st_size:28,st_atime:32,st_spare1:36,st_mtime:40,st_spare2:44,st_ctime:48,st_spare3:52,st_blksize:56,st_blocks:60,st_spare4:64};
function _stat(m,d,c){m=FS.findObject(Pointer_stringify(m),c);if(null===m||!FS.forceLoadFile(m))return-1;c=___stat_struct_layout;HEAP32[d+c.st_nlink>>2]=1;HEAP32[d+c.st_uid>>2]=0;HEAP32[d+c.st_gid>>2]=0;HEAP32[d+c.st_blksize>>2]=4096;HEAP32[d+c.st_ino>>2]=m.inodeNumber;var a=Math.floor(m.timestamp/1E3);if(void 0===c.st_atime){c.st_atime=c.st_atim.tv_sec;c.st_mtime=c.st_mtim.tv_sec;c.st_ctime=c.st_ctim.tv_sec;var b=1E3*(m.timestamp%1E3);HEAP32[d+c.st_atim.tv_nsec>>2]=b;HEAP32[d+c.st_mtim.tv_nsec>>
2]=b;HEAP32[d+c.st_ctim.tv_nsec>>2]=b}HEAP32[d+c.st_atime>>2]=a;HEAP32[d+c.st_mtime>>2]=a;HEAP32[d+c.st_ctime>>2]=a;var e=0,g=a=0,f=b=0;m.isDevice?(b=f=m.inodeNumber,a=g=0,e=8192):(b=1,f=0,m.isFolder?(a=4096,g=1,e=16384):(e=m.contents||m.link,a=e.length,g=Math.ceil(e.length/4096),e=void 0===m.link?32768:40960));HEAP32[d+c.st_dev>>2]=b;HEAP32[d+c.st_rdev>>2]=f;HEAP32[d+c.st_size>>2]=a;HEAP32[d+c.st_blocks>>2]=g;m.read&&(e|=365);m.write&&(e|=146);HEAP32[d+c.st_mode>>2]=e;return 0}
function _fstat(m,d){if(FS.streams[m]){var c=intArrayFromString(FS.streams[m].path);return _stat(allocate(c,"i8",ALLOC_STACK),d)}___setErrNo(ERRNO_CODES.EBADF);return-1}function _lseek(m,d,c){if(FS.streams[m]&&!FS.streams[m].object.isDevice){m=FS.streams[m];1===c?d+=m.position:2===c&&(d+=m.object.contents.length);if(0>d)return ___setErrNo(ERRNO_CODES.EINVAL),-1;m.ungotten=[];return m.position=d}___setErrNo(ERRNO_CODES.EBADF);return-1}
function _recv(m,d,c,a){m=FS.streams[m];if(!m)return-1;if(!m.hasData())return ___setErrNo(ERRNO_CODES.EAGAIN),-1;a=m.inQueue.shift();c<a.length&&(m.stream&&m.inQueue.unshift(a.subarray(c)),a=a.subarray(0,c));HEAPU8.set(a,d);return a.length}
function _pread(m,d,c,a){var b=FS.streams[m];if(!b||b.object.isDevice)return ___setErrNo(ERRNO_CODES.EBADF),-1;if(b.isRead){if(b.object.isFolder)return ___setErrNo(ERRNO_CODES.EISDIR),-1;if(0>c||0>a)return ___setErrNo(ERRNO_CODES.EINVAL),-1;if(a>=b.object.contents.length)return 0;m=0;b=b.object.contents;c=Math.min(b.length-a,c);assert(0<=c);if(b.subarray)HEAPU8.set(b.subarray(a,a+c),d);else if(b.slice)for(var e=0;e<c;e++)HEAP8[d+e|0]=b[a+e];else for(e=0;e<c;e++)HEAP8[d+e|0]=b.get(a+e);return m+c}___setErrNo(ERRNO_CODES.EACCES);
return-1}
function _read(m,d,c){var a=FS.streams[m];if(a&&"socket"in a)return _recv(m,d,c,0);if(a){if(a.isRead){if(0>c)return ___setErrNo(ERRNO_CODES.EINVAL),-1;if(a.object.isDevice){if(a.object.input){for(var b=m=0;b<c;b++){try{var e=a.object.input()}catch(g){return ___setErrNo(ERRNO_CODES.EIO),-1}if(void 0===e&&0===m)return ___setErrNo(ERRNO_CODES.EAGAIN),-1;if(null===e||void 0===e)break;m++;HEAP8[d+b|0]=e}return m}___setErrNo(ERRNO_CODES.ENXIO);return-1}m=_pread(m,d,c,a.position);assert(-1<=m);-1!=m&&(a.position+=
m);return m}___setErrNo(ERRNO_CODES.EACCES);return-1}___setErrNo(ERRNO_CODES.EBADF);return-1}function _abort(){Module.abort()}
function _sysconf(m){switch(m){case 8:return PAGE_SIZE;case 54:case 56:case 21:case 61:case 63:case 22:case 67:case 23:case 24:case 25:case 26:case 27:case 69:case 28:case 101:case 70:case 71:case 29:case 30:case 199:case 75:case 76:case 32:case 43:case 44:case 80:case 46:case 47:case 45:case 48:case 49:case 42:case 82:case 33:case 7:case 108:case 109:case 107:case 112:case 119:case 121:return 200809;case 13:case 104:case 94:case 95:case 34:case 35:case 77:case 81:case 83:case 84:case 85:case 86:case 87:case 88:case 89:case 90:case 91:case 94:case 95:case 110:case 111:case 113:case 114:case 115:case 116:case 117:case 118:case 120:case 40:case 16:case 79:case 19:return-1;
case 92:case 93:case 5:case 72:case 6:case 74:case 92:case 93:case 96:case 97:case 98:case 99:case 102:case 103:case 105:return 1;case 38:case 66:case 50:case 51:case 4:return 1024;case 15:case 64:case 41:return 32;case 55:case 37:case 17:return 2147483647;case 18:case 1:return 47839;case 59:case 57:return 99;case 68:case 58:return 2048;case 0:return 2097152;case 3:return 65536;case 14:return 32768;case 73:return 32767;case 39:return 16384;case 60:return 1E3;case 106:return 700;case 52:return 256;
case 62:return 255;case 2:return 100;case 65:return 64;case 36:return 20;case 100:return 16;case 20:return 6;case 53:return 4;case 10:return 1}___setErrNo(ERRNO_CODES.EINVAL);return-1}function _time(m){var d=Math.floor(Date.now()/1E3);m&&(HEAP32[m>>2]=d);return d}
function _sbrk(m){var d=_sbrk;d.called||(DYNAMICTOP=alignMemoryPage(DYNAMICTOP),d.called=!0,assert(Runtime.dynamicAlloc),d.alloc=Runtime.dynamicAlloc,Runtime.dynamicAlloc=function(){abort("cannot dynamically allocate, sbrk now has control")});var c=DYNAMICTOP;0!=m&&d.alloc(m);return c}
var Browser={mainLoop:{scheduler:null,shouldPause:!1,paused:!1,queue:[],pause:function(){Browser.mainLoop.shouldPause=!0},resume:function(){Browser.mainLoop.paused&&(Browser.mainLoop.paused=!1,Browser.mainLoop.scheduler());Browser.mainLoop.shouldPause=!1},updateStatus:function(){if(Module.setStatus){var m=Module.statusMessage||"Please wait...",d=Browser.mainLoop.remainingBlockers,c=Browser.mainLoop.expectedBlockers;d?d<c?Module.setStatus(m+" ("+(c-d)+"/"+c+")"):Module.setStatus(m):Module.setStatus("")}}},
isFullScreen:!1,pointerLock:!1,moduleContextCreatedCallbacks:[],workers:[],init:function(){function m(){Browser.pointerLock=document.pointerLockElement===c||document.mozPointerLockElement===c||document.webkitPointerLockElement===c}Module.preloadPlugins||(Module.preloadPlugins=[]);if(!Browser.initted&&!ENVIRONMENT_IS_WORKER){Browser.initted=!0;try{new Blob,Browser.hasBlobConstructor=!0}catch(d){Browser.hasBlobConstructor=!1,console.log("warning: no blob constructor, cannot create blobs with mimetypes")}Browser.BlobBuilder=
"undefined"!=typeof MozBlobBuilder?MozBlobBuilder:"undefined"!=typeof WebKitBlobBuilder?WebKitBlobBuilder:Browser.hasBlobConstructor?null:console.log("warning: no BlobBuilder");Browser.URLObject="undefined"!=typeof window?window.URL?window.URL:window.webkitURL:console.log("warning: cannot create object URLs");Module.preloadPlugins.push({canHandle:function(a){return!Module.noImageDecoding&&/\.(jpg|jpeg|png|bmp)$/i.test(a)},handle:function(a,b,c,d){var f=null;if(Browser.hasBlobConstructor)try{f=new Blob([a],
{type:Browser.getMimetype(b)}),f.size!==a.length&&(f=new Blob([(new Uint8Array(a)).buffer],{type:Browser.getMimetype(b)}))}catch(k){Runtime.warnOnce("Blob constructor present but fails: "+k+"; falling back to blob builder")}f||(f=new Browser.BlobBuilder,f.append((new Uint8Array(a)).buffer),f=f.getBlob());var h=Browser.URLObject.createObjectURL(f);assert("string"==typeof h,"createObjectURL must return a url as a string");var l=new Image;l.onload=function(){assert(l.complete,"Image "+b+" could not be decoded");
var d=document.createElement("canvas");d.width=l.width;d.height=l.height;d.getContext("2d").drawImage(l,0,0);Module.preloadedImages[b]=d;Browser.URLObject.revokeObjectURL(h);c&&c(a)};l.onerror=function(a){console.log("Image "+h+" could not be decoded");d&&d()};l.src=h}});Module.preloadPlugins.push({canHandle:function(a){return!Module.noAudioDecoding&&a.substr(-4)in{".ogg":1,".wav":1,".mp3":1}},handle:function(a,b,c,d){function f(d){h||(h=!0,Module.preloadedAudios[b]=d,c&&c(a))}function k(){h||(h=
!0,Module.preloadedAudios[b]=new Audio,d&&d())}var h=!1;if(Browser.hasBlobConstructor){try{var l=new Blob([a],{type:Browser.getMimetype(b)})}catch(m){return k()}l=Browser.URLObject.createObjectURL(l);assert("string"==typeof l,"createObjectURL must return a url as a string");var p=new Audio;p.addEventListener("canplaythrough",function(){f(p)},!1);p.onerror=function(c){if(!h){console.log("warning: browser could not fully decode audio "+b+", trying slower base64 approach");c="data:audio/x-"+b.substr(-3)+
";base64,";for(var d="",e=0,g=0,k=0;k<a.length;k++)for(e=e<<8|a[k],g+=8;6<=g;)var l=e>>g-6&63,g=g-6,d=d+"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[l];2==g?(d+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[(e&3)<<4],d+="=="):4==g&&(d+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[(e&15)<<2],d+="=");p.src=c+d;f(p)}};p.src=l;Browser.safeSetTimeout(function(){f(p)},1E4)}else return k()}});var c=Module.canvas;c.requestPointerLock=c.requestPointerLock||
c.mozRequestPointerLock||c.webkitRequestPointerLock;c.exitPointerLock=document.exitPointerLock||document.mozExitPointerLock||document.webkitExitPointerLock||function(){};c.exitPointerLock=c.exitPointerLock.bind(document);document.addEventListener("pointerlockchange",m,!1);document.addEventListener("mozpointerlockchange",m,!1);document.addEventListener("webkitpointerlockchange",m,!1);Module.elementPointerLock&&c.addEventListener("click",function(a){!Browser.pointerLock&&c.requestPointerLock&&(c.requestPointerLock(),
a.preventDefault())},!1)}},createContext:function(m,d,c){var a;try{if(a=d?m.getContext("experimental-webgl",{alpha:!1}):m.getContext("2d"),!a)throw":(";}catch(b){return Module.print("Could not create canvas - "+b),null}d&&(m.style.backgroundColor="black",m.addEventListener("webglcontextlost",function(a){alert("WebGL context lost. You will need to reload the page.")},!1));c&&(Module.ctx=a,Module.useWebGL=d,Browser.moduleContextCreatedCallbacks.forEach(function(a){a()}),Browser.init());return a},destroyContext:function(m,
d,c){},fullScreenHandlersInstalled:!1,lockPointer:void 0,resizeCanvas:void 0,requestFullScreen:function(m,d){function c(){Browser.isFullScreen=!1;(document.webkitFullScreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.mozFullscreenElement||document.fullScreenElement||document.fullscreenElement)===a?(a.cancelFullScreen=document.cancelFullScreen||document.mozCancelFullScreen||document.webkitCancelFullScreen,a.cancelFullScreen=a.cancelFullScreen.bind(document),Browser.lockPointer&&
a.requestPointerLock(),Browser.isFullScreen=!0,Browser.resizeCanvas&&Browser.setFullScreenCanvasSize()):Browser.resizeCanvas&&Browser.setWindowedCanvasSize();if(Module.onFullScreen)Module.onFullScreen(Browser.isFullScreen)}Browser.lockPointer=m;Browser.resizeCanvas=d;"undefined"===typeof Browser.lockPointer&&(Browser.lockPointer=!0);"undefined"===typeof Browser.resizeCanvas&&(Browser.resizeCanvas=!1);var a=Module.canvas;Browser.fullScreenHandlersInstalled||(Browser.fullScreenHandlersInstalled=!0,
document.addEventListener("fullscreenchange",c,!1),document.addEventListener("mozfullscreenchange",c,!1),document.addEventListener("webkitfullscreenchange",c,!1));a.requestFullScreen=a.requestFullScreen||a.mozRequestFullScreen||(a.webkitRequestFullScreen?function(){a.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT)}:null);a.requestFullScreen()},requestAnimationFrame:function(m){window.requestAnimationFrame||(window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||
window.webkitRequestAnimationFrame||window.msRequestAnimationFrame||window.oRequestAnimationFrame||window.setTimeout);window.requestAnimationFrame(m)},safeCallback:function(m){return function(){if(!ABORT)return m.apply(null,arguments)}},safeRequestAnimationFrame:function(m){return Browser.requestAnimationFrame(function(){ABORT||m()})},safeSetTimeout:function(m,d){return setTimeout(function(){ABORT||m()},d)},safeSetInterval:function(m,d){return setInterval(function(){ABORT||m()},d)},getMimetype:function(m){return{jpg:"image/jpeg",
jpeg:"image/jpeg",png:"image/png",bmp:"image/bmp",ogg:"audio/ogg",wav:"audio/wav",mp3:"audio/mpeg"}[m.substr(m.lastIndexOf(".")+1)]},getUserMedia:function(m){window.getUserMedia||(window.getUserMedia=navigator.getUserMedia||navigator.mozGetUserMedia);window.getUserMedia(m)},getMovementX:function(m){return m.movementX||m.mozMovementX||m.webkitMovementX||0},getMovementY:function(m){return m.movementY||m.mozMovementY||m.webkitMovementY||0},mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function(m){if(Browser.pointerLock)"mousemove"!=
m.type&&"mozMovementX"in m?Browser.mouseMovementX=Browser.mouseMovementY=0:(Browser.mouseMovementX=Browser.getMovementX(m),Browser.mouseMovementY=Browser.getMovementY(m)),"undefined"!=typeof SDL?(Browser.mouseX=SDL.mouseX+Browser.mouseMovementX,Browser.mouseY=SDL.mouseY+Browser.mouseMovementY):(Browser.mouseX+=Browser.mouseMovementX,Browser.mouseY+=Browser.mouseMovementY);else{var d=Module.canvas.getBoundingClientRect(),c=m.pageX-(window.scrollX+d.left);m=m.pageY-(window.scrollY+d.top);var a=Module.canvas.height,
c=c*(Module.canvas.width/d.width);m*=a/d.height;Browser.mouseMovementX=c-Browser.mouseX;Browser.mouseMovementY=m-Browser.mouseY;Browser.mouseX=c;Browser.mouseY=m}},xhrLoad:function(m,d,c){var a=new XMLHttpRequest;a.open("GET",m,!0);a.responseType="arraybuffer";a.onload=function(){200==a.status||0==a.status&&a.response?d(a.response):c()};a.onerror=c;a.send(null)},asyncLoad:function(m,d,c,a){Browser.xhrLoad(m,function(b){assert(b,'Loading data file "'+m+'" failed (no arrayBuffer).');d(new Uint8Array(b));
a||removeRunDependency("al "+m)},function(a){if(c)c();else throw'Loading data file "'+m+'" failed.';});a||addRunDependency("al "+m)},resizeListeners:[],updateResizeListeners:function(){var m=Module.canvas;Browser.resizeListeners.forEach(function(d){d(m.width,m.height)})},setCanvasSize:function(m,d,c){var a=Module.canvas;a.width=m;a.height=d;c||Browser.updateResizeListeners()},windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function(){var m=Module.canvas;this.windowedWidth=m.width;this.windowedHeight=
m.height;m.width=screen.width;m.height=screen.height;"undefined"!=typeof SDL&&(m=HEAPU32[SDL.screen+0*Runtime.QUANTUM_SIZE>>2],HEAP32[SDL.screen+0*Runtime.QUANTUM_SIZE>>2]=m|8388608);Browser.updateResizeListeners()},setWindowedCanvasSize:function(){var m=Module.canvas;m.width=this.windowedWidth;m.height=this.windowedHeight;"undefined"!=typeof SDL&&(m=HEAPU32[SDL.screen+0*Runtime.QUANTUM_SIZE>>2],HEAP32[SDL.screen+0*Runtime.QUANTUM_SIZE>>2]=m&-8388609);Browser.updateResizeListeners()}};FS.staticInit();
__ATINIT__.unshift({func:function(){Module.noFSInit||FS.init.initialized||FS.init()}});__ATMAIN__.push({func:function(){FS.ignorePermissions=!1}});__ATEXIT__.push({func:function(){FS.quit()}});Module.FS_createFolder=FS.createFolder;Module.FS_createPath=FS.createPath;Module.FS_createDataFile=FS.createDataFile;Module.FS_createPreloadedFile=FS.createPreloadedFile;Module.FS_createLazyFile=FS.createLazyFile;Module.FS_createLink=FS.createLink;Module.FS_createDevice=FS.createDevice;___errno_state=Runtime.staticAlloc(4);
HEAP32[___errno_state>>2]=0;Module.requestFullScreen=function(m,d){Browser.requestFullScreen(m,d)};Module.requestAnimationFrame=function(m){Browser.requestAnimationFrame(m)};Module.pauseMainLoop=function(){Browser.mainLoop.pause()};Module.resumeMainLoop=function(){Browser.mainLoop.resume()};Module.getUserMedia=function(){Browser.getUserMedia()};STACK_BASE=STACKTOP=Runtime.alignMemory(STATICTOP);staticSealed=!0;STACK_MAX=STACK_BASE+5242880;DYNAMIC_BASE=DYNAMICTOP=Runtime.alignMemory(STACK_MAX);
assert(DYNAMIC_BASE<TOTAL_MEMORY);
var FUNCTION_TABLE=[0,0,_DumpModeDecode,0,_putcontig8bitYCbCr44tile,0,_LogLuvDecodeTile,0,_LZWDecodeCompat,0,_deflate_fast,0,_DumpFixupTags,0,_putgreytile,0,_unixErrorHandler,0,_fpDiff,0,__TIFFNoTileDecode,0,_LogLuvEncode32,0,_ZIPPreEncode,0,_TIFFInitSGILog,0,_LZWSetupEncode,0,_PackBitsEncode,0,_horAcc8,0,_ThunderDecodeRow,0,_put16bitbwtile,0,_PredictorEncodeTile,0,_PackBitsDecode,0,_putcontig8bitYCbCr42tile,0,_put4bitcmaptile,0,_putRGBseparate16bittile,0,_LZWDecode,0,_putRGBAAseparate8bittile,0,
__tiffMapProc,0,_LZWSetupDecode,0,_LogLuvSetupEncode,0,_Fax3FixupTags,0,__tiffDummyUnmapProc,0,__TIFFSwab32BitData,0,_ZIPSetupEncode,0,_LogLuvVSetField,0,_PixarLogClose,0,_LogL16Encode,0,__tiffDummyMapProc,0,_PredictorSetupEncode,0,_Fax3SetupState,0,_LogLuvEncodeTile,0,__tiffReadProc,0,_putRGBcontig16bittile,0,_putcontig8bitYCbCr11tile,0,__TIFFDefaultStripSize,0,__TIFFDefaultTileSize,0,_LZWPostEncode,0,_PixarLogCleanup,0,_putRGBcontig8bitCMYKtile,0,_putRGBAAcontig16bittile,0,_Fax3DecodeRLE,0,_DumpModeEncode,
0,_fpAcc,0,_PackBitsPreEncode,0,_NeXTDecode,0,_Fax3Close,0,_PredictorDecodeTile,0,_PixarLogEncode,0,_put2bitbwtile,0,_Luv32toRGB,0,__TIFFNoPreCode,0,_putRGBAAseparate16bittile,0,_horDiff8,0,_TIFFInitPackBits,0,_gtTileSeparate,0,_ThunderSetupDecode,0,_Luv24fromLuv48,0,__TIFFFax3fillruns,0,_PixarLogDecode,0,_Luv24fromXYZ,0,_putRGBcontig8bittile,0,_LogLuvClose,0,__tiffSeekProc,0,_NotConfigured,0,_Fax3PreDecode,0,_Fax3PostEncode,0,_PixarLogFixupTags,0,_LogLuvVGetField,0,_put8bitcmaptile,0,_putcontig8bitYCbCr12tile,
0,_PredictorSetupDecode,0,_ZIPFixupTags,0,_Luv24toXYZ,0,_TIFFInitCCITTRLE,0,__logLuvNop,0,_putCMYKseparate8bittile,0,__TIFFNoRowEncode,0,_putcontig8bitYCbCr22tile,0,_horDiff16,0,_LZWPreEncode,0,_TIFFInitThunderScan,0,__TIFFNoSeek,0,_PixarLogPreDecode,0,_PredictorPrintDir,0,_ZIPEncode,0,_Fax3Cleanup,0,_LogLuvFixupTags,0,_gtStripSeparate,0,_PixarLogSetupEncode,0,_gtStripContig,0,_PredictorDecodeRow,0,_deflate_slow,0,_putRGBcontig8bitCMYKMaptile,0,_Fax4Decode,0,_PackBitsPostEncode,0,_horAcc32,0,_putRGBUAcontig16bittile,
0,_LogLuvDecodeStrip,0,_LZWPreDecode,0,__TIFFNoRowDecode,0,_put2bitcmaptile,0,__tiffUnmapProc,0,__TIFFSwab64BitData,0,__notConfigured,0,_PixarLogVSetField,0,_Luv32fromXYZ,0,_PixarLogVGetField,0,_Fax4PostEncode,0,_TIFFInitPixarLog,0,_LZWEncode,0,_unixWarningHandler,0,_putRGBseparate8bittile,0,_PackBitsEncodeChunk,0,__TIFFVSetField,0,_horAcc16,0,_ZIPDecode,0,_TIFFInitCCITTFax3,0,_Fax3Decode2D,0,_TIFFInitCCITTFax4,0,_put4bitbwtile,0,_PixarLogSetupDecode,0,_horDiff32,0,_Luv24toLuv48,0,_swabHorAcc32,0,
_Luv32toLuv48,0,_putcontig8bitYCbCr21tile,0,_putRGBUAcontig8bittile,0,_PredictorVSetField,0,_putagreytile,0,_putRGBUAseparate8bittile,0,__tiffSizeProc,0,_ZIPCleanup,0,_Fax3Encode,0,_LogLuvDecode24,0,_putcontig8bitYCbCr41tile,0,__TIFFSwab16BitData,0,_L16toGry,0,_TIFFInitLZW,0,_PredictorEncodeRow,0,_LZWCleanup,0,_DumpModeSeek,0,_Luv32toXYZ,0,_L16fromY,0,_TIFFInitZIP,0,_LogLuvCleanup,0,_Fax3PreEncode,0,_putRGBUAseparate16bittile,0,_gtTileContig,0,_Luv24toRGB,0,_LogL16Decode,0,_Fax3PrintDir,0,_Fax3VGetField,
0,_TIFFInitNeXT,0,__TIFFNoTileEncode,0,_TIFFInitCCITTRLEW,0,_PixarLogPreEncode,0,_deflate_stored,0,_zcfree,0,_ZIPVSetField,0,__TIFFvoid,0,__TIFFSwab24BitData,0,_putcontig8bitCIELab,0,_LogLuvDecode32,0,_LogLuvSetupDecode,0,_put1bitbwtile,0,_L16toY,0,_TIFFInitDumpMode,0,__TIFFNoStripEncode,0,_Fax4Encode,0,__tiffWriteProc,0,__TIFFtrue,0,_putRGBAAcontig8bittile,0,_ZIPPreDecode,0,_ZIPSetupDecode,0,_putseparate8bitYCbCr11tile,0,__TIFFNoFixupTags,0,_LogLuvEncode24,0,_LZWFixupTags,0,_zcalloc,0,__TIFFNoPostDecode,
0,__tiffCloseProc,0,_LogLuvEncodeStrip,0,_PixarLogPostEncode,0,__TIFFNoStripDecode,0,_Fax3VSetField,0,_ZIPPostEncode,0,_put1bitcmaptile,0,_tagCompare,0,_ZIPVGetField,0,__TIFFVGetField,0,_Luv32fromLuv48,0,_swabHorAcc16,0,_PredictorVGetField,0,_Fax3Decode1D];
function _TIFFFileToRGBAData(m,d,c,a){var b=0,e=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h,l;f=m;k=d;h=c;l=a;f=_TIFFOpen(f,42136);b=0!=(f|0)?3:2;break;case 2:g=-1;b=7;break;case 3:b=k;_TIFFGetField(f,256,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,tempInt));b=h;_TIFFGetField(f,257,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,tempInt));b=Math.imul(HEAP32[k>>
2],HEAP32[h>>2])|0;b=__TIFFmalloc(b<<2);HEAP32[l>>2]=b;b=0==(l|0)?5:4;break;case 4:b=0!=(_TIFFReadRGBAImageOriented(f,HEAP32[k>>2],HEAP32[h>>2],HEAP32[l>>2],1,0)|0)?6:5;break;case 5:_TIFFClose(f);g=-1;b=7;break;case 6:_TIFFClose(f);g=0;b=7;break;case 7:return m=g,STACKTOP=e,m;default:assert(0,"bad label: "+b)}}Module._TIFFFileToRGBAData=_TIFFFileToRGBAData;
function __TIFFMultiply32(m,d,c,a){var b=0,e=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h,l;g=m;f=d;k=c;h=a;l=Math.imul(f,k)|0;b=0!=(k|0)?2:4;break;case 2:b=((l>>>0)/(k>>>0)&-1|0)!=(f|0)?3:4;break;case 3:b=h;_TIFFErrorExt(HEAP32[(g+628|0)>>2],h,42112,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,tempInt));l=0;b=4;break;case 4:return m=l,STACKTOP=e,m;default:assert(0,"bad label: "+b)}}
function __TIFFMultiply64(m,d,c,a,b,e){var g=0,f=STACKTOP;STACKTOP=STACKTOP+24|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(g=1;;)switch(g){case 1:var k,h=f,l=f+8,n,p=f+16;k=m;HEAP32[(h|0)>>2]=d;HEAP32[(h+4|0)>>2]=c;HEAP32[(l|0)>>2]=a;HEAP32[(l+4|0)>>2]=b;n=e;var g=___muldi3(HEAP32[(h|0)>>2],HEAP32[(h+4|0)>>2],HEAP32[(l|0)>>2],HEAP32[(l+4|0)>>2]),q=tempRet0;HEAP32[(p|0)>>2]=g;HEAP32[(p+4|0)>>2]=q;g=0!=(HEAP32[(l|0)>>2]|0)|0!=(HEAP32[(l+4|0)>>2]|0)?2:4;break;case 2:g=(___udivdi3(HEAP32[(p|0)>>2],HEAP32[(p+
4|0)>>2],HEAP32[(l|0)>>2],HEAP32[(l+4|0)>>2])|0)!=(HEAP32[(h|0)>>2]|0)|(tempRet0|0)!=(HEAP32[(h+4|0)>>2]|0)?3:4;break;case 3:g=n;_TIFFErrorExt(HEAP32[(k+628|0)>>2],n,42112,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=g,tempInt));HEAP32[(p|0)>>2]=0;HEAP32[(p+4|0)>>2]=0;g=4;break;case 4:return m=HEAP32[(p|0)>>2],p=HEAP32[(p+4|0)>>2],STACKTOP=f,tempRet0=p,m;default:assert(0,"bad label: "+g)}}
function __TIFFCheckRealloc(m,d,c,a,b){var e=0,g=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var f,k,h,l,n,p,q;f=m;k=d;h=c;l=a;n=b;p=0;q=Math.imul(h,l)|0;e=0!=(h|0)?2:5;break;case 2:e=0!=(l|0)?3:5;break;case 3:e=((q|0)/(l|0)&-1|0)==(h|0)?4:5;break;case 4:p=__TIFFrealloc(k,q);e=5;break;case 5:e=0==(p|0)?6:7;break;case 6:var e=n,t=h,r=l;_TIFFErrorExt(HEAP32[(f+628|0)>>2],HEAP32[(f|0)>>2],40864,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,
HEAP32[tempInt>>2]=e,HEAP32[tempInt+8>>2]=t,HEAP32[tempInt+16>>2]=r,tempInt));e=7;break;case 7:return m=p,STACKTOP=g,m;default:assert(0,"bad label: "+e)}}function __TIFFCheckMalloc(m,d,c,a){return __TIFFCheckRealloc(m,0,d,c,a)}
function _TIFFVGetFieldDefaulted(m,d,c){var a=0,b=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l;g=m;f=d;k=c;h=g+40|0;a=0!=(_TIFFVGetField(g,f,k)|0)?2:3;break;case 2:e=1;a=42;break;case 3:var n=f,a=254==(n|0)?4:258==(n|0)?5:263==(n|0)?6:266==(n|0)?7:274==(n|0)?8:277==(n|0)?9:278==(n|0)?10:280==(n|0)?11:281==(n|0)?12:284==(n|0)?13:296==(n|0)?14:317==(n|0)?15:336==(n|0)?16:332==(n|0)?17:334==(n|0)?18:338==(n|0)?19:32995==(n|0)?20:32998==(n|0)?23:32996==(n|0)?
24:339==(n|0)?25:32997==(n|0)?26:529==(n|0)?27:530==(n|0)?28:531==(n|0)?29:318==(n|0)?30:301==(n|0)?31:532==(n|0)?37:41;break;case 4:var p=HEAP32[(h+40|0)>>2],q=k,t=(tempInt=HEAP32[q+4>>2],HEAP32[q+4>>2]=tempInt+8,HEAP32[HEAP32[q>>2]+tempInt>>2]);HEAP32[t>>2]=p;e=1;a=42;break;case 5:var r=HEAP16[(h+44|0)>>1],s=k,v=(tempInt=HEAP32[s+4>>2],HEAP32[s+4>>2]=tempInt+8,HEAP32[HEAP32[s>>2]+tempInt>>2]);HEAP16[v>>1]=r;e=1;a=42;break;case 6:var u=HEAP16[(h+52|0)>>1],w=k,y=(tempInt=HEAP32[w+4>>2],HEAP32[w+4>>
2]=tempInt+8,HEAP32[HEAP32[w>>2]+tempInt>>2]);HEAP16[y>>1]=u;e=1;a=42;break;case 7:var A=HEAP16[(h+54|0)>>1],z=k,x=(tempInt=HEAP32[z+4>>2],HEAP32[z+4>>2]=tempInt+8,HEAP32[HEAP32[z>>2]+tempInt>>2]);HEAP16[x>>1]=A;e=1;a=42;break;case 8:var B=HEAP16[(h+56|0)>>1],C=k,D=(tempInt=HEAP32[C+4>>2],HEAP32[C+4>>2]=tempInt+8,HEAP32[HEAP32[C>>2]+tempInt>>2]);HEAP16[D>>1]=B;e=1;a=42;break;case 9:var F=HEAP16[(h+58|0)>>1],I=k,G=(tempInt=HEAP32[I+4>>2],HEAP32[I+4>>2]=tempInt+8,HEAP32[HEAP32[I>>2]+tempInt>>2]);HEAP16[G>>
1]=F;e=1;a=42;break;case 10:var H=HEAP32[(h+60|0)>>2],K=k,J=(tempInt=HEAP32[K+4>>2],HEAP32[K+4>>2]=tempInt+8,HEAP32[HEAP32[K>>2]+tempInt>>2]);HEAP32[J>>2]=H;e=1;a=42;break;case 11:var E=HEAP16[(h+64|0)>>1],L=k,Q=(tempInt=HEAP32[L+4>>2],HEAP32[L+4>>2]=tempInt+8,HEAP32[HEAP32[L>>2]+tempInt>>2]);HEAP16[Q>>1]=E;e=1;a=42;break;case 12:var N=HEAP16[(h+66|0)>>1],P=k,W=(tempInt=HEAP32[P+4>>2],HEAP32[P+4>>2]=tempInt+8,HEAP32[HEAP32[P>>2]+tempInt>>2]);HEAP16[W>>1]=N;e=1;a=42;break;case 13:var O=HEAP16[(h+86|
0)>>1],T=k,Y=(tempInt=HEAP32[T+4>>2],HEAP32[T+4>>2]=tempInt+8,HEAP32[HEAP32[T>>2]+tempInt>>2]);HEAP16[Y>>1]=O;e=1;a=42;break;case 14:var S=HEAP16[(h+84|0)>>1],X=k,R=(tempInt=HEAP32[X+4>>2],HEAP32[X+4>>2]=tempInt+8,HEAP32[HEAP32[X>>2]+tempInt>>2]);HEAP16[R>>1]=S;e=1;a=42;break;case 15:l=HEAP32[(g+576|0)>>2];var V=HEAP32[(l|0)>>2]&65535,aa=k,fa=(tempInt=HEAP32[aa+4>>2],HEAP32[aa+4>>2]=tempInt+8,HEAP32[HEAP32[aa>>2]+tempInt>>2]);HEAP16[fa>>1]=V;e=1;a=42;break;case 16:var Z=k,ka=(tempInt=HEAP32[Z+4>>
2],HEAP32[Z+4>>2]=tempInt+8,HEAP32[HEAP32[Z>>2]+tempInt>>2]);HEAP16[ka>>1]=0;var M=((1<<(HEAP16[(h+44|0)>>1]&65535))-1|0)&65535,ga=k,na=(tempInt=HEAP32[ga+4>>2],HEAP32[ga+4>>2]=tempInt+8,HEAP32[HEAP32[ga>>2]+tempInt>>2]);HEAP16[na>>1]=M;e=1;a=42;break;case 17:var ba=k,ca=(tempInt=HEAP32[ba+4>>2],HEAP32[ba+4>>2]=tempInt+8,HEAP32[HEAP32[ba>>2]+tempInt>>2]);e=HEAP16[ca>>1]=1;a=42;break;case 18:var oa=k,va=(tempInt=HEAP32[oa+4>>2],HEAP32[oa+4>>2]=tempInt+8,HEAP32[HEAP32[oa>>2]+tempInt>>2]);HEAP16[va>>
1]=4;e=1;a=42;break;case 19:var pa=HEAP16[(h+116|0)>>1],la=k,wa=(tempInt=HEAP32[la+4>>2],HEAP32[la+4>>2]=tempInt+8,HEAP32[HEAP32[la>>2]+tempInt>>2]);HEAP16[wa>>1]=pa;var qa=HEAP32[(h+120|0)>>2],ea=k,xa=(tempInt=HEAP32[ea+4>>2],HEAP32[ea+4>>2]=tempInt+8,HEAP32[HEAP32[ea>>2]+tempInt>>2]);HEAP32[xa>>2]=qa;e=1;a=42;break;case 20:if(1==(HEAP16[(h+116|0)>>1]&65535|0))a=21;else var ja=0,a=22;break;case 21:ja=1==(HEAP16[(HEAP32[(h+120|0)>>2]|0)>>1]&65535|0);a=22;break;case 22:var da=ja&1,Ga=k,$=(tempInt=
HEAP32[Ga+4>>2],HEAP32[Ga+4>>2]=tempInt+8,HEAP32[HEAP32[Ga>>2]+tempInt>>2]);HEAP16[$>>1]=da;e=1;a=42;break;case 23:var ma=HEAP32[(h+36|0)>>2],ra=k,Aa=(tempInt=HEAP32[ra+4>>2],HEAP32[ra+4>>2]=tempInt+8,HEAP32[HEAP32[ra>>2]+tempInt>>2]);HEAP32[Aa>>2]=ma;e=1;a=42;break;case 24:var Xa=((HEAP16[(h+46|0)>>1]&65535)-1|0)&65535,Da=k,Ua=(tempInt=HEAP32[Da+4>>2],HEAP32[Da+4>>2]=tempInt+8,HEAP32[HEAP32[Da>>2]+tempInt>>2]);HEAP16[Ua>>1]=Xa;e=1;a=42;break;case 25:var sa=HEAP16[(h+46|0)>>1],ha=k,U=(tempInt=HEAP32[ha+
4>>2],HEAP32[ha+4>>2]=tempInt+8,HEAP32[HEAP32[ha>>2]+tempInt>>2]);HEAP16[U>>1]=sa;e=1;a=42;break;case 26:var gb=HEAP32[(h+24|0)>>2],Ka=k,Ia=(tempInt=HEAP32[Ka+4>>2],HEAP32[Ka+4>>2]=tempInt+8,HEAP32[HEAP32[Ka>>2]+tempInt>>2]);HEAP32[Ia>>2]=gb;e=1;a=42;break;case 27:var ia=k,Ba=(tempInt=HEAP32[ia+4>>2],HEAP32[ia+4>>2]=tempInt+8,HEAP32[HEAP32[ia>>2]+tempInt>>2]);HEAP32[Ba>>2]=46096;e=1;a=42;break;case 28:var Ra=HEAP16[(h+152|0)>>1],Sa=k,ib=(tempInt=HEAP32[Sa+4>>2],HEAP32[Sa+4>>2]=tempInt+8,HEAP32[HEAP32[Sa>>
2]+tempInt>>2]);HEAP16[ib>>1]=Ra;var ua=HEAP16[((h+152|0)+2|0)>>1],Va=k,eb=(tempInt=HEAP32[Va+4>>2],HEAP32[Va+4>>2]=tempInt+8,HEAP32[HEAP32[Va>>2]+tempInt>>2]);HEAP16[eb>>1]=ua;e=1;a=42;break;case 29:var Ea=HEAP16[(h+156|0)>>1],Ya=k,La=(tempInt=HEAP32[Ya+4>>2],HEAP32[Ya+4>>2]=tempInt+8,HEAP32[HEAP32[Ya>>2]+tempInt>>2]);HEAP16[La>>1]=Ea;e=1;a=42;break;case 30:HEAPF32[37388]=0.3457419276237488;HEAPF32[37389]=0.3585604429244995;var Ma=k,Fa=(tempInt=HEAP32[Ma+4>>2],HEAP32[Ma+4>>2]=tempInt+8,HEAP32[HEAP32[Ma>>
2]+tempInt>>2]);HEAP32[Fa>>2]=149552;e=1;a=42;break;case 31:a=0!=(HEAP32[(h+160|0)>>2]|0)?34:32;break;case 32:a=0!=(_TIFFDefaultTransferFunction(h)|0)?34:33;break;case 33:_TIFFErrorExt(HEAP32[(g+628|0)>>2],HEAP32[(g|0)>>2],35096,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));e=0;a=42;break;case 34:var Na=HEAP32[(h+160|0)>>2],Oa=k,jb=(tempInt=HEAP32[Oa+4>>2],HEAP32[Oa+4>>2]=tempInt+8,HEAP32[HEAP32[Oa>>2]+tempInt>>
2]);HEAP32[jb>>2]=Na;a=1<((HEAP16[(h+58|0)>>1]&65535)-(HEAP16[(h+116|0)>>1]&65535)|0)?35:36;break;case 35:var Za=HEAP32[((h+160|0)+4|0)>>2],Ca=k,$a=(tempInt=HEAP32[Ca+4>>2],HEAP32[Ca+4>>2]=tempInt+8,HEAP32[HEAP32[Ca>>2]+tempInt>>2]);HEAP32[$a>>2]=Za;var ab=HEAP32[((h+160|0)+8|0)>>2],Ha=k,Wa=(tempInt=HEAP32[Ha+4>>2],HEAP32[Ha+4>>2]=tempInt+8,HEAP32[HEAP32[Ha>>2]+tempInt>>2]);HEAP32[Wa>>2]=ab;a=36;break;case 36:e=1;a=42;break;case 37:a=0!=(HEAP32[(h+172|0)>>2]|0)?40:38;break;case 38:a=0!=(_TIFFDefaultRefBlackWhite(h)|
0)?40:39;break;case 39:e=0;a=42;break;case 40:var bb=HEAP32[(h+172|0)>>2],Pa=k,Ja=(tempInt=HEAP32[Pa+4>>2],HEAP32[Pa+4>>2]=tempInt+8,HEAP32[HEAP32[Pa>>2]+tempInt>>2]);HEAP32[Ja>>2]=bb;e=1;a=42;break;case 41:e=0;a=42;break;case 42:var cb=e;STACKTOP=b;return cb;default:assert(0,"bad label: "+a)}}
function _TIFFDefaultTransferFunction(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b,e,g,f;a=m;b=a+160|0;HEAP32[(b+8|0)>>2]=0;HEAP32[(b+4|0)>>2]=0;HEAP32[(b|0)>>2]=0;d=30<=(HEAP16[(a+44|0)>>1]&65535)>>>0?2:3;break;case 2:c=0;d=23;break;case 3:g=1<<(HEAP16[(a+44|0)>>1]&65535);f=g<<1;d=__TIFFmalloc(f);HEAP32[(b|0)>>2]=d;d=0!=(d|0)?5:4;break;case 4:c=0;d=23;break;case 5:HEAP16[(HEAP32[(b|0)>>2]|0)>>1]=0;e=1;d=6;break;case 6:d=(e|0)<(g|0)?7:9;break;case 7:d=(e|0)/((g|0)-1);d=65535*Math.pow(d,2.2)+0.5;
d=Math.floor(d);d=0<=d?Math.floor(d):Math.ceil(d);HEAP16[(HEAP32[(b|0)>>2]+(e<<1)|0)>>1]=d;d=8;break;case 8:e=e+1|0;d=6;break;case 9:d=1<((HEAP16[(a+58|0)>>1]&65535)-(HEAP16[(a+116|0)>>1]&65535)|0)?10:15;break;case 10:d=__TIFFmalloc(f);HEAP32[(b+4|0)>>2]=d;d=0!=(d|0)?12:11;break;case 11:d=16;break;case 12:__TIFFmemcpy(HEAP32[(b+4|0)>>2],HEAP32[(b|0)>>2],f);d=__TIFFmalloc(f);HEAP32[(b+8|0)>>2]=d;d=0!=(d|0)?14:13;break;case 13:d=16;break;case 14:__TIFFmemcpy(HEAP32[(b+8|0)>>2],HEAP32[(b|0)>>2],f);d=
15;break;case 15:c=1;d=23;break;case 16:d=0!=(HEAP32[(b|0)>>2]|0)?17:18;break;case 17:__TIFFfree(HEAP32[(b|0)>>2]);d=18;break;case 18:d=0!=(HEAP32[(b+4|0)>>2]|0)?19:20;break;case 19:__TIFFfree(HEAP32[(b+4|0)>>2]);d=20;break;case 20:d=0!=(HEAP32[(b+8|0)>>2]|0)?21:22;break;case 21:__TIFFfree(HEAP32[(b+8|0)>>2]);d=22;break;case 22:HEAP32[(b+8|0)>>2]=0;HEAP32[(b+4|0)>>2]=0;c=HEAP32[(b|0)>>2]=0;d=23;break;case 23:return c;default:assert(0,"bad label: "+d)}}
function _NotConfigured(m,d){HEAP32[(m+504|0)>>2]=224;HEAP32[(m+500|0)>>2]=0;HEAP32[(m+508|0)>>2]=224;HEAP32[(m+520|0)>>2]=0;HEAP32[(m+516|0)>>2]=224;return 1}
function _TIFFCIELabToXYZ(m,d,c,a,b,e,g){for(var f=0,f=1;;)switch(f){case 1:var k,h,l,n,p,q,t,r,s;k=m;f=d;h=c;l=a;n=b;p=e;q=g;t=100*(f>>>0)/255;f=8.855999946594238>t?2:3;break;case 2:HEAPF32[p>>2]=t*HEAPF32[(k+20|0)>>2]/903.2919921875;r=7.7870001792907715*(HEAPF32[p>>2]/HEAPF32[(k+20|0)>>2])+0.13793103396892548;f=4;break;case 3:r=(t+16)/116;HEAPF32[p>>2]=HEAPF32[(k+20|0)>>2]*r*r*r;f=4;break;case 4:s=(h|0)/500+r;f=0.2069000005722046>s?5:6;break;case 5:HEAPF32[n>>2]=HEAPF32[(k+16|0)>>2]*(s-0.1379300057888031)/
7.7870001792907715;f=7;break;case 6:HEAPF32[n>>2]=HEAPF32[(k+16|0)>>2]*s*s*s;f=7;break;case 7:s=r-(l|0)/200;f=0.2069000005722046>s?8:9;break;case 8:HEAPF32[q>>2]=HEAPF32[(k+24|0)>>2]*(s-0.1379300057888031)/7.7870001792907715;f=10;break;case 9:HEAPF32[q>>2]=HEAPF32[(k+24|0)>>2]*s*s*s;f=10;break;case 10:return;default:assert(0,"bad label: "+f)}}
function _TIFFDefaultRefBlackWhite(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b;a=m;d=__TIFFmalloc(24);HEAP32[(a+172|0)>>2]=d;d=0!=(d|0)?3:2;break;case 2:c=0;d=11;break;case 3:d=6==(HEAP16[(a+50|0)>>1]&65535|0)?4:5;break;case 4:HEAPF32[(HEAP32[(a+172|0)>>2]|0)>>2]=0;HEAPF32[(HEAP32[(a+172|0)>>2]+20|0)>>2]=255;HEAPF32[(HEAP32[(a+172|0)>>2]+12|0)>>2]=255;HEAPF32[(HEAP32[(a+172|0)>>2]+4|0)>>2]=255;HEAPF32[(HEAP32[(a+172|0)>>2]+16|0)>>2]=128;HEAPF32[(HEAP32[(a+172|0)>>2]+8|0)>>2]=128;d=10;break;case 5:b=
0;d=6;break;case 6:d=3>(b|0)?7:9;break;case 7:HEAPF32[(HEAP32[(a+172|0)>>2]+((b<<1|0)<<2)|0)>>2]=0;HEAPF32[(HEAP32[(a+172|0)>>2]+(((b<<1)+1|0)<<2)|0)>>2]=(1<<(HEAP16[(a+44|0)>>1]&65535))-1|0;d=8;break;case 8:b=b+1|0;d=6;break;case 9:d=10;break;case 10:c=1;d=11;break;case 11:return c;default:assert(0,"bad label: "+d)}}
function _TIFFGetFieldDefaulted(m,d,c){var a=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;var b=a|0;HEAP32[b>>2]=c;HEAP32[b+4>>2]=0;m=_TIFFVGetFieldDefaulted(m,d,a|0);STACKTOP=a;return m}
function _TIFFCleanup(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b,e;c=m;d=0!=(HEAP32[(c+8|0)>>2]|0)?2:3;break;case 2:_TIFFFlush(c);d=3;break;case 3:FUNCTION_TABLE[HEAP32[(c+564|0)>>2]](c);_TIFFFreeDirectory(c);d=0!=(HEAP32[(c+32|0)>>2]|0)?4:5;break;case 4:__TIFFfree(HEAP32[(c+32|0)>>2]);d=5;break;case 5:d=6;break;case 6:d=0!=(HEAP32[(c+680|0)>>2]|0)?7:8;break;case 7:d=HEAP32[(c+680|0)>>2];HEAP32[(c+680|0)>>2]=HEAP32[(d|0)>>2];__TIFFfree(HEAP32[(d+8|0)>>2]);__TIFFfree(d);d=6;break;case 8:d=0!=
(HEAP32[(c+588|0)>>2]|0)?9:11;break;case 9:d=0!=(HEAP32[(c+12|0)>>2]&512|0)?10:11;break;case 10:__TIFFfree(HEAP32[(c+588|0)>>2]);d=11;break;case 11:d=0!=(HEAP32[(c+12|0)>>2]&2048|0)?12:13;break;case 12:d=HEAP32[(c+616|0)>>2];FUNCTION_TABLE[HEAP32[(c+624|0)>>2]](HEAP32[(c+628|0)>>2],HEAP32[(c+612|0)>>2],d,0>(d|0)?-1:0);d=13;break;case 13:d=0!=(HEAP32[(c+656|0)>>2]|0)?14:23;break;case 14:d=0<HEAP32[(c+660|0)>>2]>>>0?15:23;break;case 15:a=0;d=16;break;case 16:d=a>>>0<HEAP32[(c+660|0)>>2]>>>0?17:22;break;
case 17:b=HEAP32[(HEAP32[(c+656|0)>>2]+(a<<2)|0)>>2];d=65==(HEAP16[(b+24|0)>>1]&65535|0)?18:20;break;case 18:d=0==(_strncmp(31384,HEAP32[(b+28|0)>>2],4)|0)?19:20;break;case 19:__TIFFfree(HEAP32[(b+28|0)>>2]);__TIFFfree(b);d=20;break;case 20:d=21;break;case 21:a=a+1|0;d=16;break;case 22:__TIFFfree(HEAP32[(c+656|0)>>2]);d=23;break;case 23:d=0<HEAP32[(c+688|0)>>2]>>>0?24:31;break;case 24:e=0;d=25;break;case 25:d=e>>>0<HEAP32[(c+688|0)>>2]>>>0?26:30;break;case 26:d=0!=(HEAP32[((HEAP32[(c+684|0)>>2]+(e<<
4)|0)+4|0)>>2]|0)?27:28;break;case 27:__TIFFfree(HEAP32[((HEAP32[(c+684|0)>>2]+(e<<4)|0)+12|0)>>2]);d=28;break;case 28:d=29;break;case 29:e=e+1|0;d=25;break;case 30:__TIFFfree(HEAP32[(c+684|0)>>2]);d=31;break;case 31:__TIFFfree(c);return;default:assert(0,"bad label: "+d)}}function _TIFFClose(m){var d,c;d=HEAP32[(m+644|0)>>2];c=HEAP32[(m+628|0)>>2];_TIFFCleanup(m);FUNCTION_TABLE[d](c)}
function __notConfigured(m){var d=0,c=STACKTOP;STACKTOP=STACKTOP+24|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b=c,d=m;a=_TIFFFindCODEC(HEAP16[((d+40|0)+48|0)>>1]);var e=HEAP16[((d+40|0)+48|0)>>1]&65535;_sprintf(b|0,36448,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));var e=HEAP32[(d+628|0)>>2],g=HEAP32[(d|0)>>2],d=0!=(a|0)?2:3;break;case 2:var f=HEAP32[(a|0)>>2],d=4;break;case 3:f=b|0;d=4;break;case 4:return _TIFFErrorExt(e,
g,35632,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=f,tempInt)),STACKTOP=c,0;default:assert(0,"bad label: "+d)}}
function _TIFFXYZToRGB(m,d,c,a,b,e,g){for(var f=0,f=1;;)switch(f){case 1:var k,h,l,n,p,q,t,r,s,v;k=m;h=d;f=c;l=a;n=b;p=e;q=g;v=k+28|0;r=HEAPF32[(v|0)>>2]*h+HEAPF32[(v+4|0)>>2]*f+HEAPF32[(v+8|0)>>2]*l;s=HEAPF32[(v+12|0)>>2]*h+HEAPF32[(v+16|0)>>2]*f+HEAPF32[(v+20|0)>>2]*l;h=HEAPF32[(v+24|0)>>2]*h+HEAPF32[(v+28|0)>>2]*f+HEAPF32[(v+32|0)>>2]*l;f=r>HEAPF32[((k+28|0)+60|0)>>2]?2:3;break;case 2:var u=r,f=4;break;case 3:u=HEAPF32[((k+28|0)+60|0)>>2];f=4;break;case 4:r=u;f=s>HEAPF32[((k+28|0)+64|0)>>2]?5:
6;break;case 5:var w=s,f=7;break;case 6:w=HEAPF32[((k+28|0)+64|0)>>2];f=7;break;case 7:s=w;f=h>HEAPF32[((k+28|0)+68|0)>>2]?8:9;break;case 8:var y=h,f=10;break;case 9:y=HEAPF32[((k+28|0)+68|0)>>2];f=10;break;case 10:h=y;f=r<HEAPF32[((k+28|0)+36|0)>>2]?11:12;break;case 11:var A=r,f=13;break;case 12:A=HEAPF32[((k+28|0)+36|0)>>2];f=13;break;case 13:r=A;f=s<HEAPF32[((k+28|0)+40|0)>>2]?14:15;break;case 14:var z=s,f=16;break;case 15:z=HEAPF32[((k+28|0)+40|0)>>2];f=16;break;case 16:s=z;f=h<HEAPF32[((k+28|
0)+44|0)>>2]?17:18;break;case 17:var x=h,f=19;break;case 18:x=HEAPF32[((k+28|0)+44|0)>>2];f=19;break;case 19:h=x;t=(r-HEAPF32[((k+28|0)+60|0)>>2])/HEAPF32[(k+4|0)>>2]&-1;f=(HEAP32[(k|0)>>2]|0)<(t|0)?20:21;break;case 20:var B=HEAP32[(k|0)>>2],f=22;break;case 21:B=t;f=22;break;case 22:t=B;f=0<HEAPF32[((k+112|0)+(t<<2)|0)>>2]?23:24;break;case 23:var C=HEAPF32[((k+112|0)+(t<<2)|0)>>2]+0.5,f=25;break;case 24:C=HEAPF32[((k+112|0)+(t<<2)|0)>>2]-0.5;f=25;break;case 25:t=0<=C?Math.floor(C):Math.ceil(C);HEAP32[n>>
2]=t;t=(s-HEAPF32[((k+28|0)+64|0)>>2])/HEAPF32[(k+8|0)>>2]&-1;f=(HEAP32[(k|0)>>2]|0)<(t|0)?26:27;break;case 26:var D=HEAP32[(k|0)>>2],f=28;break;case 27:D=t;f=28;break;case 28:t=D;f=0<HEAPF32[((k+6116|0)+(t<<2)|0)>>2]?29:30;break;case 29:var F=HEAPF32[((k+6116|0)+(t<<2)|0)>>2]+0.5,f=31;break;case 30:F=HEAPF32[((k+6116|0)+(t<<2)|0)>>2]-0.5;f=31;break;case 31:t=0<=F?Math.floor(F):Math.ceil(F);HEAP32[p>>2]=t;t=(h-HEAPF32[((k+28|0)+68|0)>>2])/HEAPF32[(k+12|0)>>2]&-1;f=(HEAP32[(k|0)>>2]|0)<(t|0)?32:33;
break;case 32:var I=HEAP32[(k|0)>>2],f=34;break;case 33:I=t;f=34;break;case 34:t=I;f=0<HEAPF32[((k+12120|0)+(t<<2)|0)>>2]?35:36;break;case 35:var G=HEAPF32[((k+12120|0)+(t<<2)|0)>>2]+0.5,f=37;break;case 36:G=HEAPF32[((k+12120|0)+(t<<2)|0)>>2]-0.5;f=37;break;case 37:f=0<=G?Math.floor(G):Math.ceil(G);HEAP32[q>>2]=f;f=HEAP32[n>>2]>>>0<HEAP32[((k+28|0)+48|0)>>2]>>>0?38:39;break;case 38:var H=HEAP32[n>>2],f=40;break;case 39:H=HEAP32[((k+28|0)+48|0)>>2];f=40;break;case 40:HEAP32[n>>2]=H;f=HEAP32[p>>2]>>>
0<HEAP32[((k+28|0)+52|0)>>2]>>>0?41:42;break;case 41:var K=HEAP32[p>>2],f=43;break;case 42:K=HEAP32[((k+28|0)+52|0)>>2];f=43;break;case 43:HEAP32[p>>2]=K;f=HEAP32[q>>2]>>>0<HEAP32[((k+28|0)+56|0)>>2]>>>0?44:45;break;case 44:var J=HEAP32[q>>2],f=46;break;case 45:J=HEAP32[((k+28|0)+56|0)>>2];f=46;break;case 46:HEAP32[q>>2]=J;return;default:assert(0,"bad label: "+f)}}
function _TIFFYCbCrtoRGB(m,d,c,a,b,e,g){for(var f=0,f=1;;)switch(f){case 1:var k,h,l,n,p,q,t,r;k=m;h=d;l=c;n=a;p=b;q=e;t=g;f=255<h>>>0?2:3;break;case 2:var s=255,f=4;break;case 3:s=h;f=4;break;case 4:h=s;f=0>(l|0)?5:6;break;case 5:var v=0,f=10;break;case 6:f=255<(l|0)?7:8;break;case 7:var u=255,f=9;break;case 8:u=l;f=9;break;case 9:v=u;f=10;break;case 10:l=v;f=0>(n|0)?11:12;break;case 11:var w=0,f=16;break;case 12:f=255<(n|0)?13:14;break;case 13:var y=255,f=15;break;case 14:y=n;f=15;break;case 15:w=
y;f=16;break;case 16:n=w;r=HEAP32[(HEAP32[(k+20|0)>>2]+(h<<2)|0)>>2]+HEAP32[(HEAP32[(k+4|0)>>2]+(n<<2)|0)>>2]|0;f=0>(r|0)?17:18;break;case 17:var A=0,f=22;break;case 18:f=255<(r|0)?19:20;break;case 19:var z=255,f=21;break;case 20:z=r;f=21;break;case 21:A=z;f=22;break;case 22:HEAP32[p>>2]=A;r=HEAP32[(HEAP32[(k+20|0)>>2]+(h<<2)|0)>>2]+((HEAP32[(HEAP32[(k+16|0)>>2]+(l<<2)|0)>>2]+HEAP32[(HEAP32[(k+12|0)>>2]+(n<<2)|0)>>2]|0)>>16)|0;f=0>(r|0)?23:24;break;case 23:var x=0,f=28;break;case 24:f=255<(r|0)?25:
26;break;case 25:var B=255,f=27;break;case 26:B=r;f=27;break;case 27:x=B;f=28;break;case 28:HEAP32[q>>2]=x;r=HEAP32[(HEAP32[(k+20|0)>>2]+(h<<2)|0)>>2]+HEAP32[(HEAP32[(k+8|0)>>2]+(l<<2)|0)>>2]|0;f=0>(r|0)?29:30;break;case 29:var C=0,f=34;break;case 30:f=255<(r|0)?31:32;break;case 31:var D=255,f=33;break;case 32:D=r;f=33;break;case 33:C=D;f=34;break;case 34:HEAP32[t>>2]=C;return;default:assert(0,"bad label: "+f)}}
function _TIFFCIELabToRGBInit(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f;b=m;e=d;g=c;HEAP32[(b|0)>>2]=1500;__TIFFmemcpy(b+28|0,e,84);f=1/HEAPF32[((b+28|0)+72|0)>>2];HEAPF32[(b+4|0)>>2]=(HEAPF32[((b+28|0)+36|0)>>2]-HEAPF32[((b+28|0)+60|0)>>2])/(HEAP32[(b|0)>>2]|0);e=0;a=2;break;case 2:a=(e|0)<=(HEAP32[(b|0)>>2]|0)?3:5;break;case 3:var a=HEAP32[((b+28|0)+48|0)>>2]>>>0,k=Math.pow((e|0)/(HEAP32[(b|0)>>2]|0),f);HEAPF32[((b+112|0)+(e<<2)|0)>>2]=a*k;a=4;break;case 4:e=e+1|0;a=2;break;case 5:f=
1/HEAPF32[((b+28|0)+76|0)>>2];HEAPF32[(b+8|0)>>2]=(HEAPF32[((b+28|0)+36|0)>>2]-HEAPF32[((b+28|0)+60|0)>>2])/(HEAP32[(b|0)>>2]|0);e=0;a=6;break;case 6:a=(e|0)<=(HEAP32[(b|0)>>2]|0)?7:9;break;case 7:a=HEAP32[((b+28|0)+52|0)>>2]>>>0;k=Math.pow((e|0)/(HEAP32[(b|0)>>2]|0),f);HEAPF32[((b+6116|0)+(e<<2)|0)>>2]=a*k;a=8;break;case 8:e=e+1|0;a=6;break;case 9:f=1/HEAPF32[((b+28|0)+80|0)>>2];HEAPF32[(b+12|0)>>2]=(HEAPF32[((b+28|0)+36|0)>>2]-HEAPF32[((b+28|0)+60|0)>>2])/(HEAP32[(b|0)>>2]|0);e=0;a=10;break;case 10:a=
(e|0)<=(HEAP32[(b|0)>>2]|0)?11:13;break;case 11:a=HEAP32[((b+28|0)+56|0)>>2]>>>0;k=Math.pow((e|0)/(HEAP32[(b|0)>>2]|0),f);HEAPF32[((b+12120|0)+(e<<2)|0)>>2]=a*k;a=12;break;case 12:e=e+1|0;a=10;break;case 13:return HEAPF32[(b+16|0)>>2]=HEAPF32[(g|0)>>2],HEAPF32[(b+20|0)>>2]=HEAPF32[(g+4|0)>>2],HEAPF32[(b+24|0)>>2]=HEAPF32[(g+8|0)>>2],0;default:assert(0,"bad label: "+a)}}function __TIFFNoFixupTags(m){return 1}function __TIFFNoPreCode(m,d){return 1}function __TIFFtrue(m){return 1}
function __TIFFvoid(m){}
function __TIFFSetDefaultCompressionState(m){HEAP32[(m+504|0)>>2]=368;HEAP32[(m+500|0)>>2]=1;HEAP32[(m+508|0)>>2]=358;HEAP32[(m+512|0)>>2]=118;HEAP32[(m+532|0)>>2]=216;HEAP32[(m+540|0)>>2]=384;HEAP32[(m+548|0)>>2]=20;HEAP32[(m+520|0)>>2]=1;HEAP32[(m+516|0)>>2]=358;HEAP32[(m+524|0)>>2]=118;HEAP32[(m+528|0)>>2]=358;HEAP32[(m+536|0)>>2]=170;HEAP32[(m+544|0)>>2]=352;HEAP32[(m+552|0)>>2]=324;HEAP32[(m+556|0)>>2]=336;HEAP32[(m+560|0)>>2]=180;HEAP32[(m+564|0)>>2]=336;HEAP32[(m+568|0)>>2]=86;HEAP32[(m+572|
0)>>2]=88;m=m+12|0;HEAP32[m>>2]&=-131329}
function _TIFFFindCODEC(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b,e;a=m;e=HEAP32[37146];d=2;break;case 2:d=0!=(e|0)?3:7;break;case 3:d=(HEAP16[(HEAP32[(e+4|0)>>2]+4|0)>>1]&65535|0)==(a&65535|0)?4:5;break;case 4:c=HEAP32[(e+4|0)>>2];d=14;break;case 5:d=6;break;case 6:e=HEAP32[(e|0)>>2];d=2;break;case 7:b=45200;d=8;break;case 8:d=0!=(HEAP32[(b|0)>>2]|0)?9:13;break;case 9:d=(HEAP16[(b+4|0)>>1]&65535|0)==(a&65535|0)?10:11;break;case 10:c=b;d=14;break;case 11:d=12;break;case 12:b=b+12|0;d=8;break;
case 13:c=0;d=14;break;case 14:return c;default:assert(0,"bad label: "+d)}}
function _TIFFYCbCrToRGBInit(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k,h,l,n,p,q,t,r;b=m;e=d;g=c;f=b+24|0;__TIFFmemset(f,0,256);f=k=f+256|0;HEAP32[(b|0)>>2]=k;k=0;a=2;break;case 2:a=256>(k|0)?3:5;break;case 3:HEAP8[f+k|0]=k&255;a=4;break;case 4:k=k+1|0;a=2;break;case 5:__TIFFmemset(f+256|0,255,512);HEAP32[(b+4|0)>>2]=f+768|0;HEAP32[(b+8|0)>>2]=HEAP32[(b+4|0)>>2]+1024|0;HEAP32[(b+12|0)>>2]=HEAP32[(b+8|0)>>2]+1024|0;HEAP32[(b+16|0)>>2]=HEAP32[(b+12|0)>>2]+1024|0;HEAP32[(b+20|0)>>2]=HEAP32[(b+
16|0)>>2]+1024|0;h=2-2*HEAPF32[(e|0)>>2];l=65536*h+0.5&-1;h=HEAPF32[(e|0)>>2]*h/HEAPF32[(e+4|0)>>2];h=-(65536*h+0.5&-1)|0;n=2-2*HEAPF32[(e+8|0)>>2];p=65536*n+0.5&-1;n=HEAPF32[(e+8|0)>>2]*n/HEAPF32[(e+4|0)>>2];n=-(65536*n+0.5&-1)|0;k=0;q=-128;a=6;break;case 6:a=256>(k|0)?7:18;break;case 7:var s=127*(q-(HEAPF32[(g+16|0)>>2]-128&-1)|0),a=0!=HEAPF32[(g+20|0)>>2]-128-(HEAPF32[(g+16|0)>>2]-128)?8:9;break;case 8:var v=HEAPF32[(g+20|0)>>2]-128-(HEAPF32[(g+16|0)>>2]-128),a=10;break;case 9:v=1;a=10;break;case 10:t=
s/v&-1;var u=127*(q-(HEAPF32[(g+8|0)>>2]-128&-1)|0),a=0!=HEAPF32[(g+12|0)>>2]-128-(HEAPF32[(g+8|0)>>2]-128)?11:12;break;case 11:var w=HEAPF32[(g+12|0)>>2]-128-(HEAPF32[(g+8|0)>>2]-128),a=13;break;case 12:w=1;a=13;break;case 13:r=u/w&-1;a=((Math.imul(l,t)|0)+32768|0)>>16;HEAP32[(HEAP32[(b+4|0)>>2]+(k<<2)|0)>>2]=a;a=((Math.imul(p,r)|0)+32768|0)>>16;HEAP32[(HEAP32[(b+8|0)>>2]+(k<<2)|0)>>2]=a;a=Math.imul(h,t)|0;HEAP32[(HEAP32[(b+12|0)>>2]+(k<<2)|0)>>2]=a;r=(Math.imul(n,r)|0)+32768|0;HEAP32[(HEAP32[(b+
16|0)>>2]+(k<<2)|0)>>2]=r;r=255*((q+128|0)-(HEAPF32[(g|0)>>2]&-1)|0);a=0!=HEAPF32[(g+4|0)>>2]-HEAPF32[(g|0)>>2]?14:15;break;case 14:var y=HEAPF32[(g+4|0)>>2]-HEAPF32[(g|0)>>2],a=16;break;case 15:y=1;a=16;break;case 16:HEAP32[(HEAP32[(b+20|0)>>2]+(k<<2)|0)>>2]=r/y&-1;a=17;break;case 17:k=k+1|0;q=q+1|0;a=6;break;case 18:return 0;default:assert(0,"bad label: "+a)}}function __TIFFNoRowEncode(m,d,c,a){return _TIFFNoEncode(m,35080)}
function _TIFFNoEncode(m,d){var c=0,a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e,g;b=m;e=d;g=_TIFFFindCODEC(HEAP16[((b+40|0)+48|0)>>1]);c=0!=(g|0)?2:3;break;case 2:var c=HEAP32[(g|0)>>2],f=e;_TIFFErrorExt(HEAP32[(b+628|0)>>2],HEAP32[(b|0)>>2],41936,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=c,HEAP32[tempInt+8>>2]=f,tempInt));c=4;break;case 3:c=HEAP16[((b+40|0)+48|0)>>1]&65535;f=e;_TIFFErrorExt(HEAP32[(b+628|
0)>>2],HEAP32[(b|0)>>2],41304,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=c,HEAP32[tempInt+8>>2]=f,tempInt));c=4;break;case 4:return STACKTOP=a,-1;default:assert(0,"bad label: "+c)}}function __TIFFNoStripEncode(m,d,c,a){return _TIFFNoEncode(m,40840)}function __TIFFNoTileEncode(m,d,c,a){return _TIFFNoEncode(m,34008)}function __TIFFNoRowDecode(m,d,c,a){return _TIFFNoDecode(m,35080)}
function _TIFFNoDecode(m,d){var c=0,a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e,g;b=m;e=d;g=_TIFFFindCODEC(HEAP16[((b+40|0)+48|0)>>1]);c=0!=(g|0)?2:3;break;case 2:var c=HEAP32[(g|0)>>2],f=e;_TIFFErrorExt(HEAP32[(b+628|0)>>2],HEAP32[(b|0)>>2],23904,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=c,HEAP32[tempInt+8>>2]=f,tempInt));c=4;break;case 3:c=HEAP16[((b+40|0)+48|0)>>1]&65535;f=e;_TIFFErrorExt(HEAP32[(b+628|
0)>>2],HEAP32[(b|0)>>2],23280,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=c,HEAP32[tempInt+8>>2]=f,tempInt));c=4;break;case 4:return STACKTOP=a,-1;default:assert(0,"bad label: "+c)}}function __TIFFNoStripDecode(m,d,c,a){return _TIFFNoDecode(m,40840)}function __TIFFNoTileDecode(m,d,c,a){return _TIFFNoDecode(m,34008)}
function __TIFFNoSeek(m,d){var c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;_TIFFErrorExt(HEAP32[(m+628|0)>>2],HEAP32[(m|0)>>2],30952,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));STACKTOP=c;return 0}
function _TIFFSetCompressionScheme(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e;a=m;b=d;e=_TIFFFindCODEC(b&65535);__TIFFSetDefaultCompressionState(a);c=0!=(e|0)?2:3;break;case 2:var g=FUNCTION_TABLE[HEAP32[(e+8|0)>>2]](a,b),c=4;break;case 3:g=1;c=4;break;case 4:return g;default:assert(0,"bad label: "+c)}}
function _setByteArray(m,d,c,a){for(var b=0,b=1;;)switch(b){case 1:var e,g,f,k,h;e=m;g=d;f=c;k=a;b=0!=(HEAP32[e>>2]|0)?2:3;break;case 2:__TIFFfree(HEAP32[e>>2]);HEAP32[e>>2]=0;b=3;break;case 3:b=0!=(g|0)?4:10;break;case 4:h=Math.imul(f,k)|0;b=0!=(k|0)?5:7;break;case 5:b=((h>>>0)/(k>>>0)&-1|0)==(f|0)?6:7;break;case 6:b=__TIFFmalloc(h);HEAP32[e>>2]=b;b=7;break;case 7:b=0!=(HEAP32[e>>2]|0)?8:9;break;case 8:__TIFFmemcpy(HEAP32[e>>2],g,h);b=9;break;case 9:b=10;break;case 10:return;default:assert(0,"bad label: "+
b)}}function __TIFFsetNString(m,d,c){_setByteArray(m,d,c,1)}function __TIFFsetShortArray(m,d,c){_setByteArray(m,d,c,2)}function __TIFFsetLong8Array(m,d,c){_setByteArray(m,d,c,8)}function __TIFFsetFloatArray(m,d,c){_setByteArray(m,d,c,4)}function __TIFFsetDoubleArray(m,d,c){_setByteArray(m,d,c,8)}function _TIFFSetField(m,d,c){var a=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;var b=a|0;HEAP32[b>>2]=c;HEAP32[b+4>>2]=0;m=_TIFFVSetField(m,d,a|0);STACKTOP=a;return m}
function _TIFFVSetField(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g;b=m;e=d;g=c;a=0!=(_OkToChangeTag(b,e)|0)?2:3;break;case 2:var f=FUNCTION_TABLE[HEAP32[(b+668|0)>>2]](b,e,g),a=4;break;case 3:f=0;a=4;break;case 4:return f;default:assert(0,"bad label: "+a)}}
function _OkToChangeTag(m,d){var c=0,a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e,g,f;e=m;g=d;f=_TIFFFindField(e,g,0);c=0!=(f|0)?3:2;break;case 2:c=HEAP32[(e|0)>>2];b=65535<g>>>0?40528:149048;var k=g;_TIFFErrorExt(HEAP32[(e+628|0)>>2],32152,31840,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=c,HEAP32[tempInt+8>>2]=b,HEAP32[tempInt+16>>2]=k,tempInt));b=0;c=8;break;case 3:c=257!=(g|0)?4:7;break;case 4:c=0!=(HEAP32[(e+
12|0)>>2]&64|0)?5:7;break;case 5:c=0!=HEAP8[f+26|0]<<24>>24?7:6;break;case 6:c=HEAP32[(e|0)>>2];b=HEAP32[(f+28|0)>>2];_TIFFErrorExt(HEAP32[(e+628|0)>>2],32152,31536,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=c,HEAP32[tempInt+8>>2]=b,tempInt));b=0;c=8;break;case 7:b=1;c=8;break;case 8:return e=b,STACKTOP=a,e;default:assert(0,"bad label: "+c)}}
function _TIFFGetField(m,d,c){var a=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;var b=a|0;HEAP32[b>>2]=c;HEAP32[b+4>>2]=0;m=_TIFFVGetField(m,d,a|0);STACKTOP=a;return m}
function _TIFFVGetField(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f;b=m;e=d;g=c;f=_TIFFFindField(b,e,0);a=0!=(f|0)?2:5;break;case 2:a=65535<e>>>0?4:3;break;case 3:a=0!=(HEAP32[((b+40|0)+(((HEAP16[(f+24|0)>>1]&65535|0)/32&-1)<<2)|0)>>2]&1<<(HEAP16[(f+24|0)>>1]&31)|0)?4:5;break;case 4:var k=FUNCTION_TABLE[HEAP32[((b+668|0)+4|0)>>2]](b,e,g),a=6;break;case 5:k=0;a=6;break;case 6:return k;default:assert(0,"bad label: "+a)}}
function _TIFFFreeDirectory(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b;c=m;a=c+40|0;__TIFFmemset(a|0,0,4);d=0!=(HEAP32[(a+68|0)>>2]|0)?2:3;break;case 2:__TIFFfree(HEAP32[(a+68|0)>>2]);HEAP32[(a+68|0)>>2]=0;d=3;break;case 3:d=0!=(HEAP32[(a+72|0)>>2]|0)?4:5;break;case 4:__TIFFfree(HEAP32[(a+72|0)>>2]);HEAP32[(a+72|0)>>2]=0;d=5;break;case 5:d=0!=(HEAP32[(a+100|0)>>2]|0)?6:7;break;case 6:__TIFFfree(HEAP32[(a+100|0)>>2]);HEAP32[(a+100|0)>>2]=0;d=7;break;case 7:d=0!=(HEAP32[((a+100|0)+4|0)>>2]|0)?
8:9;break;case 8:__TIFFfree(HEAP32[((a+100|0)+4|0)>>2]);HEAP32[((a+100|0)+4|0)>>2]=0;d=9;break;case 9:d=0!=(HEAP32[((a+100|0)+8|0)>>2]|0)?10:11;break;case 10:__TIFFfree(HEAP32[((a+100|0)+8|0)>>2]);HEAP32[((a+100|0)+8|0)>>2]=0;d=11;break;case 11:d=0!=(HEAP32[(a+120|0)>>2]|0)?12:13;break;case 12:__TIFFfree(HEAP32[(a+120|0)>>2]);HEAP32[(a+120|0)>>2]=0;d=13;break;case 13:d=0!=(HEAP32[(a+148|0)>>2]|0)?14:15;break;case 14:__TIFFfree(HEAP32[(a+148|0)>>2]);HEAP32[(a+148|0)>>2]=0;d=15;break;case 15:d=0!=(HEAP32[(a+
180|0)>>2]|0)?16:17;break;case 16:__TIFFfree(HEAP32[(a+180|0)>>2]);HEAP32[(a+180|0)>>2]=0;d=17;break;case 17:d=0!=(HEAP32[(a+172|0)>>2]|0)?18:19;break;case 18:__TIFFfree(HEAP32[(a+172|0)>>2]);HEAP32[(a+172|0)>>2]=0;d=19;break;case 19:d=0!=(HEAP32[(a+160|0)>>2]|0)?20:21;break;case 20:__TIFFfree(HEAP32[(a+160|0)>>2]);HEAP32[(a+160|0)>>2]=0;d=21;break;case 21:d=0!=(HEAP32[((a+160|0)+4|0)>>2]|0)?22:23;break;case 22:__TIFFfree(HEAP32[((a+160|0)+4|0)>>2]);HEAP32[((a+160|0)+4|0)>>2]=0;d=23;break;case 23:d=
0!=(HEAP32[((a+160|0)+8|0)>>2]|0)?24:25;break;case 24:__TIFFfree(HEAP32[((a+160|0)+8|0)>>2]);HEAP32[((a+160|0)+8|0)>>2]=0;d=25;break;case 25:d=0!=(HEAP32[(a+132|0)>>2]|0)?26:27;break;case 26:__TIFFfree(HEAP32[(a+132|0)>>2]);HEAP32[(a+132|0)>>2]=0;d=27;break;case 27:d=0!=(HEAP32[(a+136|0)>>2]|0)?28:29;break;case 28:__TIFFfree(HEAP32[(a+136|0)>>2]);HEAP32[(a+136|0)>>2]=0;d=29;break;case 29:d=(c+40|0)+4|0;HEAP32[d>>2]&=-129;d=(c+40|0)+4|0;HEAP32[d>>2]&=-257;b=0;d=30;break;case 30:d=(b|0)<(HEAP32[(a+
184|0)>>2]|0)?31:35;break;case 31:d=0!=(HEAP32[((HEAP32[(a+188|0)>>2]+(12*b&-1)|0)+8|0)>>2]|0)?32:33;break;case 32:__TIFFfree(HEAP32[((HEAP32[(a+188|0)>>2]+(12*b&-1)|0)+8|0)>>2]);d=33;break;case 33:d=34;break;case 34:b=b+1|0;d=30;break;case 35:HEAP32[(a+184|0)>>2]=0;d=0!=(HEAP32[(a+188|0)>>2]|0)?36:37;break;case 36:__TIFFfree(HEAP32[(a+188|0)>>2]);HEAP32[(a+188|0)>>2]=0;d=37;break;case 37:return;default:assert(0,"bad label: "+d)}}
function _TIFFCreateDirectory(m){_TIFFDefaultDirectory(m);var d=m+16|0;HEAP32[(d|0)>>2]=0;HEAP32[(d+4|0)>>2]=0;d=m+24|0;HEAP32[(d|0)>>2]=0;HEAP32[(d+4|0)>>2]=0;d=m+456|0;HEAP32[(d|0)>>2]=0;HEAP32[(d+4|0)>>2]=0;HEAP32[(m+444|0)>>2]=-1;HEAP32[(m+452|0)>>2]=-1;return 0}
function _TIFFDefaultDirectory(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a;a=m;var d=a+40|0,b=__TIFFGetFields();__TIFFSetupFields(a,b);__TIFFmemset(d,0,192);HEAP16[(d+54|0)>>1]=1;HEAP16[(d+44|0)>>1]=1;HEAP16[(d+52|0)>>1]=1;HEAP16[(d+56|0)>>1]=1;HEAP16[(d+58|0)>>1]=1;HEAP32[(d+60|0)>>2]=-1;HEAP32[(d+28|0)>>2]=0;HEAP32[(d+32|0)>>2]=0;HEAP32[(d+36|0)>>2]=1;HEAP32[(d+140|0)>>2]=1;HEAP16[(d+84|0)>>1]=2;HEAP16[(d+46|0)>>1]=1;HEAP32[(d+24|0)>>2]=1;HEAP16[(d+
152|0)>>1]=2;HEAP16[((d+152|0)+2|0)>>1]=2;HEAP16[(d+156|0)>>1]=1;HEAP32[(a+652|0)>>2]=376;HEAP32[(a+664|0)>>2]=0;HEAP32[(a+668|0)>>2]=244;HEAP32[((a+668|0)+4|0)>>2]=396;HEAP32[((a+668|0)+8|0)>>2]=0;d=0!=(HEAP32[37384]|0)?2:3;break;case 2:FUNCTION_TABLE[HEAP32[37384]](a);d=3;break;case 3:return _TIFFSetField(a,259,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=1,tempInt)),m=a+12|0,HEAP32[m>>2]&=-9,a=a+12|0,HEAP32[a>>2]&=-1025,STACKTOP=c,1;default:assert(0,
"bad label: "+d)}}
function __TIFFVSetField(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+104|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l,n,p,q=b,t,r,s,v=b+8,u,w,y,A,z,x,B=b+16,C,D=b+24,F=b+32,I=b+40,G=b+48,H=b+56,K=b+64,J=b+72,E=b+80,L=b+88,Q=b+96,N,P,W;g=m;f=d;k=c;h=g+40|0;l=1;r=_TIFFFindField(g,f,0);s=f;a=65==(HEAP16[(r+24|0)>>1]&65535|0)?2:3;break;case 2:s=0;a=3;break;case 3:var O=s,a=254==(O|0)?4:256==(O|0)?5:257==(O|0)?6:258==(O|0)?7:259==(O|0)?27:262==(O|0)?35:263==(O|0)?36:
266==(O|0)?37:274==(O|0)?41:277==(O|0)?46:278==(O|0)?49:280==(O|0)?54:281==(O|0)?55:340==(O|0)?56:341==(O|0)?60:282==(O|0)?64:283==(O|0)?65:284==(O|0)?66:286==(O|0)?70:287==(O|0)?71:296==(O|0)?72:297==(O|0)?76:321==(O|0)?77:320==(O|0)?78:338==(O|0)?79:32995==(O|0)?82:322==(O|0)?85:323==(O|0)?90:32998==(O|0)?95:32996==(O|0)?98:339==(O|0)?105:32997==(O|0)?119:330==(O|0)?120:531==(O|0)?124:530==(O|0)?125:301==(O|0)?126:532==(O|0)?131:333==(O|0)?132:65563==(O|0)?135:139;break;case 4:var T=k,Y=(tempInt=
HEAP32[T+4>>2],HEAP32[T+4>>2]=tempInt+8,HEAP32[HEAP32[T>>2]+tempInt>>2]);HEAP32[(h+40|0)>>2]=Y;a=212;break;case 5:var S=k,X=(tempInt=HEAP32[S+4>>2],HEAP32[S+4>>2]=tempInt+8,HEAP32[HEAP32[S>>2]+tempInt>>2]);HEAP32[(h+16|0)>>2]=X;a=212;break;case 6:var R=k,V=(tempInt=HEAP32[R+4>>2],HEAP32[R+4>>2]=tempInt+8,HEAP32[HEAP32[R>>2]+tempInt>>2]);HEAP32[(h+20|0)>>2]=V;a=212;break;case 7:var aa=k,fa=(tempInt=HEAP32[aa+4>>2],HEAP32[aa+4>>2]=tempInt+8,HEAP32[HEAP32[aa>>2]+tempInt>>2])&65535;HEAP16[(h+44|0)>>1]=
fa;a=0!=(HEAP32[(g+12|0)>>2]&128|0)?8:26;break;case 8:a=8==(HEAP16[(h+44|0)>>1]&65535|0)?9:10;break;case 9:HEAP32[(g+652|0)>>2]=376;a=25;break;case 10:a=16==(HEAP16[(h+44|0)>>1]&65535|0)?11:12;break;case 11:HEAP32[(g+652|0)>>2]=288;a=24;break;case 12:a=24==(HEAP16[(h+44|0)>>1]&65535|0)?13:14;break;case 13:HEAP32[(g+652|0)>>2]=338;a=23;break;case 14:a=32==(HEAP16[(h+44|0)>>1]&65535|0)?15:16;break;case 15:HEAP32[(g+652|0)>>2]=62;a=22;break;case 16:a=64==(HEAP16[(h+44|0)>>1]&65535|0)?17:18;break;case 17:HEAP32[(g+
652|0)>>2]=222;a=21;break;case 18:a=128==(HEAP16[(h+44|0)>>1]&65535|0)?19:20;break;case 19:HEAP32[(g+652|0)>>2]=222;a=20;break;case 20:a=21;break;case 21:a=22;break;case 22:a=23;break;case 23:a=24;break;case 24:a=25;break;case 25:a=26;break;case 26:a=212;break;case 27:var Z=k,ka=(tempInt=HEAP32[Z+4>>2],HEAP32[Z+4>>2]=tempInt+8,HEAP32[HEAP32[Z>>2]+tempInt>>2])&65535;HEAP32[q>>2]=ka;a=0!=(HEAP32[(g+40|0)>>2]&128|0)?28:31;break;case 28:a=(HEAP16[(h+48|0)>>1]&65535|0)==(HEAP32[q>>2]|0)?29:30;break;case 29:a=
212;break;case 30:FUNCTION_TABLE[HEAP32[(g+564|0)>>2]](g);var M=g+12|0;HEAP32[M>>2]&=-33;a=31;break;case 31:var ga=_TIFFSetCompressionScheme(g,HEAP32[q>>2]);l=ga;a=0!=(ga|0)?32:33;break;case 32:HEAP16[(h+48|0)>>1]=HEAP32[q>>2]&65535;a=34;break;case 33:l=0;a=34;break;case 34:a=212;break;case 35:var na=k,ba=(tempInt=HEAP32[na+4>>2],HEAP32[na+4>>2]=tempInt+8,HEAP32[HEAP32[na>>2]+tempInt>>2])&65535;HEAP16[(h+50|0)>>1]=ba;a=212;break;case 36:var ca=k,oa=(tempInt=HEAP32[ca+4>>2],HEAP32[ca+4>>2]=tempInt+
8,HEAP32[HEAP32[ca>>2]+tempInt>>2])&65535;HEAP16[(h+52|0)>>1]=oa;a=212;break;case 37:var va=k,pa=(tempInt=HEAP32[va+4>>2],HEAP32[va+4>>2]=tempInt+8,HEAP32[HEAP32[va>>2]+tempInt>>2])&65535;HEAP32[q>>2]=pa;a=2!=(HEAP32[q>>2]|0)?38:40;break;case 38:a=1!=(HEAP32[q>>2]|0)?39:40;break;case 39:a=218;break;case 40:HEAP16[(h+54|0)>>1]=HEAP32[q>>2]&65535;a=212;break;case 41:var la=k,wa=(tempInt=HEAP32[la+4>>2],HEAP32[la+4>>2]=tempInt+8,HEAP32[HEAP32[la>>2]+tempInt>>2])&65535;HEAP32[q>>2]=wa;a=1>HEAP32[q>>2]>>>
0?43:42;break;case 42:a=8<HEAP32[q>>2]>>>0?43:44;break;case 43:a=218;break;case 44:HEAP16[(h+56|0)>>1]=HEAP32[q>>2]&65535;a=45;break;case 45:a=212;break;case 46:var qa=k,ea=(tempInt=HEAP32[qa+4>>2],HEAP32[qa+4>>2]=tempInt+8,HEAP32[HEAP32[qa>>2]+tempInt>>2])&65535;HEAP32[q>>2]=ea;a=0==(HEAP32[q>>2]|0)?47:48;break;case 47:a=218;break;case 48:HEAP16[(h+58|0)>>1]=HEAP32[q>>2]&65535;a=212;break;case 49:var xa=k;n=(tempInt=HEAP32[xa+4>>2],HEAP32[xa+4>>2]=tempInt+8,HEAP32[HEAP32[xa>>2]+tempInt>>2]);a=0==
(n|0)?50:51;break;case 50:a=222;break;case 51:HEAP32[(h+60|0)>>2]=n;a=0!=(HEAP32[(g+40|0)>>2]&4|0)?53:52;break;case 52:HEAP32[(h+32|0)>>2]=n;HEAP32[(h+28|0)>>2]=HEAP32[(h+16|0)>>2];a=53;break;case 53:a=212;break;case 54:var ja=k,da=(tempInt=HEAP32[ja+4>>2],HEAP32[ja+4>>2]=tempInt+8,HEAP32[HEAP32[ja>>2]+tempInt>>2])&65535;HEAP16[(h+64|0)>>1]=da;a=212;break;case 55:var Ga=k,$=(tempInt=HEAP32[Ga+4>>2],HEAP32[Ga+4>>2]=tempInt+8,HEAP32[HEAP32[Ga>>2]+tempInt>>2])&65535;HEAP16[(h+66|0)>>1]=$;a=212;break;
case 56:a=0!=(HEAP32[(g+12|0)>>2]&4194304|0)?57:58;break;case 57:var ma=h+68|0,ra=k,Aa=(tempInt=HEAP32[ra+4>>2],HEAP32[ra+4>>2]=tempInt+8,HEAP32[HEAP32[ra>>2]+tempInt>>2]);__TIFFsetDoubleArray(ma,Aa,HEAP16[(h+58|0)>>1]&65535);a=59;break;case 58:var Xa=h+68|0,Da=k,Ua=(tempInt=HEAP32[Da+4>>2],HEAP32[Da+4>>2]=tempInt+8,HEAPF64[HEAP32[Da>>2]+tempInt>>3]);_setDoubleArrayOneValue(Xa,Ua,HEAP16[(h+58|0)>>1]&65535);a=59;break;case 59:a=212;break;case 60:a=0!=(HEAP32[(g+12|0)>>2]&4194304|0)?61:62;break;case 61:var sa=
h+72|0,ha=k,U=(tempInt=HEAP32[ha+4>>2],HEAP32[ha+4>>2]=tempInt+8,HEAP32[HEAP32[ha>>2]+tempInt>>2]);__TIFFsetDoubleArray(sa,U,HEAP16[(h+58|0)>>1]&65535);a=63;break;case 62:var gb=h+72|0,Ka=k,Ia=(tempInt=HEAP32[Ka+4>>2],HEAP32[Ka+4>>2]=tempInt+8,HEAPF64[HEAP32[Ka>>2]+tempInt>>3]);_setDoubleArrayOneValue(gb,Ia,HEAP16[(h+58|0)>>1]&65535);a=63;break;case 63:a=212;break;case 64:var ia=k,Ba=(tempInt=HEAP32[ia+4>>2],HEAP32[ia+4>>2]=tempInt+8,HEAPF64[HEAP32[ia>>2]+tempInt>>3]);HEAPF32[(h+76|0)>>2]=Ba;a=212;
break;case 65:var Ra=k,Sa=(tempInt=HEAP32[Ra+4>>2],HEAP32[Ra+4>>2]=tempInt+8,HEAPF64[HEAP32[Ra>>2]+tempInt>>3]);HEAPF32[(h+80|0)>>2]=Sa;a=212;break;case 66:var ib=k,ua=(tempInt=HEAP32[ib+4>>2],HEAP32[ib+4>>2]=tempInt+8,HEAP32[HEAP32[ib>>2]+tempInt>>2])&65535;HEAP32[q>>2]=ua;a=1!=(HEAP32[q>>2]|0)?67:69;break;case 67:a=2!=(HEAP32[q>>2]|0)?68:69;break;case 68:a=218;break;case 69:HEAP16[(h+86|0)>>1]=HEAP32[q>>2]&65535;a=212;break;case 70:var Va=k,eb=(tempInt=HEAP32[Va+4>>2],HEAP32[Va+4>>2]=tempInt+8,
HEAPF64[HEAP32[Va>>2]+tempInt>>3]);HEAPF32[(h+88|0)>>2]=eb;a=212;break;case 71:var Ea=k,Ya=(tempInt=HEAP32[Ea+4>>2],HEAP32[Ea+4>>2]=tempInt+8,HEAPF64[HEAP32[Ea>>2]+tempInt>>3]);HEAPF32[(h+92|0)>>2]=Ya;a=212;break;case 72:var La=k,Ma=(tempInt=HEAP32[La+4>>2],HEAP32[La+4>>2]=tempInt+8,HEAP32[HEAP32[La>>2]+tempInt>>2])&65535;HEAP32[q>>2]=Ma;a=1>HEAP32[q>>2]>>>0?74:73;break;case 73:a=3<HEAP32[q>>2]>>>0?74:75;break;case 74:a=218;break;case 75:HEAP16[(h+84|0)>>1]=HEAP32[q>>2]&65535;a=212;break;case 76:var Fa=
k,Na=(tempInt=HEAP32[Fa+4>>2],HEAP32[Fa+4>>2]=tempInt+8,HEAP32[HEAP32[Fa>>2]+tempInt>>2])&65535;HEAP16[(h+96|0)>>1]=Na;var Oa=k,jb=(tempInt=HEAP32[Oa+4>>2],HEAP32[Oa+4>>2]=tempInt+8,HEAP32[HEAP32[Oa>>2]+tempInt>>2])&65535;HEAP16[((h+96|0)+2|0)>>1]=jb;a=212;break;case 77:var Za=k,Ca=(tempInt=HEAP32[Za+4>>2],HEAP32[Za+4>>2]=tempInt+8,HEAP32[HEAP32[Za>>2]+tempInt>>2])&65535;HEAP16[(h+112|0)>>1]=Ca;var $a=k,ab=(tempInt=HEAP32[$a+4>>2],HEAP32[$a+4>>2]=tempInt+8,HEAP32[HEAP32[$a>>2]+tempInt>>2])&65535;
HEAP16[((h+112|0)+2|0)>>1]=ab;a=212;break;case 78:n=1<<(HEAP16[(h+44|0)>>1]&65535);var Ha=h+100|0,Wa=k,bb=(tempInt=HEAP32[Wa+4>>2],HEAP32[Wa+4>>2]=tempInt+8,HEAP32[HEAP32[Wa>>2]+tempInt>>2]);__TIFFsetShortArray(Ha,bb,n);var Pa=(h+100|0)+4|0,Ja=k,cb=(tempInt=HEAP32[Ja+4>>2],HEAP32[Ja+4>>2]=tempInt+8,HEAP32[HEAP32[Ja>>2]+tempInt>>2]);__TIFFsetShortArray(Pa,cb,n);var Qa=(h+100|0)+8|0,fb=k,hb=(tempInt=HEAP32[fb+4>>2],HEAP32[fb+4>>2]=tempInt+8,HEAP32[HEAP32[fb>>2]+tempInt>>2]);__TIFFsetShortArray(Qa,hb,
n);a=212;break;case 79:a=0!=(_setExtraSamples(h,k,q)|0)?81:80;break;case 80:a=218;break;case 81:a=212;break;case 82:var ya=k,db=0!=((tempInt=HEAP32[ya+4>>2],HEAP32[ya+4>>2]=tempInt+8,HEAP32[HEAP32[ya>>2]+tempInt>>2])&65535|0)&1;HEAP16[(h+116|0)>>1]=db;a=0!=HEAP16[(h+116|0)>>1]<<16>>16?83:84;break;case 83:HEAP16[v>>1]=1;__TIFFsetShortArray(h+120|0,v,1);a=84;break;case 84:a=212;break;case 85:var Ta=k;n=(tempInt=HEAP32[Ta+4>>2],HEAP32[Ta+4>>2]=tempInt+8,HEAP32[HEAP32[Ta>>2]+tempInt>>2]);a=0!=((n>>>0)%
16&-1|0)?86:89;break;case 86:a=0!=(HEAP32[(g+8|0)>>2]|0)?87:88;break;case 87:a=222;break;case 88:var kb=n;_TIFFWarningExt(HEAP32[(g+628|0)>>2],HEAP32[(g|0)>>2],36792,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=kb,tempInt));a=89;break;case 89:HEAP32[(h+28|0)>>2]=n;var lb=g+12|0;HEAP32[lb>>2]|=1024;a=212;break;case 90:var mb=k;n=(tempInt=HEAP32[mb+4>>2],HEAP32[mb+4>>2]=tempInt+8,HEAP32[HEAP32[mb>>2]+tempInt>>2]);a=0!=((n>>>0)%16&-1|0)?91:94;break;
case 91:a=0!=(HEAP32[(g+8|0)>>2]|0)?92:93;break;case 92:a=222;break;case 93:var ta=n;_TIFFWarningExt(HEAP32[(g+628|0)>>2],HEAP32[(g|0)>>2],35960,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=ta,tempInt));a=94;break;case 94:HEAP32[(h+32|0)>>2]=n;var nb=g+12|0;HEAP32[nb>>2]|=1024;a=212;break;case 95:var pb=k;n=(tempInt=HEAP32[pb+4>>2],HEAP32[pb+4>>2]=tempInt+8,HEAP32[HEAP32[pb>>2]+tempInt>>2]);a=0==(n|0)?96:97;break;case 96:a=222;break;case 97:HEAP32[(h+
36|0)>>2]=n;a=212;break;case 98:var rb=k,qb=(tempInt=HEAP32[rb+4>>2],HEAP32[rb+4>>2]=tempInt+8,HEAP32[HEAP32[rb>>2]+tempInt>>2])&65535;HEAP32[q>>2]=qb;var sb=HEAP32[q>>2],a=0==(sb|0)?99:1==(sb|0)?100:2==(sb|0)?101:3==(sb|0)?102:103;break;case 99:HEAP32[q>>2]=4;a=104;break;case 100:HEAP32[q>>2]=2;a=104;break;case 101:HEAP32[q>>2]=1;a=104;break;case 102:HEAP32[q>>2]=3;a=104;break;case 103:a=218;break;case 104:HEAP16[(h+46|0)>>1]=HEAP32[q>>2]&65535;a=212;break;case 105:var vb=k,wb=(tempInt=HEAP32[vb+
4>>2],HEAP32[vb+4>>2]=tempInt+8,HEAP32[HEAP32[vb>>2]+tempInt>>2])&65535;HEAP32[q>>2]=wb;a=1>HEAP32[q>>2]>>>0?107:106;break;case 106:a=6<HEAP32[q>>2]>>>0?107:108;break;case 107:a=218;break;case 108:HEAP16[(h+46|0)>>1]=HEAP32[q>>2]&65535;a=5==(HEAP16[(h+46|0)>>1]&65535|0)?109:112;break;case 109:a=32==(HEAP16[(h+44|0)>>1]&65535|0)?110:112;break;case 110:a=62==(HEAP32[(g+652|0)>>2]|0)?111:112;break;case 111:HEAP32[(g+652|0)>>2]=288;a=118;break;case 112:a=5==(HEAP16[(h+46|0)>>1]&65535|0)?114:113;break;
case 113:a=6==(HEAP16[(h+46|0)>>1]&65535|0)?114:117;break;case 114:a=64==(HEAP16[(h+44|0)>>1]&65535|0)?115:117;break;case 115:a=222==(HEAP32[(g+652|0)>>2]|0)?116:117;break;case 116:HEAP32[(g+652|0)>>2]=62;a=117;break;case 117:a=118;break;case 118:a=212;break;case 119:var xb=k,Db=(tempInt=HEAP32[xb+4>>2],HEAP32[xb+4>>2]=tempInt+8,HEAP32[HEAP32[xb>>2]+tempInt>>2]);HEAP32[(h+24|0)>>2]=Db;a=212;break;case 120:a=0==(HEAP32[(g+12|0)>>2]&8192|0)?121:122;break;case 121:var tb=k,Gb=(tempInt=HEAP32[tb+4>>2],
HEAP32[tb+4>>2]=tempInt+8,HEAP32[HEAP32[tb>>2]+tempInt>>2])&65535;HEAP16[(h+144|0)>>1]=Gb;var yb=h+148|0,ub=k,Ab=(tempInt=HEAP32[ub+4>>2],HEAP32[ub+4>>2]=tempInt+8,HEAP32[HEAP32[ub>>2]+tempInt>>2]);__TIFFsetLong8Array(yb,Ab,HEAP16[(h+144|0)>>1]&65535);a=123;break;case 122:var Tb=HEAP32[(g|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],45104,35312,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=Tb,tempInt));l=0;a=123;break;case 123:a=212;break;case 124:var Kb=
k,ac=(tempInt=HEAP32[Kb+4>>2],HEAP32[Kb+4>>2]=tempInt+8,HEAP32[HEAP32[Kb>>2]+tempInt>>2])&65535;HEAP16[(h+156|0)>>1]=ac;a=212;break;case 125:var Hb=k,Ob=(tempInt=HEAP32[Hb+4>>2],HEAP32[Hb+4>>2]=tempInt+8,HEAP32[HEAP32[Hb>>2]+tempInt>>2])&65535;HEAP16[(h+152|0)>>1]=Ob;var bc=k,Lb=(tempInt=HEAP32[bc+4>>2],HEAP32[bc+4>>2]=tempInt+8,HEAP32[HEAP32[bc>>2]+tempInt>>2])&65535;HEAP16[((h+152|0)+2|0)>>1]=Lb;a=212;break;case 126:HEAP32[q>>2]=1<((HEAP16[(h+58|0)>>1]&65535)-(HEAP16[(h+116|0)>>1]&65535)|0)?3:1;
p=0;a=127;break;case 127:a=p>>>0<HEAP32[q>>2]>>>0?128:130;break;case 128:var Ub=(h+160|0)+(p<<2)|0,Pb=k,cc=(tempInt=HEAP32[Pb+4>>2],HEAP32[Pb+4>>2]=tempInt+8,HEAP32[HEAP32[Pb>>2]+tempInt>>2]);__TIFFsetShortArray(Ub,cc,1<<(HEAP16[(h+44|0)>>1]&65535));a=129;break;case 129:p=p+1|0;a=127;break;case 130:a=212;break;case 131:var Vb=h+172|0,Mb=k,fc=(tempInt=HEAP32[Mb+4>>2],HEAP32[Mb+4>>2]=tempInt+8,HEAP32[HEAP32[Mb>>2]+tempInt>>2]);__TIFFsetFloatArray(Vb,fc,6);a=212;break;case 132:var Wb=k,gc=(tempInt=HEAP32[Wb+
4>>2],HEAP32[Wb+4>>2]=tempInt+8,HEAP32[HEAP32[Wb>>2]+tempInt>>2])&65535;HEAP32[q>>2]=gc;var dc=k;t=(tempInt=HEAP32[dc+4>>2],HEAP32[dc+4>>2]=tempInt+8,HEAP32[HEAP32[dc>>2]+tempInt>>2]);var Xb=_checkInkNamesString(g,HEAP32[q>>2],t);HEAP32[q>>2]=Xb;l=0<HEAP32[q>>2]>>>0&1;a=0<HEAP32[q>>2]>>>0?133:134;break;case 133:__TIFFsetNString(h+180|0,t,HEAP32[q>>2]);HEAP32[(h+176|0)>>2]=HEAP32[q>>2];a=134;break;case 134:a=212;break;case 135:var Yb=k,oc=(tempInt=HEAP32[Yb+4>>2],HEAP32[Yb+4>>2]=tempInt+8,HEAP32[HEAP32[Yb>>
2]+tempInt>>2])&65535;HEAP32[q>>2]=oc;a=1==(HEAP32[q>>2]|0)?136:137;break;case 136:var Qb=g+12|0;HEAP32[Qb>>2]|=4194304;a=138;break;case 137:var hc=g+12|0;HEAP32[hc>>2]&=-4194305;a=138;break;case 138:a=212;break;case 139:a=0==(r|0)?141:140;break;case 140:a=65!=(HEAP16[(r+24|0)>>1]&65535|0)?141:145;break;case 141:var ic=HEAP32[(g+628|0)>>2],ec=HEAP32[(g|0)>>2],kc=65535<f>>>0?40528:149048,a=0!=(r|0)?142:143;break;case 142:var jc=HEAP32[(r+28|0)>>2],a=144;break;case 143:jc=39240;a=144;break;case 144:_TIFFErrorExt(ic,
45104,41160,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=ec,HEAP32[tempInt+8>>2]=kc,HEAP32[tempInt+16>>2]=jc,tempInt));l=0;a=212;break;case 145:y=u=0;a=146;break;case 146:a=(y|0)<(HEAP32[(h+184|0)>>2]|0)?147:153;break;case 147:a=(HEAP32[(HEAP32[(HEAP32[(h+188|0)>>2]+(12*y&-1)|0)>>2]|0)>>2]|0)==(f|0)?148:151;break;case 148:u=HEAP32[(h+188|0)>>2]+(12*y&-1)|0;a=0!=(HEAP32[(u+8|0)>>2]|0)?149:150;break;case 149:__TIFFfree(HEAP32[(u+8|0)>>2]);HEAP32[(u+
8|0)>>2]=0;a=150;break;case 150:a=153;break;case 151:a=152;break;case 152:y=y+1|0;a=146;break;case 153:a=0==(u|0)?154:157;break;case 154:var Zb=h+184|0;HEAP32[Zb>>2]=HEAP32[Zb>>2]+1|0;A=__TIFFrealloc(HEAP32[(h+188|0)>>2],12*HEAP32[(h+184|0)>>2]&-1);a=0!=(A|0)?156:155;break;case 155:var lc=HEAP32[(g|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],45104,34768,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=lc,tempInt));l=0;a=217;break;case 156:HEAP32[(h+188|
0)>>2]=A;u=HEAP32[(h+188|0)>>2]+(12*(HEAP32[(h+184|0)>>2]-1|0)&-1)|0;HEAP32[(u|0)>>2]=r;HEAP32[(u+8|0)>>2]=0;HEAP32[(u+4|0)>>2]=0;a=157;break;case 157:w=__TIFFDataSize(HEAP32[(r+8|0)>>2]);a=0==(w|0)?158:159;break;case 158:l=0;var Bb=HEAP32[(g|0)>>2],ob=HEAP32[(r+8|0)>>2],Rb=HEAP32[(r+28|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],45104,34576,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=Bb,HEAP32[tempInt+8>>2]=ob,HEAP32[tempInt+16>>2]=Rb,tempInt));
a=217;break;case 159:a=2==(HEAP32[(r+8|0)>>2]|0)?160:167;break;case 160:a=0!=HEAP8[r+27|0]<<24>>24?161:165;break;case 161:a=-3==(HEAP16[(r+6|0)>>1]<<16>>16|0)?162:163;break;case 162:a=164;break;case 163:throw ___assert_func(33208,521,43096,34024),"Reached an unreachable!";case 164:var Nb=k;z=(tempInt=HEAP32[Nb+4>>2],HEAP32[Nb+4>>2]=tempInt+8,HEAP32[HEAP32[Nb>>2]+tempInt>>2]);var $b=k;x=(tempInt=HEAP32[$b+4>>2],HEAP32[$b+4>>2]=tempInt+8,HEAP32[HEAP32[$b>>2]+tempInt>>2]);a=166;break;case 165:var pc=
k;x=(tempInt=HEAP32[pc+4>>2],HEAP32[pc+4>>2]=tempInt+8,HEAP32[HEAP32[pc>>2]+tempInt>>2]);z=_strlen(x)+1|0;a=166;break;case 166:HEAP32[(u+4|0)>>2]=z;_setByteArray(u+8|0,x,z,1);a=211;break;case 167:a=0!=HEAP8[r+27|0]<<24>>24?168:172;break;case 168:a=-3==(HEAP16[(r+6|0)>>1]<<16>>16|0)?169:170;break;case 169:var Bc=k,wc=(tempInt=HEAP32[Bc+4>>2],HEAP32[Bc+4>>2]=tempInt+8,HEAP32[HEAP32[Bc>>2]+tempInt>>2]);HEAP32[(u+4|0)>>2]=wc;a=171;break;case 170:var xc=k,Lc=(tempInt=HEAP32[xc+4>>2],HEAP32[xc+4>>2]=tempInt+
8,HEAP32[HEAP32[xc>>2]+tempInt>>2]);HEAP32[(u+4|0)>>2]=Lc;a=171;break;case 171:a=180;break;case 172:a=-1==(HEAP16[(r+6|0)>>1]<<16>>16|0)?174:173;break;case 173:a=-3==(HEAP16[(r+6|0)>>1]<<16>>16|0)?174:175;break;case 174:HEAP32[(u+4|0)>>2]=1;a=179;break;case 175:a=-2==(HEAP16[(r+6|0)>>1]<<16>>16|0)?176:177;break;case 176:HEAP32[(u+4|0)>>2]=HEAP16[(h+58|0)>>1]&65535;a=178;break;case 177:HEAP32[(u+4|0)>>2]=HEAP16[(r+6|0)>>1]<<16>>16;a=178;break;case 178:a=179;break;case 179:a=180;break;case 180:a=0==
(HEAP32[(u+4|0)>>2]|0)?181:182;break;case 181:l=0;var Cc=HEAP32[(g|0)>>2],Cb=HEAP32[(r+28|0)>>2],Gc=HEAP32[(r+8|0)>>2],qc=HEAP16[(r+6|0)>>1]<<16>>16,Mc=HEAP8[r+27|0]&255;_TIFFErrorExt(HEAP32[(g+628|0)>>2],45104,33536,(tempInt=STACKTOP,STACKTOP=STACKTOP+40|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=Cc,HEAP32[tempInt+8>>2]=Cb,HEAP32[tempInt+16>>2]=Gc,HEAP32[tempInt+24>>2]=qc,HEAP32[tempInt+32>>2]=Mc,tempInt));a=217;break;case 182:var Hc=__TIFFCheckMalloc(g,HEAP32[(u+4|0)>>2],w,33088);
HEAP32[(u+8|0)>>2]=Hc;a=0!=(HEAP32[(u+8|0)>>2]|0)?184:183;break;case 183:l=0;a=217;break;case 184:a=336==(HEAP32[(r|0)>>2]|0)?185:187;break;case 185:a=0==(_strcmp(HEAP32[(r+28|0)>>2],38264)|0)?186:187;break;case 186:var rc=k,ed=(tempInt=HEAP32[rc+4>>2],HEAP32[rc+4>>2]=tempInt+8,HEAP32[HEAP32[rc>>2]+tempInt>>2])&65535;HEAP16[(B|0)>>1]=ed;var Nc=k,Oc=(tempInt=HEAP32[Nc+4>>2],HEAP32[Nc+4>>2]=tempInt+8,HEAP32[HEAP32[Nc>>2]+tempInt>>2])&65535;HEAP16[(B+2|0)>>1]=Oc;__TIFFmemcpy(HEAP32[(u+8|0)>>2],B,4);
a=210;break;case 187:a=0!=(HEAP8[r+27|0]&255|0)?192:188;break;case 188:a=-1==(HEAP16[(r+6|0)>>1]<<16>>16|0)?192:189;break;case 189:a=-3==(HEAP16[(r+6|0)>>1]<<16>>16|0)?192:190;break;case 190:a=-2==(HEAP16[(r+6|0)>>1]<<16>>16|0)?192:191;break;case 191:a=1<(HEAP32[(u+4|0)>>2]|0)?192:193;break;case 192:var Sb=HEAP32[(u+8|0)>>2],Pc=k,Qc=(tempInt=HEAP32[Pc+4>>2],HEAP32[Pc+4>>2]=tempInt+8,HEAP32[HEAP32[Pc>>2]+tempInt>>2]),Dc=Math.imul(HEAP32[(u+4|0)>>2],w)|0;__TIFFmemcpy(Sb,Qc,Dc);a=209;break;case 193:C=
HEAP32[(u+8|0)>>2];a=1==(HEAP32[(u+4|0)>>2]|0)?194:195;break;case 194:a=196;break;case 195:throw ___assert_func(33208,589,43096,37504),"Reached an unreachable!";case 196:var Fb=HEAP32[(r+8|0)>>2],a=1==(Fb|0)|7==(Fb|0)?197:6==(Fb|0)?198:3==(Fb|0)?199:8==(Fb|0)?200:4==(Fb|0)|13==(Fb|0)?201:9==(Fb|0)?202:16==(Fb|0)|18==(Fb|0)?203:17==(Fb|0)?204:5==(Fb|0)|10==(Fb|0)|11==(Fb|0)?205:12==(Fb|0)?206:207;break;case 197:var Rc=k,od=(tempInt=HEAP32[Rc+4>>2],HEAP32[Rc+4>>2]=tempInt+8,HEAP32[HEAP32[Rc>>2]+tempInt>>
2])&255;HEAP8[D]=od;__TIFFmemcpy(C,D,w);a=208;break;case 198:var Ic=k,pd=(tempInt=HEAP32[Ic+4>>2],HEAP32[Ic+4>>2]=tempInt+8,HEAP32[HEAP32[Ic>>2]+tempInt>>2])&255;HEAP8[F]=pd;__TIFFmemcpy(C,F,w);a=208;break;case 199:var Ec=k,qd=(tempInt=HEAP32[Ec+4>>2],HEAP32[Ec+4>>2]=tempInt+8,HEAP32[HEAP32[Ec>>2]+tempInt>>2])&65535;HEAP16[I>>1]=qd;__TIFFmemcpy(C,I,w);a=208;break;case 200:var Sc=k,Tc=(tempInt=HEAP32[Sc+4>>2],HEAP32[Sc+4>>2]=tempInt+8,HEAP32[HEAP32[Sc>>2]+tempInt>>2])&65535;HEAP16[G>>1]=Tc;__TIFFmemcpy(C,
G,w);a=208;break;case 201:var Uc=k,Vc=(tempInt=HEAP32[Uc+4>>2],HEAP32[Uc+4>>2]=tempInt+8,HEAP32[HEAP32[Uc>>2]+tempInt>>2]);HEAP32[H>>2]=Vc;__TIFFmemcpy(C,H,w);a=208;break;case 202:var sc=k,rd=(tempInt=HEAP32[sc+4>>2],HEAP32[sc+4>>2]=tempInt+8,HEAP32[HEAP32[sc>>2]+tempInt>>2]);HEAP32[K>>2]=rd;__TIFFmemcpy(C,K,w);a=208;break;case 203:var yc=k,Wc=(tempInt=HEAP32[yc+4>>2],HEAP32[yc+4>>2]=tempInt+8,HEAP32[HEAP32[yc>>2]+tempInt>>2]),fd=(tempInt=HEAP32[yc+4>>2],HEAP32[yc+4>>2]=tempInt+8,HEAP32[HEAP32[yc>>
2]+tempInt>>2]);HEAP32[(J|0)>>2]=Wc;HEAP32[(J+4|0)>>2]=fd;__TIFFmemcpy(C,J,w);a=208;break;case 204:var zc=k,Xc=(tempInt=HEAP32[zc+4>>2],HEAP32[zc+4>>2]=tempInt+8,HEAP32[HEAP32[zc>>2]+tempInt>>2]),sd=(tempInt=HEAP32[zc+4>>2],HEAP32[zc+4>>2]=tempInt+8,HEAP32[HEAP32[zc>>2]+tempInt>>2]);HEAP32[(E|0)>>2]=Xc;HEAP32[(E+4|0)>>2]=sd;__TIFFmemcpy(C,E,w);a=208;break;case 205:var Jc=k,Yc=(tempInt=HEAP32[Jc+4>>2],HEAP32[Jc+4>>2]=tempInt+8,HEAPF64[HEAP32[Jc>>2]+tempInt>>3]);HEAPF32[L>>2]=Yc;__TIFFmemcpy(C,L,w);
a=208;break;case 206:var Zc=k,Ib=(tempInt=HEAP32[Zc+4>>2],HEAP32[Zc+4>>2]=tempInt+8,HEAPF64[HEAP32[Zc>>2]+tempInt>>3]);HEAPF64[Q>>3]=Ib;__TIFFmemcpy(C,Q,w);a=208;break;case 207:__TIFFmemset(C,0,w);l=0;a=208;break;case 208:a=209;break;case 209:a=210;break;case 210:a=211;break;case 211:a=212;break;case 212:a=0!=(l|0)?213:216;break;case 213:N=_TIFFFieldWithTag(g,f);a=0!=(N|0)?214:215;break;case 214:var mc=(g+40|0)+(((HEAP16[(N+24|0)>>1]&65535|0)/32&-1)<<2)|0;HEAP32[mc>>2]|=1<<(HEAP16[(N+24|0)>>1]&31);
a=215;break;case 215:var Fc=g+12|0;HEAP32[Fc>>2]|=8;a=216;break;case 216:a=217;break;case 217:e=l;a=226;break;case 218:P=_TIFFFieldWithTag(g,f);var Ac=HEAP32[(g+628|0)>>2],td=HEAP32[(g|0)>>2],$c=HEAP32[q>>2],a=0!=(P|0)?219:220;break;case 219:var gd=HEAP32[(P+28|0)>>2],a=221;break;case 220:gd=39240;a=221;break;case 221:_TIFFErrorExt(Ac,45104,32720,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=td,HEAP32[tempInt+8>>2]=$c,HEAP32[tempInt+16>>2]=gd,tempInt));
e=0;a=226;break;case 222:W=_TIFFFieldWithTag(g,f);var ud=HEAP32[(g+628|0)>>2],ad=HEAP32[(g|0)>>2],vd=n,a=0!=(W|0)?223:224;break;case 223:var bd=HEAP32[(W+28|0)>>2],a=225;break;case 224:bd=39240;a=225;break;case 225:_TIFFErrorExt(ud,45104,32720,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=ad,HEAP32[tempInt+8>>2]=vd,HEAP32[tempInt+16>>2]=bd,tempInt));e=0;a=226;break;case 226:var hd=e;STACKTOP=b;return hd;default:assert(0,"bad label: "+a)}}
function __TIFFVGetField(m,d,c){var a=0,b=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l,n,p,q,t,r,s,v,u;e=m;g=d;f=c;k=e+40|0;h=1;l=g;n=_TIFFFindField(e,g,0);a=65==(HEAP16[(n+24|0)>>1]&65535|0)?2:3;break;case 2:l=0;a=3;break;case 3:var w=l,a=254==(w|0)?4:256==(w|0)?5:257==(w|0)?6:258==(w|0)?7:259==(w|0)?8:262==(w|0)?9:263==(w|0)?10:266==(w|0)?11:274==(w|0)?12:277==(w|0)?13:278==(w|0)?14:280==(w|0)?15:281==(w|0)?16:340==(w|0)?17:341==(w|0)?27:282==(w|0)?37:
283==(w|0)?38:284==(w|0)?39:286==(w|0)?40:287==(w|0)?41:296==(w|0)?42:297==(w|0)?43:321==(w|0)?44:320==(w|0)?45:273==(w|0)|324==(w|0)?46:279==(w|0)|325==(w|0)?47:32995==(w|0)?48:338==(w|0)?51:322==(w|0)?52:323==(w|0)?53:32998==(w|0)?54:32996==(w|0)?55:339==(w|0)?61:32997==(w|0)?62:330==(w|0)?63:531==(w|0)?64:530==(w|0)?65:301==(w|0)?66:532==(w|0)?69:333==(w|0)?70:71;break;case 4:var y=HEAP32[(k+40|0)>>2],A=f,z=(tempInt=HEAP32[A+4>>2],HEAP32[A+4>>2]=tempInt+8,HEAP32[HEAP32[A>>2]+tempInt>>2]);HEAP32[z>>
2]=y;a=116;break;case 5:var x=HEAP32[(k+16|0)>>2],B=f,C=(tempInt=HEAP32[B+4>>2],HEAP32[B+4>>2]=tempInt+8,HEAP32[HEAP32[B>>2]+tempInt>>2]);HEAP32[C>>2]=x;a=116;break;case 6:var D=HEAP32[(k+20|0)>>2],F=f,I=(tempInt=HEAP32[F+4>>2],HEAP32[F+4>>2]=tempInt+8,HEAP32[HEAP32[F>>2]+tempInt>>2]);HEAP32[I>>2]=D;a=116;break;case 7:var G=HEAP16[(k+44|0)>>1],H=f,K=(tempInt=HEAP32[H+4>>2],HEAP32[H+4>>2]=tempInt+8,HEAP32[HEAP32[H>>2]+tempInt>>2]);HEAP16[K>>1]=G;a=116;break;case 8:var J=HEAP16[(k+48|0)>>1],E=f,L=(tempInt=
HEAP32[E+4>>2],HEAP32[E+4>>2]=tempInt+8,HEAP32[HEAP32[E>>2]+tempInt>>2]);HEAP16[L>>1]=J;a=116;break;case 9:var Q=HEAP16[(k+50|0)>>1],N=f,P=(tempInt=HEAP32[N+4>>2],HEAP32[N+4>>2]=tempInt+8,HEAP32[HEAP32[N>>2]+tempInt>>2]);HEAP16[P>>1]=Q;a=116;break;case 10:var W=HEAP16[(k+52|0)>>1],O=f,T=(tempInt=HEAP32[O+4>>2],HEAP32[O+4>>2]=tempInt+8,HEAP32[HEAP32[O>>2]+tempInt>>2]);HEAP16[T>>1]=W;a=116;break;case 11:var Y=HEAP16[(k+54|0)>>1],S=f,X=(tempInt=HEAP32[S+4>>2],HEAP32[S+4>>2]=tempInt+8,HEAP32[HEAP32[S>>
2]+tempInt>>2]);HEAP16[X>>1]=Y;a=116;break;case 12:var R=HEAP16[(k+56|0)>>1],V=f,aa=(tempInt=HEAP32[V+4>>2],HEAP32[V+4>>2]=tempInt+8,HEAP32[HEAP32[V>>2]+tempInt>>2]);HEAP16[aa>>1]=R;a=116;break;case 13:var fa=HEAP16[(k+58|0)>>1],Z=f,ka=(tempInt=HEAP32[Z+4>>2],HEAP32[Z+4>>2]=tempInt+8,HEAP32[HEAP32[Z>>2]+tempInt>>2]);HEAP16[ka>>1]=fa;a=116;break;case 14:var M=HEAP32[(k+60|0)>>2],ga=f,na=(tempInt=HEAP32[ga+4>>2],HEAP32[ga+4>>2]=tempInt+8,HEAP32[HEAP32[ga>>2]+tempInt>>2]);HEAP32[na>>2]=M;a=116;break;
case 15:var ba=HEAP16[(k+64|0)>>1],ca=f,oa=(tempInt=HEAP32[ca+4>>2],HEAP32[ca+4>>2]=tempInt+8,HEAP32[HEAP32[ca>>2]+tempInt>>2]);HEAP16[oa>>1]=ba;a=116;break;case 16:var va=HEAP16[(k+66|0)>>1],pa=f,la=(tempInt=HEAP32[pa+4>>2],HEAP32[pa+4>>2]=tempInt+8,HEAP32[HEAP32[pa>>2]+tempInt>>2]);HEAP16[la>>1]=va;a=116;break;case 17:a=0!=(HEAP32[(e+12|0)>>2]&4194304|0)?18:19;break;case 18:var wa=HEAP32[(k+68|0)>>2],qa=f,ea=(tempInt=HEAP32[qa+4>>2],HEAP32[qa+4>>2]=tempInt+8,HEAP32[HEAP32[qa>>2]+tempInt>>2]);HEAP32[ea>>
2]=wa;a=26;break;case 19:q=HEAPF64[(HEAP32[(k+68|0)>>2]|0)>>3];p=1;a=20;break;case 20:a=(p&65535|0)<(HEAP16[(k+58|0)>>1]&65535|0)?21:25;break;case 21:a=HEAPF64[(HEAP32[(k+68|0)>>2]+((p&65535)<<3)|0)>>3]<q?22:23;break;case 22:q=HEAPF64[(HEAP32[(k+68|0)>>2]+((p&65535)<<3)|0)>>3];a=23;break;case 23:a=24;break;case 24:p=p+1&65535;a=20;break;case 25:var xa=q,ja=f,da=(tempInt=HEAP32[ja+4>>2],HEAP32[ja+4>>2]=tempInt+8,HEAP32[HEAP32[ja>>2]+tempInt>>2]);HEAPF64[da>>3]=xa;a=26;break;case 26:a=116;break;case 27:a=
0!=(HEAP32[(e+12|0)>>2]&4194304|0)?28:29;break;case 28:var Ga=HEAP32[(k+72|0)>>2],$=f,ma=(tempInt=HEAP32[$+4>>2],HEAP32[$+4>>2]=tempInt+8,HEAP32[HEAP32[$>>2]+tempInt>>2]);HEAP32[ma>>2]=Ga;a=36;break;case 29:r=HEAPF64[(HEAP32[(k+72|0)>>2]|0)>>3];t=1;a=30;break;case 30:a=(t&65535|0)<(HEAP16[(k+58|0)>>1]&65535|0)?31:35;break;case 31:a=HEAPF64[(HEAP32[(k+72|0)>>2]+((t&65535)<<3)|0)>>3]>r?32:33;break;case 32:r=HEAPF64[(HEAP32[(k+72|0)>>2]+((t&65535)<<3)|0)>>3];a=33;break;case 33:a=34;break;case 34:t=t+
1&65535;a=30;break;case 35:var ra=r,Aa=f,Xa=(tempInt=HEAP32[Aa+4>>2],HEAP32[Aa+4>>2]=tempInt+8,HEAP32[HEAP32[Aa>>2]+tempInt>>2]);HEAPF64[Xa>>3]=ra;a=36;break;case 36:a=116;break;case 37:var Da=HEAPF32[(k+76|0)>>2],Ua=f,sa=(tempInt=HEAP32[Ua+4>>2],HEAP32[Ua+4>>2]=tempInt+8,HEAP32[HEAP32[Ua>>2]+tempInt>>2]);HEAPF32[sa>>2]=Da;a=116;break;case 38:var ha=HEAPF32[(k+80|0)>>2],U=f,gb=(tempInt=HEAP32[U+4>>2],HEAP32[U+4>>2]=tempInt+8,HEAP32[HEAP32[U>>2]+tempInt>>2]);HEAPF32[gb>>2]=ha;a=116;break;case 39:var Ka=
HEAP16[(k+86|0)>>1],Ia=f,ia=(tempInt=HEAP32[Ia+4>>2],HEAP32[Ia+4>>2]=tempInt+8,HEAP32[HEAP32[Ia>>2]+tempInt>>2]);HEAP16[ia>>1]=Ka;a=116;break;case 40:var Ba=HEAPF32[(k+88|0)>>2],Ra=f,Sa=(tempInt=HEAP32[Ra+4>>2],HEAP32[Ra+4>>2]=tempInt+8,HEAP32[HEAP32[Ra>>2]+tempInt>>2]);HEAPF32[Sa>>2]=Ba;a=116;break;case 41:var ib=HEAPF32[(k+92|0)>>2],ua=f,Va=(tempInt=HEAP32[ua+4>>2],HEAP32[ua+4>>2]=tempInt+8,HEAP32[HEAP32[ua>>2]+tempInt>>2]);HEAPF32[Va>>2]=ib;a=116;break;case 42:var eb=HEAP16[(k+84|0)>>1],Ea=f,Ya=
(tempInt=HEAP32[Ea+4>>2],HEAP32[Ea+4>>2]=tempInt+8,HEAP32[HEAP32[Ea>>2]+tempInt>>2]);HEAP16[Ya>>1]=eb;a=116;break;case 43:var La=HEAP16[(k+96|0)>>1],Ma=f,Fa=(tempInt=HEAP32[Ma+4>>2],HEAP32[Ma+4>>2]=tempInt+8,HEAP32[HEAP32[Ma>>2]+tempInt>>2]);HEAP16[Fa>>1]=La;var Na=HEAP16[((k+96|0)+2|0)>>1],Oa=f,jb=(tempInt=HEAP32[Oa+4>>2],HEAP32[Oa+4>>2]=tempInt+8,HEAP32[HEAP32[Oa>>2]+tempInt>>2]);HEAP16[jb>>1]=Na;a=116;break;case 44:var Za=HEAP16[(k+112|0)>>1],Ca=f,$a=(tempInt=HEAP32[Ca+4>>2],HEAP32[Ca+4>>2]=tempInt+
8,HEAP32[HEAP32[Ca>>2]+tempInt>>2]);HEAP16[$a>>1]=Za;var ab=HEAP16[((k+112|0)+2|0)>>1],Ha=f,Wa=(tempInt=HEAP32[Ha+4>>2],HEAP32[Ha+4>>2]=tempInt+8,HEAP32[HEAP32[Ha>>2]+tempInt>>2]);HEAP16[Wa>>1]=ab;a=116;break;case 45:var bb=HEAP32[(k+100|0)>>2],Pa=f,Ja=(tempInt=HEAP32[Pa+4>>2],HEAP32[Pa+4>>2]=tempInt+8,HEAP32[HEAP32[Pa>>2]+tempInt>>2]);HEAP32[Ja>>2]=bb;var cb=HEAP32[((k+100|0)+4|0)>>2],Qa=f,fb=(tempInt=HEAP32[Qa+4>>2],HEAP32[Qa+4>>2]=tempInt+8,HEAP32[HEAP32[Qa>>2]+tempInt>>2]);HEAP32[fb>>2]=cb;var hb=
HEAP32[((k+100|0)+8|0)>>2],ya=f,db=(tempInt=HEAP32[ya+4>>2],HEAP32[ya+4>>2]=tempInt+8,HEAP32[HEAP32[ya>>2]+tempInt>>2]);HEAP32[db>>2]=hb;a=116;break;case 46:__TIFFFillStriles(e);var Ta=HEAP32[(k+132|0)>>2],kb=f,lb=(tempInt=HEAP32[kb+4>>2],HEAP32[kb+4>>2]=tempInt+8,HEAP32[HEAP32[kb>>2]+tempInt>>2]);HEAP32[lb>>2]=Ta;a=116;break;case 47:__TIFFFillStriles(e);var mb=HEAP32[(k+136|0)>>2],ta=f,nb=(tempInt=HEAP32[ta+4>>2],HEAP32[ta+4>>2]=tempInt+8,HEAP32[HEAP32[ta>>2]+tempInt>>2]);HEAP32[nb>>2]=mb;a=116;
break;case 48:if(1==(HEAP16[(k+116|0)>>1]&65535|0))a=49;else var pb=0,a=50;break;case 49:pb=1==(HEAP16[(HEAP32[(k+120|0)>>2]|0)>>1]&65535|0);a=50;break;case 50:var rb=pb&1,qb=f,sb=(tempInt=HEAP32[qb+4>>2],HEAP32[qb+4>>2]=tempInt+8,HEAP32[HEAP32[qb>>2]+tempInt>>2]);HEAP16[sb>>1]=rb;a=116;break;case 51:var vb=HEAP16[(k+116|0)>>1],wb=f,xb=(tempInt=HEAP32[wb+4>>2],HEAP32[wb+4>>2]=tempInt+8,HEAP32[HEAP32[wb>>2]+tempInt>>2]);HEAP16[xb>>1]=vb;var Db=HEAP32[(k+120|0)>>2],tb=f,Gb=(tempInt=HEAP32[tb+4>>2],
HEAP32[tb+4>>2]=tempInt+8,HEAP32[HEAP32[tb>>2]+tempInt>>2]);HEAP32[Gb>>2]=Db;a=116;break;case 52:var yb=HEAP32[(k+28|0)>>2],ub=f,Ab=(tempInt=HEAP32[ub+4>>2],HEAP32[ub+4>>2]=tempInt+8,HEAP32[HEAP32[ub>>2]+tempInt>>2]);HEAP32[Ab>>2]=yb;a=116;break;case 53:var Tb=HEAP32[(k+32|0)>>2],Kb=f,ac=(tempInt=HEAP32[Kb+4>>2],HEAP32[Kb+4>>2]=tempInt+8,HEAP32[HEAP32[Kb>>2]+tempInt>>2]);HEAP32[ac>>2]=Tb;a=116;break;case 54:var Hb=HEAP32[(k+36|0)>>2],Ob=f,bc=(tempInt=HEAP32[Ob+4>>2],HEAP32[Ob+4>>2]=tempInt+8,HEAP32[HEAP32[Ob>>
2]+tempInt>>2]);HEAP32[bc>>2]=Hb;a=116;break;case 55:var Lb=HEAP16[(k+46|0)>>1]&65535,a=1==(Lb|0)?56:2==(Lb|0)?57:3==(Lb|0)?58:4==(Lb|0)?59:60;break;case 56:var Ub=f,Pb=(tempInt=HEAP32[Ub+4>>2],HEAP32[Ub+4>>2]=tempInt+8,HEAP32[HEAP32[Ub>>2]+tempInt>>2]);HEAP16[Pb>>1]=2;a=60;break;case 57:var cc=f,Vb=(tempInt=HEAP32[cc+4>>2],HEAP32[cc+4>>2]=tempInt+8,HEAP32[HEAP32[cc>>2]+tempInt>>2]);HEAP16[Vb>>1]=1;a=60;break;case 58:var Mb=f,fc=(tempInt=HEAP32[Mb+4>>2],HEAP32[Mb+4>>2]=tempInt+8,HEAP32[HEAP32[Mb>>
2]+tempInt>>2]);HEAP16[fc>>1]=3;a=60;break;case 59:var Wb=f,gc=(tempInt=HEAP32[Wb+4>>2],HEAP32[Wb+4>>2]=tempInt+8,HEAP32[HEAP32[Wb>>2]+tempInt>>2]);HEAP16[gc>>1]=0;a=60;break;case 60:a=116;break;case 61:var dc=HEAP16[(k+46|0)>>1],Xb=f,Yb=(tempInt=HEAP32[Xb+4>>2],HEAP32[Xb+4>>2]=tempInt+8,HEAP32[HEAP32[Xb>>2]+tempInt>>2]);HEAP16[Yb>>1]=dc;a=116;break;case 62:var oc=HEAP32[(k+24|0)>>2],Qb=f,hc=(tempInt=HEAP32[Qb+4>>2],HEAP32[Qb+4>>2]=tempInt+8,HEAP32[HEAP32[Qb>>2]+tempInt>>2]);HEAP32[hc>>2]=oc;a=116;
break;case 63:var ic=HEAP16[(k+144|0)>>1],ec=f,kc=(tempInt=HEAP32[ec+4>>2],HEAP32[ec+4>>2]=tempInt+8,HEAP32[HEAP32[ec>>2]+tempInt>>2]);HEAP16[kc>>1]=ic;var jc=HEAP32[(k+148|0)>>2],Zb=f,lc=(tempInt=HEAP32[Zb+4>>2],HEAP32[Zb+4>>2]=tempInt+8,HEAP32[HEAP32[Zb>>2]+tempInt>>2]);HEAP32[lc>>2]=jc;a=116;break;case 64:var Bb=HEAP16[(k+156|0)>>1],ob=f,Rb=(tempInt=HEAP32[ob+4>>2],HEAP32[ob+4>>2]=tempInt+8,HEAP32[HEAP32[ob>>2]+tempInt>>2]);HEAP16[Rb>>1]=Bb;a=116;break;case 65:var Nb=HEAP16[(k+152|0)>>1],$b=f,
pc=(tempInt=HEAP32[$b+4>>2],HEAP32[$b+4>>2]=tempInt+8,HEAP32[HEAP32[$b>>2]+tempInt>>2]);HEAP16[pc>>1]=Nb;var Bc=HEAP16[((k+152|0)+2|0)>>1],wc=f,xc=(tempInt=HEAP32[wc+4>>2],HEAP32[wc+4>>2]=tempInt+8,HEAP32[HEAP32[wc>>2]+tempInt>>2]);HEAP16[xc>>1]=Bc;a=116;break;case 66:var Lc=HEAP32[(k+160|0)>>2],Cc=f,Cb=(tempInt=HEAP32[Cc+4>>2],HEAP32[Cc+4>>2]=tempInt+8,HEAP32[HEAP32[Cc>>2]+tempInt>>2]);HEAP32[Cb>>2]=Lc;a=1<((HEAP16[(k+58|0)>>1]&65535)-(HEAP16[(k+116|0)>>1]&65535)|0)?67:68;break;case 67:var Gc=HEAP32[((k+
160|0)+4|0)>>2],qc=f,Mc=(tempInt=HEAP32[qc+4>>2],HEAP32[qc+4>>2]=tempInt+8,HEAP32[HEAP32[qc>>2]+tempInt>>2]);HEAP32[Mc>>2]=Gc;var Hc=HEAP32[((k+160|0)+8|0)>>2],rc=f,ed=(tempInt=HEAP32[rc+4>>2],HEAP32[rc+4>>2]=tempInt+8,HEAP32[HEAP32[rc>>2]+tempInt>>2]);HEAP32[ed>>2]=Hc;a=68;break;case 68:a=116;break;case 69:var Nc=HEAP32[(k+172|0)>>2],Oc=f,Sb=(tempInt=HEAP32[Oc+4>>2],HEAP32[Oc+4>>2]=tempInt+8,HEAP32[HEAP32[Oc>>2]+tempInt>>2]);HEAP32[Sb>>2]=Nc;a=116;break;case 70:var Pc=HEAP32[(k+180|0)>>2],Qc=f,Dc=
(tempInt=HEAP32[Qc+4>>2],HEAP32[Qc+4>>2]=tempInt+8,HEAP32[HEAP32[Qc>>2]+tempInt>>2]);HEAP32[Dc>>2]=Pc;a=116;break;case 71:a=0==(n|0)?73:72;break;case 72:a=65!=(HEAP16[(n+24|0)>>1]&65535|0)?73:77;break;case 73:var Fb=HEAP32[(e+628|0)>>2],Rc=HEAP32[(e|0)>>2],od=65535<g>>>0?40528:149048,a=0!=(n|0)?74:75;break;case 74:var Ic=HEAP32[(n+28|0)>>2],a=76;break;case 75:Ic=39240;a=76;break;case 76:_TIFFErrorExt(Fb,41840,41160,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>
2]=Rc,HEAP32[tempInt+8>>2]=od,HEAP32[tempInt+16>>2]=Ic,tempInt));h=0;a=116;break;case 77:s=h=0;a=78;break;case 78:a=(s|0)<(HEAP32[(k+184|0)>>2]|0)?79:115;break;case 79:v=HEAP32[(k+188|0)>>2]+(12*s&-1)|0;a=(HEAP32[(HEAP32[(v|0)>>2]|0)>>2]|0)!=(g|0)?80:81;break;case 80:a=114;break;case 81:a=0!=HEAP8[n+27|0]<<24>>24?82:86;break;case 82:a=-3==(HEAP16[(n+4|0)>>1]<<16>>16|0)?83:84;break;case 83:var pd=HEAP32[(v+4|0)>>2],Ec=f,qd=(tempInt=HEAP32[Ec+4>>2],HEAP32[Ec+4>>2]=tempInt+8,HEAP32[HEAP32[Ec>>2]+tempInt>>
2]);HEAP32[qd>>2]=pd;a=85;break;case 84:var Sc=HEAP32[(v+4|0)>>2]&65535,Tc=f,Uc=(tempInt=HEAP32[Tc+4>>2],HEAP32[Tc+4>>2]=tempInt+8,HEAP32[HEAP32[Tc>>2]+tempInt>>2]);HEAP16[Uc>>1]=Sc;a=85;break;case 85:var Vc=HEAP32[(v+8|0)>>2],sc=f,rd=(tempInt=HEAP32[sc+4>>2],HEAP32[sc+4>>2]=tempInt+8,HEAP32[HEAP32[sc>>2]+tempInt>>2]);HEAP32[rd>>2]=Vc;h=1;a=113;break;case 86:a=336==(HEAP32[(n|0)>>2]|0)?87:89;break;case 87:a=0==(_strcmp(HEAP32[(n+28|0)>>2],38264)|0)?88:89;break;case 88:var yc=HEAP16[(HEAP32[(v+8|0)>>
2]|0)>>1],Wc=f,fd=(tempInt=HEAP32[Wc+4>>2],HEAP32[Wc+4>>2]=tempInt+8,HEAP32[HEAP32[Wc>>2]+tempInt>>2]);HEAP16[fd>>1]=yc;var zc=HEAP16[(HEAP32[(v+8|0)>>2]+2|0)>>1],Xc=f,sd=(tempInt=HEAP32[Xc+4>>2],HEAP32[Xc+4>>2]=tempInt+8,HEAP32[HEAP32[Xc>>2]+tempInt>>2]);HEAP16[sd>>1]=zc;h=1;a=112;break;case 89:a=2==(HEAP32[(n+8|0)>>2]|0)?94:90;break;case 90:a=-1==(HEAP16[(n+4|0)>>1]<<16>>16|0)?94:91;break;case 91:a=-3==(HEAP16[(n+4|0)>>1]<<16>>16|0)?94:92;break;case 92:a=-2==(HEAP16[(n+4|0)>>1]<<16>>16|0)?94:93;
break;case 93:a=1<(HEAP32[(v+4|0)>>2]|0)?94:95;break;case 94:var Jc=HEAP32[(v+8|0)>>2],Yc=f,Zc=(tempInt=HEAP32[Yc+4>>2],HEAP32[Yc+4>>2]=tempInt+8,HEAP32[HEAP32[Yc>>2]+tempInt>>2]);HEAP32[Zc>>2]=Jc;h=1;a=111;break;case 95:u=HEAP32[(v+8|0)>>2];a=1==(HEAP32[(v+4|0)>>2]|0)?96:97;break;case 96:a=98;break;case 97:throw ___assert_func(33208,1057,41840,37504),"Reached an unreachable!";case 98:var Ib=HEAP32[(n+8|0)>>2],a=1==(Ib|0)|7==(Ib|0)?99:6==(Ib|0)?100:3==(Ib|0)?101:8==(Ib|0)?102:4==(Ib|0)|13==(Ib|0)?
103:9==(Ib|0)?104:16==(Ib|0)|18==(Ib|0)?105:17==(Ib|0)?106:5==(Ib|0)|10==(Ib|0)|11==(Ib|0)?107:12==(Ib|0)?108:109;break;case 99:var mc=HEAP8[u],Fc=f,Ac=(tempInt=HEAP32[Fc+4>>2],HEAP32[Fc+4>>2]=tempInt+8,HEAP32[HEAP32[Fc>>2]+tempInt>>2]);HEAP8[Ac]=mc;h=1;a=110;break;case 100:var td=HEAP8[u],$c=f,gd=(tempInt=HEAP32[$c+4>>2],HEAP32[$c+4>>2]=tempInt+8,HEAP32[HEAP32[$c>>2]+tempInt>>2]);HEAP8[gd]=td;h=1;a=110;break;case 101:var ud=HEAP16[u>>1],ad=f,vd=(tempInt=HEAP32[ad+4>>2],HEAP32[ad+4>>2]=tempInt+8,
HEAP32[HEAP32[ad>>2]+tempInt>>2]);HEAP16[vd>>1]=ud;h=1;a=110;break;case 102:var bd=HEAP16[u>>1],hd=f,Zd=(tempInt=HEAP32[hd+4>>2],HEAP32[hd+4>>2]=tempInt+8,HEAP32[HEAP32[hd>>2]+tempInt>>2]);HEAP16[Zd>>1]=bd;h=1;a=110;break;case 103:var $d=HEAP32[u>>2],id=f,ae=(tempInt=HEAP32[id+4>>2],HEAP32[id+4>>2]=tempInt+8,HEAP32[HEAP32[id>>2]+tempInt>>2]);HEAP32[ae>>2]=$d;h=1;a=110;break;case 104:var wd=HEAP32[u>>2],jd=f,Md=(tempInt=HEAP32[jd+4>>2],HEAP32[jd+4>>2]=tempInt+8,HEAP32[HEAP32[jd>>2]+tempInt>>2]);HEAP32[Md>>
2]=wd;h=1;a=110;break;case 105:var be=u,Nd=HEAP32[(be|0)>>2],xd=HEAP32[(be+4|0)>>2],yd=f,zd=(tempInt=HEAP32[yd+4>>2],HEAP32[yd+4>>2]=tempInt+8,HEAP32[HEAP32[yd>>2]+tempInt>>2]);HEAP32[(zd|0)>>2]=Nd;HEAP32[(zd+4|0)>>2]=xd;h=1;a=110;break;case 106:var Od=u,kd=HEAP32[(Od|0)>>2],Ad=HEAP32[(Od+4|0)>>2],Kc=f,Bd=(tempInt=HEAP32[Kc+4>>2],HEAP32[Kc+4>>2]=tempInt+8,HEAP32[HEAP32[Kc>>2]+tempInt>>2]);HEAP32[(Bd|0)>>2]=kd;HEAP32[(Bd+4|0)>>2]=Ad;h=1;a=110;break;case 107:var ce=HEAPF32[u>>2],Cd=f,de=(tempInt=HEAP32[Cd+
4>>2],HEAP32[Cd+4>>2]=tempInt+8,HEAP32[HEAP32[Cd>>2]+tempInt>>2]);HEAPF32[de>>2]=ce;h=1;a=110;break;case 108:var Pd=HEAPF64[u>>3],Dd=f,Ed=(tempInt=HEAP32[Dd+4>>2],HEAP32[Dd+4>>2]=tempInt+8,HEAP32[HEAP32[Dd>>2]+tempInt>>2]);HEAPF64[Ed>>3]=Pd;h=1;a=110;break;case 109:h=0;a=110;break;case 110:a=111;break;case 111:a=112;break;case 112:a=113;break;case 113:a=115;break;case 114:s=s+1|0;a=78;break;case 115:a=116;break;case 116:var Ae=h;STACKTOP=b;return Ae;default:assert(0,"bad label: "+a)}}
function __TIFFGetFields(){return 7152}function _TIFFDataWidth(m){for(var d=0,d=1;;)switch(d){case 1:var c,d=m,d=0==(d|0)|1==(d|0)|2==(d|0)|6==(d|0)|7==(d|0)?2:3==(d|0)|8==(d|0)?3:4==(d|0)|9==(d|0)|11==(d|0)|13==(d|0)?4:5==(d|0)|10==(d|0)|12==(d|0)|16==(d|0)|17==(d|0)|18==(d|0)?5:6;break;case 2:c=1;d=7;break;case 3:c=2;d=7;break;case 4:c=4;d=7;break;case 5:c=8;d=7;break;case 6:c=0;d=7;break;case 7:return c;default:assert(0,"bad label: "+d)}}
function __TIFFDataSize(m){for(var d=0,d=1;;)switch(d){case 1:var c,d=m,d=1==(d|0)|6==(d|0)|2==(d|0)|7==(d|0)?2:3==(d|0)|8==(d|0)?3:4==(d|0)|9==(d|0)|11==(d|0)|13==(d|0)|5==(d|0)|10==(d|0)?4:12==(d|0)|16==(d|0)|17==(d|0)|18==(d|0)?5:6;break;case 2:c=1;d=7;break;case 3:c=2;d=7;break;case 4:c=4;d=7;break;case 5:c=8;d=7;break;case 6:c=0;d=7;break;case 7:return c;default:assert(0,"bad label: "+d)}}
function _tagCompare(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e;b=m;c=d;b=HEAP32[b>>2];e=HEAP32[c>>2];c=(HEAP32[(b|0)>>2]|0)!=(HEAP32[(e|0)>>2]|0)?2:3;break;case 2:a=HEAP32[(b|0)>>2]-HEAP32[(e|0)>>2]|0;c=7;break;case 3:c=0==(HEAP32[(b+8|0)>>2]|0)?4:5;break;case 4:var g=0,c=6;break;case 5:g=HEAP32[(e+8|0)>>2]-HEAP32[(b+8|0)>>2]|0;c=6;break;case 6:a=g;c=7;break;case 7:return a;default:assert(0,"bad label: "+c)}}
function _setDoubleArrayOneValue(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g;b=m;e=d;g=c;a=0!=(HEAP32[b>>2]|0)?2:3;break;case 2:__TIFFfree(HEAP32[b>>2]);a=3;break;case 3:a=__TIFFmalloc(g<<3);HEAP32[b>>2]=a;a=0!=(HEAP32[b>>2]|0)?4:8;break;case 4:a=5;break;case 5:a=g;g=a-1|0;a=0!=(a|0)?6:7;break;case 6:HEAPF64[(HEAP32[b>>2]+(g<<3)|0)>>3]=e;a=5;break;case 7:a=8;break;case 8:return;default:assert(0,"bad label: "+a)}}
function _setExtraSamples(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k,h;e=m;g=d;f=c;a=g;a=(tempInt=HEAP32[a+4>>2],HEAP32[a+4>>2]=tempInt+8,HEAP32[HEAP32[a>>2]+tempInt>>2])&65535;HEAP32[f>>2]=a;a=(HEAP32[f>>2]&65535|0)>(HEAP16[(e+58|0)>>1]&65535|0)?2:3;break;case 2:b=0;a=16;break;case 3:k=g;k=(tempInt=HEAP32[k+4>>2],HEAP32[k+4>>2]=tempInt+8,HEAP32[HEAP32[k>>2]+tempInt>>2]);a=0<HEAP32[f>>2]>>>0?4:6;break;case 4:a=0==(k|0)?5:6;break;case 5:b=0;a=16;break;case 6:h=0;a=7;break;case 7:a=h>>>
0<HEAP32[f>>2]>>>0?8:15;break;case 8:a=2<(HEAP16[(k+(h<<1)|0)>>1]&65535|0)?9:13;break;case 9:a=999==(HEAP16[(k+(h<<1)|0)>>1]&65535|0)?10:11;break;case 10:HEAP16[(k+(h<<1)|0)>>1]=2;a=12;break;case 11:b=0;a=16;break;case 12:a=13;break;case 13:a=14;break;case 14:h=h+1|0;a=7;break;case 15:HEAP16[(e+116|0)>>1]=HEAP32[f>>2]&65535;__TIFFsetShortArray(e+120|0,k,HEAP16[(e+116|0)>>1]&65535);b=1;a=16;break;case 16:return b;default:assert(0,"bad label: "+a)}}
function _checkInkNamesString(m,d,c){var a=0,b=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l,n,p;g=m;f=d;k=c;h=g+40|0;l=HEAP16[(h+58|0)>>1];a=0<f>>>0?2:15;break;case 2:n=k+f|0;p=k;a=3;break;case 3:a=0<(l&65535|0)?4:14;break;case 4:a=5;break;case 5:if(p>>>0<n>>>0)a=6;else var q=0,a=7;break;case 6:q=0!=(HEAP8[p]<<24>>24|0);a=7;break;case 7:a=q?8:10;break;case 8:a=9;break;case 9:p=p+1|0;a=5;break;case 10:a=p>>>0>=n>>>0?11:12;break;case 11:a=16;break;case 12:p=
p+1|0;a=13;break;case 13:l=l-1&65535;a=3;break;case 14:e=p-k|0;a=17;break;case 15:a=16;break;case 16:a=HEAP32[(g|0)>>2];e=HEAP16[(h+58|0)>>1]&65535;var t=(HEAP16[(h+58|0)>>1]&65535)-(l&65535)|0;_TIFFErrorExt(HEAP32[(g+628|0)>>2],32152,32048,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,HEAP32[tempInt+8>>2]=e,HEAP32[tempInt+16>>2]=t,tempInt));e=0;a=17;break;case 17:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function __TIFFSetupFields(m,d){var c=0,a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e,g,f;b=m;e=d;c=0!=(HEAP32[(b+656|0)>>2]|0)?2:11;break;case 2:c=0<HEAP32[(b+660|0)>>2]>>>0?3:11;break;case 3:g=0;c=4;break;case 4:c=g>>>0<HEAP32[(b+660|0)>>2]>>>0?5:10;break;case 5:f=HEAP32[(HEAP32[(b+656|0)>>2]+(g<<2)|0)>>2];c=65==(HEAP16[(f+24|0)>>1]&65535|0)?6:8;break;case 6:c=0==(_strncmp(26616,HEAP32[(f+28|0)>>2],4)|0)?7:8;break;case 7:__TIFFfree(HEAP32[(f+28|0)>>2]);__TIFFfree(f);
c=8;break;case 8:c=9;break;case 9:g=g+1|0;c=4;break;case 10:__TIFFfree(HEAP32[(b+656|0)>>2]);HEAP32[(b+656|0)>>2]=0;HEAP32[(b+660|0)>>2]=0;c=11;break;case 11:c=0!=(__TIFFMergeFields(b,HEAP32[(e+12|0)>>2],HEAP32[(e+8|0)>>2])|0)?13:12;break;case 12:_TIFFErrorExt(HEAP32[(b+628|0)>>2],37840,32296,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));c=13;break;case 13:STACKTOP=a;return;default:assert(0,"bad label: "+c)}}
function __TIFFMergeFields(m,d,c){var a=0,b=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h;g=m;f=d;k=c;HEAP32[(g+664|0)>>2]=0;a=0!=(HEAP32[(g+656|0)>>2]|0)?2:4;break;case 2:a=0<HEAP32[(g+660|0)>>2]>>>0?3:4;break;case 3:a=__TIFFCheckRealloc(g,HEAP32[(g+656|0)>>2],HEAP32[(g+660|0)>>2]+k|0,4,45136);HEAP32[(g+656|0)>>2]=a;a=5;break;case 4:a=__TIFFCheckMalloc(g,k,4,45136);HEAP32[(g+656|0)>>2]=a;a=5;break;case 5:a=0!=(HEAP32[(g+656|0)>>2]|0)?7:6;break;case 6:_TIFFErrorExt(HEAP32[(g+
628|0)>>2],45160,30032,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));e=0;a=14;break;case 7:h=0;a=8;break;case 8:a=h>>>0<k>>>0?9:13;break;case 9:a=_TIFFFindField(g,HEAP32[(f+(36*h&-1)|0)>>2],0);a=0!=(a|0)?11:10;break;case 10:HEAP32[(HEAP32[(g+656|0)>>2]+(HEAP32[(g+660|0)>>2]<<2)|0)>>2]=f+(36*h&-1)|0;a=g+660|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;a=11;break;case 11:a=12;break;case 12:h=h+1|0;a=8;break;case 13:_qsort(HEAP32[(g+
656|0)>>2],HEAP32[(g+660|0)>>2],4,392);e=k;a=14;break;case 14:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFFindField(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+48|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h=b,l=b+40,n;g=m;f=d;k=c;_memset(h,0,36);HEAP32[l>>2]=h;a=0!=(HEAP32[(g+664|0)>>2]|0)?2:6;break;case 2:a=(HEAP32[(HEAP32[(g+664|0)>>2]|0)>>2]|0)==(f|0)?3:6;break;case 3:a=0==(k|0)?5:4;break;case 4:a=(k|0)==(HEAP32[(HEAP32[(g+664|0)>>2]+8|0)>>2]|0)?5:6;break;case 5:e=HEAP32[(g+664|0)>>2];a=12;break;case 6:a=0!=(HEAP32[(g+656|0)>>2]|0)?8:7;break;case 7:e=
0;a=12;break;case 8:HEAP32[(h|0)>>2]=f;HEAP32[(h+8|0)>>2]=k;n=_bsearch(l,HEAP32[(g+656|0)>>2],HEAP32[(g+660|0)>>2],4,392);a=0!=(n|0)?9:10;break;case 9:var p=HEAP32[n>>2],a=11;break;case 10:p=0;a=11;break;case 11:e=HEAP32[(g+664|0)>>2]=p;a=12;break;case 12:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFFieldWithTag(m,d){var c=0,a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e,g;b=m;e=d;g=_TIFFFindField(b,e,0);c=0!=(g|0)?3:2;break;case 2:c=e;_TIFFErrorExt(HEAP32[(b+628|0)>>2],23576,22880,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=c,tempInt));c=3;break;case 3:return b=g,STACKTOP=a,b;default:assert(0,"bad label: "+c)}}
function __TIFFCreateAnonField(m,d,c){var a=0;m=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var b,e,g,f;e=d;g=c;f=__TIFFmalloc(36);a=0==(f|0)?2:3;break;case 2:b=0;a=20;break;case 3:__TIFFmemset(f,0,36);HEAP32[(f|0)>>2]=e;HEAP16[(f+4|0)>>1]=-3;HEAP16[(f+6|0)>>1]=-3;HEAP32[(f+8|0)>>2]=g;HEAP32[(f+12|0)>>2]=0;a=g;a=1==(a|0)|7==(a|0)?4:2==(a|0)?5:3==(a|0)?6:4==(a|0)?7:5==(a|0)|10==(a|0)|11==(a|0)?8:6==(a|0)?9:8==(a|0)?10:9==(a|0)?11:12==(a|0)?12:13==(a|0)|18==(a|0)?13:16==
(a|0)?14:17==(a|0)?15:16;break;case 4:HEAP32[(f+16|0)>>2]=40;HEAP32[(f+20|0)>>2]=40;a=17;break;case 5:HEAP32[(f+16|0)>>2]=39;HEAP32[(f+20|0)>>2]=39;a=17;break;case 6:HEAP32[(f+16|0)>>2]=42;HEAP32[(f+20|0)>>2]=42;a=17;break;case 7:HEAP32[(f+16|0)>>2]=44;HEAP32[(f+20|0)>>2]=44;a=17;break;case 8:HEAP32[(f+16|0)>>2]=48;HEAP32[(f+20|0)>>2]=48;a=17;break;case 9:HEAP32[(f+16|0)>>2]=41;HEAP32[(f+20|0)>>2]=41;a=17;break;case 10:HEAP32[(f+16|0)>>2]=43;HEAP32[(f+20|0)>>2]=43;a=17;break;case 11:HEAP32[(f+16|
0)>>2]=45;HEAP32[(f+20|0)>>2]=45;a=17;break;case 12:HEAP32[(f+16|0)>>2]=49;HEAP32[(f+20|0)>>2]=49;a=17;break;case 13:HEAP32[(f+16|0)>>2]=50;HEAP32[(f+20|0)>>2]=50;a=17;break;case 14:HEAP32[(f+16|0)>>2]=46;HEAP32[(f+20|0)>>2]=46;a=17;break;case 15:HEAP32[(f+16|0)>>2]=47;HEAP32[(f+20|0)>>2]=47;a=17;break;case 16:HEAP32[(f+16|0)>>2]=0;HEAP32[(f+20|0)>>2]=0;a=17;break;case 17:HEAP16[(f+24|0)>>1]=65;HEAP8[f+26|0]=1;HEAP8[f+27|0]=1;a=__TIFFmalloc(32);HEAP32[(f+28|0)>>2]=a;a=0==(HEAP32[(f+28|0)>>2]|0)?18:
19;break;case 18:__TIFFfree(f);b=0;a=20;break;case 19:HEAP32[(f+32|0)>>2]=0;b=e;_sprintf(HEAP32[(f+28|0)>>2],40336,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,tempInt));b=f;a=20;break;case 20:return d=b,STACKTOP=m,d;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirectory(m){var d=0,c=STACKTOP;STACKTOP=STACKTOP+64|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e=c,g,f,k,h,l=c+8,n=c+16,p,q,t,r,s=c+24,v,u=c+32,w,y=c+40,A,z,x,B,C,D,F,I=c+48,G=c+56,H,K;b=m;HEAP32[l>>2]=-1;var J=b+24|0,E=HEAP32[(J+4|0)>>2],L=b+16|0;HEAP32[(L|0)>>2]=HEAP32[(J|0)>>2];HEAP32[(L+4|0)>>2]=E;var Q=b+24|0,d=0!=(_TIFFCheckDirOffset(b,HEAP32[(Q|0)>>2],HEAP32[(Q+4|0)>>2])|0)?3:2;break;case 2:a=0;d=248;break;case 3:FUNCTION_TABLE[HEAP32[(b+564|
0)>>2]](b);var N=b+448|0;HEAP16[N>>1]=HEAP16[N>>1]+1&65535;var P=b+24|0,W=HEAP32[(P+4|0)>>2];HEAP32[(n|0)>>2]=HEAP32[(P|0)>>2];HEAP32[(n+4|0)>>2]=W;g=_TIFFFetchDirectory(b,HEAP32[(n|0)>>2],HEAP32[(n+4|0)>>2],e,b+24|0);d=0!=g<<16>>16?5:4;break;case 4:var O=HEAP32[(n|0)>>2],T=HEAP32[(n+4|0)>>2];_TIFFErrorExt(HEAP32[(b+628|0)>>2],46280,34064,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=O,HEAP32[tempInt+8>>2]=T,tempInt));a=0;d=248;break;case 5:_TIFFReadDirectoryCheckOrder(b,
HEAP32[e>>2],g);p=HEAP32[e>>2];q=0;d=6;break;case 6:d=(q&65535|0)<(g&65535|0)?7:15;break;case 7:t=p+24|0;r=((q&65535)+1|0)&65535;d=8;break;case 8:d=(r&65535|0)<(g&65535|0)?9:13;break;case 9:d=(HEAP16[(p|0)>>1]&65535|0)==(HEAP16[(t|0)>>1]&65535|0)?10:11;break;case 10:HEAP16[(t|0)>>1]=0;d=11;break;case 11:d=12;break;case 12:t=t+24|0;r=r+1&65535;d=8;break;case 13:d=14;break;case 14:p=p+24|0;q=q+1&65535;d=6;break;case 15:var Y=b+12|0;HEAP32[Y>>2]&=-65;var S=b+12|0;HEAP32[S>>2]&=-1048577;_TIFFFreeDirectory(b);
_TIFFDefaultDirectory(b);_TIFFSetField(b,284,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=1,tempInt));f=_TIFFReadDirectoryFindEntry(b,HEAP32[e>>2],g,277);d=0!=(f|0)?16:19;break;case 16:d=0!=(_TIFFFetchNormalTag(b,f,0)|0)?18:17;break;case 17:d=245;break;case 18:HEAP16[(f|0)>>1]=0;d=19;break;case 19:f=_TIFFReadDirectoryFindEntry(b,HEAP32[e>>2],g,259);d=0!=(f|0)?20:27;break;case 20:v=_TIFFReadDirEntryShort(b,f,s);d=1==(v|0)?21:22;break;case 21:v=_TIFFReadDirEntryPersampleShort(b,
f,s);d=22;break;case 22:d=0!=(v|0)?23:24;break;case 23:_TIFFReadDirEntryOutputErr(b,v,46280,40792,0);d=245;break;case 24:var X=HEAP16[s>>1]&65535,d=0!=(_TIFFSetField(b,259,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=X,tempInt))|0)?26:25;break;case 25:d=245;break;case 26:HEAP16[(f|0)>>1]=0;d=30;break;case 27:d=0!=(_TIFFSetField(b,259,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=1,tempInt))|0)?29:
28;break;case 28:d=245;break;case 29:d=30;break;case 30:k=0;f=HEAP32[e>>2];d=31;break;case 31:d=(k&65535|0)<(g&65535|0)?32:54;break;case 32:d=0!=(HEAP16[(f|0)>>1]&65535|0)?33:42;break;case 33:_TIFFReadDirectoryFindFieldInfo(b,HEAP16[(f|0)>>1],l);d=-1==(HEAP32[l>>2]|0)?34:41;break;case 34:var R=HEAP16[(f|0)>>1]&65535,V=HEAP16[(f|0)>>1]&65535;_TIFFWarningExt(HEAP32[(b+628|0)>>2],46280,33960,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=R,HEAP32[tempInt+
8>>2]=V,tempInt));var aa=b,fa=__TIFFCreateAnonField(b,HEAP16[(f|0)>>1]&65535,HEAP16[(f+2|0)>>1]&65535),d=0!=(__TIFFMergeFields(aa,fa,1)|0)?36:35;break;case 35:var Z=HEAP16[(f|0)>>1]&65535,ka=HEAP16[(f|0)>>1]&65535;_TIFFWarningExt(HEAP32[(b+628|0)>>2],46280,31032,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=Z,HEAP32[tempInt+8>>2]=ka,tempInt));HEAP16[(f|0)>>1]=0;d=40;break;case 36:_TIFFReadDirectoryFindFieldInfo(b,HEAP16[(f|0)>>1],l);d=-1!=(HEAP32[l>>
2]|0)?37:38;break;case 37:d=39;break;case 38:throw ___assert_func(29136,3559,43920,27536),"Reached an unreachable!";case 39:d=40;break;case 40:d=41;break;case 41:d=42;break;case 42:d=0!=(HEAP16[(f|0)>>1]&65535|0)?43:52;break;case 43:h=HEAP32[(HEAP32[(b+656|0)>>2]+(HEAP32[l>>2]<<2)|0)>>2];d=0==(HEAP16[(h+24|0)>>1]&65535|0)?44:45;break;case 44:HEAP16[(f|0)>>1]=0;d=51;break;case 45:var M=HEAP16[(f|0)>>1]&65535,d=273==(M|0)|279==(M|0)|324==(M|0)|325==(M|0)?46:256==(M|0)|257==(M|0)|32997==(M|0)|323==(M|
0)|322==(M|0)|32998==(M|0)|284==(M|0)|278==(M|0)|338==(M|0)?47:50;break;case 46:var ga=(b+40|0)+(((HEAP16[(h+24|0)>>1]&65535|0)/32&-1)<<2)|0;HEAP32[ga>>2]|=1<<(HEAP16[(h+24|0)>>1]&31);d=50;break;case 47:d=0!=(_TIFFFetchNormalTag(b,f,0)|0)?49:48;break;case 48:d=245;break;case 49:HEAP16[(f|0)>>1]=0;d=50;break;case 50:d=51;break;case 51:d=52;break;case 52:d=53;break;case 53:k=k+1&65535;f=f+24|0;d=31;break;case 54:d=6==(HEAP16[((b+40|0)+48|0)>>1]&65535|0)?55:65;break;case 55:d=2==(HEAP16[((b+40|0)+86|
0)>>1]&65535|0)?56:65;break;case 56:d=0!=(__TIFFFillStriles(b)|0)?58:57;break;case 57:d=245;break;case 58:f=_TIFFReadDirectoryFindEntry(b,HEAP32[e>>2],g,273);d=0!=(f|0)?59:64;break;case 59:var na=f+8|0,d=1==(HEAP32[(na|0)>>2]|0)&0==(HEAP32[(na+4|0)>>2]|0)?60:64;break;case 60:f=_TIFFReadDirectoryFindEntry(b,HEAP32[e>>2],g,279);d=0!=(f|0)?61:63;break;case 61:var ba=f+8|0,d=1==(HEAP32[(ba|0)>>2]|0)&0==(HEAP32[(ba+4|0)>>2]|0)?62:63;break;case 62:HEAP16[((b+40|0)+86|0)>>1]=1;_TIFFWarningExt(HEAP32[(b+
628|0)>>2],46280,26352,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));d=63;break;case 63:d=64;break;case 64:d=65;break;case 65:d=0!=(HEAP32[(b+40|0)>>2]&2|0)?67:66;break;case 66:_MissingRequired(b,25416);d=245;break;case 67:d=0!=(HEAP32[(b+40|0)>>2]&4|0)?69:68;break;case 68:var ca=_TIFFNumberOfStrips(b);HEAP32[((b+40|0)+128|0)>>2]=ca;HEAP32[((b+40|0)+28|0)>>2]=HEAP32[((b+40|0)+16|0)>>2];HEAP32[((b+40|0)+32|0)>>
2]=HEAP32[((b+40|0)+60|0)>>2];HEAP32[((b+40|0)+36|0)>>2]=HEAP32[((b+40|0)+24|0)>>2];var oa=b+12|0;HEAP32[oa>>2]&=-1025;d=70;break;case 69:var va=_TIFFNumberOfTiles(b);HEAP32[((b+40|0)+128|0)>>2]=va;var pa=b+12|0;HEAP32[pa>>2]|=1024;d=70;break;case 70:d=0!=(HEAP32[((b+40|0)+128|0)>>2]|0)?72:71;break;case 71:var la=0!=(HEAP32[(b+12|0)>>2]&1024|0)?23368:42032;_TIFFErrorExt(HEAP32[(b+628|0)>>2],46280,24088,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=
la,tempInt));d=245;break;case 72:HEAP32[((b+40|0)+124|0)>>2]=HEAP32[((b+40|0)+128|0)>>2];d=2==(HEAP16[((b+40|0)+86|0)>>1]&65535|0)?73:74;break;case 73:var wa=(b+40|0)+124|0;HEAP32[wa>>2]=(HEAP32[wa>>2]>>>0)/((HEAP16[((b+40|0)+58|0)>>1]&65535)>>>0)&-1;d=74;break;case 74:d=0!=(HEAP32[(b+40|0)>>2]&33554432|0)?81:75;break;case 75:d=6==(HEAP16[((b+40|0)+48|0)>>1]&65535|0)?76:79;break;case 76:d=0==(0!=(HEAP32[(b+12|0)>>2]&1024|0)&1|0)?77:79;break;case 77:d=1==(HEAP32[((b+40|0)+128|0)>>2]|0)?78:79;break;
case 78:var qa=b+40|0;HEAP32[qa>>2]|=33554432;d=80;break;case 79:_MissingRequired(b,0!=(HEAP32[(b+12|0)>>2]&1024|0)?41416:40752);d=245;break;case 80:d=81;break;case 81:k=0;f=HEAP32[e>>2];d=82;break;case 82:d=(k&65535|0)<(g&65535|0)?83:138;break;case 83:var ea=HEAP16[(f|0)>>1]&65535,d=0==(ea|0)?84:280==(ea|0)|281==(ea|0)|258==(ea|0)|32996==(ea|0)|339==(ea|0)?85:340==(ea|0)|341==(ea|0)?95:273==(ea|0)|324==(ea|0)?106:279==(ea|0)|325==(ea|0)?109:320==(ea|0)|301==(ea|0)?112:255==(ea|0)?126:135;break;case 84:d=
136;break;case 85:w=_TIFFReadDirEntryShort(b,f,u);d=1==(w|0)?86:87;break;case 86:w=_TIFFReadDirEntryPersampleShort(b,f,u);d=87;break;case 87:d=0!=(w|0)?88:92;break;case 88:h=_TIFFFieldWithTag(b,HEAP16[(f|0)>>1]&65535);var xa=b,ja=w,d=0!=(h|0)?89:90;break;case 89:var da=HEAP32[(h+28|0)>>2],d=91;break;case 90:da=40064;d=91;break;case 91:_TIFFReadDirEntryOutputErr(xa,ja,46280,da,0);d=245;break;case 92:var Ga=HEAP16[u>>1]&65535,d=0!=(_TIFFSetField(b,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+
8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=Ga,tempInt))|0)?94:93;break;case 93:d=245;break;case 94:d=136;break;case 95:var $=f+8|0,d=(HEAP32[($|0)>>2]|0)!=(HEAP16[((b+40|0)+58|0)>>1]&65535|0)|0!=(HEAP32[($+4|0)>>2]|0)?96:97;break;case 96:A=1;d=98;break;case 97:A=_TIFFReadDirEntryDoubleArray(b,f,y);d=98;break;case 98:d=0!=(A|0)?99:103;break;case 99:h=_TIFFFieldWithTag(b,HEAP16[(f|0)>>1]&65535);var ma=b,ra=A,d=0!=(h|0)?100:101;break;case 100:var Aa=HEAP32[(h+28|0)>>2],d=102;break;case 101:Aa=
40064;d=102;break;case 102:_TIFFReadDirEntryOutputErr(ma,ra,46280,Aa,0);d=245;break;case 103:z=HEAP32[(b+12|0)>>2];var Xa=b+12|0;HEAP32[Xa>>2]|=4194304;var Da=HEAP32[y>>2];x=_TIFFSetField(b,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=Da,tempInt));HEAP32[(b+12|0)>>2]=z;__TIFFfree(HEAP32[y>>2]);d=0!=(x|0)?105:104;break;case 104:d=245;break;case 105:d=136;break;case 106:d=0!=(_TIFFFetchStripThing(b,f,HEAP32[((b+40|0)+128|0)>>
2],(b+40|0)+132|0)|0)?108:107;break;case 107:d=245;break;case 108:d=136;break;case 109:d=0!=(_TIFFFetchStripThing(b,f,HEAP32[((b+40|0)+128|0)>>2],(b+40|0)+136|0)|0)?111:110;break;case 110:d=245;break;case 111:d=136;break;case 112:HEAP32[I>>2]=0;C=1<<(HEAP16[((b+40|0)+44|0)>>1]&65535);d=301==(HEAP16[(f|0)>>1]&65535|0)?113:115;break;case 113:var Ua=f+8|0,d=(HEAP32[(Ua|0)>>2]|0)==(C|0)&0==(HEAP32[(Ua+4|0)>>2]|0)?114:115;break;case 114:D=C;F=0;d=116;break;case 115:D=3*C&-1;F=C;d=116;break;case 116:var sa=
f+8|0,d=(HEAP32[(sa|0)>>2]|0)!=(D|0)|0!=(HEAP32[(sa+4|0)>>2]|0)?117:118;break;case 117:B=1;d=119;break;case 118:B=_TIFFReadDirEntryShortArray(b,f,I);d=119;break;case 119:d=0!=(B|0)?120:124;break;case 120:h=_TIFFFieldWithTag(b,HEAP16[(f|0)>>1]&65535);var ha=b,U=B,d=0!=(h|0)?121:122;break;case 121:var gb=HEAP32[(h+28|0)>>2],d=123;break;case 122:gb=40064;d=123;break;case 123:_TIFFReadDirEntryOutputErr(ha,U,46280,gb,1);d=125;break;case 124:var Ka=HEAP32[I>>2],Ia=HEAP32[I>>2]+(F<<1)|0,ia=HEAP32[I>>2]+
(F<<1<<1)|0;_TIFFSetField(b,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=Ka,HEAP32[tempInt+8>>2]=Ia,HEAP32[tempInt+16>>2]=ia,tempInt));__TIFFfree(HEAP32[I>>2]);d=125;break;case 125:d=136;break;case 126:d=0==(_TIFFReadDirEntryShort(b,f,G)|0)?127:134;break;case 127:var Ba=HEAP16[G>>1]&65535,d=2==(Ba|0)?128:3==(Ba|0)?129:130;break;case 128:H=1;d=131;break;case 129:H=2;d=131;break;case 130:H=0;d=131;break;case 131:d=0!=(H|0)?132:
133;break;case 132:var Ra=H;_TIFFSetField(b,254,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=Ra,tempInt));d=133;break;case 133:d=134;break;case 134:d=136;break;case 135:_TIFFFetchNormalTag(b,f,1);d=136;break;case 136:d=137;break;case 137:k=k+1&65535;f=f+24|0;d=82;break;case 138:d=6==(HEAP16[((b+40|0)+48|0)>>1]&65535|0)?139:167;break;case 139:d=0!=(HEAP32[(b+40|0)>>2]&256|0)?143:140;break;case 140:_TIFFWarningExt(HEAP32[(b+628|0)>>2],46280,39488,(tempInt=
STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));d=0!=(_TIFFSetField(b,262,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=6,tempInt))|0)?142:141;break;case 141:d=245;break;case 142:d=146;break;case 143:d=2==(HEAP16[((b+40|0)+50|0)>>1]&65535|0)?144:145;break;case 144:HEAP16[((b+40|0)+50|0)>>1]=6;_TIFFWarningExt(HEAP32[(b+628|0)>>2],46280,38560,(tempInt=STACKTOP,STACKTOP=STACKTOP+
1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));d=145;break;case 145:d=146;break;case 146:d=0!=(HEAP32[(b+40|0)>>2]&64|0)?150:147;break;case 147:_TIFFWarningExt(HEAP32[(b+628|0)>>2],46280,37736,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));d=0!=(_TIFFSetField(b,258,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=8,
tempInt))|0)?149:148;break;case 148:d=245;break;case 149:d=150;break;case 150:d=0!=(HEAP32[(b+40|0)>>2]&65536|0)?166:151;break;case 151:d=2==(HEAP16[((b+40|0)+50|0)>>1]&65535|0)?152:155;break;case 152:_TIFFWarningExt(HEAP32[(b+628|0)>>2],46280,37088,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));d=0!=(_TIFFSetField(b,277,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>
2]=3,tempInt))|0)?154:153;break;case 153:d=245;break;case 154:d=155;break;case 155:d=6==(HEAP16[((b+40|0)+50|0)>>1]&65535|0)?156:159;break;case 156:_TIFFWarningExt(HEAP32[(b+628|0)>>2],46280,36280,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));d=0!=(_TIFFSetField(b,277,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=3,tempInt))|0)?158:157;break;case 157:d=245;break;
case 158:d=165;break;case 159:d=0==(HEAP16[((b+40|0)+50|0)>>1]&65535|0)?161:160;break;case 160:d=1==(HEAP16[((b+40|0)+50|0)>>1]&65535|0)?161:164;break;case 161:d=0!=(_TIFFSetField(b,277,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=1,tempInt))|0)?163:162;break;case 162:d=245;break;case 163:d=164;break;case 164:d=165;break;case 165:d=166;break;case 166:d=167;break;case 167:d=3==(HEAP16[((b+40|0)+50|0)>>1]&65535|0)?168:177;break;case 168:d=0!=(HEAP32[(b+
40|0)>>2]&67108864|0)?177:169;break;case 169:d=8<=(HEAP16[((b+40|0)+44|0)>>1]&65535|0)?170:172;break;case 170:d=3==(HEAP16[((b+40|0)+58|0)>>1]&65535|0)?171:172;break;case 171:HEAP16[((b+40|0)+50|0)>>1]=2;d=176;break;case 172:d=8<=(HEAP16[((b+40|0)+44|0)>>1]&65535|0)?173:174;break;case 173:HEAP16[((b+40|0)+50|0)>>1]=1;d=175;break;case 174:_MissingRequired(b,35552);d=245;break;case 175:d=176;break;case 176:d=177;break;case 177:d=6!=(HEAP16[((b+40|0)+48|0)>>1]&65535|0)?178:212;break;case 178:d=0!=(HEAP32[(b+
40|0)>>2]&16777216|0)?187:179;break;case 179:d=1==(HEAP16[((b+40|0)+86|0)>>1]&65535|0)?180:181;break;case 180:d=1<HEAP32[((b+40|0)+128|0)>>2]>>>0?183:181;break;case 181:d=2==(HEAP16[((b+40|0)+86|0)>>1]&65535|0)?182:184;break;case 182:d=(HEAP32[((b+40|0)+128|0)>>2]|0)!=(HEAP16[((b+40|0)+58|0)>>1]&65535|0)?183:184;break;case 183:_MissingRequired(b,35008);d=245;break;case 184:_TIFFWarningExt(HEAP32[(b+628|0)>>2],46280,34432,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|
0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));d=0>(_EstimateStripByteCounts(b,HEAP32[e>>2],g)|0)?185:186;break;case 185:d=245;break;case 186:d=211;break;case 187:d=1==(HEAP32[((b+40|0)+128|0)>>2]|0)?188:200;break;case 188:d=0!=(__TIFFFillStriles(b)|0)?189:200;break;case 189:var Sa=HEAP32[((b+40|0)+132|0)>>2]|0,d=0!=(HEAP32[(Sa|0)>>2]|0)|0!=(HEAP32[(Sa+4|0)>>2]|0)?190:200;break;case 190:var ib=HEAP32[((b+40|0)+136|0)>>2]|0,d=0==(HEAP32[(ib|0)>>2]|0)&0==(HEAP32[(ib+4|0)>>2]|0)?191:192;break;case 191:var ua=
HEAP32[((b+40|0)+132|0)>>2]|0,d=0!=(HEAP32[(ua|0)>>2]|0)|0!=(HEAP32[(ua+4|0)>>2]|0)?197:192;break;case 192:d=1==(HEAP16[((b+40|0)+48|0)>>1]&65535|0)?193:194;break;case 193:var Va=HEAP32[((b+40|0)+136|0)>>2]|0,eb=HEAP32[(Va|0)>>2],Ea=HEAP32[(Va+4|0)>>2],Ya=FUNCTION_TABLE[HEAP32[(b+648|0)>>2]](HEAP32[(b+628|0)>>2]),La=HEAP32[((b+40|0)+132|0)>>2]|0,Ma=_i64Subtract(Ya,tempRet0,HEAP32[(La|0)>>2],HEAP32[(La+4|0)>>2]),Fa=tempRet0,d=Ea>>>0>Fa>>>0|Ea>>>0==Fa>>>0&eb>>>0>Ma>>>0?197:194;break;case 194:d=0==(HEAP32[(b+
8|0)>>2]|0)?195:200;break;case 195:d=1==(HEAP16[((b+40|0)+48|0)>>1]&65535|0)?196:200;break;case 196:var Na=HEAP32[((b+40|0)+136|0)>>2]|0,Oa=HEAP32[(Na|0)>>2],jb=HEAP32[(Na+4|0)>>2],Za=_TIFFScanlineSize64(b),Ca=___muldi3(Za,tempRet0,HEAP32[((b+40|0)+20|0)>>2],0),$a=tempRet0,d=jb>>>0<$a>>>0|jb>>>0==$a>>>0&Oa>>>0<Ca>>>0?197:200;break;case 197:_TIFFWarningExt(HEAP32[(b+628|0)>>2],46280,33848,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>
2]=0,tempInt));d=0>(_EstimateStripByteCounts(b,HEAP32[e>>2],g)|0)?198:199;break;case 198:d=245;break;case 199:d=210;break;case 200:d=1==(HEAP16[((b+40|0)+86|0)>>1]&65535|0)?201:209;break;case 201:d=2<HEAP32[((b+40|0)+128|0)>>2]>>>0?202:209;break;case 202:d=1==(HEAP16[((b+40|0)+48|0)>>1]&65535|0)?203:209;break;case 203:var ab=HEAP32[((b+40|0)+136|0)>>2]|0,Ha=HEAP32[((b+40|0)+136|0)>>2]+8|0,d=(HEAP32[(ab|0)>>2]|0)!=(HEAP32[(Ha|0)>>2]|0)|(HEAP32[(ab+4|0)>>2]|0)!=(HEAP32[(Ha+4|0)>>2]|0)?204:209;break;
case 204:var Wa=HEAP32[((b+40|0)+136|0)>>2]|0,d=0!=(HEAP32[(Wa|0)>>2]|0)|0!=(HEAP32[(Wa+4|0)>>2]|0)?205:209;break;case 205:var bb=HEAP32[((b+40|0)+136|0)>>2]+8|0,d=0!=(HEAP32[(bb|0)>>2]|0)|0!=(HEAP32[(bb+4|0)>>2]|0)?206:209;break;case 206:_TIFFWarningExt(HEAP32[(b+628|0)>>2],46280,33424,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));d=0>(_EstimateStripByteCounts(b,HEAP32[e>>2],g)|0)?207:208;break;case 207:d=245;
break;case 208:d=209;break;case 209:d=210;break;case 210:d=211;break;case 211:d=212;break;case 212:d=0!=(HEAP32[e>>2]|0)?213:214;break;case 213:__TIFFfree(HEAP32[e>>2]);HEAP32[e>>2]=0;d=214;break;case 214:d=0!=(HEAP32[(b+40|0)>>2]&524288|0)?219:215;break;case 215:d=16<=(HEAP16[((b+40|0)+44|0)>>1]&65535|0)?216:217;break;case 216:HEAP16[((b+40|0)+66|0)>>1]=-1;d=218;break;case 217:HEAP16[((b+40|0)+66|0)>>1]=((1<<(HEAP16[((b+40|0)+44|0)>>1]&65535))-1|0)&65535;d=218;break;case 218:d=219;break;case 219:d=
1<HEAP32[((b+40|0)+128|0)>>2]>>>0?220:227;break;case 220:K=HEAP32[((b+40|0)+140|0)>>2]=1;d=221;break;case 221:d=K>>>0<HEAP32[((b+40|0)+128|0)>>2]>>>0?222:226;break;case 222:var Pa=HEAP32[((b+40|0)+132|0)>>2]+((K-1|0)<<3)|0,Ja=HEAP32[(Pa+4|0)>>2],cb=HEAP32[((b+40|0)+132|0)>>2]+(K<<3)|0,Qa=HEAP32[(cb+4|0)>>2],d=Ja>>>0>Qa>>>0|Ja>>>0==Qa>>>0&HEAP32[(Pa|0)>>2]>>>0>HEAP32[(cb|0)>>2]>>>0?223:224;break;case 223:HEAP32[((b+40|0)+140|0)>>2]=0;d=226;break;case 224:d=225;break;case 225:K=K+1|0;d=221;break;case 226:d=
227;break;case 227:FUNCTION_TABLE[HEAP32[(b+504|0)>>2]](b);d=1==(HEAP16[((b+40|0)+86|0)>>1]&65535|0)?228:235;break;case 228:d=1==(HEAP32[((b+40|0)+128|0)>>2]|0)?229:235;break;case 229:d=1==(HEAP16[((b+40|0)+48|0)>>1]&65535|0)?230:235;break;case 230:d=32768==(HEAP32[(b+12|0)>>2]&33792|0)?231:235;break;case 231:d=0!=(__TIFFFillStriles(b)|0)?232:233;break;case 232:d=0!=(HEAP32[((b+40|0)+136|0)>>2]|0)?234:233;break;case 233:a=0;d=248;break;case 234:_ChopUpSingleUncompressedStrip(b);d=235;break;case 235:var fb=
b+12|0;HEAP32[fb>>2]&=-9;var hb=b+12|0;HEAP32[hb>>2]&=-2097153;HEAP32[(b+444|0)>>2]=-1;HEAP32[(b+452|0)>>2]=-1;HEAP32[(b+488|0)>>2]=-1;HEAP32[(b+492|0)>>2]=-1;HEAP32[(b+496|0)>>2]=-1;var ya=_TIFFScanlineSize(b);HEAP32[(b+580|0)>>2]=ya;d=0!=(HEAP32[(b+580|0)>>2]|0)?237:236;break;case 236:_TIFFErrorExt(HEAP32[(b+628|0)>>2],46280,33048,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=248;break;case 237:d=0!=(HEAP32[(b+
12|0)>>2]&1024|0)?238:241;break;case 238:var db=_TIFFTileSize(b);HEAP32[(b+496|0)>>2]=db;d=0!=(HEAP32[(b+496|0)>>2]|0)?240:239;break;case 239:_TIFFErrorExt(HEAP32[(b+628|0)>>2],46280,32672,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=248;break;case 240:d=244;break;case 241:d=0!=(_TIFFStripSize(b)|0)?243:242;break;case 242:_TIFFErrorExt(HEAP32[(b+628|0)>>2],46280,32264,(tempInt=STACKTOP,STACKTOP=STACKTOP+
1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=248;break;case 243:d=244;break;case 244:a=1;d=248;break;case 245:d=0!=(HEAP32[e>>2]|0)?246:247;break;case 246:__TIFFfree(HEAP32[e>>2]);d=247;break;case 247:a=0;d=248;break;case 248:var Ta=a;STACKTOP=c;return Ta;default:assert(0,"bad label: "+d)}}
function _TIFFCheckDirOffset(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f=b,k,h;g=m;HEAP32[(f|0)>>2]=d;HEAP32[(f+4|0)>>2]=c;a=0==(HEAP32[(f|0)>>2]|0)&0==(HEAP32[(f+4|0)>>2]|0)?2:3;break;case 2:e=0;a=16;break;case 3:k=0;a=4;break;case 4:if((k&65535|0)<(HEAP16[(g+38|0)>>1]&65535|0))a=5;else var l=0,a=6;break;case 5:l=0!=(HEAP32[(g+32|0)>>2]|0);a=6;break;case 6:a=l?7:11;break;case 7:a=HEAP32[(g+32|0)>>2]+((k&65535)<<3)|0;a=
(HEAP32[(a|0)>>2]|0)==(HEAP32[(f|0)>>2]|0)&(HEAP32[(a+4|0)>>2]|0)==(HEAP32[(f+4|0)>>2]|0)?8:9;break;case 8:e=0;a=16;break;case 9:a=10;break;case 10:k=k+1&65535;a=4;break;case 11:a=g+38|0;HEAP16[a>>1]=HEAP16[a>>1]+1&65535;a=(HEAP16[(g+38|0)>>1]&65535|0)>(HEAP16[(g+36|0)>>1]&65535|0)?12:15;break;case 12:h=__TIFFCheckRealloc(g,HEAP32[(g+32|0)>>2],HEAP16[(g+38|0)>>1]&65535,16,26152);a=0!=(h|0)?14:13;break;case 13:e=0;a=16;break;case 14:HEAP16[(g+36|0)>>1]=(HEAP16[(g+38|0)>>1]&65535)<<1&65535;HEAP32[(g+
32|0)>>2]=h;a=15;break;case 15:e=HEAP32[(f+4|0)>>2];a=HEAP32[(g+32|0)>>2]+(((HEAP16[(g+38|0)>>1]&65535)-1|0)<<3)|0;HEAP32[(a|0)>>2]=HEAP32[(f|0)>>2];HEAP32[(a+4|0)>>2]=e;e=1;a=16;break;case 16:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirectoryCheckOrder(m,d,c){var a=0,b=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h;e=m;a=d;g=c;k=f=0;h=a;a=2;break;case 2:a=(k&65535|0)<(g&65535|0)?3:7;break;case 3:a=(HEAP16[(h|0)>>1]&65535|0)<(f&65535|0)?4:5;break;case 4:_TIFFWarningExt(HEAP32[(e+628|0)>>2],46304,25664,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=7;break;case 5:f=((HEAP16[(h|0)>>1]&
65535)+1|0)&65535;a=6;break;case 6:k=k+1&65535;h=h+24|0;a=2;break;case 7:STACKTOP=b;return;default:assert(0,"bad label: "+a)}}
function _TIFFFetchDirectory(m,d,c,a,b){var e=0,g=STACKTOP;STACKTOP=STACKTOP+48|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var f,k,h=g,l,n,p,q=g+8,t,r,s,v,u,w=g+16,y=g+24,A,z,x,B=g+32,C=g+40;k=m;HEAP32[(h|0)>>2]=d;HEAP32[(h+4|0)>>2]=c;l=a;n=b;e=0!=(l|0)?2:3;break;case 2:e=4;break;case 3:throw ___assert_func(29136,4453,44168,27400),"Reached an unreachable!";case 4:var e=HEAP32[(h+4|0)>>2],D=k+16|0;HEAP32[(D|0)>>2]=HEAP32[(h|0)>>2];HEAP32[(D+4|0)>>2]=e;e=0!=(n|0)?5:6;break;case 5:e=
n;HEAP32[(e|0)>>2]=0;HEAP32[(e+4|0)>>2]=0;e=6;break;case 6:e=0!=(HEAP32[(k+12|0)>>2]&2048|0)?42:7;break;case 7:e=k+16|0;e=FUNCTION_TABLE[HEAP32[(k+640|0)>>2]](HEAP32[(k+628|0)>>2],HEAP32[(e|0)>>2],HEAP32[(e+4|0)>>2],0);D=k+16|0;e=(e|0)==(HEAP32[(D|0)>>2]|0)&(tempRet0|0)==(HEAP32[(D+4|0)>>2]|0)?9:8;break;case 8:f=HEAP32[(k|0)>>2];_TIFFErrorExt(HEAP32[(k+628|0)>>2],46808,27232,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=f,tempInt));f=0;e=112;break;
case 9:e=0!=(HEAP32[(k+12|0)>>2]&524288|0)?17:10;break;case 10:e=2==(FUNCTION_TABLE[HEAP32[(k+632|0)>>2]](HEAP32[(k+628|0)>>2],q,2)|0)?12:11;break;case 11:f=HEAP32[(k|0)>>2];_TIFFErrorExt(HEAP32[(k+628|0)>>2],46808,27032,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=f,tempInt));f=0;e=112;break;case 12:e=0!=(HEAP32[(k+12|0)>>2]&128|0)?13:14;break;case 13:_TIFFSwabShort(q);e=14;break;case 14:e=4096<(HEAP16[q>>1]&65535|0)?15:16;break;case 15:_TIFFErrorExt(HEAP32[(k+
628|0)>>2],46808,26904,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));f=0;e=112;break;case 16:t=12;e=24;break;case 17:e=8==(FUNCTION_TABLE[HEAP32[(k+632|0)>>2]](HEAP32[(k+628|0)>>2],w,8)|0)?19:18;break;case 18:f=HEAP32[(k|0)>>2];_TIFFErrorExt(HEAP32[(k+628|0)>>2],46808,27032,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=f,tempInt));f=0;e=112;break;case 19:e=0!=(HEAP32[(k+
12|0)>>2]&128|0)?20:21;break;case 20:_TIFFSwabLong8(w);e=21;break;case 21:e=HEAP32[(w+4|0)>>2];e=0<e>>>0|0==e>>>0&4096<HEAP32[(w|0)>>2]>>>0?22:23;break;case 22:_TIFFErrorExt(HEAP32[(k+628|0)>>2],46808,26904,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));f=0;e=112;break;case 23:HEAP16[q>>1]=HEAP32[(w|0)>>2]&65535;t=20;e=24;break;case 24:p=__TIFFCheckMalloc(k,HEAP16[q>>1]&65535,t,26848);e=0==(p|0)?25:26;break;case 25:f=
0;e=112;break;case 26:var e=HEAP32[(k+632|0)>>2],D=HEAP32[(k+628|0)>>2],F=p,I=Math.imul(HEAP16[q>>1]&65535,t)|0,e=FUNCTION_TABLE[e](D,F,I),D=Math.imul(HEAP16[q>>1]&65535,t)|0,e=(e|0)==(D|0)?28:27;break;case 27:f=HEAP32[(k|0)>>2];_TIFFErrorExt(HEAP32[(k+628|0)>>2],46808,26736,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=f,tempInt));__TIFFfree(p);f=0;e=112;break;case 28:e=0!=(n|0)?29:41;break;case 29:e=0!=(HEAP32[(k+12|0)>>2]&524288|0)?35:30;break;
case 30:e=4==(FUNCTION_TABLE[HEAP32[(k+632|0)>>2]](HEAP32[(k+628|0)>>2],y,4)|0)?32:31;break;case 31:HEAP32[y>>2]=0;e=32;break;case 32:e=0!=(HEAP32[(k+12|0)>>2]&128|0)?33:34;break;case 33:_TIFFSwabLong(y);e=34;break;case 34:e=n;HEAP32[(e|0)>>2]=HEAP32[y>>2];HEAP32[(e+4|0)>>2]=0;e=40;break;case 35:e=8==(FUNCTION_TABLE[HEAP32[(k+632|0)>>2]](HEAP32[(k+628|0)>>2],n,8)|0)?37:36;break;case 36:e=n;HEAP32[(e|0)>>2]=0;HEAP32[(e+4|0)>>2]=0;e=37;break;case 37:e=0!=(HEAP32[(k+12|0)>>2]&128|0)?38:39;break;case 38:_TIFFSwabLong8(n);
e=39;break;case 39:e=40;break;case 40:e=41;break;case 41:e=94;break;case 42:e=z=HEAP32[(k+16|0)>>2];D=k+16|0;e=(e|0)!=(HEAP32[(D|0)>>2]|0)|((0>(e|0)?-1:0)|0)!=(HEAP32[(D+4|0)>>2]|0)?43:44;break;case 43:_TIFFErrorExt(HEAP32[(k+628|0)>>2],46808,26640,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));f=0;e=112;break;case 44:e=0!=(HEAP32[(k+12|0)>>2]&524288|0)?55:45;break;case 45:A=z+2|0;e=(A|0)<(z|0)?48:46;break;case 46:e=
2>(A|0)?48:47;break;case 47:e=(A|0)>(HEAP32[(k+616|0)>>2]|0)?48:49;break;case 48:_TIFFErrorExt(HEAP32[(k+628|0)>>2],46808,26640,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));f=0;e=112;break;case 49:__TIFFmemcpy(q,HEAP32[(k+612|0)>>2]+z|0,2);e=50;break;case 50:z=z+2|0;e=0!=(HEAP32[(k+12|0)>>2]&128|0)?51:52;break;case 51:_TIFFSwabShort(q);e=52;break;case 52:e=4096<(HEAP16[q>>1]&65535|0)?53:54;break;case 53:_TIFFErrorExt(HEAP32[(k+
628|0)>>2],46808,26904,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));f=0;e=112;break;case 54:t=12;e=65;break;case 55:x=z+8|0;e=(x|0)<(z|0)?58:56;break;case 56:e=8>(x|0)?58:57;break;case 57:e=(x|0)>(HEAP32[(k+616|0)>>2]|0)?58:59;break;case 58:_TIFFErrorExt(HEAP32[(k+628|0)>>2],46808,26640,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,
tempInt));f=0;e=112;break;case 59:__TIFFmemcpy(B,HEAP32[(k+612|0)>>2]+z|0,8);e=60;break;case 60:z=z+8|0;e=0!=(HEAP32[(k+12|0)>>2]&128|0)?61:62;break;case 61:_TIFFSwabLong8(B);e=62;break;case 62:e=HEAP32[(B+4|0)>>2];e=0<e>>>0|0==e>>>0&4096<HEAP32[(B|0)>>2]>>>0?63:64;break;case 63:_TIFFErrorExt(HEAP32[(k+628|0)>>2],46808,26904,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));f=0;e=112;break;case 64:HEAP16[q>>1]=HEAP32[(B|
0)>>2]&65535;t=20;e=65;break;case 65:e=0==(HEAP16[q>>1]&65535|0)?66:67;break;case 66:_TIFFErrorExt(HEAP32[(k+628|0)>>2],46808,26536,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));f=0;e=112;break;case 67:p=__TIFFCheckMalloc(k,HEAP16[q>>1]&65535,t,26848);e=0==(p|0)?68:69;break;case 68:f=0;e=112;break;case 69:A=z;e=Math.imul(HEAP16[q>>1]&65535,t)|0;A=A+e|0;e=(A|0)<(z|0)?72:70;break;case 70:e=A;D=Math.imul(HEAP16[q>>
1]&65535,t)|0;e=(e|0)<(D|0)?72:71;break;case 71:e=(A|0)>(HEAP32[(k+616|0)>>2]|0)?72:73;break;case 72:_TIFFErrorExt(HEAP32[(k+628|0)>>2],46808,26456,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));__TIFFfree(p);f=0;e=112;break;case 73:e=p;D=HEAP32[(k+612|0)>>2]+z|0;F=Math.imul(HEAP16[q>>1]&65535,t)|0;__TIFFmemcpy(e,D,F);e=74;break;case 74:e=0!=(n|0)?75:93;break;case 75:e=Math.imul(HEAP16[q>>1]&65535,t)|0;z=z+e|0;
e=0!=(HEAP32[(k+12|0)>>2]&524288|0)?84:76;break;case 76:A=z+4|0;e=(A|0)<(z|0)?79:77;break;case 77:e=4>(A|0)?79:78;break;case 78:e=(A|0)>(HEAP32[(k+616|0)>>2]|0)?79:80;break;case 79:HEAP32[C>>2]=0;e=81;break;case 80:__TIFFmemcpy(C,HEAP32[(k+612|0)>>2]+z|0,4);e=81;break;case 81:e=0!=(HEAP32[(k+12|0)>>2]&128|0)?82:83;break;case 82:_TIFFSwabLong(C);e=83;break;case 83:e=n;HEAP32[(e|0)>>2]=HEAP32[C>>2];HEAP32[(e+4|0)>>2]=0;e=92;break;case 84:A=z+8|0;e=(A|0)<(z|0)?87:85;break;case 85:e=8>(A|0)?87:86;break;
case 86:e=(A|0)>(HEAP32[(k+616|0)>>2]|0)?87:88;break;case 87:e=n;HEAP32[(e|0)>>2]=0;HEAP32[(e+4|0)>>2]=0;e=89;break;case 88:__TIFFmemcpy(n,HEAP32[(k+612|0)>>2]+z|0,8);e=89;break;case 89:e=0!=(HEAP32[(k+12|0)>>2]&128|0)?90:91;break;case 90:_TIFFSwabLong8(n);e=91;break;case 91:e=92;break;case 92:e=93;break;case 93:e=94;break;case 94:r=__TIFFCheckMalloc(k,HEAP16[q>>1]&65535,24,26848);e=0==(r|0)?95:96;break;case 95:__TIFFfree(p);f=0;e=112;break;case 96:s=p;v=r;u=0;e=97;break;case 97:e=(u&65535|0)<(HEAP16[q>>
1]&65535|0)?98:111;break;case 98:e=0!=(HEAP32[(k+12|0)>>2]&128|0)?99:100;break;case 99:_TIFFSwabShort(s);e=100;break;case 100:HEAP16[(v|0)>>1]=HEAP16[s>>1];s=s+2|0;e=0!=(HEAP32[(k+12|0)>>2]&128|0)?101:102;break;case 101:_TIFFSwabShort(s);e=102;break;case 102:HEAP16[(v+2|0)>>1]=HEAP16[s>>1];s=s+2|0;e=0!=(HEAP32[(k+12|0)>>2]&524288|0)?106:103;break;case 103:e=0!=(HEAP32[(k+12|0)>>2]&128|0)?104:105;break;case 104:_TIFFSwabLong(s);e=105;break;case 105:e=v+8|0;HEAP32[(e|0)>>2]=HEAP32[s>>2];HEAP32[(e+4|
0)>>2]=0;s=s+4|0;HEAP32[(v+16|0)>>2]=HEAP32[s>>2];s=s+4|0;e=109;break;case 106:e=0!=(HEAP32[(k+12|0)>>2]&128|0)?107:108;break;case 107:_TIFFSwabLong8(s);e=108;break;case 108:e=_TIFFReadUInt64(s);D=tempRet0;F=v+8|0;HEAP32[(F|0)>>2]=e;HEAP32[(F+4|0)>>2]=D;s=s+8|0;e=_TIFFReadUInt64(s);D=tempRet0;F=v+16|0;HEAP32[(F|0)>>2]=e;HEAP32[(F+4|0)>>2]=D;s=s+8|0;e=109;break;case 109:v=v+24|0;e=110;break;case 110:u=u+1&65535;e=97;break;case 111:__TIFFfree(p);HEAP32[l>>2]=r;f=HEAP16[q>>1];e=112;break;case 112:return m=
f,STACKTOP=g,m;default:assert(0,"bad label: "+e)}}function _TIFFReadDirectoryFindEntry(m,d,c,a){m=0;for(m=1;;)switch(m){case 1:var b,e,g,f,k;e=d;g=c;f=a;k=0;m=2;break;case 2:m=(k&65535|0)<(g&65535|0)?3:7;break;case 3:m=(HEAP16[(e|0)>>1]&65535|0)==(f&65535|0)?4:5;break;case 4:b=e;m=8;break;case 5:m=6;break;case 6:e=e+24|0;k=k+1&65535;m=2;break;case 7:b=0;m=8;break;case 8:return b;default:assert(0,"bad label: "+m)}}
function _TIFFFetchNormalTag(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+272|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l=b,n,p=b+8,q,t,r,s,v=b+16,u=b+24,w=b+32,y=b+40,A=b+48,z=b+56,x=b+64,B=b+72,C,D=b+80,F,I=b+88,G,H=b+96,K,J=b+104,E,L=b+112,Q,N=b+120,P,W=b+128,O,T=b+136,Y,S=b+144,X,R=b+152,V,aa=b+160,fa,Z=b+168,ka,M=b+176,ga,na=b+184,ba,ca=b+192,oa,va=b+200,pa,la=b+208,wa,qa=b+216,ea,xa=b+224,ja,da=b+232,Ga,$=b+240,ma,ra=b+248,Aa,Xa=b+256,Da,Ua=b+264,sa;g=m;
f=d;k=c;n=0;_TIFFReadDirectoryFindFieldInfo(g,HEAP16[(f|0)>>1],l);a=-1==(HEAP32[l>>2]|0)?2:3;break;case 2:var ha=HEAP16[(f|0)>>1]&65535;_TIFFErrorExt(HEAP32[(g+628|0)>>2],29920,29688,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=ha,tempInt));e=0;a=485;break;case 3:n=HEAP32[(HEAP32[(g+656|0)>>2]+(HEAP32[l>>2]<<2)|0)>>2];a=51!=(HEAP32[(n+16|0)>>2]|0)?4:5;break;case 4:a=6;break;case 5:throw ___assert_func(29136,4711,29920,29456),"Reached an unreachable!";
case 6:a=13!=(HEAP32[(n+16|0)>>2]|0)?7:8;break;case 7:a=9;break;case 8:throw ___assert_func(29136,4712,29920,29320),"Reached an unreachable!";case 9:h=0;var U=HEAP32[(n+16|0)>>2],a=0==(U|0)?10:1==(U|0)?11:2==(U|0)?40:4==(U|0)?51:6==(U|0)?62:8==(U|0)?73:10==(U|0)?84:11==(U|0)?95:12==(U|0)?106:14==(U|0)?117:16==(U|0)?130:18==(U|0)?146:20==(U|0)?162:24==(U|0)?178:27==(U|0)?194:28==(U|0)?210:30==(U|0)?226:32==(U|0)?242:34==(U|0)?258:36==(U|0)?274:37==(U|0)?290:38==(U|0)?306:39==(U|0)?322:40==(U|0)?335:
41==(U|0)?348:42==(U|0)?361:43==(U|0)?374:44==(U|0)?387:45==(U|0)?400:46==(U|0)?413:47==(U|0)?426:48==(U|0)?439:49==(U|0)?452:50==(U|0)?465:478;break;case 10:a=479;break;case 11:a=0==(HEAP8[n+27|0]&255|0)?12:13;break;case 12:a=14;break;case 13:throw ___assert_func(29136,4721,29920,29200),"Reached an unreachable!";case 14:h=_TIFFReadDirEntryByteArray(g,f,p);a=0==(h|0)?15:39;break;case 15:q=HEAP32[p>>2];t=0;a=16;break;case 16:a=t>>>0<HEAP32[(f+8|0)>>2]>>>0?17:20;break;case 17:a=0==(HEAP8[q]&255|0)?
18:19;break;case 18:a=20;break;case 19:q=q+1|0;t=t+1|0;a=16;break;case 20:a=(t+1|0)>>>0<HEAP32[(f+8|0)>>2]>>>0?21:22;break;case 21:var gb=HEAP32[(n+28|0)>>2];_TIFFWarningExt(HEAP32[(g+628|0)>>2],46784,28968,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=gb,tempInt));a=34;break;case 22:a=(t+1|0)>>>0>HEAP32[(f+8|0)>>2]>>>0?23:33;break;case 23:var Ka=HEAP32[(n+28|0)>>2];_TIFFWarningExt(HEAP32[(g+628|0)>>2],46784,28728,(tempInt=STACKTOP,STACKTOP=STACKTOP+
8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=Ka,tempInt));var Ia=HEAP32[(f+8|0)>>2]+1|0,ia=f+8|0,Ba=_i64Add(HEAP32[(ia|0)>>2],HEAP32[(ia+4|0)>>2],1,0),a=(Ia|0)!=(Ba|0)|0!=(tempRet0|0)?24:25;break;case 24:s=0;a=26;break;case 25:s=__TIFFmalloc(HEAP32[(f+8|0)>>2]+1|0);a=26;break;case 26:a=0==(s|0)?27:30;break;case 27:a=0!=(HEAP32[p>>2]|0)?28:29;break;case 28:__TIFFfree(HEAP32[p>>2]);a=29;break;case 29:e=0;a=485;break;case 30:__TIFFmemcpy(s,HEAP32[p>>2],HEAP32[(f+8|0)>>2]);HEAP8[s+HEAP32[(f+
8|0)>>2]|0]=0;a=0!=(HEAP32[p>>2]|0)?31:32;break;case 31:__TIFFfree(HEAP32[p>>2]);a=32;break;case 32:HEAP32[p>>2]=s;a=33;break;case 33:a=34;break;case 34:var Ra=HEAP32[p>>2];r=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=Ra,tempInt));a=0!=(HEAP32[p>>2]|0)?35:36;break;case 35:__TIFFfree(HEAP32[p>>2]);a=36;break;case 36:a=0!=(r|0)?38:37;break;case 37:e=0;a=485;break;case 38:a=39;break;case 39:a=479;break;case 40:HEAP8[v]=
0;a=1==(HEAP16[(n+4|0)>>1]<<16>>16|0)?41:42;break;case 41:a=43;break;case 42:throw ___assert_func(29136,4770,29920,28616),"Reached an unreachable!";case 43:a=0==(HEAP8[n+27|0]&255|0)?44:45;break;case 44:a=46;break;case 45:throw ___assert_func(29136,4771,29920,29200),"Reached an unreachable!";case 46:h=_TIFFReadDirEntryByte(g,f,v);a=0==(h|0)?47:50;break;case 47:var Sa=HEAP8[v]&255,a=0!=(_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|
0,HEAP32[tempInt>>2]=Sa,tempInt))|0)?49:48;break;case 48:e=0;a=485;break;case 49:a=50;break;case 50:a=479;break;case 51:a=1==(HEAP16[(n+4|0)>>1]<<16>>16|0)?52:53;break;case 52:a=54;break;case 53:throw ___assert_func(29136,4783,29920,28616),"Reached an unreachable!";case 54:a=0==(HEAP8[n+27|0]&255|0)?55:56;break;case 55:a=57;break;case 56:throw ___assert_func(29136,4784,29920,29200),"Reached an unreachable!";case 57:h=_TIFFReadDirEntryShort(g,f,u);a=0==(h|0)?58:61;break;case 58:var ib=HEAP16[u>>1]&
65535,a=0!=(_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=ib,tempInt))|0)?60:59;break;case 59:e=0;a=485;break;case 60:a=61;break;case 61:a=479;break;case 62:a=1==(HEAP16[(n+4|0)>>1]<<16>>16|0)?63:64;break;case 63:a=65;break;case 64:throw ___assert_func(29136,4796,29920,28616),"Reached an unreachable!";case 65:a=0==(HEAP8[n+27|0]&255|0)?66:67;break;case 66:a=68;break;case 67:throw ___assert_func(29136,4797,29920,
29200),"Reached an unreachable!";case 68:h=_TIFFReadDirEntryLong(g,f,w);a=0==(h|0)?69:72;break;case 69:var ua=HEAP32[w>>2],a=0!=(_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=ua,tempInt))|0)?71:70;break;case 70:e=0;a=485;break;case 71:a=72;break;case 72:a=479;break;case 73:a=1==(HEAP16[(n+4|0)>>1]<<16>>16|0)?74:75;break;case 74:a=76;break;case 75:throw ___assert_func(29136,4809,29920,28616),"Reached an unreachable!";
case 76:a=0==(HEAP8[n+27|0]&255|0)?77:78;break;case 77:a=79;break;case 78:throw ___assert_func(29136,4810,29920,29200),"Reached an unreachable!";case 79:h=_TIFFReadDirEntryLong8(g,f,y);a=0==(h|0)?80:83;break;case 80:var Va=HEAP32[(y|0)>>2],eb=HEAP32[(y+4|0)>>2],a=0!=(_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=Va,HEAP32[tempInt+8>>2]=eb,tempInt))|0)?82:81;break;case 81:e=0;a=485;break;case 82:a=83;break;case 83:a=
479;break;case 84:a=1==(HEAP16[(n+4|0)>>1]<<16>>16|0)?85:86;break;case 85:a=87;break;case 86:throw ___assert_func(29136,4822,29920,28616),"Reached an unreachable!";case 87:a=0==(HEAP8[n+27|0]&255|0)?88:89;break;case 88:a=90;break;case 89:throw ___assert_func(29136,4823,29920,29200),"Reached an unreachable!";case 90:h=_TIFFReadDirEntryFloat(g,f,A);a=0==(h|0)?91:94;break;case 91:var Ea=HEAPF32[A>>2],a=0!=(_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|
0)<(STACK_MAX|0))|0,HEAPF64[tempInt>>3]=Ea,tempInt))|0)?93:92;break;case 92:e=0;a=485;break;case 93:a=94;break;case 94:a=479;break;case 95:a=1==(HEAP16[(n+4|0)>>1]<<16>>16|0)?96:97;break;case 96:a=98;break;case 97:throw ___assert_func(29136,4835,29920,28616),"Reached an unreachable!";case 98:a=0==(HEAP8[n+27|0]&255|0)?99:100;break;case 99:a=101;break;case 100:throw ___assert_func(29136,4836,29920,29200),"Reached an unreachable!";case 101:h=_TIFFReadDirEntryDouble(g,f,z);a=0==(h|0)?102:105;break;case 102:var Ya=
HEAPF64[z>>3],a=0!=(_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAPF64[tempInt>>3]=Ya,tempInt))|0)?104:103;break;case 103:e=0;a=485;break;case 104:a=105;break;case 105:a=479;break;case 106:a=1==(HEAP16[(n+4|0)>>1]<<16>>16|0)?107:108;break;case 107:a=109;break;case 108:throw ___assert_func(29136,4848,29920,28616),"Reached an unreachable!";case 109:a=0==(HEAP8[n+27|0]&255|0)?110:111;break;case 110:a=112;break;case 111:throw ___assert_func(29136,
4849,29920,29200),"Reached an unreachable!";case 112:h=_TIFFReadDirEntryIfd8(g,f,x);a=0==(h|0)?113:116;break;case 113:var La=HEAP32[(x|0)>>2],Ma=HEAP32[(x+4|0)>>2],a=0!=(_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=La,HEAP32[tempInt+8>>2]=Ma,tempInt))|0)?115:114;break;case 114:e=0;a=485;break;case 115:a=116;break;case 116:a=479;break;case 117:a=2==(HEAP16[(n+4|0)>>1]<<16>>16|0)?118:119;break;case 118:a=120;
break;case 119:throw ___assert_func(29136,4861,29920,28400),"Reached an unreachable!";case 120:a=0==(HEAP8[n+27|0]&255|0)?121:122;break;case 121:a=123;break;case 122:throw ___assert_func(29136,4862,29920,29200),"Reached an unreachable!";case 123:var Fa=f+8|0,a=2!=(HEAP32[(Fa|0)>>2]|0)|0!=(HEAP32[(Fa+4|0)>>2]|0)?124:125;break;case 124:var Na=HEAP32[(n+28|0)>>2],Oa=HEAP32[(f+8|0)>>2];_TIFFWarningExt(HEAP32[(g+628|0)>>2],46784,28256,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|
0))|0,HEAP32[tempInt>>2]=Na,HEAP32[tempInt+8>>2]=Oa,tempInt));e=0;a=485;break;case 125:h=_TIFFReadDirEntryShortArray(g,f,B);a=0==(h|0)?126:129;break;case 126:var jb=HEAP16[(HEAP32[B>>2]|0)>>1]&65535,Za=HEAP16[(HEAP32[B>>2]+2|0)>>1]&65535;C=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=jb,HEAP32[tempInt+8>>2]=Za,tempInt));__TIFFfree(HEAP32[B>>2]);a=0!=(C|0)?128:127;break;case 127:e=0;a=485;break;case 128:a=129;
break;case 129:a=479;break;case 130:a=1<=(HEAP16[(n+4|0)>>1]<<16>>16|0)?131:132;break;case 131:a=133;break;case 132:throw ___assert_func(29136,4883,29920,28184),"Reached an unreachable!";case 133:a=0==(HEAP8[n+27|0]&255|0)?134:135;break;case 134:a=136;break;case 135:throw ___assert_func(29136,4884,29920,29200),"Reached an unreachable!";case 136:var Ca=f+8|0,$a=HEAP16[(n+4|0)>>1],a=(HEAP32[(Ca|0)>>2]|0)!=($a<<16>>16|0)|(HEAP32[(Ca+4|0)>>2]|0)!=((0>$a<<16>>16?-1:0)|0)?137:138;break;case 137:var ab=
HEAP32[(n+28|0)>>2],Ha=HEAP16[(n+4|0)>>1]<<16>>16,Wa=HEAP32[(f+8|0)>>2];_TIFFWarningExt(HEAP32[(g+628|0)>>2],46784,27952,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=ab,HEAP32[tempInt+8>>2]=Ha,HEAP32[tempInt+16>>2]=Wa,tempInt));e=0;a=485;break;case 138:h=_TIFFReadDirEntryByteArray(g,f,D);a=0==(h|0)?139:144;break;case 139:var bb=HEAP32[D>>2];F=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|
0))|0,HEAP32[tempInt>>2]=bb,tempInt));a=0!=(HEAP32[D>>2]|0)?140:141;break;case 140:__TIFFfree(HEAP32[D>>2]);a=141;break;case 141:a=0!=(F|0)?143:142;break;case 142:e=0;a=485;break;case 143:a=144;break;case 144:a=145;break;case 145:a=479;break;case 146:a=1<=(HEAP16[(n+4|0)>>1]<<16>>16|0)?147:148;break;case 147:a=149;break;case 148:throw ___assert_func(29136,4909,29920,28184),"Reached an unreachable!";case 149:a=0==(HEAP8[n+27|0]&255|0)?150:151;break;case 150:a=152;break;case 151:throw ___assert_func(29136,
4910,29920,29200),"Reached an unreachable!";case 152:var Pa=f+8|0,Ja=HEAP16[(n+4|0)>>1],a=(HEAP32[(Pa|0)>>2]|0)!=(Ja<<16>>16|0)|(HEAP32[(Pa+4|0)>>2]|0)!=((0>Ja<<16>>16?-1:0)|0)?153:154;break;case 153:a=161;break;case 154:h=_TIFFReadDirEntryShortArray(g,f,I);a=0==(h|0)?155:160;break;case 155:var cb=HEAP32[I>>2];G=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=cb,tempInt));a=0!=(HEAP32[I>>2]|0)?156:157;break;case 156:__TIFFfree(HEAP32[I>>
2]);a=157;break;case 157:a=0!=(G|0)?159:158;break;case 158:e=0;a=485;break;case 159:a=160;break;case 160:a=161;break;case 161:a=479;break;case 162:a=1<=(HEAP16[(n+4|0)>>1]<<16>>16|0)?163:164;break;case 163:a=165;break;case 164:throw ___assert_func(29136,4931,29920,28184),"Reached an unreachable!";case 165:a=0==(HEAP8[n+27|0]&255|0)?166:167;break;case 166:a=168;break;case 167:throw ___assert_func(29136,4932,29920,29200),"Reached an unreachable!";case 168:var Qa=f+8|0,fb=HEAP16[(n+4|0)>>1],a=(HEAP32[(Qa|
0)>>2]|0)!=(fb<<16>>16|0)|(HEAP32[(Qa+4|0)>>2]|0)!=((0>fb<<16>>16?-1:0)|0)?169:170;break;case 169:a=177;break;case 170:h=_TIFFReadDirEntryLongArray(g,f,H);a=0==(h|0)?171:176;break;case 171:var hb=HEAP32[H>>2];K=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=hb,tempInt));a=0!=(HEAP32[H>>2]|0)?172:173;break;case 172:__TIFFfree(HEAP32[H>>2]);a=173;break;case 173:a=0!=(K|0)?175:174;break;case 174:e=0;a=485;break;case 175:a=
176;break;case 176:a=177;break;case 177:a=479;break;case 178:a=1<=(HEAP16[(n+4|0)>>1]<<16>>16|0)?179:180;break;case 179:a=181;break;case 180:throw ___assert_func(29136,4953,29920,28184),"Reached an unreachable!";case 181:a=0==(HEAP8[n+27|0]&255|0)?182:183;break;case 182:a=184;break;case 183:throw ___assert_func(29136,4954,29920,29200),"Reached an unreachable!";case 184:var ya=f+8|0,db=HEAP16[(n+4|0)>>1],a=(HEAP32[(ya|0)>>2]|0)!=(db<<16>>16|0)|(HEAP32[(ya+4|0)>>2]|0)!=((0>db<<16>>16?-1:0)|0)?185:186;
break;case 185:a=193;break;case 186:h=_TIFFReadDirEntryFloatArray(g,f,J);a=0==(h|0)?187:192;break;case 187:var Ta=HEAP32[J>>2];E=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=Ta,tempInt));a=0!=(HEAP32[J>>2]|0)?188:189;break;case 188:__TIFFfree(HEAP32[J>>2]);a=189;break;case 189:a=0!=(E|0)?191:190;break;case 190:e=0;a=485;break;case 191:a=192;break;case 192:a=193;break;case 193:a=479;break;case 194:a=-1==(HEAP16[(n+
4|0)>>1]<<16>>16|0)?195:196;break;case 195:a=197;break;case 196:throw ___assert_func(29136,4975,29920,27792),"Reached an unreachable!";case 197:a=1==(HEAP8[n+27|0]&255|0)?198:199;break;case 198:a=200;break;case 199:throw ___assert_func(29136,4976,29920,27712),"Reached an unreachable!";case 200:var kb=f+8|0,lb=HEAP32[(kb+4|0)>>2],a=0<lb>>>0|0==lb>>>0&65535<HEAP32[(kb|0)>>2]>>>0?201:202;break;case 201:h=1;a=209;break;case 202:h=_TIFFReadDirEntryByteArray(g,f,L);a=0==(h|0)?203:208;break;case 203:var mb=
HEAP32[(f+8|0)>>2]&65535,ta=HEAP32[L>>2];Q=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=mb,HEAP32[tempInt+8>>2]=ta,tempInt));a=0!=(HEAP32[L>>2]|0)?204:205;break;case 204:__TIFFfree(HEAP32[L>>2]);a=205;break;case 205:a=0!=(Q|0)?207:206;break;case 206:e=0;a=485;break;case 207:a=208;break;case 208:a=209;break;case 209:a=479;break;case 210:a=-1==(HEAP16[(n+4|0)>>1]<<16>>16|0)?211:212;break;case 211:a=213;break;
case 212:throw ___assert_func(29136,4997,29920,27792),"Reached an unreachable!";case 213:a=1==(HEAP8[n+27|0]&255|0)?214:215;break;case 214:a=216;break;case 215:throw ___assert_func(29136,4998,29920,27712),"Reached an unreachable!";case 216:var nb=f+8|0,pb=HEAP32[(nb+4|0)>>2],a=0<pb>>>0|0==pb>>>0&65535<HEAP32[(nb|0)>>2]>>>0?217:218;break;case 217:h=1;a=225;break;case 218:h=_TIFFReadDirEntryByteArray(g,f,N);a=0==(h|0)?219:224;break;case 219:var rb=HEAP32[(f+8|0)>>2]&65535,qb=HEAP32[N>>2];P=_TIFFSetField(g,
HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=rb,HEAP32[tempInt+8>>2]=qb,tempInt));a=0!=(HEAP32[N>>2]|0)?220:221;break;case 220:__TIFFfree(HEAP32[N>>2]);a=221;break;case 221:a=0!=(P|0)?223:222;break;case 222:e=0;a=485;break;case 223:a=224;break;case 224:a=225;break;case 225:a=479;break;case 226:a=-1==(HEAP16[(n+4|0)>>1]<<16>>16|0)?227:228;break;case 227:a=229;break;case 228:throw ___assert_func(29136,5019,29920,27792),"Reached an unreachable!";
case 229:a=1==(HEAP8[n+27|0]&255|0)?230:231;break;case 230:a=232;break;case 231:throw ___assert_func(29136,5020,29920,27712),"Reached an unreachable!";case 232:var sb=f+8|0,vb=HEAP32[(sb+4|0)>>2],a=0<vb>>>0|0==vb>>>0&65535<HEAP32[(sb|0)>>2]>>>0?233:234;break;case 233:h=1;a=241;break;case 234:h=_TIFFReadDirEntryShortArray(g,f,W);a=0==(h|0)?235:240;break;case 235:var wb=HEAP32[(f+8|0)>>2]&65535,xb=HEAP32[W>>2];O=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|
0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=wb,HEAP32[tempInt+8>>2]=xb,tempInt));a=0!=(HEAP32[W>>2]|0)?236:237;break;case 236:__TIFFfree(HEAP32[W>>2]);a=237;break;case 237:a=0!=(O|0)?239:238;break;case 238:e=0;a=485;break;case 239:a=240;break;case 240:a=241;break;case 241:a=479;break;case 242:a=-1==(HEAP16[(n+4|0)>>1]<<16>>16|0)?243:244;break;case 243:a=245;break;case 244:throw ___assert_func(29136,5041,29920,27792),"Reached an unreachable!";case 245:a=1==(HEAP8[n+27|0]&255|0)?246:247;break;case 246:a=
248;break;case 247:throw ___assert_func(29136,5042,29920,27712),"Reached an unreachable!";case 248:var Db=f+8|0,tb=HEAP32[(Db+4|0)>>2],a=0<tb>>>0|0==tb>>>0&65535<HEAP32[(Db|0)>>2]>>>0?249:250;break;case 249:h=1;a=257;break;case 250:h=_TIFFReadDirEntryLongArray(g,f,T);a=0==(h|0)?251:256;break;case 251:var Gb=HEAP32[(f+8|0)>>2]&65535,yb=HEAP32[T>>2];Y=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=Gb,HEAP32[tempInt+
8>>2]=yb,tempInt));a=0!=(HEAP32[T>>2]|0)?252:253;break;case 252:__TIFFfree(HEAP32[T>>2]);a=253;break;case 253:a=0!=(Y|0)?255:254;break;case 254:e=0;a=485;break;case 255:a=256;break;case 256:a=257;break;case 257:a=479;break;case 258:a=-1==(HEAP16[(n+4|0)>>1]<<16>>16|0)?259:260;break;case 259:a=261;break;case 260:throw ___assert_func(29136,5063,29920,27792),"Reached an unreachable!";case 261:a=1==(HEAP8[n+27|0]&255|0)?262:263;break;case 262:a=264;break;case 263:throw ___assert_func(29136,5064,29920,
27712),"Reached an unreachable!";case 264:var ub=f+8|0,Ab=HEAP32[(ub+4|0)>>2],a=0<Ab>>>0|0==Ab>>>0&65535<HEAP32[(ub|0)>>2]>>>0?265:266;break;case 265:h=1;a=273;break;case 266:h=_TIFFReadDirEntryLong8Array(g,f,S);a=0==(h|0)?267:272;break;case 267:var Tb=HEAP32[(f+8|0)>>2]&65535,Kb=HEAP32[S>>2];X=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=Tb,HEAP32[tempInt+8>>2]=Kb,tempInt));a=0!=(HEAP32[S>>2]|0)?268:269;break;
case 268:__TIFFfree(HEAP32[S>>2]);a=269;break;case 269:a=0!=(X|0)?271:270;break;case 270:e=0;a=485;break;case 271:a=272;break;case 272:a=273;break;case 273:a=479;break;case 274:a=-1==(HEAP16[(n+4|0)>>1]<<16>>16|0)?275:276;break;case 275:a=277;break;case 276:throw ___assert_func(29136,5085,29920,27792),"Reached an unreachable!";case 277:a=1==(HEAP8[n+27|0]&255|0)?278:279;break;case 278:a=280;break;case 279:throw ___assert_func(29136,5086,29920,27712),"Reached an unreachable!";case 280:var ac=f+8|0,
Hb=HEAP32[(ac+4|0)>>2],a=0<Hb>>>0|0==Hb>>>0&65535<HEAP32[(ac|0)>>2]>>>0?281:282;break;case 281:h=1;a=289;break;case 282:h=_TIFFReadDirEntryFloatArray(g,f,R);a=0==(h|0)?283:288;break;case 283:var Ob=HEAP32[(f+8|0)>>2]&65535,bc=HEAP32[R>>2];V=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=Ob,HEAP32[tempInt+8>>2]=bc,tempInt));a=0!=(HEAP32[R>>2]|0)?284:285;break;case 284:__TIFFfree(HEAP32[R>>2]);a=285;break;case 285:a=
0!=(V|0)?287:286;break;case 286:e=0;a=485;break;case 287:a=288;break;case 288:a=289;break;case 289:a=479;break;case 290:a=-1==(HEAP16[(n+4|0)>>1]<<16>>16|0)?291:292;break;case 291:a=293;break;case 292:throw ___assert_func(29136,5107,29920,27792),"Reached an unreachable!";case 293:a=1==(HEAP8[n+27|0]&255|0)?294:295;break;case 294:a=296;break;case 295:throw ___assert_func(29136,5108,29920,27712),"Reached an unreachable!";case 296:var Lb=f+8|0,Ub=HEAP32[(Lb+4|0)>>2],a=0<Ub>>>0|0==Ub>>>0&65535<HEAP32[(Lb|
0)>>2]>>>0?297:298;break;case 297:h=1;a=305;break;case 298:h=_TIFFReadDirEntryDoubleArray(g,f,aa);a=0==(h|0)?299:304;break;case 299:var Pb=HEAP32[(f+8|0)>>2]&65535,cc=HEAP32[aa>>2];fa=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=Pb,HEAP32[tempInt+8>>2]=cc,tempInt));a=0!=(HEAP32[aa>>2]|0)?300:301;break;case 300:__TIFFfree(HEAP32[aa>>2]);a=301;break;case 301:a=0!=(fa|0)?303:302;break;case 302:e=0;a=485;break;
case 303:a=304;break;case 304:a=305;break;case 305:a=479;break;case 306:a=-1==(HEAP16[(n+4|0)>>1]<<16>>16|0)?307:308;break;case 307:a=309;break;case 308:throw ___assert_func(29136,5129,29920,27792),"Reached an unreachable!";case 309:a=1==(HEAP8[n+27|0]&255|0)?310:311;break;case 310:a=312;break;case 311:throw ___assert_func(29136,5130,29920,27712),"Reached an unreachable!";case 312:var Vb=f+8|0,Mb=HEAP32[(Vb+4|0)>>2],a=0<Mb>>>0|0==Mb>>>0&65535<HEAP32[(Vb|0)>>2]>>>0?313:314;break;case 313:h=1;a=321;
break;case 314:h=_TIFFReadDirEntryIfd8Array(g,f,Z);a=0==(h|0)?315:320;break;case 315:var fc=HEAP32[(f+8|0)>>2]&65535,Wb=HEAP32[Z>>2];ka=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=fc,HEAP32[tempInt+8>>2]=Wb,tempInt));a=0!=(HEAP32[Z>>2]|0)?316:317;break;case 316:__TIFFfree(HEAP32[Z>>2]);a=317;break;case 317:a=0!=(ka|0)?319:318;break;case 318:e=0;a=485;break;case 319:a=320;break;case 320:a=321;break;case 321:a=
479;break;case 322:a=-3==(HEAP16[(n+4|0)>>1]<<16>>16|0)?323:324;break;case 323:a=325;break;case 324:throw ___assert_func(29136,5151,29920,27632),"Reached an unreachable!";case 325:a=1==(HEAP8[n+27|0]&255|0)?326:327;break;case 326:a=328;break;case 327:throw ___assert_func(29136,5152,29920,27712),"Reached an unreachable!";case 328:h=_TIFFReadDirEntryByteArray(g,f,M);a=0==(h|0)?329:334;break;case 329:var gc=HEAP32[(f+8|0)>>2],dc=HEAP32[M>>2];ga=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,
STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=gc,HEAP32[tempInt+8>>2]=dc,tempInt));a=0!=(HEAP32[M>>2]|0)?330:331;break;case 330:__TIFFfree(HEAP32[M>>2]);a=331;break;case 331:a=0!=(ga|0)?333:332;break;case 332:e=0;a=485;break;case 333:a=334;break;case 334:a=479;break;case 335:a=-3==(HEAP16[(n+4|0)>>1]<<16>>16|0)?336:337;break;case 336:a=338;break;case 337:throw ___assert_func(29136,5168,29920,27632),"Reached an unreachable!";case 338:a=1==(HEAP8[n+27|0]&255|0)?339:
340;break;case 339:a=341;break;case 340:throw ___assert_func(29136,5169,29920,27712),"Reached an unreachable!";case 341:h=_TIFFReadDirEntryByteArray(g,f,na);a=0==(h|0)?342:347;break;case 342:var Xb=HEAP32[(f+8|0)>>2],Yb=HEAP32[na>>2];ba=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=Xb,HEAP32[tempInt+8>>2]=Yb,tempInt));a=0!=(HEAP32[na>>2]|0)?343:344;break;case 343:__TIFFfree(HEAP32[na>>2]);a=344;break;case 344:a=
0!=(ba|0)?346:345;break;case 345:e=0;a=485;break;case 346:a=347;break;case 347:a=479;break;case 348:HEAP32[ca>>2]=0;a=-3==(HEAP16[(n+4|0)>>1]<<16>>16|0)?349:350;break;case 349:a=351;break;case 350:throw ___assert_func(29136,5185,29920,27632),"Reached an unreachable!";case 351:a=1==(HEAP8[n+27|0]&255|0)?352:353;break;case 352:a=354;break;case 353:throw ___assert_func(29136,5186,29920,27712),"Reached an unreachable!";case 354:h=_TIFFReadDirEntrySbyteArray(g,f,ca);a=0==(h|0)?355:360;break;case 355:var oc=
HEAP32[(f+8|0)>>2],Qb=HEAP32[ca>>2];oa=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=oc,HEAP32[tempInt+8>>2]=Qb,tempInt));a=0!=(HEAP32[ca>>2]|0)?356:357;break;case 356:__TIFFfree(HEAP32[ca>>2]);a=357;break;case 357:a=0!=(oa|0)?359:358;break;case 358:e=0;a=485;break;case 359:a=360;break;case 360:a=479;break;case 361:a=-3==(HEAP16[(n+4|0)>>1]<<16>>16|0)?362:363;break;case 362:a=364;break;case 363:throw ___assert_func(29136,
5202,29920,27632),"Reached an unreachable!";case 364:a=1==(HEAP8[n+27|0]&255|0)?365:366;break;case 365:a=367;break;case 366:throw ___assert_func(29136,5203,29920,27712),"Reached an unreachable!";case 367:h=_TIFFReadDirEntryShortArray(g,f,va);a=0==(h|0)?368:373;break;case 368:var hc=HEAP32[(f+8|0)>>2],ic=HEAP32[va>>2];pa=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=hc,HEAP32[tempInt+8>>2]=ic,tempInt));a=0!=(HEAP32[va>>
2]|0)?369:370;break;case 369:__TIFFfree(HEAP32[va>>2]);a=370;break;case 370:a=0!=(pa|0)?372:371;break;case 371:e=0;a=485;break;case 372:a=373;break;case 373:a=479;break;case 374:HEAP32[la>>2]=0;a=-3==(HEAP16[(n+4|0)>>1]<<16>>16|0)?375:376;break;case 375:a=377;break;case 376:throw ___assert_func(29136,5219,29920,27632),"Reached an unreachable!";case 377:a=1==(HEAP8[n+27|0]&255|0)?378:379;break;case 378:a=380;break;case 379:throw ___assert_func(29136,5220,29920,27712),"Reached an unreachable!";case 380:h=
_TIFFReadDirEntrySshortArray(g,f,la);a=0==(h|0)?381:386;break;case 381:var ec=HEAP32[(f+8|0)>>2],kc=HEAP32[la>>2];wa=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=ec,HEAP32[tempInt+8>>2]=kc,tempInt));a=0!=(HEAP32[la>>2]|0)?382:383;break;case 382:__TIFFfree(HEAP32[la>>2]);a=383;break;case 383:a=0!=(wa|0)?385:384;break;case 384:e=0;a=485;break;case 385:a=386;break;case 386:a=479;break;case 387:a=-3==(HEAP16[(n+
4|0)>>1]<<16>>16|0)?388:389;break;case 388:a=390;break;case 389:throw ___assert_func(29136,5236,29920,27632),"Reached an unreachable!";case 390:a=1==(HEAP8[n+27|0]&255|0)?391:392;break;case 391:a=393;break;case 392:throw ___assert_func(29136,5237,29920,27712),"Reached an unreachable!";case 393:h=_TIFFReadDirEntryLongArray(g,f,qa);a=0==(h|0)?394:399;break;case 394:var jc=HEAP32[(f+8|0)>>2],Zb=HEAP32[qa>>2];ea=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|
0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=jc,HEAP32[tempInt+8>>2]=Zb,tempInt));a=0!=(HEAP32[qa>>2]|0)?395:396;break;case 395:__TIFFfree(HEAP32[qa>>2]);a=396;break;case 396:a=0!=(ea|0)?398:397;break;case 397:e=0;a=485;break;case 398:a=399;break;case 399:a=479;break;case 400:HEAP32[xa>>2]=0;a=-3==(HEAP16[(n+4|0)>>1]<<16>>16|0)?401:402;break;case 401:a=403;break;case 402:throw ___assert_func(29136,5253,29920,27632),"Reached an unreachable!";case 403:a=1==(HEAP8[n+27|0]&255|0)?404:405;break;case 404:a=406;
break;case 405:throw ___assert_func(29136,5254,29920,27712),"Reached an unreachable!";case 406:h=_TIFFReadDirEntrySlongArray(g,f,xa);a=0==(h|0)?407:412;break;case 407:var lc=HEAP32[(f+8|0)>>2],Bb=HEAP32[xa>>2];ja=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=lc,HEAP32[tempInt+8>>2]=Bb,tempInt));a=0!=(HEAP32[xa>>2]|0)?408:409;break;case 408:__TIFFfree(HEAP32[xa>>2]);a=409;break;case 409:a=0!=(ja|0)?411:410;break;
case 410:e=0;a=485;break;case 411:a=412;break;case 412:a=479;break;case 413:a=-3==(HEAP16[(n+4|0)>>1]<<16>>16|0)?414:415;break;case 414:a=416;break;case 415:throw ___assert_func(29136,5270,29920,27632),"Reached an unreachable!";case 416:a=1==(HEAP8[n+27|0]&255|0)?417:418;break;case 417:a=419;break;case 418:throw ___assert_func(29136,5271,29920,27712),"Reached an unreachable!";case 419:h=_TIFFReadDirEntryLong8Array(g,f,da);a=0==(h|0)?420:425;break;case 420:var ob=HEAP32[(f+8|0)>>2],Rb=HEAP32[da>>2];
Ga=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=ob,HEAP32[tempInt+8>>2]=Rb,tempInt));a=0!=(HEAP32[da>>2]|0)?421:422;break;case 421:__TIFFfree(HEAP32[da>>2]);a=422;break;case 422:a=0!=(Ga|0)?424:423;break;case 423:e=0;a=485;break;case 424:a=425;break;case 425:a=479;break;case 426:HEAP32[$>>2]=0;a=-3==(HEAP16[(n+4|0)>>1]<<16>>16|0)?427:428;break;case 427:a=429;break;case 428:throw ___assert_func(29136,5287,29920,
27632),"Reached an unreachable!";case 429:a=1==(HEAP8[n+27|0]&255|0)?430:431;break;case 430:a=432;break;case 431:throw ___assert_func(29136,5288,29920,27712),"Reached an unreachable!";case 432:h=_TIFFReadDirEntrySlong8Array(g,f,$);a=0==(h|0)?433:438;break;case 433:var Nb=HEAP32[(f+8|0)>>2],$b=HEAP32[$>>2];ma=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=Nb,HEAP32[tempInt+8>>2]=$b,tempInt));a=0!=(HEAP32[$>>2]|
0)?434:435;break;case 434:__TIFFfree(HEAP32[$>>2]);a=435;break;case 435:a=0!=(ma|0)?437:436;break;case 436:e=0;a=485;break;case 437:a=438;break;case 438:a=479;break;case 439:a=-3==(HEAP16[(n+4|0)>>1]<<16>>16|0)?440:441;break;case 440:a=442;break;case 441:throw ___assert_func(29136,5304,29920,27632),"Reached an unreachable!";case 442:a=1==(HEAP8[n+27|0]&255|0)?443:444;break;case 443:a=445;break;case 444:throw ___assert_func(29136,5305,29920,27712),"Reached an unreachable!";case 445:h=_TIFFReadDirEntryFloatArray(g,
f,ra);a=0==(h|0)?446:451;break;case 446:var pc=HEAP32[(f+8|0)>>2],Bc=HEAP32[ra>>2];Aa=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=pc,HEAP32[tempInt+8>>2]=Bc,tempInt));a=0!=(HEAP32[ra>>2]|0)?447:448;break;case 447:__TIFFfree(HEAP32[ra>>2]);a=448;break;case 448:a=0!=(Aa|0)?450:449;break;case 449:e=0;a=485;break;case 450:a=451;break;case 451:a=479;break;case 452:a=-3==(HEAP16[(n+4|0)>>1]<<16>>16|0)?453:454;break;
case 453:a=455;break;case 454:throw ___assert_func(29136,5321,29920,27632),"Reached an unreachable!";case 455:a=1==(HEAP8[n+27|0]&255|0)?456:457;break;case 456:a=458;break;case 457:throw ___assert_func(29136,5322,29920,27712),"Reached an unreachable!";case 458:h=_TIFFReadDirEntryDoubleArray(g,f,Xa);a=0==(h|0)?459:464;break;case 459:var wc=HEAP32[(f+8|0)>>2],xc=HEAP32[Xa>>2];Da=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>
2]=wc,HEAP32[tempInt+8>>2]=xc,tempInt));a=0!=(HEAP32[Xa>>2]|0)?460:461;break;case 460:__TIFFfree(HEAP32[Xa>>2]);a=461;break;case 461:a=0!=(Da|0)?463:462;break;case 462:e=0;a=485;break;case 463:a=464;break;case 464:a=479;break;case 465:a=-3==(HEAP16[(n+4|0)>>1]<<16>>16|0)?466:467;break;case 466:a=468;break;case 467:throw ___assert_func(29136,5338,29920,27632),"Reached an unreachable!";case 468:a=1==(HEAP8[n+27|0]&255|0)?469:470;break;case 469:a=471;break;case 470:throw ___assert_func(29136,5339,29920,
27712),"Reached an unreachable!";case 471:h=_TIFFReadDirEntryIfd8Array(g,f,Ua);a=0==(h|0)?472:477;break;case 472:var Lc=HEAP32[(f+8|0)>>2],Cc=HEAP32[Ua>>2];sa=_TIFFSetField(g,HEAP16[(f|0)>>1]&65535,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=Lc,HEAP32[tempInt+8>>2]=Cc,tempInt));a=0!=(HEAP32[Ua>>2]|0)?473:474;break;case 473:__TIFFfree(HEAP32[Ua>>2]);a=474;break;case 474:a=0!=(sa|0)?476:475;break;case 475:e=0;a=485;break;case 476:a=477;break;case 477:a=
479;break;case 478:throw ___assert_func(29136,5353,29920,27504),"Reached an unreachable!";case 479:a=0!=(h|0)?480:484;break;case 480:var Cb=g,Gc=h,a=0!=(n|0)?481:482;break;case 481:var qc=HEAP32[(n+28|0)>>2],a=483;break;case 482:qc=40064;a=483;break;case 483:_TIFFReadDirEntryOutputErr(Cb,Gc,46784,qc,k);e=0;a=485;break;case 484:e=1;a=485;break;case 485:var Mc=e;STACKTOP=b;return Mc;default:assert(0,"bad label: "+a)}}function __TIFFFillStriles(m){return 1}
function _TIFFReadDirectoryFindFieldInfo(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k,h;b=m;e=d;g=c;f=-1;h=HEAP32[(b+660|0)>>2];a=2;break;case 2:a=(f+1|0)==(h|0)?3:4;break;case 3:HEAP32[g>>2]=-1;a=17;break;case 4:k=(f+h|0)/2&-1;a=(HEAP32[(HEAP32[(HEAP32[(b+656|0)>>2]+(k<<2)|0)>>2]|0)>>2]|0)==(e&65535|0)?5:6;break;case 5:a=10;break;case 6:a=HEAP32[(HEAP32[(HEAP32[(b+656|0)>>2]+(k<<2)|0)>>2]|0)>>2]>>>0<(e&65535)>>>0?7:8;break;case 7:f=k;a=9;break;case 8:h=k;a=9;break;case 9:a=2;break;case 10:a=
11;break;case 11:a=0==(k|0)?12:13;break;case 12:a=16;break;case 13:a=(HEAP32[(HEAP32[(HEAP32[(b+656|0)>>2]+((k-1|0)<<2)|0)>>2]|0)>>2]|0)!=(e&65535|0)?14:15;break;case 14:a=16;break;case 15:k=k-1|0;a=11;break;case 16:HEAP32[g>>2]=k;a=17;break;case 17:return;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirEntryShort(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+56|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l=b,n=b+8,p=b+16,q=b+24,t=b+32,r=b+40,s=b+48;g=m;f=d;k=c;a=f+8|0;a=1!=(HEAP32[(a|0)>>2]|0)|0!=(HEAP32[(a+4|0)>>2]|0)?2:3;break;case 2:e=1;a=29;break;case 3:a=HEAP16[(f+2|0)>>1]&65535;a=1==(a|0)?4:6==(a|0)?5:3==(a|0)?8:8==(a|0)?9:4==(a|0)?12:9==(a|0)?15:16==(a|0)?18:17==(a|0)?23:28;break;case 4:_TIFFReadDirEntryCheckedByte(g,f,l);HEAP16[k>>1]=
HEAP8[l]&255;e=0;a=29;break;case 5:_TIFFReadDirEntryCheckedSbyte(g,f,n);h=_TIFFReadDirEntryCheckRangeShortSbyte(HEAP8[n]);a=0!=(h|0)?6:7;break;case 6:e=h;a=29;break;case 7:HEAP16[k>>1]=HEAP8[n]<<24>>24;e=0;a=29;break;case 8:_TIFFReadDirEntryCheckedShort(g,f,k);e=0;a=29;break;case 9:_TIFFReadDirEntryCheckedSshort(g,f,p);h=_TIFFReadDirEntryCheckRangeShortSshort(HEAP16[p>>1]);a=0!=(h|0)?10:11;break;case 10:e=h;a=29;break;case 11:HEAP16[k>>1]=HEAP16[p>>1];e=0;a=29;break;case 12:_TIFFReadDirEntryCheckedLong(g,
f,q);h=_TIFFReadDirEntryCheckRangeShortLong(HEAP32[q>>2]);a=0!=(h|0)?13:14;break;case 13:e=h;a=29;break;case 14:HEAP16[k>>1]=HEAP32[q>>2]&65535;e=0;a=29;break;case 15:_TIFFReadDirEntryCheckedSlong(g,f,t);h=_TIFFReadDirEntryCheckRangeShortSlong(HEAP32[t>>2]);a=0!=(h|0)?16:17;break;case 16:e=h;a=29;break;case 17:HEAP16[k>>1]=HEAP32[t>>2]&65535;e=0;a=29;break;case 18:h=_TIFFReadDirEntryCheckedLong8(g,f,r);a=0!=(h|0)?19:20;break;case 19:e=h;a=29;break;case 20:h=_TIFFReadDirEntryCheckRangeShortLong8(HEAP32[(r|
0)>>2],HEAP32[(r+4|0)>>2]);a=0!=(h|0)?21:22;break;case 21:e=h;a=29;break;case 22:HEAP16[k>>1]=HEAP32[(r|0)>>2]&65535;e=0;a=29;break;case 23:h=_TIFFReadDirEntryCheckedSlong8(g,f,s);a=0!=(h|0)?24:25;break;case 24:e=h;a=29;break;case 25:h=_TIFFReadDirEntryCheckRangeShortSlong8(HEAP32[(s|0)>>2],HEAP32[(s+4|0)>>2]);a=0!=(h|0)?26:27;break;case 26:e=h;a=29;break;case 27:HEAP16[k>>1]=HEAP32[(s|0)>>2]&65535;e=0;a=29;break;case 28:e=2;a=29;break;case 29:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+
a)}}
function _TIFFReadDirEntryPersampleShort(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l=b,n,p;g=m;f=d;k=c;var a=f+8|0,q=HEAP32[(a+4|0)>>2],a=0>q>>>0|0==q>>>0&HEAP32[(a|0)>>2]>>>0<(HEAP16[((g+40|0)+58|0)>>1]&65535)>>>0?2:3;break;case 2:e=1;a=11;break;case 3:h=_TIFFReadDirEntryShortArray(g,f,l);a=0!=(h|0)?4:5;break;case 4:e=h;a=11;break;case 5:n=HEAP32[l>>2];p=HEAP16[((g+40|0)+58|0)>>1];a=n;n=a+2|0;HEAP16[k>>1]=HEAP16[a>>1];
p=p-1&65535;a=6;break;case 6:a=0<(p&65535|0)?7:10;break;case 7:a=n;n=a+2|0;a=(HEAP16[a>>1]&65535|0)!=(HEAP16[k>>1]&65535|0)?8:9;break;case 8:h=5;a=10;break;case 9:p=p-1&65535;a=6;break;case 10:__TIFFfree(HEAP32[l>>2]);e=h;a=11;break;case 11:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _MissingRequired(m,d){var c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;_TIFFErrorExt(HEAP32[(m+628|0)>>2],148040,26016,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=d,tempInt));STACKTOP=c}
function _TIFFReadDirEntryOutputErr(m,d,c,a,b){var e=0,g=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var f,k,h,l;f=m;k=d;h=c;l=a;e=0!=(b|0)?12:2;break;case 2:e=k;e=1==(e|0)?3:2==(e|0)?4:3==(e|0)?5:4==(e|0)?6:5==(e|0)?7:6==(e|0)?8:7==(e|0)?9:10;break;case 3:e=l;_TIFFErrorExt(HEAP32[(f+628|0)>>2],h,25560,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=11;break;case 4:e=l;_TIFFErrorExt(HEAP32[(f+628|0)>>2],h,25496,
(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=11;break;case 5:e=l;_TIFFErrorExt(HEAP32[(f+628|0)>>2],h,25448,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=11;break;case 6:e=l;_TIFFErrorExt(HEAP32[(f+628|0)>>2],h,25352,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=11;break;case 7:e=l;_TIFFErrorExt(HEAP32[(f+628|
0)>>2],h,25184,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=11;break;case 8:e=l;_TIFFErrorExt(HEAP32[(f+628|0)>>2],h,25072,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=11;break;case 9:e=l;_TIFFErrorExt(HEAP32[(f+628|0)>>2],h,24848,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=11;break;case 10:throw ___assert_func(29136,
3371,43944,27504),"Reached an unreachable!";case 11:e=22;break;case 12:e=k;e=1==(e|0)?13:2==(e|0)?14:3==(e|0)?15:4==(e|0)?16:5==(e|0)?17:6==(e|0)?18:7==(e|0)?19:20;break;case 13:e=l;_TIFFErrorExt(HEAP32[(f+628|0)>>2],h,24704,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=21;break;case 14:e=l;_TIFFWarningExt(HEAP32[(f+628|0)>>2],h,24648,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));
e=21;break;case 15:e=l;_TIFFWarningExt(HEAP32[(f+628|0)>>2],h,24480,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=21;break;case 16:e=l;_TIFFWarningExt(HEAP32[(f+628|0)>>2],h,24344,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=21;break;case 17:e=l;_TIFFWarningExt(HEAP32[(f+628|0)>>2],h,24248,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>
2]=e,tempInt));e=21;break;case 18:e=l;_TIFFWarningExt(HEAP32[(f+628|0)>>2],h,24168,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=21;break;case 19:e=l;_TIFFWarningExt(HEAP32[(f+628|0)>>2],h,24E3,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=21;break;case 20:throw ___assert_func(29136,3412,43944,27504),"Reached an unreachable!";case 21:e=22;break;case 22:STACKTOP=g;return;
default:assert(0,"bad label: "+e)}}
function _TIFFReadDirEntryDoubleArray(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l=b,n=b+8,p,q,t,r,s,v,u,w,y,A,z,x,B,C,D,F,I,G,H,K,J,E,L,Q,N,P,W,O,T,Y,S,X,R,V,aa,fa,Z,ka;g=m;f=d;k=c;a=HEAP16[(f+2|0)>>1]&65535;a=1==(a|0)|6==(a|0)|3==(a|0)|8==(a|0)|4==(a|0)|9==(a|0)|16==(a|0)|17==(a|0)|5==(a|0)|10==(a|0)|11==(a|0)|12==(a|0)?2:3;break;case 2:a=4;break;case 3:e=2;a=100;break;case 4:h=_TIFFReadDirEntryArray(g,f,l,8,n);
a=0!=(h|0)?6:5;break;case 5:a=0==(HEAP32[n>>2]|0)?6:7;break;case 6:HEAP32[k>>2]=0;e=h;a=100;break;case 7:a=12==(HEAP16[(f+2|0)>>1]&65535|0)?8:11;break;case 8:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?9:10;break;case 9:_TIFFSwabArrayOfLong8(HEAP32[n>>2],HEAP32[l>>2]);a=10;break;case 10:HEAP32[k>>2]=HEAP32[n>>2];e=0;a=100;break;case 11:p=__TIFFmalloc(HEAP32[l>>2]<<3);a=0==(p|0)?12:13;break;case 12:__TIFFfree(HEAP32[n>>2]);e=7;a=100;break;case 13:a=HEAP16[(f+2|0)>>1]&65535;a=1==(a|0)?14:6==(a|0)?19:3==(a|0)?
24:8==(a|0)?31:4==(a|0)?38:9==(a|0)?45:16==(a|0)?52:17==(a|0)?59:5==(a|0)?66:10==(a|0)?78:11==(a|0)?90:97;break;case 14:q=HEAP32[n>>2];t=p;r=0;a=15;break;case 15:a=r>>>0<HEAP32[l>>2]>>>0?16:18;break;case 16:a=q;q=a+1|0;var a=HEAP8[a]&255,M=t;t=M+8|0;HEAPF64[M>>3]=a;a=17;break;case 17:r=r+1|0;a=15;break;case 18:a=97;break;case 19:s=HEAP32[n>>2];v=p;u=0;a=20;break;case 20:a=u>>>0<HEAP32[l>>2]>>>0?21:23;break;case 21:a=s;s=a+1|0;a=HEAP8[a]<<24>>24;M=v;v=M+8|0;HEAPF64[M>>3]=a;a=22;break;case 22:u=u+1|
0;a=20;break;case 23:a=97;break;case 24:w=HEAP32[n>>2];y=p;A=0;a=25;break;case 25:a=A>>>0<HEAP32[l>>2]>>>0?26:30;break;case 26:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?27:28;break;case 27:_TIFFSwabShort(w);a=28;break;case 28:a=w;w=a+2|0;a=HEAP16[a>>1]&65535;M=y;y=M+8|0;HEAPF64[M>>3]=a;a=29;break;case 29:A=A+1|0;a=25;break;case 30:a=97;break;case 31:z=HEAP32[n>>2];x=p;B=0;a=32;break;case 32:a=B>>>0<HEAP32[l>>2]>>>0?33:37;break;case 33:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?34:35;break;case 34:_TIFFSwabShort(z);
a=35;break;case 35:a=z;z=a+2|0;a=HEAP16[a>>1]<<16>>16;M=x;x=M+8|0;HEAPF64[M>>3]=a;a=36;break;case 36:B=B+1|0;a=32;break;case 37:a=97;break;case 38:C=HEAP32[n>>2];D=p;F=0;a=39;break;case 39:a=F>>>0<HEAP32[l>>2]>>>0?40:44;break;case 40:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?41:42;break;case 41:_TIFFSwabLong(C);a=42;break;case 42:a=C;C=a+4|0;a=HEAP32[a>>2]>>>0;M=D;D=M+8|0;HEAPF64[M>>3]=a;a=43;break;case 43:F=F+1|0;a=39;break;case 44:a=97;break;case 45:I=HEAP32[n>>2];G=p;H=0;a=46;break;case 46:a=H>>>0<HEAP32[l>>
2]>>>0?47:51;break;case 47:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?48:49;break;case 48:_TIFFSwabLong(I);a=49;break;case 49:a=I;I=a+4|0;a=HEAP32[a>>2]|0;M=G;G=M+8|0;HEAPF64[M>>3]=a;a=50;break;case 50:H=H+1|0;a=46;break;case 51:a=97;break;case 52:K=HEAP32[n>>2];J=p;E=0;a=53;break;case 53:a=E>>>0<HEAP32[l>>2]>>>0?54:58;break;case 54:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?55:56;break;case 55:_TIFFSwabLong8(K);a=56;break;case 56:a=K;K=a+8|0;a=(HEAP32[(a|0)>>2]>>>0)+4294967296*(HEAP32[(a+4|0)>>2]>>>0);M=J;J=M+8|0;HEAPF64[M>>
3]=a;a=57;break;case 57:E=E+1|0;a=53;break;case 58:a=97;break;case 59:L=HEAP32[n>>2];Q=p;N=0;a=60;break;case 60:a=N>>>0<HEAP32[l>>2]>>>0?61:65;break;case 61:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?62:63;break;case 62:_TIFFSwabLong8(L);a=63;break;case 63:a=L;L=a+8|0;a=(HEAP32[(a|0)>>2]>>>0)+4294967296*(HEAP32[(a+4|0)>>2]|0);M=Q;Q=M+8|0;HEAPF64[M>>3]=a;a=64;break;case 64:N=N+1|0;a=60;break;case 65:a=97;break;case 66:P=HEAP32[n>>2];T=p;Y=0;a=67;break;case 67:a=Y>>>0<HEAP32[l>>2]>>>0?68:77;break;case 68:a=0!=
(HEAP32[(g+12|0)>>2]&128|0)?69:70;break;case 69:_TIFFSwabLong(P);a=70;break;case 70:W=P;P=W+4|0;W=HEAP32[W>>2];a=0!=(HEAP32[(g+12|0)>>2]&128|0)?71:72;break;case 71:_TIFFSwabLong(P);a=72;break;case 72:O=P;P=O+4|0;O=HEAP32[O>>2];a=0==(O|0)?73:74;break;case 73:a=T;T=a+8|0;HEAPF64[a>>3]=0;a=75;break;case 74:a=(W>>>0)/(O>>>0);M=T;T=M+8|0;HEAPF64[M>>3]=a;a=75;break;case 75:a=76;break;case 76:Y=Y+1|0;a=67;break;case 77:a=97;break;case 78:S=HEAP32[n>>2];V=p;aa=0;a=79;break;case 79:a=aa>>>0<HEAP32[l>>2]>>>
0?80:89;break;case 80:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?81:82;break;case 81:_TIFFSwabLong(S);a=82;break;case 82:X=HEAP32[S>>2];S=S+4|0;a=0!=(HEAP32[(g+12|0)>>2]&128|0)?83:84;break;case 83:_TIFFSwabLong(S);a=84;break;case 84:R=S;S=R+4|0;R=HEAP32[R>>2];a=0==(R|0)?85:86;break;case 85:a=V;V=a+8|0;HEAPF64[a>>3]=0;a=87;break;case 86:a=(X|0)/(R>>>0);M=V;V=M+8|0;HEAPF64[M>>3]=a;a=87;break;case 87:a=88;break;case 88:aa=aa+1|0;a=79;break;case 89:a=97;break;case 90:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?91:92;break;
case 91:_TIFFSwabArrayOfLong(HEAP32[n>>2],HEAP32[l>>2]);a=92;break;case 92:fa=HEAP32[n>>2];Z=p;ka=0;a=93;break;case 93:a=ka>>>0<HEAP32[l>>2]>>>0?94:96;break;case 94:a=fa;fa=a+4|0;a=HEAPF32[a>>2];M=Z;Z=M+8|0;HEAPF64[M>>3]=a;a=95;break;case 95:ka=ka+1|0;a=93;break;case 96:a=97;break;case 97:__TIFFfree(HEAP32[n>>2]);a=0!=(h|0)?98:99;break;case 98:__TIFFfree(p);e=h;a=100;break;case 99:HEAP32[k>>2]=p;e=0;a=100;break;case 100:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFFetchStripThing(m,d,c,a){var b=0,e=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h,l,n,p=e,q,t;f=m;k=d;h=c;l=a;n=_TIFFReadDirEntryLong8Array(f,k,p);b=0!=(n|0)?2:6;break;case 2:q=_TIFFFieldWithTag(f,HEAP16[(k|0)>>1]&65535);var r=f,s=n,b=0!=(q|0)?3:4;break;case 3:var v=HEAP32[(q+28|0)>>2],b=5;break;case 4:v=40064;b=5;break;case 5:_TIFFReadDirEntryOutputErr(r,s,46760,v,0);g=0;b=14;break;case 6:b=k+8|0;b=(HEAP32[(b|0)>>2]|0)!=(h|
0)|0!=(HEAP32[(b+4|0)>>2]|0)?7:13;break;case 7:t=__TIFFCheckMalloc(f,h,8,30616);b=0==(t|0)?8:9;break;case 8:__TIFFfree(HEAP32[p>>2]);g=0;b=14;break;case 9:var b=k+8|0,u=HEAP32[(b+4|0)>>2],b=0>u>>>0|0==u>>>0&HEAP32[(b|0)>>2]>>>0<h>>>0?10:11;break;case 10:__TIFFmemcpy(t,HEAP32[p>>2],HEAP32[(k+8|0)>>2]<<3);__TIFFmemset(t+(HEAP32[(k+8|0)>>2]<<3)|0,0,(h-HEAP32[(k+8|0)>>2]|0)<<3);b=12;break;case 11:__TIFFmemcpy(t,HEAP32[p>>2],h<<3);b=12;break;case 12:__TIFFfree(HEAP32[p>>2]);HEAP32[p>>2]=t;b=13;break;case 13:HEAP32[l>>
2]=HEAP32[p>>2];g=1;b=14;break;case 14:return m=g,STACKTOP=e,m;default:assert(0,"bad label: "+b)}}
function _TIFFReadDirEntryShortArray(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l=b,n=b+8,p,q,t,r,s,v,u,w,y,A,z,x,B,C,D,F,I,G,H,K,J;g=m;f=d;k=c;a=HEAP16[(f+2|0)>>1]&65535;a=1==(a|0)|6==(a|0)|3==(a|0)|8==(a|0)|4==(a|0)|9==(a|0)|16==(a|0)|17==(a|0)?2:3;break;case 2:a=4;break;case 3:e=2;a=74;break;case 4:h=_TIFFReadDirEntryArray(g,f,l,2,n);a=0!=(h|0)?6:5;break;case 5:a=0==(HEAP32[n>>2]|0)?6:7;break;case 6:HEAP32[k>>2]=
0;e=h;a=74;break;case 7:a=HEAP16[(f+2|0)>>1]&65535;a=3==(a|0)?8:8==(a|0)?11:20;break;case 8:HEAP32[k>>2]=HEAP32[n>>2];a=0!=(HEAP32[(g+12|0)>>2]&128|0)?9:10;break;case 9:_TIFFSwabArrayOfShort(HEAP32[k>>2],HEAP32[l>>2]);a=10;break;case 10:e=0;a=74;break;case 11:q=HEAP32[n>>2];t=0;a=12;break;case 12:a=t>>>0<HEAP32[l>>2]>>>0?13:19;break;case 13:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?14:15;break;case 14:_TIFFSwabShort(q);a=15;break;case 15:h=_TIFFReadDirEntryCheckRangeShortSshort(HEAP16[q>>1]);a=0!=(h|0)?16:
17;break;case 16:__TIFFfree(HEAP32[n>>2]);e=h;a=74;break;case 17:q=q+2|0;a=18;break;case 18:t=t+1|0;a=12;break;case 19:HEAP32[k>>2]=HEAP32[n>>2];e=0;a=74;break;case 20:p=__TIFFmalloc(HEAP32[l>>2]<<1);a=0==(p|0)?21:22;break;case 21:__TIFFfree(HEAP32[n>>2]);e=7;a=74;break;case 22:a=HEAP16[(f+2|0)>>1]&65535;a=1==(a|0)?23:6==(a|0)?28:4==(a|0)?35:9==(a|0)?44:16==(a|0)?53:17==(a|0)?62:71;break;case 23:r=HEAP32[n>>2];s=p;v=0;a=24;break;case 24:a=v>>>0<HEAP32[l>>2]>>>0?25:27;break;case 25:a=r;r=a+1|0;var a=
HEAP8[a]&255,E=s;s=E+2|0;HEAP16[E>>1]=a;a=26;break;case 26:v=v+1|0;a=24;break;case 27:a=71;break;case 28:u=HEAP32[n>>2];w=p;y=0;a=29;break;case 29:a=y>>>0<HEAP32[l>>2]>>>0?30:34;break;case 30:h=_TIFFReadDirEntryCheckRangeShortSbyte(HEAP8[u]);a=0!=(h|0)?31:32;break;case 31:a=34;break;case 32:a=u;u=a+1|0;a=HEAP8[a]<<24>>24;E=w;w=E+2|0;HEAP16[E>>1]=a;a=33;break;case 33:y=y+1|0;a=29;break;case 34:a=71;break;case 35:A=HEAP32[n>>2];z=p;x=0;a=36;break;case 36:a=x>>>0<HEAP32[l>>2]>>>0?37:43;break;case 37:a=
0!=(HEAP32[(g+12|0)>>2]&128|0)?38:39;break;case 38:_TIFFSwabLong(A);a=39;break;case 39:h=_TIFFReadDirEntryCheckRangeShortLong(HEAP32[A>>2]);a=0!=(h|0)?40:41;break;case 40:a=43;break;case 41:a=A;A=a+4|0;a=HEAP32[a>>2]&65535;E=z;z=E+2|0;HEAP16[E>>1]=a;a=42;break;case 42:x=x+1|0;a=36;break;case 43:a=71;break;case 44:B=HEAP32[n>>2];C=p;D=0;a=45;break;case 45:a=D>>>0<HEAP32[l>>2]>>>0?46:52;break;case 46:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?47:48;break;case 47:_TIFFSwabLong(B);a=48;break;case 48:h=_TIFFReadDirEntryCheckRangeShortSlong(HEAP32[B>>
2]);a=0!=(h|0)?49:50;break;case 49:a=52;break;case 50:a=B;B=a+4|0;a=HEAP32[a>>2]&65535;E=C;C=E+2|0;HEAP16[E>>1]=a;a=51;break;case 51:D=D+1|0;a=45;break;case 52:a=71;break;case 53:F=HEAP32[n>>2];I=p;G=0;a=54;break;case 54:a=G>>>0<HEAP32[l>>2]>>>0?55:61;break;case 55:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?56:57;break;case 56:_TIFFSwabLong8(F);a=57;break;case 57:h=F;h=_TIFFReadDirEntryCheckRangeShortLong8(HEAP32[(h|0)>>2],HEAP32[(h+4|0)>>2]);a=0!=(h|0)?58:59;break;case 58:a=61;break;case 59:a=F;F=a+8|0;a=
HEAP32[(a|0)>>2]&65535;E=I;I=E+2|0;HEAP16[E>>1]=a;a=60;break;case 60:G=G+1|0;a=54;break;case 61:a=71;break;case 62:H=HEAP32[n>>2];K=p;J=0;a=63;break;case 63:a=J>>>0<HEAP32[l>>2]>>>0?64:70;break;case 64:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?65:66;break;case 65:_TIFFSwabLong8(H);a=66;break;case 66:h=H;h=_TIFFReadDirEntryCheckRangeShortSlong8(HEAP32[(h|0)>>2],HEAP32[(h+4|0)>>2]);a=0!=(h|0)?67:68;break;case 67:a=70;break;case 68:a=H;H=a+8|0;a=HEAP32[(a|0)>>2]&65535;E=K;K=E+2|0;HEAP16[E>>1]=a;a=69;break;case 69:J=
J+1|0;a=63;break;case 70:a=71;break;case 71:__TIFFfree(HEAP32[n>>2]);a=0!=(h|0)?72:73;break;case 72:__TIFFfree(p);e=h;a=74;break;case 73:HEAP32[k>>2]=p;e=0;a=74;break;case 74:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _EstimateStripByteCounts(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+40|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l,n,p=b,q=b+8,t,r,s=b+16,v=b+24,u=b+32,w;g=m;f=d;k=c;l=g+40|0;__TIFFFillStriles(g);a=0!=(HEAP32[(l+136|0)>>2]|0)?2:3;break;case 2:__TIFFfree(HEAP32[(l+136|0)>>2]);a=3;break;case 3:a=__TIFFCheckMalloc(g,HEAP32[(l+128|0)>>2],8,25888);HEAP32[(l+136|0)>>2]=a;a=0==(HEAP32[(l+136|0)>>2]|0)?4:5;break;case 4:e=-1;a=46;break;case 5:a=1!=(HEAP16[(l+
48|0)>>1]&65535|0)?6:31;break;case 6:var a=FUNCTION_TABLE[HEAP32[(g+648|0)>>2]](HEAP32[(g+628|0)>>2]),y=tempRet0;HEAP32[(q|0)>>2]=a;HEAP32[(q+4|0)>>2]=y;a=0!=(HEAP32[(g+12|0)>>2]&524288|0)?8:7;break;case 7:HEAP32[(p|0)>>2]=((12*(k&65535)&-1)+10|0)+4|0;HEAP32[(p+4|0)>>2]=0;a=9;break;case 8:HEAP32[(p|0)>>2]=((20*(k&65535)&-1)+24|0)+8|0;HEAP32[(p+4|0)>>2]=0;a=9;break;case 9:h=f;t=k;a=10;break;case 10:a=0<(t&65535|0)?11:22;break;case 11:_TIFFDataWidth(HEAP16[(h+2|0)>>1]&65535);r=_TIFFDataWidth(HEAP16[(h+
2|0)>>1]&65535);a=0==(r|0)?12:13;break;case 12:e=HEAP16[(h+2|0)>>1]&65535;_TIFFErrorExt(HEAP32[(g+628|0)>>2],148504,25816,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=-1;a=46;break;case 13:a=h+8|0;a=___muldi3(r,0,HEAP32[(a|0)>>2],HEAP32[(a+4|0)>>2]);y=tempRet0;HEAP32[(s|0)>>2]=a;HEAP32[(s+4|0)>>2]=y;a=0!=(HEAP32[(g+12|0)>>2]&524288|0)?17:14;break;case 14:a=HEAP32[(s+4|0)>>2];a=0>=a>>>0&(0>a>>>0|4>=HEAP32[(s|0)>>2]>>>0)?15:16;break;case 15:HEAP32[(s|
0)>>2]=0;HEAP32[(s+4|0)>>2]=0;a=16;break;case 16:a=20;break;case 17:a=HEAP32[(s+4|0)>>2];a=0>=a>>>0&(0>a>>>0|8>=HEAP32[(s|0)>>2]>>>0)?18:19;break;case 18:HEAP32[(s|0)>>2]=0;HEAP32[(s+4|0)>>2]=0;a=19;break;case 19:a=20;break;case 20:a=_i64Add(HEAP32[(p|0)>>2],HEAP32[(p+4|0)>>2],HEAP32[(s|0)>>2],HEAP32[(s+4|0)>>2]);y=tempRet0;HEAP32[(p|0)>>2]=a;HEAP32[(p+4|0)>>2]=y;a=21;break;case 21:t=t-1&65535;h=h+24|0;a=10;break;case 22:a=_i64Subtract(HEAP32[(q|0)>>2],HEAP32[(q+4|0)>>2],HEAP32[(p|0)>>2],HEAP32[(p+
4|0)>>2]);y=tempRet0;HEAP32[(p|0)>>2]=a;HEAP32[(p+4|0)>>2]=y;a=2==(HEAP16[(l+86|0)>>1]&65535|0)?23:24;break;case 23:a=___udivdi3(HEAP32[(p|0)>>2],HEAP32[(p+4|0)>>2],HEAP16[(l+58|0)>>1]&65535,0);y=tempRet0;HEAP32[(p|0)>>2]=a;HEAP32[(p+4|0)>>2]=y;a=24;break;case 24:n=0;a=25;break;case 25:a=n>>>0<HEAP32[(l+128|0)>>2]>>>0?26:28;break;case 26:a=HEAP32[(p+4|0)>>2];y=HEAP32[(l+136|0)>>2]+(n<<3)|0;HEAP32[(y|0)>>2]=HEAP32[(p|0)>>2];HEAP32[(y+4|0)>>2]=a;a=27;break;case 27:n=n+1|0;a=25;break;case 28:n=n-1|0;
var a=HEAP32[(l+132|0)>>2]+(n<<3)|0,y=HEAP32[(l+136|0)>>2]+(n<<3)|0,a=_i64Add(HEAP32[(a|0)>>2],HEAP32[(a+4|0)>>2],HEAP32[(y|0)>>2],HEAP32[(y+4|0)>>2]),y=tempRet0,A=HEAP32[(q+4|0)>>2],a=y>>>0>A>>>0|y>>>0==A>>>0&a>>>0>HEAP32[(q|0)>>2]>>>0?29:30;break;case 29:a=HEAP32[(l+132|0)>>2]+(n<<3)|0;a=_i64Subtract(HEAP32[(q|0)>>2],HEAP32[(q+4|0)>>2],HEAP32[(a|0)>>2],HEAP32[(a+4|0)>>2]);y=tempRet0;A=HEAP32[(l+136|0)>>2]+(n<<3)|0;HEAP32[(A|0)>>2]=a;HEAP32[(A+4|0)>>2]=y;a=30;break;case 30:a=43;break;case 31:a=0!=
(HEAP32[(g+12|0)>>2]&1024|0)?32:37;break;case 32:n=_TIFFTileSize64(g);a=tempRet0;HEAP32[(v|0)>>2]=n;HEAP32[(v+4|0)>>2]=a;n=0;a=33;break;case 33:a=n>>>0<HEAP32[(l+128|0)>>2]>>>0?34:36;break;case 34:a=HEAP32[(v+4|0)>>2];y=HEAP32[(l+136|0)>>2]+(n<<3)|0;HEAP32[(y|0)>>2]=HEAP32[(v|0)>>2];HEAP32[(y+4|0)>>2]=a;a=35;break;case 35:n=n+1|0;a=33;break;case 36:a=42;break;case 37:w=_TIFFScanlineSize64(g);n=tempRet0;HEAP32[(u|0)>>2]=w;HEAP32[(u+4|0)>>2]=n;w=(HEAP32[(l+20|0)>>2]>>>0)/(HEAP32[(l+124|0)>>2]>>>0)&
-1;n=0;a=38;break;case 38:a=n>>>0<HEAP32[(l+128|0)>>2]>>>0?39:41;break;case 39:a=___muldi3(HEAP32[(u|0)>>2],HEAP32[(u+4|0)>>2],w,0);y=tempRet0;A=HEAP32[(l+136|0)>>2]+(n<<3)|0;HEAP32[(A|0)>>2]=a;HEAP32[(A+4|0)>>2]=y;a=40;break;case 40:n=n+1|0;a=38;break;case 41:a=42;break;case 42:a=43;break;case 43:a=g+40|0;HEAP32[a>>2]|=16777216;a=0!=(HEAP32[(g+40|0)>>2]&131072|0)?45:44;break;case 44:HEAP32[(l+60|0)>>2]=HEAP32[(l+20|0)>>2];a=45;break;case 45:e=1;a=46;break;case 46:return m=e,STACKTOP=b,m;default:assert(0,
"bad label: "+a)}}
function _TIFFReadDirEntryLong8Array(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l=b,n=b+8,p,q,t,r,s,v,u,w,y,A,z,x,B,C,D,F,I,G,H,K,J;g=m;f=d;k=c;a=HEAP16[(f+2|0)>>1]&65535;a=1==(a|0)|6==(a|0)|3==(a|0)|8==(a|0)|4==(a|0)|9==(a|0)|16==(a|0)|17==(a|0)?2:3;break;case 2:a=4;break;case 3:e=2;a=70;break;case 4:h=_TIFFReadDirEntryArray(g,f,l,8,n);a=0!=(h|0)?6:5;break;case 5:a=0==(HEAP32[n>>2]|0)?6:7;break;case 6:HEAP32[k>>2]=
0;e=h;a=70;break;case 7:a=HEAP16[(f+2|0)>>1]&65535;a=16==(a|0)?8:17==(a|0)?11:20;break;case 8:HEAP32[k>>2]=HEAP32[n>>2];a=0!=(HEAP32[(g+12|0)>>2]&128|0)?9:10;break;case 9:_TIFFSwabArrayOfLong8(HEAP32[k>>2],HEAP32[l>>2]);a=10;break;case 10:e=0;a=70;break;case 11:q=HEAP32[n>>2];t=0;a=12;break;case 12:a=t>>>0<HEAP32[l>>2]>>>0?13:19;break;case 13:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?14:15;break;case 14:_TIFFSwabLong8(q);a=15;break;case 15:h=q;h=_TIFFReadDirEntryCheckRangeLong8Slong8(HEAP32[(h|0)>>2],HEAP32[(h+
4|0)>>2]);a=0!=(h|0)?16:17;break;case 16:__TIFFfree(HEAP32[n>>2]);e=h;a=70;break;case 17:q=q+8|0;a=18;break;case 18:t=t+1|0;a=12;break;case 19:HEAP32[k>>2]=HEAP32[n>>2];e=0;a=70;break;case 20:p=__TIFFmalloc(HEAP32[l>>2]<<3);a=0==(p|0)?21:22;break;case 21:__TIFFfree(HEAP32[n>>2]);e=7;a=70;break;case 22:a=HEAP16[(f+2|0)>>1]&65535;a=1==(a|0)?23:6==(a|0)?28:3==(a|0)?35:8==(a|0)?42:4==(a|0)?51:9==(a|0)?58:67;break;case 23:r=HEAP32[n>>2];s=p;v=0;a=24;break;case 24:a=v>>>0<HEAP32[l>>2]>>>0?25:27;break;case 25:a=
r;r=a+1|0;var a=HEAP8[a]&255,E=s;s=E+8|0;HEAP32[(E|0)>>2]=a;HEAP32[(E+4|0)>>2]=0;a=26;break;case 26:v=v+1|0;a=24;break;case 27:a=67;break;case 28:u=HEAP32[n>>2];w=p;y=0;a=29;break;case 29:a=y>>>0<HEAP32[l>>2]>>>0?30:34;break;case 30:h=_TIFFReadDirEntryCheckRangeLong8Sbyte(HEAP8[u]);a=0!=(h|0)?31:32;break;case 31:a=34;break;case 32:a=u;u=a+1|0;var E=HEAP8[a],a=E<<24>>24,E=0>E<<24>>24?-1:0,L=w;w=L+8|0;HEAP32[(L|0)>>2]=a;HEAP32[(L+4|0)>>2]=E;a=33;break;case 33:y=y+1|0;a=29;break;case 34:a=67;break;case 35:A=
HEAP32[n>>2];z=p;x=0;a=36;break;case 36:a=x>>>0<HEAP32[l>>2]>>>0?37:41;break;case 37:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?38:39;break;case 38:_TIFFSwabShort(A);a=39;break;case 39:a=A;A=a+2|0;a=HEAP16[a>>1]&65535;E=z;z=E+8|0;HEAP32[(E|0)>>2]=a;HEAP32[(E+4|0)>>2]=0;a=40;break;case 40:x=x+1|0;a=36;break;case 41:a=67;break;case 42:B=HEAP32[n>>2];C=p;D=0;a=43;break;case 43:a=D>>>0<HEAP32[l>>2]>>>0?44:50;break;case 44:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?45:46;break;case 45:_TIFFSwabShort(B);a=46;break;case 46:h=
_TIFFReadDirEntryCheckRangeLong8Sshort(HEAP16[B>>1]);a=0!=(h|0)?47:48;break;case 47:a=50;break;case 48:a=B;B=a+2|0;E=HEAP16[a>>1];a=E<<16>>16;E=0>E<<16>>16?-1:0;L=C;C=L+8|0;HEAP32[(L|0)>>2]=a;HEAP32[(L+4|0)>>2]=E;a=49;break;case 49:D=D+1|0;a=43;break;case 50:a=67;break;case 51:F=HEAP32[n>>2];I=p;G=0;a=52;break;case 52:a=G>>>0<HEAP32[l>>2]>>>0?53:57;break;case 53:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?54:55;break;case 54:_TIFFSwabLong(F);a=55;break;case 55:a=F;F=a+4|0;a=HEAP32[a>>2];E=I;I=E+8|0;HEAP32[(E|
0)>>2]=a;HEAP32[(E+4|0)>>2]=0;a=56;break;case 56:G=G+1|0;a=52;break;case 57:a=67;break;case 58:H=HEAP32[n>>2];K=p;J=0;a=59;break;case 59:a=J>>>0<HEAP32[l>>2]>>>0?60:66;break;case 60:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?61:62;break;case 61:_TIFFSwabLong(H);a=62;break;case 62:h=_TIFFReadDirEntryCheckRangeLong8Slong(HEAP32[H>>2]);a=0!=(h|0)?63:64;break;case 63:a=66;break;case 64:a=H;H=a+4|0;a=E=HEAP32[a>>2];E=0>(E|0)?-1:0;L=K;K=L+8|0;HEAP32[(L|0)>>2]=a;HEAP32[(L+4|0)>>2]=E;a=65;break;case 65:J=J+1|0;a=59;
break;case 66:a=67;break;case 67:__TIFFfree(HEAP32[n>>2]);a=0!=(h|0)?68:69;break;case 68:__TIFFfree(p);e=h;a=70;break;case 69:HEAP32[k>>2]=p;e=0;a=70;break;case 70:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _ChopUpSingleUncompressedStrip(m){var d=0,c=STACKTOP;STACKTOP=STACKTOP+40|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e=c,g=c+8,f,k=c+16,h=c+24,l,n=c+32,p,q,t,r;a=m;b=a+40|0;var d=HEAP32[(b+136|0)>>2]|0,s=HEAP32[(d+4|0)>>2];HEAP32[(e|0)>>2]=HEAP32[(d|0)>>2];HEAP32[(e+4|0)>>2]=s;d=HEAP32[(b+132|0)>>2]|0;s=HEAP32[(d+4|0)>>2];HEAP32[(g|0)>>2]=HEAP32[(d|0)>>2];HEAP32[(g+4|0)>>2]=s;d=1==(HEAP16[(b+86|0)>>1]&65535|0)?2:3;break;case 2:d=4;break;case 3:throw ___assert_func(29136,
5485,45016,31480),"Reached an unreachable!";case 4:d=6==(HEAP16[(b+50|0)>>1]&65535|0)?5:7;break;case 5:d=0!=(HEAP32[(a+12|0)>>2]&16384|0)?7:6;break;case 6:f=HEAP16[((b+152|0)+2|0)>>1]&65535;d=8;break;case 7:f=1;d=8;break;case 8:d=_TIFFVTileSize64(a,f);s=tempRet0;HEAP32[(k|0)>>2]=d;HEAP32[(k+4|0)>>2]=s;d=HEAP32[(k+4|0)>>2];d=0<d>>>0|0==d>>>0&8192<HEAP32[(k|0)>>2]>>>0?9:10;break;case 9:q=HEAP32[(k+4|0)>>2];HEAP32[(h|0)>>2]=HEAP32[(k|0)>>2];HEAP32[(h+4|0)>>2]=q;q=f;d=14;break;case 10:d=HEAP32[(k+4|0)>>
2];d=0<d>>>0|0==d>>>0&0<HEAP32[(k|0)>>2]>>>0?11:12;break;case 11:d=___udivdi3(8192,0,HEAP32[(k|0)>>2],HEAP32[(k+4|0)>>2]);q=Math.imul(d,f)|0;d=___muldi3(d,0,HEAP32[(k|0)>>2],HEAP32[(k+4|0)>>2]);s=tempRet0;HEAP32[(h|0)>>2]=d;HEAP32[(h+4|0)>>2]=s;d=13;break;case 12:d=33;break;case 13:d=14;break;case 14:d=q>>>0>=HEAP32[(b+60|0)>>2]>>>0?15:16;break;case 15:d=33;break;case 16:var d=HEAP32[(e|0)>>2],s=HEAP32[(e+4|0)>>2],v=_i64Subtract(HEAP32[(h|0)>>2],HEAP32[(h+4|0)>>2],1,0),d=_i64Add(d,s,v,tempRet0),d=
___udivdi3(d,tempRet0,HEAP32[(h|0)>>2],HEAP32[(h+4|0)>>2]),s=tempRet0;HEAP32[(n|0)>>2]=d;HEAP32[(n+4|0)>>2]=s;d=0==(HEAP32[(n|0)>>2]|0)&0==(HEAP32[(n+4|0)>>2]|0)?18:17;break;case 17:d=HEAP32[(n+4|0)>>2];d=0<d>>>0|0==d>>>0&4294967295<HEAP32[(n|0)>>2]>>>0?18:19;break;case 18:d=33;break;case 19:p=HEAP32[(n|0)>>2];t=__TIFFCheckMalloc(a,p,8,31328);r=__TIFFCheckMalloc(a,p,8,31176);d=0==(t|0)?21:20;break;case 20:d=0==(r|0)?21:26;break;case 21:d=0!=(t|0)?22:23;break;case 22:__TIFFfree(t);d=23;break;case 23:d=
0!=(r|0)?24:25;break;case 24:__TIFFfree(r);d=25;break;case 25:d=33;break;case 26:l=0;d=27;break;case 27:d=l>>>0<p>>>0?28:32;break;case 28:d=HEAP32[(h+4|0)>>2];s=HEAP32[(e+4|0)>>2];d=d>>>0>s>>>0|d>>>0==s>>>0&HEAP32[(h|0)>>2]>>>0>HEAP32[(e|0)>>2]>>>0?29:30;break;case 29:d=HEAP32[(e+4|0)>>2];HEAP32[(h|0)>>2]=HEAP32[(e|0)>>2];HEAP32[(h+4|0)>>2]=d;d=30;break;case 30:d=HEAP32[(h+4|0)>>2];s=t+(l<<3)|0;HEAP32[(s|0)>>2]=HEAP32[(h|0)>>2];HEAP32[(s+4|0)>>2]=d;d=HEAP32[(g+4|0)>>2];s=r+(l<<3)|0;HEAP32[(s|0)>>
2]=HEAP32[(g|0)>>2];HEAP32[(s+4|0)>>2]=d;d=_i64Add(HEAP32[(g|0)>>2],HEAP32[(g+4|0)>>2],HEAP32[(h|0)>>2],HEAP32[(h+4|0)>>2]);s=tempRet0;HEAP32[(g|0)>>2]=d;HEAP32[(g+4|0)>>2]=s;d=_i64Subtract(HEAP32[(e|0)>>2],HEAP32[(e+4|0)>>2],HEAP32[(h|0)>>2],HEAP32[(h+4|0)>>2]);s=tempRet0;HEAP32[(e|0)>>2]=d;HEAP32[(e+4|0)>>2]=s;d=31;break;case 31:l=l+1|0;d=27;break;case 32:d=p;HEAP32[(b+128|0)>>2]=d;HEAP32[(b+124|0)>>2]=d;d=q;_TIFFSetField(a,278,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|
0))|0,HEAP32[tempInt>>2]=d,tempInt));__TIFFfree(HEAP32[(b+136|0)>>2]);__TIFFfree(HEAP32[(b+132|0)>>2]);HEAP32[(b+136|0)>>2]=t;HEAP32[(b+132|0)>>2]=r;HEAP32[(b+140|0)>>2]=1;d=33;break;case 33:STACKTOP=c;return;default:assert(0,"bad label: "+d)}}
function _TIFFReadDirEntryData(m,d,c,a,b){var e=0,g=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var f,k,h=g,l,n,p,q;k=m;HEAP32[(h|0)>>2]=d;HEAP32[(h+4|0)>>2]=c;l=a;n=b;e=0<(l|0)?2:3;break;case 2:e=4;break;case 3:throw ___assert_func(29136,3309,43976,30792),"Reached an unreachable!";case 4:e=0!=(HEAP32[(k+12|0)>>2]&2048|0)?10:5;break;case 5:e=(FUNCTION_TABLE[HEAP32[(k+640|0)>>2]](HEAP32[(k+628|0)>>2],HEAP32[(h|0)>>2],HEAP32[(h+4|0)>>2],0)|0)==(HEAP32[(h|
0)>>2]|0)&(tempRet0|0)==(HEAP32[(h+4|0)>>2]|0)?7:6;break;case 6:f=3;e=18;break;case 7:e=(FUNCTION_TABLE[HEAP32[(k+632|0)>>2]](HEAP32[(k+628|0)>>2],n,l)|0)==(l|0)?9:8;break;case 8:f=3;e=18;break;case 9:e=17;break;case 10:p=HEAP32[(h|0)>>2];q=p+l|0;e=(p|0)!=(HEAP32[(h|0)>>2]|0)|0!=(HEAP32[(h+4|0)>>2]|0)?15:11;break;case 11:e=q>>>0<p>>>0?15:12;break;case 12:e=(q-p|0)!=(l|0)?15:13;break;case 13:e=q>>>0<l>>>0?15:14;break;case 14:e=q>>>0>HEAP32[(k+616|0)>>2]>>>0?15:16;break;case 15:f=3;e=18;break;case 16:__TIFFmemcpy(n,
HEAP32[(k+612|0)>>2]+p|0,l);e=17;break;case 17:f=0;e=18;break;case 18:return m=f,STACKTOP=g,m;default:assert(0,"bad label: "+e)}}function _TIFFReadDirEntryCheckRangeLong8Sbyte(m){for(var d=0,d=1;;)switch(d){case 1:var c,d=0>(m<<24>>24|0)?2:3;break;case 2:d=c=4;break;case 3:c=0;d=4;break;case 4:return c;default:assert(0,"bad label: "+d)}}
function _TIFFReadDirEntryCheckRangeLong8Sshort(m){for(var d=0,d=1;;)switch(d){case 1:var c,d=0>(m<<16>>16|0)?2:3;break;case 2:d=c=4;break;case 3:c=0;d=4;break;case 4:return c;default:assert(0,"bad label: "+d)}}function _TIFFReadDirEntryCheckRangeLong8Slong(m){for(var d=0,d=1;;)switch(d){case 1:var c,d=0>(m|0)?2:3;break;case 2:d=c=4;break;case 3:c=0;d=4;break;case 4:return c;default:assert(0,"bad label: "+d)}}
function _TIFFReadDirEntryCheckRangeLong8Slong8(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,c=a;HEAP32[(c|0)>>2]=m;HEAP32[(c+4|0)>>2]=d;var e=HEAP32[(c+4|0)>>2],c=0>(e|0)|0==(e|0)&0>HEAP32[(c|0)>>2]>>>0?2:3;break;case 2:c=b=4;break;case 3:b=0;c=4;break;case 4:return STACKTOP=a,b;default:assert(0,"bad label: "+c)}}
function _TIFFReadDirEntryByteArray(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l=b,n=b+8,p,q,t,r,s,v,u,w,y,A,z,x,B,C,D,F,I,G,H,K,J;g=m;f=d;k=c;a=HEAP16[(f+2|0)>>1]&65535;a=2==(a|0)|7==(a|0)|1==(a|0)|6==(a|0)|3==(a|0)|8==(a|0)|4==(a|0)|9==(a|0)|16==(a|0)|17==(a|0)?2:3;break;case 2:a=4;break;case 3:e=2;a=76;break;case 4:h=_TIFFReadDirEntryArray(g,f,l,1,n);a=0!=(h|0)?6:5;break;case 5:a=0==(HEAP32[n>>2]|0)?6:7;break;case 6:HEAP32[k>>
2]=0;e=h;a=76;break;case 7:a=HEAP16[(f+2|0)>>1]&65535;a=2==(a|0)|7==(a|0)|1==(a|0)?8:6==(a|0)?9:16;break;case 8:HEAP32[k>>2]=HEAP32[n>>2];e=0;a=76;break;case 9:q=HEAP32[n>>2];t=0;a=10;break;case 10:a=t>>>0<HEAP32[l>>2]>>>0?11:15;break;case 11:h=_TIFFReadDirEntryCheckRangeByteSbyte(HEAP8[q]);a=0!=(h|0)?12:13;break;case 12:__TIFFfree(HEAP32[n>>2]);e=h;a=76;break;case 13:q=q+1|0;a=14;break;case 14:t=t+1|0;a=10;break;case 15:HEAP32[k>>2]=HEAP32[n>>2];e=0;a=76;break;case 16:p=__TIFFmalloc(HEAP32[l>>2]);
a=0==(p|0)?17:18;break;case 17:__TIFFfree(HEAP32[n>>2]);e=7;a=76;break;case 18:a=HEAP16[(f+2|0)>>1]&65535;a=3==(a|0)?19:8==(a|0)?28:4==(a|0)?37:9==(a|0)?46:16==(a|0)?55:17==(a|0)?64:73;break;case 19:r=HEAP32[n>>2];s=p;v=0;a=20;break;case 20:a=v>>>0<HEAP32[l>>2]>>>0?21:27;break;case 21:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?22:23;break;case 22:_TIFFSwabShort(r);a=23;break;case 23:h=_TIFFReadDirEntryCheckRangeByteShort(HEAP16[r>>1]);a=0!=(h|0)?24:25;break;case 24:a=27;break;case 25:a=r;r=a+2|0;var a=HEAP16[a>>
1]&255,E=s;s=E+1|0;HEAP8[E]=a;a=26;break;case 26:v=v+1|0;a=20;break;case 27:a=73;break;case 28:u=HEAP32[n>>2];w=p;y=0;a=29;break;case 29:a=y>>>0<HEAP32[l>>2]>>>0?30:36;break;case 30:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?31:32;break;case 31:_TIFFSwabShort(u);a=32;break;case 32:h=_TIFFReadDirEntryCheckRangeByteSshort(HEAP16[u>>1]);a=0!=(h|0)?33:34;break;case 33:a=36;break;case 34:a=u;u=a+2|0;a=HEAP16[a>>1]&255;E=w;w=E+1|0;HEAP8[E]=a;a=35;break;case 35:y=y+1|0;a=29;break;case 36:a=73;break;case 37:A=HEAP32[n>>
2];z=p;x=0;a=38;break;case 38:a=x>>>0<HEAP32[l>>2]>>>0?39:45;break;case 39:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?40:41;break;case 40:_TIFFSwabLong(A);a=41;break;case 41:h=_TIFFReadDirEntryCheckRangeByteLong(HEAP32[A>>2]);a=0!=(h|0)?42:43;break;case 42:a=45;break;case 43:a=A;A=a+4|0;a=HEAP32[a>>2]&255;E=z;z=E+1|0;HEAP8[E]=a;a=44;break;case 44:x=x+1|0;a=38;break;case 45:a=73;break;case 46:B=HEAP32[n>>2];C=p;D=0;a=47;break;case 47:a=D>>>0<HEAP32[l>>2]>>>0?48:54;break;case 48:a=0!=(HEAP32[(g+12|0)>>2]&128|
0)?49:50;break;case 49:_TIFFSwabLong(B);a=50;break;case 50:h=_TIFFReadDirEntryCheckRangeByteSlong(HEAP32[B>>2]);a=0!=(h|0)?51:52;break;case 51:a=54;break;case 52:a=B;B=a+4|0;a=HEAP32[a>>2]&255;E=C;C=E+1|0;HEAP8[E]=a;a=53;break;case 53:D=D+1|0;a=47;break;case 54:a=73;break;case 55:F=HEAP32[n>>2];I=p;G=0;a=56;break;case 56:a=G>>>0<HEAP32[l>>2]>>>0?57:63;break;case 57:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?58:59;break;case 58:_TIFFSwabLong8(F);a=59;break;case 59:h=F;h=_TIFFReadDirEntryCheckRangeByteLong8(HEAP32[(h|
0)>>2],HEAP32[(h+4|0)>>2]);a=0!=(h|0)?60:61;break;case 60:a=63;break;case 61:a=F;F=a+8|0;a=HEAP32[(a|0)>>2]&255;E=I;I=E+1|0;HEAP8[E]=a;a=62;break;case 62:G=G+1|0;a=56;break;case 63:a=73;break;case 64:H=HEAP32[n>>2];K=p;J=0;a=65;break;case 65:a=J>>>0<HEAP32[l>>2]>>>0?66:72;break;case 66:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?67:68;break;case 67:_TIFFSwabLong8(H);a=68;break;case 68:h=H;h=_TIFFReadDirEntryCheckRangeByteSlong8(HEAP32[(h|0)>>2],HEAP32[(h+4|0)>>2]);a=0!=(h|0)?69:70;break;case 69:a=72;break;case 70:a=
H;H=a+8|0;a=HEAP32[(a|0)>>2]&255;E=K;K=E+1|0;HEAP8[E]=a;a=71;break;case 71:J=J+1|0;a=65;break;case 72:a=73;break;case 73:__TIFFfree(HEAP32[n>>2]);a=0!=(h|0)?74:75;break;case 74:__TIFFfree(p);e=h;a=76;break;case 75:HEAP32[k>>2]=p;e=0;a=76;break;case 76:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirEntryArray(m,d,c,a,b){var e=0,g=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var f,k,h,l,n,p,q,t,r,s,v=g,u,w=g+8;k=m;h=d;l=c;n=a;p=b;q=_TIFFDataWidth(HEAP16[(h+2|0)>>1]&65535);e=h+8|0;e=0==(HEAP32[(e|0)>>2]|0)&0==(HEAP32[(e+4|0)>>2]|0)?3:2;break;case 2:e=0==(q|0)?3:4;break;case 3:f=HEAP32[p>>2]=0;e=31;break;case 4:var e=2147483647/(q|0)&-1,y=0>(e|0)?-1:0,A=h+8|0,z=HEAP32[(A+4|0)>>2],e=y>>>0<z>>>0|y>>>0==z>>>0&e>>>0<HEAP32[(A|
0)>>2]>>>0?5:6;break;case 5:f=6;e=31;break;case 6:e=h+8|0;y=HEAP32[(e+4|0)>>2];e=0<y>>>0|0==y>>>0&(2147483647/(n>>>0)&-1)>>>0<HEAP32[(e|0)>>2]>>>0?7:8;break;case 7:f=6;e=31;break;case 8:HEAP32[l>>2]=HEAP32[(h+8|0)>>2];t=Math.imul(HEAP32[l>>2],q)|0;e=0<(t|0)?9:10;break;case 9:e=11;break;case 10:throw ___assert_func(29136,790,44E3,30272),"Reached an unreachable!";case 11:r=__TIFFCheckMalloc(k,HEAP32[l>>2],q,30064);e=0==(r|0)?12:13;break;case 12:f=7;e=31;break;case 13:e=0!=(HEAP32[(k+12|0)>>2]&524288|
0)?22:14;break;case 14:e=4>=t>>>0?15:16;break;case 15:__TIFFmemcpy(r,h+16|0,t);e=21;break;case 16:HEAP32[v>>2]=HEAP32[(h+16|0)>>2];e=0!=(HEAP32[(k+12|0)>>2]&128|0)?17:18;break;case 17:_TIFFSwabLong(v);e=18;break;case 18:s=_TIFFReadDirEntryData(k,HEAP32[v>>2],0,t,r);e=0!=(s|0)?19:20;break;case 19:__TIFFfree(r);f=s;e=31;break;case 20:e=21;break;case 21:e=30;break;case 22:e=8>=t>>>0?23:24;break;case 23:__TIFFmemcpy(r,h+16|0,t);e=29;break;case 24:e=h+16|0;y=HEAP32[(e+4|0)>>2];HEAP32[(w|0)>>2]=HEAP32[(e|
0)>>2];HEAP32[(w+4|0)>>2]=y;e=0!=(HEAP32[(k+12|0)>>2]&128|0)?25:26;break;case 25:_TIFFSwabLong8(w);e=26;break;case 26:u=_TIFFReadDirEntryData(k,HEAP32[(w|0)>>2],HEAP32[(w+4|0)>>2],t,r);e=0!=(u|0)?27:28;break;case 27:__TIFFfree(r);f=u;e=31;break;case 28:e=29;break;case 29:e=30;break;case 30:HEAP32[p>>2]=r;f=0;e=31;break;case 31:return m=f,STACKTOP=g,m;default:assert(0,"bad label: "+e)}}
function _TIFFReadDirEntryByte(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+56|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l=b,n=b+8,p=b+16,q=b+24,t=b+32,r=b+40,s=b+48;g=m;f=d;k=c;a=f+8|0;a=1!=(HEAP32[(a|0)>>2]|0)|0!=(HEAP32[(a+4|0)>>2]|0)?2:3;break;case 2:e=1;a=31;break;case 3:a=HEAP16[(f+2|0)>>1]&65535;a=1==(a|0)?4:6==(a|0)?5:3==(a|0)?8:8==(a|0)?11:4==(a|0)?14:9==(a|0)?17:16==(a|0)?20:17==(a|0)?25:30;break;case 4:_TIFFReadDirEntryCheckedByte(g,f,k);e=0;a=31;break;
case 5:_TIFFReadDirEntryCheckedSbyte(g,f,l);h=_TIFFReadDirEntryCheckRangeByteSbyte(HEAP8[l]);a=0!=(h|0)?6:7;break;case 6:e=h;a=31;break;case 7:HEAP8[k]=HEAP8[l];e=0;a=31;break;case 8:_TIFFReadDirEntryCheckedShort(g,f,n);h=_TIFFReadDirEntryCheckRangeByteShort(HEAP16[n>>1]);a=0!=(h|0)?9:10;break;case 9:e=h;a=31;break;case 10:HEAP8[k]=HEAP16[n>>1]&255;e=0;a=31;break;case 11:_TIFFReadDirEntryCheckedSshort(g,f,p);h=_TIFFReadDirEntryCheckRangeByteSshort(HEAP16[p>>1]);a=0!=(h|0)?12:13;break;case 12:e=h;
a=31;break;case 13:HEAP8[k]=HEAP16[p>>1]&255;e=0;a=31;break;case 14:_TIFFReadDirEntryCheckedLong(g,f,q);h=_TIFFReadDirEntryCheckRangeByteLong(HEAP32[q>>2]);a=0!=(h|0)?15:16;break;case 15:e=h;a=31;break;case 16:HEAP8[k]=HEAP32[q>>2]&255;e=0;a=31;break;case 17:_TIFFReadDirEntryCheckedSlong(g,f,t);h=_TIFFReadDirEntryCheckRangeByteSlong(HEAP32[t>>2]);a=0!=(h|0)?18:19;break;case 18:e=h;a=31;break;case 19:HEAP8[k]=HEAP32[t>>2]&255;e=0;a=31;break;case 20:h=_TIFFReadDirEntryCheckedLong8(g,f,r);a=0!=(h|0)?
21:22;break;case 21:e=h;a=31;break;case 22:h=_TIFFReadDirEntryCheckRangeByteLong8(HEAP32[(r|0)>>2],HEAP32[(r+4|0)>>2]);a=0!=(h|0)?23:24;break;case 23:e=h;a=31;break;case 24:HEAP8[k]=HEAP32[(r|0)>>2]&255;e=0;a=31;break;case 25:h=_TIFFReadDirEntryCheckedSlong8(g,f,s);a=0!=(h|0)?26:27;break;case 26:e=h;a=31;break;case 27:h=_TIFFReadDirEntryCheckRangeByteSlong8(HEAP32[(s|0)>>2],HEAP32[(s+4|0)>>2]);a=0!=(h|0)?28:29;break;case 28:e=h;a=31;break;case 29:HEAP8[k]=HEAP32[(s|0)>>2]&255;e=0;a=31;break;case 30:e=
2;a=31;break;case 31:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirEntryLong(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+56|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l=b,n=b+8,p=b+16,q=b+24,t=b+32,r=b+40,s=b+48;g=m;f=d;k=c;a=f+8|0;a=1!=(HEAP32[(a|0)>>2]|0)|0!=(HEAP32[(a+4|0)>>2]|0)?2:3;break;case 2:e=1;a=27;break;case 3:a=HEAP16[(f+2|0)>>1]&65535;a=1==(a|0)?4:6==(a|0)?5:3==(a|0)?8:8==(a|0)?9:4==(a|0)?12:9==(a|0)?13:16==(a|0)?16:17==(a|0)?21:26;break;case 4:_TIFFReadDirEntryCheckedByte(g,f,l);HEAP32[k>>2]=
HEAP8[l]&255;e=0;a=27;break;case 5:_TIFFReadDirEntryCheckedSbyte(g,f,n);h=_TIFFReadDirEntryCheckRangeLongSbyte(HEAP8[n]);a=0!=(h|0)?6:7;break;case 6:e=h;a=27;break;case 7:HEAP32[k>>2]=HEAP8[n]<<24>>24;e=0;a=27;break;case 8:_TIFFReadDirEntryCheckedShort(g,f,p);HEAP32[k>>2]=HEAP16[p>>1]&65535;e=0;a=27;break;case 9:_TIFFReadDirEntryCheckedSshort(g,f,q);h=_TIFFReadDirEntryCheckRangeLongSshort(HEAP16[q>>1]);a=0!=(h|0)?10:11;break;case 10:e=h;a=27;break;case 11:HEAP32[k>>2]=HEAP16[q>>1]<<16>>16;e=0;a=27;
break;case 12:_TIFFReadDirEntryCheckedLong(g,f,k);e=0;a=27;break;case 13:_TIFFReadDirEntryCheckedSlong(g,f,t);h=_TIFFReadDirEntryCheckRangeLongSlong(HEAP32[t>>2]);a=0!=(h|0)?14:15;break;case 14:e=h;a=27;break;case 15:HEAP32[k>>2]=HEAP32[t>>2];e=0;a=27;break;case 16:h=_TIFFReadDirEntryCheckedLong8(g,f,r);a=0!=(h|0)?17:18;break;case 17:e=h;a=27;break;case 18:h=_TIFFReadDirEntryCheckRangeLongLong8(HEAP32[(r|0)>>2],HEAP32[(r+4|0)>>2]);a=0!=(h|0)?19:20;break;case 19:e=h;a=27;break;case 20:HEAP32[k>>2]=
HEAP32[(r|0)>>2];e=0;a=27;break;case 21:h=_TIFFReadDirEntryCheckedSlong8(g,f,s);a=0!=(h|0)?22:23;break;case 22:e=h;a=27;break;case 23:h=_TIFFReadDirEntryCheckRangeLongSlong8(HEAP32[(s|0)>>2],HEAP32[(s+4|0)>>2]);a=0!=(h|0)?24:25;break;case 24:e=h;a=27;break;case 25:HEAP32[k>>2]=HEAP32[(s|0)>>2];e=0;a=27;break;case 26:e=2;a=27;break;case 27:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirEntryLong8(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+56|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l=b,n=b+8,p=b+16,q=b+24,t=b+32,r=b+40,s=b+48;g=m;f=d;k=c;a=f+8|0;a=1!=(HEAP32[(a|0)>>2]|0)|0!=(HEAP32[(a+4|0)>>2]|0)?2:3;break;case 2:e=1;a=23;break;case 3:a=HEAP16[(f+2|0)>>1]&65535;a=1==(a|0)?4:6==(a|0)?5:3==(a|0)?8:8==(a|0)?9:4==(a|0)?12:9==(a|0)?13:16==(a|0)?16:17==(a|0)?17:22;break;case 4:_TIFFReadDirEntryCheckedByte(g,f,l);e=k;HEAP32[(e|
0)>>2]=HEAP8[l]&255;e=HEAP32[(e+4|0)>>2]=0;a=23;break;case 5:_TIFFReadDirEntryCheckedSbyte(g,f,n);h=_TIFFReadDirEntryCheckRangeLong8Sbyte(HEAP8[n]);a=0!=(h|0)?6:7;break;case 6:e=h;a=23;break;case 7:e=HEAP8[n];var a=0>e<<24>>24?-1:0,v=k;HEAP32[(v|0)>>2]=e<<24>>24;HEAP32[(v+4|0)>>2]=a;e=0;a=23;break;case 8:_TIFFReadDirEntryCheckedShort(g,f,p);e=k;HEAP32[(e|0)>>2]=HEAP16[p>>1]&65535;e=HEAP32[(e+4|0)>>2]=0;a=23;break;case 9:_TIFFReadDirEntryCheckedSshort(g,f,q);h=_TIFFReadDirEntryCheckRangeLong8Sshort(HEAP16[q>>
1]);a=0!=(h|0)?10:11;break;case 10:e=h;a=23;break;case 11:e=HEAP16[q>>1];a=0>e<<16>>16?-1:0;v=k;HEAP32[(v|0)>>2]=e<<16>>16;HEAP32[(v+4|0)>>2]=a;e=0;a=23;break;case 12:_TIFFReadDirEntryCheckedLong(g,f,t);e=k;HEAP32[(e|0)>>2]=HEAP32[t>>2];e=HEAP32[(e+4|0)>>2]=0;a=23;break;case 13:_TIFFReadDirEntryCheckedSlong(g,f,r);h=_TIFFReadDirEntryCheckRangeLong8Slong(HEAP32[r>>2]);a=0!=(h|0)?14:15;break;case 14:e=h;a=23;break;case 15:e=HEAP32[r>>2];a=0>(e|0)?-1:0;v=k;HEAP32[(v|0)>>2]=e;HEAP32[(v+4|0)>>2]=a;e=0;
a=23;break;case 16:e=h=_TIFFReadDirEntryCheckedLong8(g,f,k);a=23;break;case 17:h=_TIFFReadDirEntryCheckedSlong8(g,f,s);a=0!=(h|0)?18:19;break;case 18:e=h;a=23;break;case 19:h=_TIFFReadDirEntryCheckRangeLong8Slong8(HEAP32[(s|0)>>2],HEAP32[(s+4|0)>>2]);a=0!=(h|0)?20:21;break;case 20:e=h;a=23;break;case 21:e=HEAP32[(s+4|0)>>2];a=k;HEAP32[(a|0)>>2]=HEAP32[(s|0)>>2];HEAP32[(a+4|0)>>2]=e;e=0;a=23;break;case 22:e=2;a=23;break;case 23:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirEntryFloat(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+88|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l=b,n=b+8,p=b+16,q=b+24,t=b+32,r=b+40,s=b+48,v=b+56,u=b+64,w=b+72,y=b+80;g=m;f=d;k=c;a=f+8|0;a=1!=(HEAP32[(a|0)>>2]|0)|0!=(HEAP32[(a+4|0)>>2]|0)?2:3;break;case 2:e=1;a=27;break;case 3:a=HEAP16[(f+2|0)>>1]&65535;a=1==(a|0)?4:6==(a|0)?5:3==(a|0)?6:8==(a|0)?7:4==(a|0)?8:9==(a|0)?9:16==(a|0)?10:17==(a|0)?13:5==(a|0)?16:10==(a|0)?19:11==(a|0)?22:
12==(a|0)?23:26;break;case 4:_TIFFReadDirEntryCheckedByte(g,f,l);HEAPF32[k>>2]=HEAP8[l]&255;e=0;a=27;break;case 5:_TIFFReadDirEntryCheckedSbyte(g,f,n);HEAPF32[k>>2]=HEAP8[n]<<24>>24;e=0;a=27;break;case 6:_TIFFReadDirEntryCheckedShort(g,f,p);HEAPF32[k>>2]=HEAP16[p>>1]&65535;e=0;a=27;break;case 7:_TIFFReadDirEntryCheckedSshort(g,f,q);HEAPF32[k>>2]=HEAP16[q>>1]<<16>>16;e=0;a=27;break;case 8:_TIFFReadDirEntryCheckedLong(g,f,t);HEAPF32[k>>2]=HEAP32[t>>2]>>>0;e=0;a=27;break;case 9:_TIFFReadDirEntryCheckedSlong(g,
f,r);HEAPF32[k>>2]=HEAP32[r>>2]|0;e=0;a=27;break;case 10:h=_TIFFReadDirEntryCheckedLong8(g,f,s);a=0!=(h|0)?11:12;break;case 11:e=h;a=27;break;case 12:HEAPF32[k>>2]=(HEAP32[(s|0)>>2]>>>0)+4294967296*(HEAP32[(s+4|0)>>2]>>>0);e=0;a=27;break;case 13:h=_TIFFReadDirEntryCheckedSlong8(g,f,v);a=0!=(h|0)?14:15;break;case 14:e=h;a=27;break;case 15:HEAPF32[k>>2]=(HEAP32[(v|0)>>2]>>>0)+4294967296*(HEAP32[(v+4|0)>>2]|0);e=0;a=27;break;case 16:h=_TIFFReadDirEntryCheckedRational(g,f,u);a=0!=(h|0)?17:18;break;case 17:e=
h;a=27;break;case 18:HEAPF32[k>>2]=HEAPF64[u>>3];e=0;a=27;break;case 19:h=_TIFFReadDirEntryCheckedSrational(g,f,w);a=0!=(h|0)?20:21;break;case 20:e=h;a=27;break;case 21:HEAPF32[k>>2]=HEAPF64[w>>3];e=0;a=27;break;case 22:_TIFFReadDirEntryCheckedFloat(g,f,k);e=0;a=27;break;case 23:h=_TIFFReadDirEntryCheckedDouble(g,f,y);a=0!=(h|0)?24:25;break;case 24:e=h;a=27;break;case 25:HEAPF32[k>>2]=HEAPF64[y>>3];e=0;a=27;break;case 26:e=2;a=27;break;case 27:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+
a)}}
function _TIFFReadDirEntryDouble(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+72|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l=b,n=b+8,p=b+16,q=b+24,t=b+32,r=b+40,s=b+48,v=b+56,u=b+64;g=m;f=d;k=c;a=f+8|0;a=1!=(HEAP32[(a|0)>>2]|0)|0!=(HEAP32[(a+4|0)>>2]|0)?2:3;break;case 2:e=1;a=21;break;case 3:a=HEAP16[(f+2|0)>>1]&65535;a=1==(a|0)?4:6==(a|0)?5:3==(a|0)?6:8==(a|0)?7:4==(a|0)?8:9==(a|0)?9:16==(a|0)?10:17==(a|0)?13:5==(a|0)?16:10==(a|0)?17:11==(a|0)?18:12==(a|0)?19:
20;break;case 4:_TIFFReadDirEntryCheckedByte(g,f,l);HEAPF64[k>>3]=HEAP8[l]&255;e=0;a=21;break;case 5:_TIFFReadDirEntryCheckedSbyte(g,f,n);HEAPF64[k>>3]=HEAP8[n]<<24>>24;e=0;a=21;break;case 6:_TIFFReadDirEntryCheckedShort(g,f,p);HEAPF64[k>>3]=HEAP16[p>>1]&65535;e=0;a=21;break;case 7:_TIFFReadDirEntryCheckedSshort(g,f,q);HEAPF64[k>>3]=HEAP16[q>>1]<<16>>16;e=0;a=21;break;case 8:_TIFFReadDirEntryCheckedLong(g,f,t);HEAPF64[k>>3]=HEAP32[t>>2]>>>0;e=0;a=21;break;case 9:_TIFFReadDirEntryCheckedSlong(g,f,
r);HEAPF64[k>>3]=HEAP32[r>>2]|0;e=0;a=21;break;case 10:h=_TIFFReadDirEntryCheckedLong8(g,f,s);a=0!=(h|0)?11:12;break;case 11:e=h;a=21;break;case 12:HEAPF64[k>>3]=(HEAP32[(s|0)>>2]>>>0)+4294967296*(HEAP32[(s+4|0)>>2]>>>0);e=0;a=21;break;case 13:h=_TIFFReadDirEntryCheckedSlong8(g,f,v);a=0!=(h|0)?14:15;break;case 14:e=h;a=21;break;case 15:HEAPF64[k>>3]=(HEAP32[(v|0)>>2]>>>0)+4294967296*(HEAP32[(v+4|0)>>2]|0);e=0;a=21;break;case 16:e=h=_TIFFReadDirEntryCheckedRational(g,f,k);a=21;break;case 17:e=h=_TIFFReadDirEntryCheckedSrational(g,
f,k);a=21;break;case 18:_TIFFReadDirEntryCheckedFloat(g,f,u);HEAPF64[k>>3]=HEAPF32[u>>2];e=0;a=21;break;case 19:e=h=_TIFFReadDirEntryCheckedDouble(g,f,k);a=21;break;case 20:e=2;a=21;break;case 21:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirEntryIfd8(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h=b;g=m;f=d;k=c;a=f+8|0;a=1!=(HEAP32[(a|0)>>2]|0)|0!=(HEAP32[(a+4|0)>>2]|0)?2:3;break;case 2:e=1;a=7;break;case 3:a=HEAP16[(f+2|0)>>1]&65535;a=4==(a|0)|13==(a|0)?4:16==(a|0)|18==(a|0)?5:6;break;case 4:_TIFFReadDirEntryCheckedLong(g,f,h);e=k;HEAP32[(e|0)>>2]=HEAP32[h>>2];e=HEAP32[(e+4|0)>>2]=0;a=7;break;case 5:e=_TIFFReadDirEntryCheckedLong8(g,f,
k);a=7;break;case 6:e=2;a=7;break;case 7:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirEntryLongArray(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l=b,n=b+8,p,q,t,r,s,v,u,w,y,A,z,x,B,C,D,F,I,G,H,K,J;g=m;f=d;k=c;a=HEAP16[(f+2|0)>>1]&65535;a=1==(a|0)|6==(a|0)|3==(a|0)|8==(a|0)|4==(a|0)|9==(a|0)|16==(a|0)|17==(a|0)?2:3;break;case 2:a=4;break;case 3:e=2;a=72;break;case 4:h=_TIFFReadDirEntryArray(g,f,l,4,n);a=0!=(h|0)?6:5;break;case 5:a=0==(HEAP32[n>>2]|0)?6:7;break;case 6:HEAP32[k>>2]=
0;e=h;a=72;break;case 7:a=HEAP16[(f+2|0)>>1]&65535;a=4==(a|0)?8:9==(a|0)?11:20;break;case 8:HEAP32[k>>2]=HEAP32[n>>2];a=0!=(HEAP32[(g+12|0)>>2]&128|0)?9:10;break;case 9:_TIFFSwabArrayOfLong(HEAP32[k>>2],HEAP32[l>>2]);a=10;break;case 10:e=0;a=72;break;case 11:q=HEAP32[n>>2];t=0;a=12;break;case 12:a=t>>>0<HEAP32[l>>2]>>>0?13:19;break;case 13:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?14:15;break;case 14:_TIFFSwabLong(q);a=15;break;case 15:h=_TIFFReadDirEntryCheckRangeLongSlong(HEAP32[q>>2]);a=0!=(h|0)?16:17;
break;case 16:__TIFFfree(HEAP32[n>>2]);e=h;a=72;break;case 17:q=q+4|0;a=18;break;case 18:t=t+1|0;a=12;break;case 19:HEAP32[k>>2]=HEAP32[n>>2];e=0;a=72;break;case 20:p=__TIFFmalloc(HEAP32[l>>2]<<2);a=0==(p|0)?21:22;break;case 21:__TIFFfree(HEAP32[n>>2]);e=7;a=72;break;case 22:a=HEAP16[(f+2|0)>>1]&65535;a=1==(a|0)?23:6==(a|0)?28:3==(a|0)?35:8==(a|0)?42:16==(a|0)?51:17==(a|0)?60:69;break;case 23:r=HEAP32[n>>2];s=p;v=0;a=24;break;case 24:a=v>>>0<HEAP32[l>>2]>>>0?25:27;break;case 25:a=r;r=a+1|0;var a=
HEAP8[a]&255,E=s;s=E+4|0;HEAP32[E>>2]=a;a=26;break;case 26:v=v+1|0;a=24;break;case 27:a=69;break;case 28:u=HEAP32[n>>2];w=p;y=0;a=29;break;case 29:a=y>>>0<HEAP32[l>>2]>>>0?30:34;break;case 30:h=_TIFFReadDirEntryCheckRangeLongSbyte(HEAP8[u]);a=0!=(h|0)?31:32;break;case 31:a=34;break;case 32:a=u;u=a+1|0;a=HEAP8[a]<<24>>24;E=w;w=E+4|0;HEAP32[E>>2]=a;a=33;break;case 33:y=y+1|0;a=29;break;case 34:a=69;break;case 35:A=HEAP32[n>>2];z=p;x=0;a=36;break;case 36:a=x>>>0<HEAP32[l>>2]>>>0?37:41;break;case 37:a=
0!=(HEAP32[(g+12|0)>>2]&128|0)?38:39;break;case 38:_TIFFSwabShort(A);a=39;break;case 39:a=A;A=a+2|0;a=HEAP16[a>>1]&65535;E=z;z=E+4|0;HEAP32[E>>2]=a;a=40;break;case 40:x=x+1|0;a=36;break;case 41:a=69;break;case 42:B=HEAP32[n>>2];C=p;D=0;a=43;break;case 43:a=D>>>0<HEAP32[l>>2]>>>0?44:50;break;case 44:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?45:46;break;case 45:_TIFFSwabShort(B);a=46;break;case 46:h=_TIFFReadDirEntryCheckRangeLongSshort(HEAP16[B>>1]);a=0!=(h|0)?47:48;break;case 47:a=50;break;case 48:a=B;B=a+
2|0;a=HEAP16[a>>1]<<16>>16;E=C;C=E+4|0;HEAP32[E>>2]=a;a=49;break;case 49:D=D+1|0;a=43;break;case 50:a=69;break;case 51:F=HEAP32[n>>2];I=p;G=0;a=52;break;case 52:a=G>>>0<HEAP32[l>>2]>>>0?53:59;break;case 53:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?54:55;break;case 54:_TIFFSwabLong8(F);a=55;break;case 55:h=F;h=_TIFFReadDirEntryCheckRangeLongLong8(HEAP32[(h|0)>>2],HEAP32[(h+4|0)>>2]);a=0!=(h|0)?56:57;break;case 56:a=59;break;case 57:a=F;F=a+8|0;a=HEAP32[(a|0)>>2];E=I;I=E+4|0;HEAP32[E>>2]=a;a=58;break;case 58:G=
G+1|0;a=52;break;case 59:a=69;break;case 60:H=HEAP32[n>>2];K=p;J=0;a=61;break;case 61:a=J>>>0<HEAP32[l>>2]>>>0?62:68;break;case 62:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?63:64;break;case 63:_TIFFSwabLong8(H);a=64;break;case 64:h=H;h=_TIFFReadDirEntryCheckRangeLongSlong8(HEAP32[(h|0)>>2],HEAP32[(h+4|0)>>2]);a=0!=(h|0)?65:66;break;case 65:a=68;break;case 66:a=H;H=a+8|0;a=HEAP32[(a|0)>>2];E=K;K=E+4|0;HEAP32[E>>2]=a;a=67;break;case 67:J=J+1|0;a=61;break;case 68:a=69;break;case 69:__TIFFfree(HEAP32[n>>2]);a=
0!=(h|0)?70:71;break;case 70:__TIFFfree(p);e=h;a=72;break;case 71:HEAP32[k>>2]=p;e=0;a=72;break;case 72:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirEntryFloatArray(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l=b,n=b+8,p,q,t,r,s,v,u,w,y,A,z,x,B,C,D,F,I,G,H,K,J,E,L,Q,N,P,W,O,T,Y,S,X,R,V,aa,fa,Z,ka;g=m;f=d;k=c;a=HEAP16[(f+2|0)>>1]&65535;a=1==(a|0)|6==(a|0)|3==(a|0)|8==(a|0)|4==(a|0)|9==(a|0)|16==(a|0)|17==(a|0)|5==(a|0)|10==(a|0)|11==(a|0)|12==(a|0)?2:3;break;case 2:a=4;break;case 3:e=2;a=100;break;case 4:h=_TIFFReadDirEntryArray(g,f,l,4,n);a=
0!=(h|0)?6:5;break;case 5:a=0==(HEAP32[n>>2]|0)?6:7;break;case 6:HEAP32[k>>2]=0;e=h;a=100;break;case 7:a=11==(HEAP16[(f+2|0)>>1]&65535|0)?8:11;break;case 8:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?9:10;break;case 9:_TIFFSwabArrayOfLong(HEAP32[n>>2],HEAP32[l>>2]);a=10;break;case 10:HEAP32[k>>2]=HEAP32[n>>2];e=0;a=100;break;case 11:p=__TIFFmalloc(HEAP32[l>>2]<<2);a=0==(p|0)?12:13;break;case 12:__TIFFfree(HEAP32[n>>2]);e=7;a=100;break;case 13:a=HEAP16[(f+2|0)>>1]&65535;a=1==(a|0)?14:6==(a|0)?19:3==(a|0)?24:
8==(a|0)?31:4==(a|0)?38:9==(a|0)?45:16==(a|0)?52:17==(a|0)?59:5==(a|0)?66:10==(a|0)?78:12==(a|0)?90:97;break;case 14:q=HEAP32[n>>2];t=p;r=0;a=15;break;case 15:a=r>>>0<HEAP32[l>>2]>>>0?16:18;break;case 16:a=q;q=a+1|0;var a=HEAP8[a]&255,M=t;t=M+4|0;HEAPF32[M>>2]=a;a=17;break;case 17:r=r+1|0;a=15;break;case 18:a=97;break;case 19:s=HEAP32[n>>2];v=p;u=0;a=20;break;case 20:a=u>>>0<HEAP32[l>>2]>>>0?21:23;break;case 21:a=s;s=a+1|0;a=HEAP8[a]<<24>>24;M=v;v=M+4|0;HEAPF32[M>>2]=a;a=22;break;case 22:u=u+1|0;
a=20;break;case 23:a=97;break;case 24:w=HEAP32[n>>2];y=p;A=0;a=25;break;case 25:a=A>>>0<HEAP32[l>>2]>>>0?26:30;break;case 26:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?27:28;break;case 27:_TIFFSwabShort(w);a=28;break;case 28:a=w;w=a+2|0;a=HEAP16[a>>1]&65535;M=y;y=M+4|0;HEAPF32[M>>2]=a;a=29;break;case 29:A=A+1|0;a=25;break;case 30:a=97;break;case 31:z=HEAP32[n>>2];x=p;B=0;a=32;break;case 32:a=B>>>0<HEAP32[l>>2]>>>0?33:37;break;case 33:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?34:35;break;case 34:_TIFFSwabShort(z);a=
35;break;case 35:a=z;z=a+2|0;a=HEAP16[a>>1]<<16>>16;M=x;x=M+4|0;HEAPF32[M>>2]=a;a=36;break;case 36:B=B+1|0;a=32;break;case 37:a=97;break;case 38:C=HEAP32[n>>2];D=p;F=0;a=39;break;case 39:a=F>>>0<HEAP32[l>>2]>>>0?40:44;break;case 40:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?41:42;break;case 41:_TIFFSwabLong(C);a=42;break;case 42:a=C;C=a+4|0;a=HEAP32[a>>2]>>>0;M=D;D=M+4|0;HEAPF32[M>>2]=a;a=43;break;case 43:F=F+1|0;a=39;break;case 44:a=97;break;case 45:I=HEAP32[n>>2];G=p;H=0;a=46;break;case 46:a=H>>>0<HEAP32[l>>
2]>>>0?47:51;break;case 47:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?48:49;break;case 48:_TIFFSwabLong(I);a=49;break;case 49:a=I;I=a+4|0;a=HEAP32[a>>2]|0;M=G;G=M+4|0;HEAPF32[M>>2]=a;a=50;break;case 50:H=H+1|0;a=46;break;case 51:a=97;break;case 52:K=HEAP32[n>>2];J=p;E=0;a=53;break;case 53:a=E>>>0<HEAP32[l>>2]>>>0?54:58;break;case 54:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?55:56;break;case 55:_TIFFSwabLong8(K);a=56;break;case 56:a=K;K=a+8|0;a=(HEAP32[(a|0)>>2]>>>0)+4294967296*(HEAP32[(a+4|0)>>2]>>>0);M=J;J=M+4|0;HEAPF32[M>>
2]=a;a=57;break;case 57:E=E+1|0;a=53;break;case 58:a=97;break;case 59:L=HEAP32[n>>2];Q=p;N=0;a=60;break;case 60:a=N>>>0<HEAP32[l>>2]>>>0?61:65;break;case 61:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?62:63;break;case 62:_TIFFSwabLong8(L);a=63;break;case 63:a=L;L=a+8|0;a=(HEAP32[(a|0)>>2]>>>0)+4294967296*(HEAP32[(a+4|0)>>2]|0);M=Q;Q=M+4|0;HEAPF32[M>>2]=a;a=64;break;case 64:N=N+1|0;a=60;break;case 65:a=97;break;case 66:P=HEAP32[n>>2];T=p;Y=0;a=67;break;case 67:a=Y>>>0<HEAP32[l>>2]>>>0?68:77;break;case 68:a=0!=
(HEAP32[(g+12|0)>>2]&128|0)?69:70;break;case 69:_TIFFSwabLong(P);a=70;break;case 70:W=P;P=W+4|0;W=HEAP32[W>>2];a=0!=(HEAP32[(g+12|0)>>2]&128|0)?71:72;break;case 71:_TIFFSwabLong(P);a=72;break;case 72:O=P;P=O+4|0;O=HEAP32[O>>2];a=0==(O|0)?73:74;break;case 73:a=T;T=a+4|0;HEAPF32[a>>2]=0;a=75;break;case 74:a=(W>>>0)/(O>>>0);M=T;T=M+4|0;HEAPF32[M>>2]=a;a=75;break;case 75:a=76;break;case 76:Y=Y+1|0;a=67;break;case 77:a=97;break;case 78:S=HEAP32[n>>2];V=p;aa=0;a=79;break;case 79:a=aa>>>0<HEAP32[l>>2]>>>
0?80:89;break;case 80:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?81:82;break;case 81:_TIFFSwabLong(S);a=82;break;case 82:X=HEAP32[S>>2];S=S+4|0;a=0!=(HEAP32[(g+12|0)>>2]&128|0)?83:84;break;case 83:_TIFFSwabLong(S);a=84;break;case 84:R=S;S=R+4|0;R=HEAP32[R>>2];a=0==(R|0)?85:86;break;case 85:a=V;V=a+4|0;HEAPF32[a>>2]=0;a=87;break;case 86:a=(X|0)/(R>>>0);M=V;V=M+4|0;HEAPF32[M>>2]=a;a=87;break;case 87:a=88;break;case 88:aa=aa+1|0;a=79;break;case 89:a=97;break;case 90:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?91:92;break;
case 91:_TIFFSwabArrayOfLong8(HEAP32[n>>2],HEAP32[l>>2]);a=92;break;case 92:fa=HEAP32[n>>2];Z=p;ka=0;a=93;break;case 93:a=ka>>>0<HEAP32[l>>2]>>>0?94:96;break;case 94:a=fa;fa=a+8|0;a=HEAPF64[a>>3];M=Z;Z=M+4|0;HEAPF32[M>>2]=a;a=95;break;case 95:ka=ka+1|0;a=93;break;case 96:a=97;break;case 97:__TIFFfree(HEAP32[n>>2]);a=0!=(h|0)?98:99;break;case 98:__TIFFfree(p);e=h;a=100;break;case 99:HEAP32[k>>2]=p;e=0;a=100;break;case 100:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirEntryIfd8Array(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l=b,n=b+8,p,q,t,r;g=m;f=d;k=c;a=HEAP16[(f+2|0)>>1]&65535;a=4==(a|0)|16==(a|0)|13==(a|0)|18==(a|0)?2:3;break;case 2:a=4;break;case 3:e=2;a=24;break;case 4:h=_TIFFReadDirEntryArray(g,f,l,8,n);a=0!=(h|0)?6:5;break;case 5:a=0==(HEAP32[n>>2]|0)?6:7;break;case 6:HEAP32[k>>2]=0;e=h;a=24;break;case 7:a=HEAP16[(f+2|0)>>1]&65535;a=16==(a|0)|18==(a|
0)?8:11;break;case 8:HEAP32[k>>2]=HEAP32[n>>2];a=0!=(HEAP32[(g+12|0)>>2]&128|0)?9:10;break;case 9:_TIFFSwabArrayOfLong8(HEAP32[k>>2],HEAP32[l>>2]);a=10;break;case 10:e=0;a=24;break;case 11:p=__TIFFmalloc(HEAP32[l>>2]<<3);a=0==(p|0)?12:13;break;case 12:__TIFFfree(HEAP32[n>>2]);e=7;a=24;break;case 13:a=HEAP16[(f+2|0)>>1]&65535;a=4==(a|0)|13==(a|0)?14:21;break;case 14:q=HEAP32[n>>2];t=p;r=0;a=15;break;case 15:a=r>>>0<HEAP32[l>>2]>>>0?16:20;break;case 16:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?17:18;break;case 17:_TIFFSwabLong(q);
a=18;break;case 18:a=q;q=a+4|0;var a=HEAP32[a>>2],s=t;t=s+8|0;HEAP32[(s|0)>>2]=a;HEAP32[(s+4|0)>>2]=0;a=19;break;case 19:r=r+1|0;a=15;break;case 20:a=21;break;case 21:__TIFFfree(HEAP32[n>>2]);a=0!=(h|0)?22:23;break;case 22:__TIFFfree(p);e=h;a=24;break;case 23:HEAP32[k>>2]=p;e=0;a=24;break;case 24:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirEntrySbyteArray(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l=b,n=b+8,p,q,t,r,s,v,u,w,y,A,z,x,B,C,D,F,I,G,H,K,J;g=m;f=d;k=c;a=HEAP16[(f+2|0)>>1]&65535;a=7==(a|0)|1==(a|0)|6==(a|0)|3==(a|0)|8==(a|0)|4==(a|0)|9==(a|0)|16==(a|0)|17==(a|0)?2:3;break;case 2:a=4;break;case 3:e=2;a=76;break;case 4:h=_TIFFReadDirEntryArray(g,f,l,1,n);a=0!=(h|0)?6:5;break;case 5:a=0==(HEAP32[n>>2]|0)?6:7;break;case 6:HEAP32[k>>
2]=0;e=h;a=76;break;case 7:a=HEAP16[(f+2|0)>>1]&65535;a=7==(a|0)|1==(a|0)?8:6==(a|0)?15:16;break;case 8:q=HEAP32[n>>2];t=0;a=9;break;case 9:a=t>>>0<HEAP32[l>>2]>>>0?10:14;break;case 10:h=_TIFFReadDirEntryCheckRangeSbyteByte(HEAP8[q]);a=0!=(h|0)?11:12;break;case 11:__TIFFfree(HEAP32[n>>2]);e=h;a=76;break;case 12:q=q+1|0;a=13;break;case 13:t=t+1|0;a=9;break;case 14:HEAP32[k>>2]=HEAP32[n>>2];e=0;a=76;break;case 15:HEAP32[k>>2]=HEAP32[n>>2];e=0;a=76;break;case 16:p=__TIFFmalloc(HEAP32[l>>2]);a=0==(p|
0)?17:18;break;case 17:__TIFFfree(HEAP32[n>>2]);e=7;a=76;break;case 18:a=HEAP16[(f+2|0)>>1]&65535;a=3==(a|0)?19:8==(a|0)?28:4==(a|0)?37:9==(a|0)?46:16==(a|0)?55:17==(a|0)?64:73;break;case 19:r=HEAP32[n>>2];s=p;v=0;a=20;break;case 20:a=v>>>0<HEAP32[l>>2]>>>0?21:27;break;case 21:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?22:23;break;case 22:_TIFFSwabShort(r);a=23;break;case 23:h=_TIFFReadDirEntryCheckRangeSbyteShort(HEAP16[r>>1]);a=0!=(h|0)?24:25;break;case 24:a=27;break;case 25:a=r;r=a+2|0;var a=HEAP16[a>>1]&
255,E=s;s=E+1|0;HEAP8[E]=a;a=26;break;case 26:v=v+1|0;a=20;break;case 27:a=73;break;case 28:u=HEAP32[n>>2];w=p;y=0;a=29;break;case 29:a=y>>>0<HEAP32[l>>2]>>>0?30:36;break;case 30:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?31:32;break;case 31:_TIFFSwabShort(u);a=32;break;case 32:h=_TIFFReadDirEntryCheckRangeSbyteSshort(HEAP16[u>>1]);a=0!=(h|0)?33:34;break;case 33:a=36;break;case 34:a=u;u=a+2|0;a=HEAP16[a>>1]&255;E=w;w=E+1|0;HEAP8[E]=a;a=35;break;case 35:y=y+1|0;a=29;break;case 36:a=73;break;case 37:A=HEAP32[n>>
2];z=p;x=0;a=38;break;case 38:a=x>>>0<HEAP32[l>>2]>>>0?39:45;break;case 39:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?40:41;break;case 40:_TIFFSwabLong(A);a=41;break;case 41:h=_TIFFReadDirEntryCheckRangeSbyteLong(HEAP32[A>>2]);a=0!=(h|0)?42:43;break;case 42:a=45;break;case 43:a=A;A=a+4|0;a=HEAP32[a>>2]&255;E=z;z=E+1|0;HEAP8[E]=a;a=44;break;case 44:x=x+1|0;a=38;break;case 45:a=73;break;case 46:B=HEAP32[n>>2];C=p;D=0;a=47;break;case 47:a=D>>>0<HEAP32[l>>2]>>>0?48:54;break;case 48:a=0!=(HEAP32[(g+12|0)>>2]&128|
0)?49:50;break;case 49:_TIFFSwabLong(B);a=50;break;case 50:h=_TIFFReadDirEntryCheckRangeSbyteSlong(HEAP32[B>>2]);a=0!=(h|0)?51:52;break;case 51:a=54;break;case 52:a=B;B=a+4|0;a=HEAP32[a>>2]&255;E=C;C=E+1|0;HEAP8[E]=a;a=53;break;case 53:D=D+1|0;a=47;break;case 54:a=73;break;case 55:F=HEAP32[n>>2];I=p;G=0;a=56;break;case 56:a=G>>>0<HEAP32[l>>2]>>>0?57:63;break;case 57:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?58:59;break;case 58:_TIFFSwabLong8(F);a=59;break;case 59:h=F;h=_TIFFReadDirEntryCheckRangeSbyteLong8(HEAP32[(h|
0)>>2],HEAP32[(h+4|0)>>2]);a=0!=(h|0)?60:61;break;case 60:a=63;break;case 61:a=F;F=a+8|0;a=HEAP32[(a|0)>>2]&255;E=I;I=E+1|0;HEAP8[E]=a;a=62;break;case 62:G=G+1|0;a=56;break;case 63:a=73;break;case 64:H=HEAP32[n>>2];K=p;J=0;a=65;break;case 65:a=J>>>0<HEAP32[l>>2]>>>0?66:72;break;case 66:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?67:68;break;case 67:_TIFFSwabLong8(H);a=68;break;case 68:h=H;h=_TIFFReadDirEntryCheckRangeSbyteSlong8(HEAP32[(h|0)>>2],HEAP32[(h+4|0)>>2]);a=0!=(h|0)?69:70;break;case 69:a=72;break;
case 70:a=H;H=a+8|0;a=HEAP32[(a|0)>>2]&255;E=K;K=E+1|0;HEAP8[E]=a;a=71;break;case 71:J=J+1|0;a=65;break;case 72:a=73;break;case 73:__TIFFfree(HEAP32[n>>2]);a=0!=(h|0)?74:75;break;case 74:__TIFFfree(p);e=h;a=76;break;case 75:HEAP32[k>>2]=p;e=0;a=76;break;case 76:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirEntrySshortArray(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l=b,n=b+8,p,q,t,r,s,v,u,w,y,A,z,x,B,C,D,F,I,G,H,K,J;g=m;f=d;k=c;a=HEAP16[(f+2|0)>>1]&65535;a=1==(a|0)|6==(a|0)|3==(a|0)|8==(a|0)|4==(a|0)|9==(a|0)|16==(a|0)|17==(a|0)?2:3;break;case 2:a=4;break;case 3:e=2;a=72;break;case 4:h=_TIFFReadDirEntryArray(g,f,l,2,n);a=0!=(h|0)?6:5;break;case 5:a=0==(HEAP32[n>>2]|0)?6:7;break;case 6:HEAP32[k>>
2]=0;e=h;a=72;break;case 7:a=HEAP16[(f+2|0)>>1]&65535;a=3==(a|0)?8:8==(a|0)?17:20;break;case 8:q=HEAP32[n>>2];t=0;a=9;break;case 9:a=t>>>0<HEAP32[l>>2]>>>0?10:16;break;case 10:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?11:12;break;case 11:_TIFFSwabShort(q);a=12;break;case 12:h=_TIFFReadDirEntryCheckRangeSshortShort(HEAP16[q>>1]);a=0!=(h|0)?13:14;break;case 13:__TIFFfree(HEAP32[n>>2]);e=h;a=72;break;case 14:q=q+2|0;a=15;break;case 15:t=t+1|0;a=9;break;case 16:HEAP32[k>>2]=HEAP32[n>>2];e=0;a=72;break;case 17:HEAP32[k>>
2]=HEAP32[n>>2];a=0!=(HEAP32[(g+12|0)>>2]&128|0)?18:19;break;case 18:_TIFFSwabArrayOfShort(HEAP32[k>>2],HEAP32[l>>2]);a=19;break;case 19:e=0;a=72;break;case 20:p=__TIFFmalloc(HEAP32[l>>2]<<1);a=0==(p|0)?21:22;break;case 21:__TIFFfree(HEAP32[n>>2]);e=7;a=72;break;case 22:a=HEAP16[(f+2|0)>>1]&65535;a=1==(a|0)?23:6==(a|0)?28:4==(a|0)?33:9==(a|0)?42:16==(a|0)?51:17==(a|0)?60:69;break;case 23:r=HEAP32[n>>2];s=p;v=0;a=24;break;case 24:a=v>>>0<HEAP32[l>>2]>>>0?25:27;break;case 25:a=r;r=a+1|0;var a=HEAP8[a]&
255,E=s;s=E+2|0;HEAP16[E>>1]=a;a=26;break;case 26:v=v+1|0;a=24;break;case 27:a=69;break;case 28:u=HEAP32[n>>2];w=p;y=0;a=29;break;case 29:a=y>>>0<HEAP32[l>>2]>>>0?30:32;break;case 30:a=u;u=a+1|0;a=HEAP8[a]<<24>>24;E=w;w=E+2|0;HEAP16[E>>1]=a;a=31;break;case 31:y=y+1|0;a=29;break;case 32:a=69;break;case 33:A=HEAP32[n>>2];z=p;x=0;a=34;break;case 34:a=x>>>0<HEAP32[l>>2]>>>0?35:41;break;case 35:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?36:37;break;case 36:_TIFFSwabLong(A);a=37;break;case 37:h=_TIFFReadDirEntryCheckRangeSshortLong(HEAP32[A>>
2]);a=0!=(h|0)?38:39;break;case 38:a=41;break;case 39:a=A;A=a+4|0;a=HEAP32[a>>2]&65535;E=z;z=E+2|0;HEAP16[E>>1]=a;a=40;break;case 40:x=x+1|0;a=34;break;case 41:a=69;break;case 42:B=HEAP32[n>>2];C=p;D=0;a=43;break;case 43:a=D>>>0<HEAP32[l>>2]>>>0?44:50;break;case 44:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?45:46;break;case 45:_TIFFSwabLong(B);a=46;break;case 46:h=_TIFFReadDirEntryCheckRangeSshortSlong(HEAP32[B>>2]);a=0!=(h|0)?47:48;break;case 47:a=50;break;case 48:a=B;B=a+4|0;a=HEAP32[a>>2]&65535;E=C;C=E+
2|0;HEAP16[E>>1]=a;a=49;break;case 49:D=D+1|0;a=43;break;case 50:a=69;break;case 51:F=HEAP32[n>>2];I=p;G=0;a=52;break;case 52:a=G>>>0<HEAP32[l>>2]>>>0?53:59;break;case 53:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?54:55;break;case 54:_TIFFSwabLong8(F);a=55;break;case 55:h=F;h=_TIFFReadDirEntryCheckRangeSshortLong8(HEAP32[(h|0)>>2],HEAP32[(h+4|0)>>2]);a=0!=(h|0)?56:57;break;case 56:a=59;break;case 57:a=F;F=a+8|0;a=HEAP32[(a|0)>>2]&65535;E=I;I=E+2|0;HEAP16[E>>1]=a;a=58;break;case 58:G=G+1|0;a=52;break;case 59:a=
69;break;case 60:H=HEAP32[n>>2];K=p;J=0;a=61;break;case 61:a=J>>>0<HEAP32[l>>2]>>>0?62:68;break;case 62:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?63:64;break;case 63:_TIFFSwabLong8(H);a=64;break;case 64:h=H;h=_TIFFReadDirEntryCheckRangeSshortSlong8(HEAP32[(h|0)>>2],HEAP32[(h+4|0)>>2]);a=0!=(h|0)?65:66;break;case 65:a=68;break;case 66:a=H;H=a+8|0;a=HEAP32[(a|0)>>2]&65535;E=K;K=E+2|0;HEAP16[E>>1]=a;a=67;break;case 67:J=J+1|0;a=61;break;case 68:a=69;break;case 69:__TIFFfree(HEAP32[n>>2]);a=0!=(h|0)?70:71;break;
case 70:__TIFFfree(p);e=h;a=72;break;case 71:HEAP32[k>>2]=p;e=0;a=72;break;case 72:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirEntrySlongArray(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l=b,n=b+8,p,q,t,r,s,v,u,w,y,A,z,x,B,C,D,F,I,G,H,K,J;g=m;f=d;k=c;a=HEAP16[(f+2|0)>>1]&65535;a=1==(a|0)|6==(a|0)|3==(a|0)|8==(a|0)|4==(a|0)|9==(a|0)|16==(a|0)|17==(a|0)?2:3;break;case 2:a=4;break;case 3:e=2;a=68;break;case 4:h=_TIFFReadDirEntryArray(g,f,l,4,n);a=0!=(h|0)?6:5;break;case 5:a=0==(HEAP32[n>>2]|0)?6:7;break;case 6:HEAP32[k>>2]=
0;e=h;a=68;break;case 7:a=HEAP16[(f+2|0)>>1]&65535;a=4==(a|0)?8:9==(a|0)?17:20;break;case 8:q=HEAP32[n>>2];t=0;a=9;break;case 9:a=t>>>0<HEAP32[l>>2]>>>0?10:16;break;case 10:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?11:12;break;case 11:_TIFFSwabLong(q);a=12;break;case 12:h=_TIFFReadDirEntryCheckRangeSlongLong(HEAP32[q>>2]);a=0!=(h|0)?13:14;break;case 13:__TIFFfree(HEAP32[n>>2]);e=h;a=68;break;case 14:q=q+4|0;a=15;break;case 15:t=t+1|0;a=9;break;case 16:HEAP32[k>>2]=HEAP32[n>>2];e=0;a=68;break;case 17:HEAP32[k>>
2]=HEAP32[n>>2];a=0!=(HEAP32[(g+12|0)>>2]&128|0)?18:19;break;case 18:_TIFFSwabArrayOfLong(HEAP32[k>>2],HEAP32[l>>2]);a=19;break;case 19:e=0;a=68;break;case 20:p=__TIFFmalloc(HEAP32[l>>2]<<2);a=0==(p|0)?21:22;break;case 21:__TIFFfree(HEAP32[n>>2]);e=7;a=68;break;case 22:a=HEAP16[(f+2|0)>>1]&65535;a=1==(a|0)?23:6==(a|0)?28:3==(a|0)?33:8==(a|0)?40:16==(a|0)?47:17==(a|0)?56:65;break;case 23:r=HEAP32[n>>2];s=p;v=0;a=24;break;case 24:a=v>>>0<HEAP32[l>>2]>>>0?25:27;break;case 25:a=r;r=a+1|0;var a=HEAP8[a]&
255,E=s;s=E+4|0;HEAP32[E>>2]=a;a=26;break;case 26:v=v+1|0;a=24;break;case 27:a=65;break;case 28:u=HEAP32[n>>2];w=p;y=0;a=29;break;case 29:a=y>>>0<HEAP32[l>>2]>>>0?30:32;break;case 30:a=u;u=a+1|0;a=HEAP8[a]<<24>>24;E=w;w=E+4|0;HEAP32[E>>2]=a;a=31;break;case 31:y=y+1|0;a=29;break;case 32:a=65;break;case 33:A=HEAP32[n>>2];z=p;x=0;a=34;break;case 34:a=x>>>0<HEAP32[l>>2]>>>0?35:39;break;case 35:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?36:37;break;case 36:_TIFFSwabShort(A);a=37;break;case 37:a=A;A=a+2|0;a=HEAP16[a>>
1]&65535;E=z;z=E+4|0;HEAP32[E>>2]=a;a=38;break;case 38:x=x+1|0;a=34;break;case 39:a=65;break;case 40:B=HEAP32[n>>2];C=p;D=0;a=41;break;case 41:a=D>>>0<HEAP32[l>>2]>>>0?42:46;break;case 42:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?43:44;break;case 43:_TIFFSwabShort(B);a=44;break;case 44:a=B;B=a+2|0;a=HEAP16[a>>1]<<16>>16;E=C;C=E+4|0;HEAP32[E>>2]=a;a=45;break;case 45:D=D+1|0;a=41;break;case 46:a=65;break;case 47:F=HEAP32[n>>2];I=p;G=0;a=48;break;case 48:a=G>>>0<HEAP32[l>>2]>>>0?49:55;break;case 49:a=0!=(HEAP32[(g+
12|0)>>2]&128|0)?50:51;break;case 50:_TIFFSwabLong8(F);a=51;break;case 51:h=F;h=_TIFFReadDirEntryCheckRangeSlongLong8(HEAP32[(h|0)>>2],HEAP32[(h+4|0)>>2]);a=0!=(h|0)?52:53;break;case 52:a=55;break;case 53:a=F;F=a+8|0;a=HEAP32[(a|0)>>2];E=I;I=E+4|0;HEAP32[E>>2]=a;a=54;break;case 54:G=G+1|0;a=48;break;case 55:a=65;break;case 56:H=HEAP32[n>>2];K=p;J=0;a=57;break;case 57:a=J>>>0<HEAP32[l>>2]>>>0?58:64;break;case 58:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?59:60;break;case 59:_TIFFSwabLong8(H);a=60;break;case 60:h=
H;h=_TIFFReadDirEntryCheckRangeSlongSlong8(HEAP32[(h|0)>>2],HEAP32[(h+4|0)>>2]);a=0!=(h|0)?61:62;break;case 61:a=64;break;case 62:a=H;H=a+8|0;a=HEAP32[(a|0)>>2];E=K;K=E+4|0;HEAP32[E>>2]=a;a=63;break;case 63:J=J+1|0;a=57;break;case 64:a=65;break;case 65:__TIFFfree(HEAP32[n>>2]);a=0!=(h|0)?66:67;break;case 66:__TIFFfree(p);e=h;a=68;break;case 67:HEAP32[k>>2]=p;e=0;a=68;break;case 68:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirEntryCheckRangeSlongLong(m){for(var d=0,d=1;;)switch(d){case 1:var c,d=2147483647<m>>>0?2:3;break;case 2:d=c=4;break;case 3:c=0;d=4;break;case 4:return c;default:assert(0,"bad label: "+d)}}function _TIFFReadDirEntryCheckRangeSshortShort(m){for(var d=0,d=1;;)switch(d){case 1:var c,d=32767<(m&65535|0)?2:3;break;case 2:d=c=4;break;case 3:c=0;d=4;break;case 4:return c;default:assert(0,"bad label: "+d)}}
function _TIFFReadDirEntryCheckRangeSshortLong(m){for(var d=0,d=1;;)switch(d){case 1:var c,d=32767<m>>>0?2:3;break;case 2:d=c=4;break;case 3:c=0;d=4;break;case 4:return c;default:assert(0,"bad label: "+d)}}function _TIFFReadDirEntryCheckRangeSshortSlong(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;a=m;d=-32768>(a|0)?3:2;break;case 2:d=32767<(a|0)?3:4;break;case 3:c=4;d=5;break;case 4:c=0;d=5;break;case 5:return c;default:assert(0,"bad label: "+d)}}
function _TIFFReadDirEntryCheckRangeSbyteByte(m){for(var d=0,d=1;;)switch(d){case 1:var c,d=127<(m&255|0)?2:3;break;case 2:d=c=4;break;case 3:c=0;d=4;break;case 4:return c;default:assert(0,"bad label: "+d)}}function _TIFFReadDirEntryCheckRangeSbyteShort(m){for(var d=0,d=1;;)switch(d){case 1:var c,d=127<(m&65535|0)?2:3;break;case 2:d=c=4;break;case 3:c=0;d=4;break;case 4:return c;default:assert(0,"bad label: "+d)}}
function _TIFFReadDirEntryCheckRangeSbyteSshort(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;a=m;d=-128>(a<<16>>16|0)?3:2;break;case 2:d=127<(a<<16>>16|0)?3:4;break;case 3:c=4;d=5;break;case 4:c=0;d=5;break;case 5:return c;default:assert(0,"bad label: "+d)}}function _TIFFReadDirEntryCheckRangeSbyteLong(m){for(var d=0,d=1;;)switch(d){case 1:var c,d=127<m>>>0?2:3;break;case 2:d=c=4;break;case 3:c=0;d=4;break;case 4:return c;default:assert(0,"bad label: "+d)}}
function _TIFFReadDirEntryCheckRangeSbyteSlong(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;a=m;d=-128>(a|0)?3:2;break;case 2:d=127<(a|0)?3:4;break;case 3:c=4;d=5;break;case 4:c=0;d=5;break;case 5:return c;default:assert(0,"bad label: "+d)}}function _TIFFReadDirEntryCheckRangeLongSlong(m){for(var d=0,d=1;;)switch(d){case 1:var c,d=0>(m|0)?2:3;break;case 2:d=c=4;break;case 3:c=0;d=4;break;case 4:return c;default:assert(0,"bad label: "+d)}}
function _TIFFReadDirEntryCheckRangeLongSbyte(m){for(var d=0,d=1;;)switch(d){case 1:var c,d=0>(m<<24>>24|0)?2:3;break;case 2:d=c=4;break;case 3:c=0;d=4;break;case 4:return c;default:assert(0,"bad label: "+d)}}function _TIFFReadDirEntryCheckRangeLongSshort(m){for(var d=0,d=1;;)switch(d){case 1:var c,d=0>(m<<16>>16|0)?2:3;break;case 2:d=c=4;break;case 3:c=0;d=4;break;case 4:return c;default:assert(0,"bad label: "+d)}}
function _TIFFReadDirEntryCheckRangeSlong8Long8(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,c=a;HEAP32[(c|0)>>2]=m;HEAP32[(c+4|0)>>2]=d;var e=HEAP32[(c+4|0)>>2],c=2147483647<e>>>0|2147483647==e>>>0&4294967295<HEAP32[(c|0)>>2]>>>0?2:3;break;case 2:c=b=4;break;case 3:b=0;c=4;break;case 4:return STACKTOP=a,b;default:assert(0,"bad label: "+c)}}
function _TIFFReadDirEntryCheckRangeSlongLong8(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,c=a;HEAP32[(c|0)>>2]=m;HEAP32[(c+4|0)>>2]=d;var e=HEAP32[(c+4|0)>>2],c=0<e>>>0|0==e>>>0&2147483647<HEAP32[(c|0)>>2]>>>0?2:3;break;case 2:c=b=4;break;case 3:b=0;c=4;break;case 4:return STACKTOP=a,b;default:assert(0,"bad label: "+c)}}
function _TIFFReadDirEntryCheckRangeSlongSlong8(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e=a;HEAP32[(e|0)>>2]=m;HEAP32[(e+4|0)>>2]=d;c=HEAP32[(e+4|0)>>2];c=0>(c|0)|0==(c|0)&2147483648>HEAP32[(e|0)>>2]>>>0?3:2;break;case 2:c=HEAP32[(e+4|0)>>2];c=0<(c|0)|0==(c|0)&2147483647<HEAP32[(e|0)>>2]>>>0?3:4;break;case 3:b=4;c=5;break;case 4:b=0;c=5;break;case 5:return STACKTOP=a,b;default:assert(0,"bad label: "+c)}}
function _TIFFReadDirEntryCheckRangeSshortLong8(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,c=a;HEAP32[(c|0)>>2]=m;HEAP32[(c+4|0)>>2]=d;var e=HEAP32[(c+4|0)>>2],c=0<e>>>0|0==e>>>0&32767<HEAP32[(c|0)>>2]>>>0?2:3;break;case 2:c=b=4;break;case 3:b=0;c=4;break;case 4:return STACKTOP=a,b;default:assert(0,"bad label: "+c)}}
function _TIFFReadDirEntryCheckRangeSshortSlong8(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e=a;HEAP32[(e|0)>>2]=m;HEAP32[(e+4|0)>>2]=d;c=HEAP32[(e+4|0)>>2];c=-1>(c|0)|-1==(c|0)&4294934528>HEAP32[(e|0)>>2]>>>0?3:2;break;case 2:c=HEAP32[(e+4|0)>>2];c=0<(c|0)|0==(c|0)&32767<HEAP32[(e|0)>>2]>>>0?3:4;break;case 3:b=4;c=5;break;case 4:b=0;c=5;break;case 5:return STACKTOP=a,b;default:assert(0,"bad label: "+c)}}
function _TIFFReadDirEntryCheckRangeSbyteLong8(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,c=a;HEAP32[(c|0)>>2]=m;HEAP32[(c+4|0)>>2]=d;var e=HEAP32[(c+4|0)>>2],c=0<e>>>0|0==e>>>0&127<HEAP32[(c|0)>>2]>>>0?2:3;break;case 2:c=b=4;break;case 3:b=0;c=4;break;case 4:return STACKTOP=a,b;default:assert(0,"bad label: "+c)}}
function _TIFFReadDirEntryCheckRangeSbyteSlong8(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e=a;HEAP32[(e|0)>>2]=m;HEAP32[(e+4|0)>>2]=d;c=HEAP32[(e+4|0)>>2];c=-1>(c|0)|-1==(c|0)&4294967168>HEAP32[(e|0)>>2]>>>0?3:2;break;case 2:c=HEAP32[(e+4|0)>>2];c=0<(c|0)|0==(c|0)&127<HEAP32[(e|0)>>2]>>>0?3:4;break;case 3:b=4;c=5;break;case 4:b=0;c=5;break;case 5:return STACKTOP=a,b;default:assert(0,"bad label: "+c)}}
function _TIFFReadDirEntryCheckRangeLongLong8(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,c=a;HEAP32[(c|0)>>2]=m;HEAP32[(c+4|0)>>2]=d;var e=HEAP32[(c+4|0)>>2],c=0<e>>>0|0==e>>>0&4294967295<HEAP32[(c|0)>>2]>>>0?2:3;break;case 2:c=b=4;break;case 3:b=0;c=4;break;case 4:return STACKTOP=a,b;default:assert(0,"bad label: "+c)}}
function _TIFFReadDirEntryCheckRangeLongSlong8(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e=a;HEAP32[(e|0)>>2]=m;HEAP32[(e+4|0)>>2]=d;c=HEAP32[(e+4|0)>>2];c=0>(c|0)|0==(c|0)&0>HEAP32[(e|0)>>2]>>>0?3:2;break;case 2:c=HEAP32[(e+4|0)>>2];c=0<(c|0)|0==(c|0)&4294967295<HEAP32[(e|0)>>2]>>>0?3:4;break;case 3:b=4;c=5;break;case 4:b=0;c=5;break;case 5:return STACKTOP=a,b;default:assert(0,"bad label: "+c)}}
function _TIFFReadDirEntrySlong8Array(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l=b,n=b+8,p,q,t,r,s,v,u,w,y,A,z,x,B,C,D,F,I,G,H,K,J;g=m;f=d;k=c;a=HEAP16[(f+2|0)>>1]&65535;a=1==(a|0)|6==(a|0)|3==(a|0)|8==(a|0)|4==(a|0)|9==(a|0)|16==(a|0)|17==(a|0)?2:3;break;case 2:a=4;break;case 3:e=2;a=64;break;case 4:h=_TIFFReadDirEntryArray(g,f,l,8,n);a=0!=(h|0)?6:5;break;case 5:a=0==(HEAP32[n>>2]|0)?6:7;break;case 6:HEAP32[k>>
2]=0;e=h;a=64;break;case 7:a=HEAP16[(f+2|0)>>1]&65535;a=16==(a|0)?8:17==(a|0)?17:20;break;case 8:q=HEAP32[n>>2];t=0;a=9;break;case 9:a=t>>>0<HEAP32[l>>2]>>>0?10:16;break;case 10:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?11:12;break;case 11:_TIFFSwabLong8(q);a=12;break;case 12:h=q;h=_TIFFReadDirEntryCheckRangeSlong8Long8(HEAP32[(h|0)>>2],HEAP32[(h+4|0)>>2]);a=0!=(h|0)?13:14;break;case 13:__TIFFfree(HEAP32[n>>2]);e=h;a=64;break;case 14:q=q+8|0;a=15;break;case 15:t=t+1|0;a=9;break;case 16:HEAP32[k>>2]=HEAP32[n>>
2];e=0;a=64;break;case 17:HEAP32[k>>2]=HEAP32[n>>2];a=0!=(HEAP32[(g+12|0)>>2]&128|0)?18:19;break;case 18:_TIFFSwabArrayOfLong8(HEAP32[k>>2],HEAP32[l>>2]);a=19;break;case 19:e=0;a=64;break;case 20:p=__TIFFmalloc(HEAP32[l>>2]<<3);a=0==(p|0)?21:22;break;case 21:__TIFFfree(HEAP32[n>>2]);e=7;a=64;break;case 22:a=HEAP16[(f+2|0)>>1]&65535;a=1==(a|0)?23:6==(a|0)?28:3==(a|0)?33:8==(a|0)?40:4==(a|0)?47:9==(a|0)?54:61;break;case 23:r=HEAP32[n>>2];s=p;v=0;a=24;break;case 24:a=v>>>0<HEAP32[l>>2]>>>0?25:27;break;
case 25:a=r;r=a+1|0;var a=HEAP8[a]&255,E=s;s=E+8|0;HEAP32[(E|0)>>2]=a;HEAP32[(E+4|0)>>2]=0;a=26;break;case 26:v=v+1|0;a=24;break;case 27:a=61;break;case 28:u=HEAP32[n>>2];w=p;y=0;a=29;break;case 29:a=y>>>0<HEAP32[l>>2]>>>0?30:32;break;case 30:a=u;u=a+1|0;var E=HEAP8[a],a=E<<24>>24,E=0>E<<24>>24?-1:0,L=w;w=L+8|0;HEAP32[(L|0)>>2]=a;HEAP32[(L+4|0)>>2]=E;a=31;break;case 31:y=y+1|0;a=29;break;case 32:a=61;break;case 33:A=HEAP32[n>>2];z=p;x=0;a=34;break;case 34:a=x>>>0<HEAP32[l>>2]>>>0?35:39;break;case 35:a=
0!=(HEAP32[(g+12|0)>>2]&128|0)?36:37;break;case 36:_TIFFSwabShort(A);a=37;break;case 37:a=A;A=a+2|0;a=HEAP16[a>>1]&65535;E=z;z=E+8|0;HEAP32[(E|0)>>2]=a;HEAP32[(E+4|0)>>2]=0;a=38;break;case 38:x=x+1|0;a=34;break;case 39:a=61;break;case 40:B=HEAP32[n>>2];C=p;D=0;a=41;break;case 41:a=D>>>0<HEAP32[l>>2]>>>0?42:46;break;case 42:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?43:44;break;case 43:_TIFFSwabShort(B);a=44;break;case 44:a=B;B=a+2|0;E=HEAP16[a>>1];a=E<<16>>16;E=0>E<<16>>16?-1:0;L=C;C=L+8|0;HEAP32[(L|0)>>2]=
a;HEAP32[(L+4|0)>>2]=E;a=45;break;case 45:D=D+1|0;a=41;break;case 46:a=61;break;case 47:F=HEAP32[n>>2];I=p;G=0;a=48;break;case 48:a=G>>>0<HEAP32[l>>2]>>>0?49:53;break;case 49:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?50:51;break;case 50:_TIFFSwabLong(F);a=51;break;case 51:a=F;F=a+4|0;a=HEAP32[a>>2];E=I;I=E+8|0;HEAP32[(E|0)>>2]=a;HEAP32[(E+4|0)>>2]=0;a=52;break;case 52:G=G+1|0;a=48;break;case 53:a=61;break;case 54:H=HEAP32[n>>2];K=p;J=0;a=55;break;case 55:a=J>>>0<HEAP32[l>>2]>>>0?56:60;break;case 56:a=0!=(HEAP32[(g+
12|0)>>2]&128|0)?57:58;break;case 57:_TIFFSwabLong(H);a=58;break;case 58:a=H;H=a+4|0;a=E=HEAP32[a>>2];E=0>(E|0)?-1:0;L=K;K=L+8|0;HEAP32[(L|0)>>2]=a;HEAP32[(L+4|0)>>2]=E;a=59;break;case 59:J=J+1|0;a=55;break;case 60:a=61;break;case 61:__TIFFfree(HEAP32[n>>2]);a=0!=(h|0)?62:63;break;case 62:__TIFFfree(p);e=h;a=64;break;case 63:HEAP32[k>>2]=p;e=0;a=64;break;case 64:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirEntryCheckedLong(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,a=m;b=d;e=c;HEAP32[e>>2]=HEAP32[(b+16|0)>>2];a=0!=(HEAP32[(a+12|0)>>2]&128|0)?2:3;break;case 2:_TIFFSwabLong(e);a=3;break;case 3:return;default:assert(0,"bad label: "+a)}}function _TIFFReadDirEntryCheckRangeByteSbyte(m){for(var d=0,d=1;;)switch(d){case 1:var c,d=0>(m<<24>>24|0)?2:3;break;case 2:d=c=4;break;case 3:c=0;d=4;break;case 4:return c;default:assert(0,"bad label: "+d)}}
function _TIFFReadDirEntryCheckRangeByteShort(m){for(var d=0,d=1;;)switch(d){case 1:var c,d=255<(m&65535|0)?2:3;break;case 2:d=c=4;break;case 3:c=0;d=4;break;case 4:return c;default:assert(0,"bad label: "+d)}}function _TIFFReadDirEntryCheckRangeByteSshort(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;a=m;d=0>(a<<16>>16|0)?3:2;break;case 2:d=255<(a<<16>>16|0)?3:4;break;case 3:c=4;d=5;break;case 4:c=0;d=5;break;case 5:return c;default:assert(0,"bad label: "+d)}}
function _TIFFReadDirEntryCheckRangeByteLong(m){for(var d=0,d=1;;)switch(d){case 1:var c,d=255<m>>>0?2:3;break;case 2:d=c=4;break;case 3:c=0;d=4;break;case 4:return c;default:assert(0,"bad label: "+d)}}function _TIFFReadDirEntryCheckRangeByteSlong(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;a=m;d=0>(a|0)?3:2;break;case 2:d=255<(a|0)?3:4;break;case 3:c=4;d=5;break;case 4:c=0;d=5;break;case 5:return c;default:assert(0,"bad label: "+d)}}
function _TIFFReadDirEntryCheckRangeShortSshort(m){for(var d=0,d=1;;)switch(d){case 1:var c,d=0>(m<<16>>16|0)?2:3;break;case 2:d=c=4;break;case 3:c=0;d=4;break;case 4:return c;default:assert(0,"bad label: "+d)}}function _TIFFReadDirEntryCheckRangeShortSbyte(m){for(var d=0,d=1;;)switch(d){case 1:var c,d=0>(m<<24>>24|0)?2:3;break;case 2:d=c=4;break;case 3:c=0;d=4;break;case 4:return c;default:assert(0,"bad label: "+d)}}
function _TIFFReadDirEntryCheckRangeShortLong(m){for(var d=0,d=1;;)switch(d){case 1:var c,d=65535<m>>>0?2:3;break;case 2:d=c=4;break;case 3:c=0;d=4;break;case 4:return c;default:assert(0,"bad label: "+d)}}function _TIFFReadDirEntryCheckRangeShortSlong(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;a=m;d=0>(a|0)?3:2;break;case 2:d=65535<(a|0)?3:4;break;case 3:c=4;d=5;break;case 4:c=0;d=5;break;case 5:return c;default:assert(0,"bad label: "+d)}}
function _TIFFReadDirEntryCheckedByte(m,d,c){HEAP8[c]=HEAP8[d+16|0]}function _TIFFReadDirEntryCheckedSbyte(m,d,c){HEAP8[c]=HEAP8[d+16|0]}
function _TIFFReadDirEntryCheckRangeByteLong8(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,c=a;HEAP32[(c|0)>>2]=m;HEAP32[(c+4|0)>>2]=d;var e=HEAP32[(c+4|0)>>2],c=0<e>>>0|0==e>>>0&255<HEAP32[(c|0)>>2]>>>0?2:3;break;case 2:c=b=4;break;case 3:b=0;c=4;break;case 4:return STACKTOP=a,b;default:assert(0,"bad label: "+c)}}
function _TIFFReadDirEntryCheckRangeByteSlong8(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e=a;HEAP32[(e|0)>>2]=m;HEAP32[(e+4|0)>>2]=d;c=HEAP32[(e+4|0)>>2];c=0>(c|0)|0==(c|0)&0>HEAP32[(e|0)>>2]>>>0?3:2;break;case 2:c=HEAP32[(e+4|0)>>2];c=0<(c|0)|0==(c|0)&255<HEAP32[(e|0)>>2]>>>0?3:4;break;case 3:b=4;c=5;break;case 4:b=0;c=5;break;case 5:return STACKTOP=a,b;default:assert(0,"bad label: "+c)}}
function _TIFFReadUInt64(m){var d=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;HEAP8[d|0]=HEAP8[m|0];HEAP8[d+1|0]=HEAP8[m+1|0];HEAP8[d+2|0]=HEAP8[m+2|0];HEAP8[d+3|0]=HEAP8[m+3|0];HEAP8[d+4|0]=HEAP8[m+4|0];HEAP8[d+5|0]=HEAP8[m+5|0];HEAP8[d+6|0]=HEAP8[m+6|0];HEAP8[d+7|0]=HEAP8[m+7|0];m=HEAP32[(d|0)>>2];var c=HEAP32[(d+4|0)>>2];STACKTOP=d;return tempRet0=c,m}
function _TIFFReadDirEntryCheckRangeShortLong8(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,c=a;HEAP32[(c|0)>>2]=m;HEAP32[(c+4|0)>>2]=d;var e=HEAP32[(c+4|0)>>2],c=0<e>>>0|0==e>>>0&65535<HEAP32[(c|0)>>2]>>>0?2:3;break;case 2:c=b=4;break;case 3:b=0;c=4;break;case 4:return STACKTOP=a,b;default:assert(0,"bad label: "+c)}}
function _TIFFReadDirEntryCheckRangeShortSlong8(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e=a;HEAP32[(e|0)>>2]=m;HEAP32[(e+4|0)>>2]=d;c=HEAP32[(e+4|0)>>2];c=0>(c|0)|0==(c|0)&0>HEAP32[(e|0)>>2]>>>0?3:2;break;case 2:c=HEAP32[(e+4|0)>>2];c=0<(c|0)|0==(c|0)&65535<HEAP32[(e|0)>>2]>>>0?3:4;break;case 3:b=4;c=5;break;case 4:b=0;c=5;break;case 5:return STACKTOP=a,b;default:assert(0,"bad label: "+c)}}
function _TIFFReadDirEntryCheckedLong8(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l=b;g=m;f=d;k=c;a=0!=(HEAP32[(g+12|0)>>2]&524288|0)?7:2;break;case 2:HEAP32[l>>2]=HEAP32[(f+16|0)>>2];a=0!=(HEAP32[(g+12|0)>>2]&128|0)?3:4;break;case 3:_TIFFSwabLong(l);a=4;break;case 4:h=_TIFFReadDirEntryData(g,HEAP32[l>>2],0,8,k);a=0!=(h|0)?5:6;break;case 5:e=h;a=11;break;case 6:a=8;break;case 7:var a=f+16|0,n=HEAP32[(a+4|0)>>2],p=k;
HEAP32[(p|0)>>2]=HEAP32[(a|0)>>2];HEAP32[(p+4|0)>>2]=n;a=8;break;case 8:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?9:10;break;case 9:_TIFFSwabLong8(k);a=10;break;case 10:e=0;a=11;break;case 11:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirEntryCheckedShort(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,a=m;b=d;e=c;HEAP16[e>>1]=HEAP16[(b+16|0)>>1];a=0!=(HEAP32[(a+12|0)>>2]&128|0)?2:3;break;case 2:_TIFFSwabShort(e);a=3;break;case 3:return;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirEntryCheckedSshort(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,a=m;b=d;e=c;HEAP16[e>>1]=HEAP16[(b+16|0)>>1];a=0!=(HEAP32[(a+12|0)>>2]&128|0)?2:3;break;case 2:_TIFFSwabShort(e);a=3;break;case 3:return;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirEntryCheckedSlong(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,a=m;b=d;e=c;HEAP32[e>>2]=HEAP32[(b+16|0)>>2];a=0!=(HEAP32[(a+12|0)>>2]&128|0)?2:3;break;case 2:_TIFFSwabLong(e);a=3;break;case 3:return;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirEntryCheckedSlong8(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l=b;g=m;f=d;k=c;a=0!=(HEAP32[(g+12|0)>>2]&524288|0)?7:2;break;case 2:HEAP32[l>>2]=HEAP32[(f+16|0)>>2];a=0!=(HEAP32[(g+12|0)>>2]&128|0)?3:4;break;case 3:_TIFFSwabLong(l);a=4;break;case 4:h=_TIFFReadDirEntryData(g,HEAP32[l>>2],0,8,k);a=0!=(h|0)?5:6;break;case 5:e=h;a=11;break;case 6:a=8;break;case 7:var a=f+16|0,n=HEAP32[(a+4|0)>>2],p=
k;HEAP32[(p|0)>>2]=HEAP32[(a|0)>>2];HEAP32[(p+4|0)>>2]=n;a=8;break;case 8:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?9:10;break;case 9:_TIFFSwabLong8(k);a=10;break;case 10:e=0;a=11;break;case 11:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirEntryCheckedRational(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h=b,l,n=b+8;g=m;f=d;k=c;a=0!=(HEAP32[(g+12|0)>>2]&524288|0)?7:2;break;case 2:HEAP32[n>>2]=HEAP32[(f+16|0)>>2];a=0!=(HEAP32[(g+12|0)>>2]&128|0)?3:4;break;case 3:_TIFFSwabLong(n);a=4;break;case 4:l=_TIFFReadDirEntryData(g,HEAP32[n>>2],0,8,h|0);a=0!=(l|0)?5:6;break;case 5:e=l;a=14;break;case 6:a=8;break;case 7:var a=f+16|0,p=HEAP32[(a+
4|0)>>2],q=h;HEAP32[(q|0)>>2]=HEAP32[(a|0)>>2];HEAP32[(q+4|0)>>2]=p;a=8;break;case 8:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?9:10;break;case 9:_TIFFSwabArrayOfLong(h|0,2);a=10;break;case 10:a=0==(HEAP32[(h|0)>>2]|0)?11:12;break;case 11:HEAPF64[k>>3]=0;a=13;break;case 12:HEAPF64[k>>3]=(HEAP32[(h|0)>>2]>>>0)/(HEAP32[(h+4|0)>>2]>>>0);a=13;break;case 13:e=0;a=14;break;case 14:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirEntryCheckedSrational(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h=b,l,n=b+8;g=m;f=d;k=c;a=0!=(HEAP32[(g+12|0)>>2]&524288|0)?7:2;break;case 2:HEAP32[n>>2]=HEAP32[(f+16|0)>>2];a=0!=(HEAP32[(g+12|0)>>2]&128|0)?3:4;break;case 3:_TIFFSwabLong(n);a=4;break;case 4:l=_TIFFReadDirEntryData(g,HEAP32[n>>2],0,8,h|0);a=0!=(l|0)?5:6;break;case 5:e=l;a=14;break;case 6:a=8;break;case 7:var a=f+16|0,p=HEAP32[(a+
4|0)>>2],q=h;HEAP32[(q|0)>>2]=HEAP32[(a|0)>>2];HEAP32[(q+4|0)>>2]=p;a=8;break;case 8:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?9:10;break;case 9:_TIFFSwabArrayOfLong(h|0,2);a=10;break;case 10:a=0==(HEAP32[(h|0)>>2]|0)?11:12;break;case 11:HEAPF64[k>>3]=0;a=13;break;case 12:HEAPF64[k>>3]=(HEAP32[(h|0)>>2]|0)/(HEAP32[(h+4|0)>>2]>>>0);a=13;break;case 13:e=0;a=14;break;case 14:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirEntryCheckedFloat(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f=b,a=m;e=d;g=c;HEAP32[f>>2]=HEAP32[(e+16|0)>>2];HEAPF32[g>>2]=HEAPF32[f>>2];a=0!=(HEAP32[(a+12|0)>>2]&128|0)?2:3;break;case 2:_TIFFSwabLong(g);a=3;break;case 3:STACKTOP=b;return;default:assert(0,"bad label: "+a)}}
function _TIFFReadDirEntryCheckedDouble(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l=b,n=b+8;g=m;f=d;k=c;a=0!=(HEAP32[(g+12|0)>>2]&524288|0)?7:2;break;case 2:HEAP32[l>>2]=HEAP32[(f+16|0)>>2];a=0!=(HEAP32[(g+12|0)>>2]&128|0)?3:4;break;case 3:_TIFFSwabLong(l);a=4;break;case 4:h=_TIFFReadDirEntryData(g,HEAP32[l>>2],0,8,k);a=0!=(h|0)?5:6;break;case 5:e=h;a=11;break;case 6:a=8;break;case 7:var a=f+16|0,p=HEAP32[(a+4|0)>>
2],q=n;HEAP32[(q|0)>>2]=HEAP32[(a|0)>>2];HEAP32[(q+4|0)>>2]=p;HEAPF64[k>>3]=HEAPF64[n>>3];a=8;break;case 8:a=0!=(HEAP32[(g+12|0)>>2]&128|0)?9:10;break;case 9:_TIFFSwabLong8(k);a=10;break;case 10:e=0;a=11;break;case 11:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}function _TIFFWriteDirectory(m){return _TIFFWriteDirectorySec(m,1,1,0)}
function _TIFFWriteDirectorySec(m,d,c,a){var b=0,e=STACKTOP;STACKTOP=STACKTOP+72|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h,l,n=e,p,q,t,r,s=e+8,v=e+16,u,w,y=e+24,A=e+32,z=e+40,x=e+48,B=e+56,C,D,F,I=e+64,G,H,K;f=m;k=d;h=c;l=a;b=0==(HEAP32[(f+8|0)>>2]|0)?2:3;break;case 2:g=1;b=373;break;case 3:__TIFFFillStriles(f);b=0!=(h|0)?4:17;break;case 4:b=0!=(HEAP32[(f+12|0)>>2]&4096|0)?5:8;break;case 5:b=f+12|0;HEAP32[b>>2]&=-4097;b=0!=(FUNCTION_TABLE[HEAP32[(f+528|0)>>2]](f)|
0)?7:6;break;case 6:_TIFFErrorExt(HEAP32[(f+628|0)>>2],46016,39328,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));g=0;b=373;break;case 7:b=8;break;case 8:FUNCTION_TABLE[HEAP32[(f+556|0)>>2]](f);b=0<(HEAP32[(f+608|0)>>2]|0)?9:13;break;case 9:b=0!=(HEAP32[(f+12|0)>>2]&64|0)?10:13;break;case 10:b=0!=(_TIFFFlushData1(f)|0)?12:11;break;case 11:_TIFFErrorExt(HEAP32[(f+628|0)>>2],46016,38472,(tempInt=STACKTOP,STACKTOP=
STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));g=0;b=373;break;case 12:b=13;break;case 13:b=0!=(HEAP32[(f+12|0)>>2]&512|0)?14:16;break;case 14:b=0!=(HEAP32[(f+588|0)>>2]|0)?15:16;break;case 15:__TIFFfree(HEAP32[(f+588|0)>>2]);HEAP32[(f+588|0)>>2]=0;HEAP32[(f+608|0)>>2]=0;HEAP32[(f+592|0)>>2]=0;HEAP32[(f+596|0)>>2]=0;HEAP32[(f+600|0)>>2]=0;b=16;break;case 16:b=f+12|0;HEAP32[b>>2]&=-81;b=17;break;case 17:q=t=p=0;b=18;break;case 18:HEAP32[n>>
2]=0;b=0!=(k|0)?19:233;break;case 19:b=0!=(HEAP32[(f+40|0)>>2]&2|0)?20:25;break;case 20:b=0!=(_TIFFWriteDirectoryTagShortLong(f,n,p,256,HEAP32[((f+40|0)+16|0)>>2])|0)?22:21;break;case 21:b=368;break;case 22:b=0!=(_TIFFWriteDirectoryTagShortLong(f,n,p,257,HEAP32[((f+40|0)+20|0)>>2])|0)?24:23;break;case 23:b=368;break;case 24:b=25;break;case 25:b=0!=(HEAP32[(f+40|0)>>2]&4|0)?26:31;break;case 26:b=0!=(_TIFFWriteDirectoryTagShortLong(f,n,p,322,HEAP32[((f+40|0)+28|0)>>2])|0)?28:27;break;case 27:b=368;
break;case 28:b=0!=(_TIFFWriteDirectoryTagShortLong(f,n,p,323,HEAP32[((f+40|0)+32|0)>>2])|0)?30:29;break;case 29:b=368;break;case 30:b=31;break;case 31:b=0!=(HEAP32[(f+40|0)>>2]&8|0)?32:37;break;case 32:b=0!=(_TIFFWriteDirectoryTagRational(f,n,p,282,HEAPF32[((f+40|0)+76|0)>>2])|0)?34:33;break;case 33:b=368;break;case 34:b=0!=(_TIFFWriteDirectoryTagRational(f,n,p,283,HEAPF32[((f+40|0)+80|0)>>2])|0)?36:35;break;case 35:b=368;break;case 36:b=37;break;case 37:b=0!=(HEAP32[(f+40|0)>>2]&16|0)?38:43;break;
case 38:b=0!=(_TIFFWriteDirectoryTagRational(f,n,p,286,HEAPF32[((f+40|0)+88|0)>>2])|0)?40:39;break;case 39:b=368;break;case 40:b=0!=(_TIFFWriteDirectoryTagRational(f,n,p,287,HEAPF32[((f+40|0)+92|0)>>2])|0)?42:41;break;case 41:b=368;break;case 42:b=43;break;case 43:b=0!=(HEAP32[(f+40|0)>>2]&32|0)?44:47;break;case 44:b=0!=(_TIFFWriteDirectoryTagLong(f,n,p,254,HEAP32[((f+40|0)+40|0)>>2])|0)?46:45;break;case 45:b=368;break;case 46:b=47;break;case 47:b=0!=(HEAP32[(f+40|0)>>2]&64|0)?48:51;break;case 48:b=
0!=(_TIFFWriteDirectoryTagShortPerSample(f,n,p,258,HEAP16[((f+40|0)+44|0)>>1])|0)?50:49;break;case 49:b=368;break;case 50:b=51;break;case 51:b=0!=(HEAP32[(f+40|0)>>2]&128|0)?52:55;break;case 52:b=0!=(_TIFFWriteDirectoryTagShort(f,n,p,259,HEAP16[((f+40|0)+48|0)>>1])|0)?54:53;break;case 53:b=368;break;case 54:b=55;break;case 55:b=0!=(HEAP32[(f+40|0)>>2]&256|0)?56:59;break;case 56:b=0!=(_TIFFWriteDirectoryTagShort(f,n,p,262,HEAP16[((f+40|0)+50|0)>>1])|0)?58:57;break;case 57:b=368;break;case 58:b=59;
break;case 59:b=0!=(HEAP32[(f+40|0)>>2]&512|0)?60:63;break;case 60:b=0!=(_TIFFWriteDirectoryTagShort(f,n,p,263,HEAP16[((f+40|0)+52|0)>>1])|0)?62:61;break;case 61:b=368;break;case 62:b=63;break;case 63:b=0!=(HEAP32[(f+40|0)>>2]&1024|0)?64:67;break;case 64:b=0!=(_TIFFWriteDirectoryTagShort(f,n,p,266,HEAP16[((f+40|0)+54|0)>>1])|0)?66:65;break;case 65:b=368;break;case 66:b=67;break;case 67:b=0!=(HEAP32[(f+40|0)>>2]&32768|0)?68:71;break;case 68:b=0!=(_TIFFWriteDirectoryTagShort(f,n,p,274,HEAP16[((f+40|
0)+56|0)>>1])|0)?70:69;break;case 69:b=368;break;case 70:b=71;break;case 71:b=0!=(HEAP32[(f+40|0)>>2]&65536|0)?72:75;break;case 72:b=0!=(_TIFFWriteDirectoryTagShort(f,n,p,277,HEAP16[((f+40|0)+58|0)>>1])|0)?74:73;break;case 73:b=368;break;case 74:b=75;break;case 75:b=0!=(HEAP32[(f+40|0)>>2]&131072|0)?76:79;break;case 76:b=0!=(_TIFFWriteDirectoryTagShortLong(f,n,p,278,HEAP32[((f+40|0)+60|0)>>2])|0)?78:77;break;case 77:b=368;break;case 78:b=79;break;case 79:b=0!=(HEAP32[(f+40|0)>>2]&262144|0)?80:83;
break;case 80:b=0!=(_TIFFWriteDirectoryTagShortPerSample(f,n,p,280,HEAP16[((f+40|0)+64|0)>>1])|0)?82:81;break;case 81:b=368;break;case 82:b=83;break;case 83:b=0!=(HEAP32[(f+40|0)>>2]&524288|0)?84:87;break;case 84:b=0!=(_TIFFWriteDirectoryTagShortPerSample(f,n,p,281,HEAP16[((f+40|0)+66|0)>>1])|0)?86:85;break;case 85:b=368;break;case 86:b=87;break;case 87:b=0!=(HEAP32[(f+40|0)>>2]&1048576|0)?88:91;break;case 88:b=0!=(_TIFFWriteDirectoryTagShort(f,n,p,284,HEAP16[((f+40|0)+86|0)>>1])|0)?90:89;break;case 89:b=
368;break;case 90:b=91;break;case 91:b=0!=(HEAP32[(f+40|0)>>2]&4194304|0)?92:95;break;case 92:b=0!=(_TIFFWriteDirectoryTagShort(f,n,p,296,HEAP16[((f+40|0)+84|0)>>1])|0)?94:93;break;case 93:b=368;break;case 94:b=95;break;case 95:b=0!=(HEAP32[(f+40|0)>>2]&8388608|0)?96:99;break;case 96:b=0!=(_TIFFWriteDirectoryTagShortArray(f,n,p,297,2,(f+40|0)+96|0)|0)?98:97;break;case 97:b=368;break;case 98:b=99;break;case 99:b=0!=(HEAP32[(f+40|0)>>2]&16777216|0)?100:108;break;case 100:b=0!=(HEAP32[(f+12|0)>>2]&1024|
0)?104:101;break;case 101:b=0!=(_TIFFWriteDirectoryTagLongLong8Array(f,n,p,279,HEAP32[((f+40|0)+128|0)>>2],HEAP32[((f+40|0)+136|0)>>2])|0)?103:102;break;case 102:b=368;break;case 103:b=107;break;case 104:b=0!=(_TIFFWriteDirectoryTagLongLong8Array(f,n,p,325,HEAP32[((f+40|0)+128|0)>>2],HEAP32[((f+40|0)+136|0)>>2])|0)?106:105;break;case 105:b=368;break;case 106:b=107;break;case 107:b=108;break;case 108:b=0!=(HEAP32[(f+40|0)>>2]&33554432|0)?109:117;break;case 109:b=0!=(HEAP32[(f+12|0)>>2]&1024|0)?113:
110;break;case 110:b=0!=(_TIFFWriteDirectoryTagLongLong8Array(f,n,p,273,HEAP32[((f+40|0)+128|0)>>2],HEAP32[((f+40|0)+132|0)>>2])|0)?112:111;break;case 111:b=368;break;case 112:b=116;break;case 113:b=0!=(_TIFFWriteDirectoryTagLongLong8Array(f,n,p,324,HEAP32[((f+40|0)+128|0)>>2],HEAP32[((f+40|0)+132|0)>>2])|0)?115:114;break;case 114:b=368;break;case 115:b=116;break;case 116:b=117;break;case 117:b=0!=(HEAP32[(f+40|0)>>2]&67108864|0)?118:121;break;case 118:b=0!=(_TIFFWriteDirectoryTagColormap(f,n,p)|
0)?120:119;break;case 119:b=368;break;case 120:b=121;break;case 121:b=0!=(HEAP32[(f+40|0)>>2]&-2147483648|0)?122:127;break;case 122:b=0!=HEAP16[((f+40|0)+116|0)>>1]<<16>>16?123:126;break;case 123:_TIFFGetFieldDefaulted(f,338,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=s,HEAP32[tempInt+8>>2]=v,tempInt));b=0!=(_TIFFWriteDirectoryTagShortArray(f,n,p,338,HEAP16[s>>1]&65535,HEAP32[v>>2])|0)?125:124;break;case 124:b=368;break;case 125:b=126;break;case 126:b=
127;break;case 127:b=0!=(HEAP32[((f+40|0)+4|0)>>2]&1|0)?128:131;break;case 128:b=0!=(_TIFFWriteDirectoryTagShortPerSample(f,n,p,339,HEAP16[((f+40|0)+46|0)>>1])|0)?130:129;break;case 129:b=368;break;case 130:b=131;break;case 131:b=0!=(HEAP32[((f+40|0)+4|0)>>2]&2|0)?132:135;break;case 132:b=0!=(_TIFFWriteDirectoryTagSampleformatArray(f,n,p,340,HEAP16[((f+40|0)+58|0)>>1]&65535,HEAP32[((f+40|0)+68|0)>>2])|0)?134:133;break;case 133:b=368;break;case 134:b=135;break;case 135:b=0!=(HEAP32[((f+40|0)+4|0)>>
2]&4|0)?136:139;break;case 136:b=0!=(_TIFFWriteDirectoryTagSampleformatArray(f,n,p,341,HEAP16[((f+40|0)+58|0)>>1]&65535,HEAP32[((f+40|0)+72|0)>>2])|0)?138:137;break;case 137:b=368;break;case 138:b=139;break;case 139:b=0!=(HEAP32[((f+40|0)+4|0)>>2]&8|0)?140:143;break;case 140:b=0!=(_TIFFWriteDirectoryTagLong(f,n,p,-32539,HEAP32[((f+40|0)+24|0)>>2])|0)?142:141;break;case 141:b=368;break;case 142:b=143;break;case 143:b=0!=(HEAP32[((f+40|0)+4|0)>>2]&16|0)?144:147;break;case 144:b=0!=(_TIFFWriteDirectoryTagLong(f,
n,p,-32538,HEAP32[((f+40|0)+36|0)>>2])|0)?146:145;break;case 145:b=368;break;case 146:b=147;break;case 147:b=0!=(HEAP32[((f+40|0)+4|0)>>2]&32|0)?148:151;break;case 148:b=0!=(_TIFFWriteDirectoryTagShortArray(f,n,p,321,2,(f+40|0)+112|0)|0)?150:149;break;case 149:b=368;break;case 150:b=151;break;case 151:b=0!=(HEAP32[((f+40|0)+4|0)>>2]&128|0)?152:155;break;case 152:b=0!=(_TIFFWriteDirectoryTagShortArray(f,n,p,530,2,(f+40|0)+152|0)|0)?154:153;break;case 153:b=368;break;case 154:b=155;break;case 155:b=
0!=(HEAP32[((f+40|0)+4|0)>>2]&256|0)?156:159;break;case 156:b=0!=(_TIFFWriteDirectoryTagShort(f,n,p,531,HEAP16[((f+40|0)+156|0)>>1])|0)?158:157;break;case 157:b=368;break;case 158:b=159;break;case 159:b=0!=(HEAP32[((f+40|0)+4|0)>>2]&512|0)?160:163;break;case 160:b=0!=(_TIFFWriteDirectoryTagRationalArray(f,n,p,532,6,HEAP32[((f+40|0)+172|0)>>2])|0)?162:161;break;case 161:b=368;break;case 162:b=163;break;case 163:b=0!=(HEAP32[((f+40|0)+4|0)>>2]&4096|0)?164:167;break;case 164:b=0!=(_TIFFWriteDirectoryTagTransferfunction(f,
n,p)|0)?166:165;break;case 165:b=368;break;case 166:b=167;break;case 167:b=0!=(HEAP32[((f+40|0)+4|0)>>2]&16384|0)?168:171;break;case 168:b=0!=(_TIFFWriteDirectoryTagAscii(f,n,p,333,HEAP32[((f+40|0)+176|0)>>2],HEAP32[((f+40|0)+180|0)>>2])|0)?170:169;break;case 169:b=368;break;case 170:b=171;break;case 171:b=0!=(HEAP32[((f+40|0)+4|0)>>2]&131072|0)?172:175;break;case 172:b=0!=(_TIFFWriteDirectoryTagSubifd(f,n,p)|0)?174:173;break;case 173:b=368;break;case 174:b=175;break;case 175:u=0;b=176;break;case 176:b=
u>>>0<HEAP32[(f+660|0)>>2]>>>0?177:232;break;case 177:w=HEAP32[(HEAP32[(f+656|0)>>2]+(u<<2)|0)>>2];b=66<=(HEAP16[(w+24|0)>>1]&65535|0)?178:230;break;case 178:b=0!=(HEAP32[((f+40|0)+(((HEAP16[(w+24|0)>>1]&65535|0)/32&-1)<<2)|0)>>2]&1<<(HEAP16[(w+24|0)>>1]&31)|0)?179:230;break;case 179:b=HEAP32[(w+20|0)>>2];b=1==(b|0)?180:4==(b|0)?192:6==(b|0)?204:40==(b|0)?216:228;break;case 180:b=2==(HEAP32[(w+8|0)>>2]|0)?181:182;break;case 181:b=183;break;case 182:throw ___assert_func(37672,643,43848,37016),"Reached an unreachable!";
case 183:b=-1==(HEAP16[(w+4|0)>>1]<<16>>16|0)?184:185;break;case 184:b=186;break;case 185:throw ___assert_func(37672,644,43848,36160),"Reached an unreachable!";case 186:b=0==(HEAP8[w+27|0]&255|0)?187:188;break;case 187:b=189;break;case 188:throw ___assert_func(37672,645,43848,35512),"Reached an unreachable!";case 189:_TIFFGetField(f,HEAP32[(w|0)>>2],(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=y,tempInt));b=_strlen(HEAP32[y>>2]);b=0!=(_TIFFWriteDirectoryTagAscii(f,
n,p,HEAP32[(w|0)>>2]&65535,b,HEAP32[y>>2])|0)?191:190;break;case 190:b=368;break;case 191:b=229;break;case 192:b=3==(HEAP32[(w+8|0)>>2]|0)?193:194;break;case 193:b=195;break;case 194:throw ___assert_func(37672,655,43848,34952),"Reached an unreachable!";case 195:b=1==(HEAP16[(w+4|0)>>1]<<16>>16|0)?196:197;break;case 196:b=198;break;case 197:throw ___assert_func(37672,656,43848,34392),"Reached an unreachable!";case 198:b=0==(HEAP8[w+27|0]&255|0)?199:200;break;case 199:b=201;break;case 200:throw ___assert_func(37672,
657,43848,35512),"Reached an unreachable!";case 201:_TIFFGetField(f,HEAP32[(w|0)>>2],(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=A,tempInt));b=0!=(_TIFFWriteDirectoryTagShort(f,n,p,HEAP32[(w|0)>>2]&65535,HEAP16[A>>1])|0)?203:202;break;case 202:b=368;break;case 203:b=229;break;case 204:b=4==(HEAP32[(w+8|0)>>2]|0)?205:206;break;case 205:b=207;break;case 206:throw ___assert_func(37672,666,43848,33816),"Reached an unreachable!";case 207:b=1==(HEAP16[(w+
4|0)>>1]<<16>>16|0)?208:209;break;case 208:b=210;break;case 209:throw ___assert_func(37672,667,43848,34392),"Reached an unreachable!";case 210:b=0==(HEAP8[w+27|0]&255|0)?211:212;break;case 211:b=213;break;case 212:throw ___assert_func(37672,668,43848,35512),"Reached an unreachable!";case 213:_TIFFGetField(f,HEAP32[(w|0)>>2],(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=z,tempInt));b=0!=(_TIFFWriteDirectoryTagLong(f,n,p,HEAP32[(w|0)>>2]&65535,HEAP32[z>>
2])|0)?215:214;break;case 214:b=368;break;case 215:b=229;break;case 216:b=7==(HEAP32[(w+8|0)>>2]|0)?217:218;break;case 217:b=219;break;case 218:throw ___assert_func(37672,678,43848,33392),"Reached an unreachable!";case 219:b=-3==(HEAP16[(w+4|0)>>1]<<16>>16|0)?220:221;break;case 220:b=222;break;case 221:throw ___assert_func(37672,679,43848,32984),"Reached an unreachable!";case 222:b=1==(HEAP8[w+27|0]&255|0)?223:224;break;case 223:b=225;break;case 224:throw ___assert_func(37672,680,43848,32648),"Reached an unreachable!";
case 225:_TIFFGetField(f,HEAP32[(w|0)>>2],(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=x,HEAP32[tempInt+8>>2]=B,tempInt));b=0!=(_TIFFWriteDirectoryTagUndefinedArray(f,n,p,HEAP32[(w|0)>>2]&65535,HEAP32[x>>2],HEAP32[B>>2])|0)?227:226;break;case 226:b=368;break;case 227:b=229;break;case 228:throw ___assert_func(37672,687,43848,32256),"Reached an unreachable!";case 229:b=230;break;case 230:b=231;break;case 231:u=u+1|0;b=176;break;case 232:b=233;break;
case 233:r=0;b=234;break;case 234:b=r>>>0<HEAP32[((f+40|0)+184|0)>>2]>>>0?235:287;break;case 235:b=HEAP32[(HEAP32[(HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)>>2]+8|0)>>2];b=2==(b|0)?236:7==(b|0)?239:1==(b|0)?242:6==(b|0)?245:3==(b|0)?248:8==(b|0)?251:4==(b|0)?254:9==(b|0)?257:16==(b|0)?260:17==(b|0)?263:5==(b|0)?266:10==(b|0)?269:11==(b|0)?272:12==(b|0)?275:13==(b|0)?278:18==(b|0)?281:284;break;case 236:b=0!=(_TIFFWriteDirectoryTagAscii(f,n,p,HEAP32[(HEAP32[(HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)>>
2]|0)>>2]&65535,HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+4|0)>>2],HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+8|0)>>2])|0)?238:237;break;case 237:b=368;break;case 238:b=285;break;case 239:b=0!=(_TIFFWriteDirectoryTagUndefinedArray(f,n,p,HEAP32[(HEAP32[(HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)>>2]|0)>>2]&65535,HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+4|0)>>2],HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+8|0)>>2])|0)?241:240;break;case 240:b=368;break;case 241:b=285;break;
case 242:b=0!=(_TIFFWriteDirectoryTagByteArray(f,n,p,HEAP32[(HEAP32[(HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)>>2]|0)>>2]&65535,HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+4|0)>>2],HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+8|0)>>2])|0)?244:243;break;case 243:b=368;break;case 244:b=285;break;case 245:b=0!=(_TIFFWriteDirectoryTagSbyteArray(f,n,p,HEAP32[(HEAP32[(HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)>>2]|0)>>2]&65535,HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+4|0)>>2],HEAP32[((HEAP32[((f+
40|0)+188|0)>>2]+(12*r&-1)|0)+8|0)>>2])|0)?247:246;break;case 246:b=368;break;case 247:b=285;break;case 248:b=0!=(_TIFFWriteDirectoryTagShortArray(f,n,p,HEAP32[(HEAP32[(HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)>>2]|0)>>2]&65535,HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+4|0)>>2],HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+8|0)>>2])|0)?250:249;break;case 249:b=368;break;case 250:b=285;break;case 251:b=0!=(_TIFFWriteDirectoryTagSshortArray(f,n,p,HEAP32[(HEAP32[(HEAP32[((f+40|0)+188|0)>>
2]+(12*r&-1)|0)>>2]|0)>>2]&65535,HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+4|0)>>2],HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+8|0)>>2])|0)?253:252;break;case 252:b=368;break;case 253:b=285;break;case 254:b=0!=(_TIFFWriteDirectoryTagLongArray(f,n,p,HEAP32[(HEAP32[(HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)>>2]|0)>>2]&65535,HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+4|0)>>2],HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+8|0)>>2])|0)?256:255;break;case 255:b=368;break;case 256:b=
285;break;case 257:b=0!=(_TIFFWriteDirectoryTagSlongArray(f,n,p,HEAP32[(HEAP32[(HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)>>2]|0)>>2]&65535,HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+4|0)>>2],HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+8|0)>>2])|0)?259:258;break;case 258:b=368;break;case 259:b=285;break;case 260:b=0!=(_TIFFWriteDirectoryTagLong8Array(f,n,p,HEAP32[(HEAP32[(HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)>>2]|0)>>2]&65535,HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+4|0)>>2],
HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+8|0)>>2])|0)?262:261;break;case 261:b=368;break;case 262:b=285;break;case 263:b=0!=(_TIFFWriteDirectoryTagSlong8Array(f,n,p,HEAP32[(HEAP32[(HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)>>2]|0)>>2]&65535,HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+4|0)>>2],HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+8|0)>>2])|0)?265:264;break;case 264:b=368;break;case 265:b=285;break;case 266:b=0!=(_TIFFWriteDirectoryTagRationalArray(f,n,p,HEAP32[(HEAP32[(HEAP32[((f+
40|0)+188|0)>>2]+(12*r&-1)|0)>>2]|0)>>2]&65535,HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+4|0)>>2],HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+8|0)>>2])|0)?268:267;break;case 267:b=368;break;case 268:b=285;break;case 269:b=0!=(_TIFFWriteDirectoryTagSrationalArray(f,n,p,HEAP32[(HEAP32[(HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)>>2]|0)>>2]&65535,HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+4|0)>>2],HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+8|0)>>2])|0)?271:270;break;case 270:b=
368;break;case 271:b=285;break;case 272:b=0!=(_TIFFWriteDirectoryTagFloatArray(f,n,p,HEAP32[(HEAP32[(HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)>>2]|0)>>2]&65535,HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+4|0)>>2],HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+8|0)>>2])|0)?274:273;break;case 273:b=368;break;case 274:b=285;break;case 275:b=0!=(_TIFFWriteDirectoryTagDoubleArray(f,n,p,HEAP32[(HEAP32[(HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)>>2]|0)>>2]&65535,HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+
(12*r&-1)|0)+4|0)>>2],HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+8|0)>>2])|0)?277:276;break;case 276:b=368;break;case 277:b=285;break;case 278:b=0!=(_TIFFWriteDirectoryTagIfdArray(f,n,p,HEAP32[(HEAP32[(HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)>>2]|0)>>2]&65535,HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+4|0)>>2],HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+8|0)>>2])|0)?280:279;break;case 279:b=368;break;case 280:b=285;break;case 281:b=0!=(_TIFFWriteDirectoryTagIfdIfd8Array(f,n,p,
HEAP32[(HEAP32[(HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)>>2]|0)>>2]&65535,HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+4|0)>>2],HEAP32[((HEAP32[((f+40|0)+188|0)>>2]+(12*r&-1)|0)+8|0)>>2])|0)?283:282;break;case 282:b=368;break;case 283:b=285;break;case 284:throw ___assert_func(37672,763,43848,32256),"Reached an unreachable!";case 285:b=286;break;case 286:r=r+1|0;b=234;break;case 287:b=0!=(p|0)?288:289;break;case 288:b=312;break;case 289:p=__TIFFmalloc(24*HEAP32[n>>2]&-1);b=0==(p|0)?290:291;break;
case 290:_TIFFErrorExt(HEAP32[(f+628|0)>>2],46016,32032,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=368;break;case 291:b=0!=(k|0)?292:296;break;case 292:b=f+16|0;b=0==(HEAP32[(b|0)>>2]|0)&0==(HEAP32[(b+4|0)>>2]|0)?293:295;break;case 293:b=0!=(_TIFFLinkDirectory(f)|0)?295:294;break;case 294:b=368;break;case 295:b=297;break;case 296:var b=FUNCTION_TABLE[HEAP32[(f+640|0)>>2]](HEAP32[(f+628|0)>>2],0,0,2),b=_i64Add(b,
tempRet0,1,0),J=tempRet0&-1,E=f+16|0;HEAP32[(E|0)>>2]=b&-2;HEAP32[(E+4|0)>>2]=J;b=297;break;case 297:b=0!=(l|0)?298:299;break;case 298:b=f+16|0;J=HEAP32[(b+4|0)>>2];E=l;HEAP32[(E|0)>>2]=HEAP32[(b|0)>>2];HEAP32[(E+4|0)>>2]=J;b=299;break;case 299:b=0!=(HEAP32[(f+12|0)>>2]&524288|0)?301:300;break;case 300:q=((12*HEAP32[n>>2]&-1)+2|0)+4|0;b=302;break;case 301:q=((20*HEAP32[n>>2]&-1)+8|0)+8|0;b=302;break;case 302:b=f+16|0;b=_i64Add(HEAP32[(b|0)>>2],HEAP32[(b+4|0)>>2],q,0);J=tempRet0;E=f+464|0;HEAP32[(E|
0)>>2]=b;HEAP32[(E+4|0)>>2]=J;b=0!=(HEAP32[(f+12|0)>>2]&524288|0)?304:303;break;case 303:b=f+464|0;HEAP32[(b|0)>>2]=HEAP32[(f+464|0)>>2];HEAP32[(b+4|0)>>2]=0;b=304;break;case 304:var b=f+464|0,J=HEAP32[(b+4|0)>>2],E=f+16|0,L=HEAP32[(E+4|0)>>2],b=J>>>0<L>>>0|J>>>0==L>>>0&HEAP32[(b|0)>>2]>>>0<HEAP32[(E|0)>>2]>>>0?306:305;break;case 305:b=f+464|0;J=HEAP32[(b+4|0)>>2];b=0>J>>>0|0==J>>>0&HEAP32[(b|0)>>2]>>>0<q>>>0?306:307;break;case 306:_TIFFErrorExt(HEAP32[(f+628|0)>>2],46016,31752,(tempInt=STACKTOP,
STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=368;break;case 307:b=f+464|0;b=0!=(HEAP32[(b|0)>>2]&1|0)|0!=(HEAP32[(b+4|0)>>2]&0|0)?308:309;break;case 308:b=f+464|0;J=_i64Add(HEAP32[(b|0)>>2],HEAP32[(b+4|0)>>2],1,0);E=tempRet0;HEAP32[(b|0)>>2]=J;HEAP32[(b+4|0)>>2]=E;b=309;break;case 309:b=0!=(k|0)?310:311;break;case 310:b=f+448|0;HEAP16[b>>1]=HEAP16[b>>1]+1&65535;b=311;break;case 311:b=18;break;case 312:b=0!=(k|0)?313:328;break;
case 313:b=0!=(HEAP32[((f+40|0)+4|0)>>2]&131072|0)?314:327;break;case 314:b=f+480|0;b=0==(HEAP32[(b|0)>>2]|0)&0==(HEAP32[(b+4|0)>>2]|0)?315:327;break;case 315:C=0;D=p;b=316;break;case 316:b=C>>>0<HEAP32[n>>2]>>>0?317:318;break;case 317:b=319;break;case 318:throw ___assert_func(37672,809,43848,31472),"Reached an unreachable!";case 319:b=330==(HEAP16[(D|0)>>1]&65535|0)?320:321;break;case 320:b=323;break;case 321:b=322;break;case 322:C=C+1|0;D=D+24|0;b=316;break;case 323:b=0!=(HEAP32[(f+12|0)>>2]&524288|
0)?325:324;break;case 324:b=f+16|0;b=_i64Add(HEAP32[(b|0)>>2],HEAP32[(b+4|0)>>2],2,0);b=_i64Add(b,tempRet0,12*C&-1,0);b=_i64Add(b,tempRet0,8,0);J=tempRet0;E=f+480|0;HEAP32[(E|0)>>2]=b;HEAP32[(E+4|0)>>2]=J;b=326;break;case 325:b=f+16|0;b=_i64Add(HEAP32[(b|0)>>2],HEAP32[(b+4|0)>>2],8,0);b=_i64Add(b,tempRet0,20*C&-1,0);b=_i64Add(b,tempRet0,12,0);J=tempRet0;E=f+480|0;HEAP32[(E|0)>>2]=b;HEAP32[(E+4|0)>>2]=J;b=326;break;case 326:b=327;break;case 327:b=328;break;case 328:t=__TIFFmalloc(q);b=0==(t|0)?329:
330;break;case 329:_TIFFErrorExt(HEAP32[(f+628|0)>>2],46016,32032,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=368;break;case 330:b=0!=(HEAP32[(f+12|0)>>2]&524288|0)?346:331;break;case 331:F=t;HEAP16[F>>1]=HEAP32[n>>2]&65535;b=0!=(HEAP32[(f+12|0)>>2]&128|0)?332:333;break;case 332:_TIFFSwabShort(F);b=333;break;case 333:F=F+2|0;G=p;r=0;b=334;break;case 334:b=r>>>0<HEAP32[n>>2]>>>0?335:343;break;case 335:HEAP16[F>>
1]=HEAP16[(G|0)>>1];b=0!=(HEAP32[(f+12|0)>>2]&128|0)?336:337;break;case 336:_TIFFSwabShort(F);b=337;break;case 337:F=F+2|0;HEAP16[F>>1]=HEAP16[(G+2|0)>>1];b=0!=(HEAP32[(f+12|0)>>2]&128|0)?338:339;break;case 338:_TIFFSwabShort(F);b=339;break;case 339:F=F+2|0;HEAP32[I>>2]=HEAP32[(G+8|0)>>2];__TIFFmemcpy(F,I,4);b=0!=(HEAP32[(f+12|0)>>2]&128|0)?340:341;break;case 340:_TIFFSwabLong(F);b=341;break;case 341:F=F+4|0;__TIFFmemcpy(F,G+16|0,4);F=F+4|0;G=G+24|0;b=342;break;case 342:r=r+1|0;b=334;break;case 343:HEAP32[I>>
2]=HEAP32[(f+24|0)>>2];b=0!=(HEAP32[(f+12|0)>>2]&128|0)?344:345;break;case 344:_TIFFSwabLong(I);b=345;break;case 345:__TIFFmemcpy(F,I,4);b=361;break;case 346:b=H=t;HEAP32[(b|0)>>2]=HEAP32[n>>2];HEAP32[(b+4|0)>>2]=0;b=0!=(HEAP32[(f+12|0)>>2]&128|0)?347:348;break;case 347:_TIFFSwabLong8(H);b=348;break;case 348:H=H+8|0;K=p;r=0;b=349;break;case 349:b=r>>>0<HEAP32[n>>2]>>>0?350:358;break;case 350:HEAP16[H>>1]=HEAP16[(K|0)>>1];b=0!=(HEAP32[(f+12|0)>>2]&128|0)?351:352;break;case 351:_TIFFSwabShort(H);b=
352;break;case 352:H=H+2|0;HEAP16[H>>1]=HEAP16[(K+2|0)>>1];b=0!=(HEAP32[(f+12|0)>>2]&128|0)?353:354;break;case 353:_TIFFSwabShort(H);b=354;break;case 354:H=H+2|0;__TIFFmemcpy(H,K+8|0,8);b=0!=(HEAP32[(f+12|0)>>2]&128|0)?355:356;break;case 355:_TIFFSwabLong8(H);b=356;break;case 356:H=H+8|0;__TIFFmemcpy(H,K+16|0,8);H=H+8|0;K=K+24|0;b=357;break;case 357:r=r+1|0;b=349;break;case 358:__TIFFmemcpy(H,f+24|0,8);b=0!=(HEAP32[(f+12|0)>>2]&128|0)?359:360;break;case 359:_TIFFSwabLong8(H);b=360;break;case 360:b=
361;break;case 361:__TIFFfree(p);p=0;b=f+16|0;b=FUNCTION_TABLE[HEAP32[(f+640|0)>>2]](HEAP32[(f+628|0)>>2],HEAP32[(b|0)>>2],HEAP32[(b+4|0)>>2],0);J=f+16|0;b=(b|0)==(HEAP32[(J|0)>>2]|0)&(tempRet0|0)==(HEAP32[(J+4|0)>>2]|0)?363:362;break;case 362:_TIFFErrorExt(HEAP32[(f+628|0)>>2],46016,31296,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=368;break;case 363:b=(FUNCTION_TABLE[HEAP32[(f+636|0)>>2]](HEAP32[(f+628|0)>>
2],t,q)|0)==(q|0)?365:364;break;case 364:_TIFFErrorExt(HEAP32[(f+628|0)>>2],46016,31296,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=368;break;case 365:__TIFFfree(t);b=0!=(h|0)?366:367;break;case 366:_TIFFFreeDirectory(f);b=f+12|0;HEAP32[b>>2]&=-9;b=f+12|0;HEAP32[b>>2]&=-2097153;FUNCTION_TABLE[HEAP32[(f+564|0)>>2]](f);_TIFFCreateDirectory(f);b=367;break;case 367:g=1;b=373;break;case 368:b=0!=(p|0)?369:370;break;
case 369:__TIFFfree(p);b=370;break;case 370:b=0!=(t|0)?371:372;break;case 371:__TIFFfree(t);b=372;break;case 372:g=0;b=373;break;case 373:return m=g,STACKTOP=e,m;default:assert(0,"bad label: "+b)}}
function _TIFFRewriteDirectory(m){var d=0,c=STACKTOP;STACKTOP=STACKTOP+56|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e,g=c,f=c+8,k=c+16,h=c+24,l=c+32,n,p=c+40,q=c+48;b=m;d=b+16|0;d=0==(HEAP32[(d|0)>>2]|0)&0==(HEAP32[(d+4|0)>>2]|0)?2:3;break;case 2:a=_TIFFWriteDirectory(b);d=49;break;case 3:d=0!=(HEAP32[(b+12|0)>>2]&524288|0)?25:4;break;case 4:d=b+16|0;d=(HEAP32[((b+424|0)+4|0)>>2]|0)==(HEAP32[(d|0)>>2]|0)&0==(HEAP32[(d+4|0)>>2]|0)?5:8;break;case 5:HEAP32[((b+424|0)+
4|0)>>2]=0;d=b+16|0;HEAP32[(d|0)>>2]=0;HEAP32[(d+4|0)>>2]=0;FUNCTION_TABLE[HEAP32[(b+640|0)>>2]](HEAP32[(b+628|0)>>2],4,0,0);d=4==(FUNCTION_TABLE[HEAP32[(b+636|0)>>2]](HEAP32[(b+628|0)>>2],(b+424|0)+4|0,4)|0)?7:6;break;case 6:_TIFFErrorExt(HEAP32[(b+628|0)>>2],HEAP32[(b|0)>>2],31232,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=49;break;case 7:d=24;break;case 8:e=HEAP32[((b+424|0)+4|0)>>2];d=9;break;case 9:d=
(FUNCTION_TABLE[HEAP32[(b+640|0)>>2]](HEAP32[(b+628|0)>>2],e,0,0)|0)==(e|0)&0==(tempRet0|0)?10:11;break;case 10:d=2==(FUNCTION_TABLE[HEAP32[(b+632|0)>>2]](HEAP32[(b+628|0)>>2],g,2)|0)?12:11;break;case 11:_TIFFErrorExt(HEAP32[(b+628|0)>>2],46208,40128,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=49;break;case 12:d=0!=(HEAP32[(b+12|0)>>2]&128|0)?13:14;break;case 13:_TIFFSwabShort(g);d=14;break;case 14:FUNCTION_TABLE[HEAP32[(b+
640|0)>>2]](HEAP32[(b+628|0)>>2],(e+2|0)+(12*(HEAP16[g>>1]&65535)&-1)|0,0,0);d=4==(FUNCTION_TABLE[HEAP32[(b+632|0)>>2]](HEAP32[(b+628|0)>>2],f,4)|0)?16:15;break;case 15:_TIFFErrorExt(HEAP32[(b+628|0)>>2],46208,33504,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=49;break;case 16:d=0!=(HEAP32[(b+12|0)>>2]&128|0)?17:18;break;case 17:_TIFFSwabLong(f);d=18;break;case 18:d=b+16|0;d=(HEAP32[f>>2]|0)==(HEAP32[(d|
0)>>2]|0)&0==(HEAP32[(d+4|0)>>2]|0)?19:22;break;case 19:HEAP32[k>>2]=0;FUNCTION_TABLE[HEAP32[(b+640|0)>>2]](HEAP32[(b+628|0)>>2],(e+2|0)+(12*(HEAP16[g>>1]&65535)&-1)|0,0,0);d=4==(FUNCTION_TABLE[HEAP32[(b+636|0)>>2]](HEAP32[(b+628|0)>>2],k,4)|0)?21:20;break;case 20:_TIFFErrorExt(HEAP32[(b+628|0)>>2],46208,30800,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=49;break;case 21:d=b+16|0;HEAP32[(d|0)>>2]=0;HEAP32[(d+
4|0)>>2]=0;d=23;break;case 22:e=HEAP32[f>>2];d=9;break;case 23:d=24;break;case 24:d=48;break;case 25:var d=(b+424|0)+8|0,t=b+16|0,d=(HEAP32[(d|0)>>2]|0)==(HEAP32[(t|0)>>2]|0)&(HEAP32[(d+4|0)>>2]|0)==(HEAP32[(t+4|0)>>2]|0)?26:29;break;case 26:d=(b+424|0)+8|0;HEAP32[(d|0)>>2]=0;HEAP32[(d+4|0)>>2]=0;d=b+16|0;HEAP32[(d|0)>>2]=0;HEAP32[(d+4|0)>>2]=0;FUNCTION_TABLE[HEAP32[(b+640|0)>>2]](HEAP32[(b+628|0)>>2],8,0,0);d=8==(FUNCTION_TABLE[HEAP32[(b+636|0)>>2]](HEAP32[(b+628|0)>>2],(b+424|0)+8|0,8)|0)?28:27;
break;case 27:_TIFFErrorExt(HEAP32[(b+628|0)>>2],HEAP32[(b|0)>>2],31232,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=49;break;case 28:d=47;break;case 29:d=(b+424|0)+8|0;t=HEAP32[(d+4|0)>>2];HEAP32[(h|0)>>2]=HEAP32[(d|0)>>2];HEAP32[(h+4|0)>>2]=t;d=30;break;case 30:d=(FUNCTION_TABLE[HEAP32[(b+640|0)>>2]](HEAP32[(b+628|0)>>2],HEAP32[(h|0)>>2],HEAP32[(h+4|0)>>2],0)|0)==(HEAP32[(h|0)>>2]|0)&(tempRet0|0)==(HEAP32[(h+
4|0)>>2]|0)?31:32;break;case 31:d=8==(FUNCTION_TABLE[HEAP32[(b+632|0)>>2]](HEAP32[(b+628|0)>>2],l,8)|0)?33:32;break;case 32:_TIFFErrorExt(HEAP32[(b+628|0)>>2],46208,40128,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=49;break;case 33:d=0!=(HEAP32[(b+12|0)>>2]&128|0)?34:35;break;case 34:_TIFFSwabLong8(l);d=35;break;case 35:d=HEAP32[(l+4|0)>>2];d=0<d>>>0|0==d>>>0&65535<HEAP32[(l|0)>>2]>>>0?36:37;break;case 36:_TIFFErrorExt(HEAP32[(b+
628|0)>>2],46208,28784,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=49;break;case 37:n=HEAP32[(l|0)>>2]&65535;var d=HEAP32[(b+640|0)>>2],t=HEAP32[(b+628|0)>>2],r=_i64Add(HEAP32[(h|0)>>2],HEAP32[(h+4|0)>>2],8,0),s=20*(n&65535)&-1,r=_i64Add(r,tempRet0,s,0>(s|0)?-1:0);FUNCTION_TABLE[d](t,r,tempRet0,0);d=8==(FUNCTION_TABLE[HEAP32[(b+632|0)>>2]](HEAP32[(b+628|0)>>2],p,8)|0)?39:38;break;case 38:_TIFFErrorExt(HEAP32[(b+
628|0)>>2],46208,33504,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=49;break;case 39:d=0!=(HEAP32[(b+12|0)>>2]&128|0)?40:41;break;case 40:_TIFFSwabLong8(p);d=41;break;case 41:d=b+16|0;d=(HEAP32[(p|0)>>2]|0)==(HEAP32[(d|0)>>2]|0)&(HEAP32[(p+4|0)>>2]|0)==(HEAP32[(d+4|0)>>2]|0)?42:45;break;case 42:HEAP32[(q|0)>>2]=0;HEAP32[(q+4|0)>>2]=0;d=HEAP32[(b+640|0)>>2];t=HEAP32[(b+628|0)>>2];r=_i64Add(HEAP32[(h|0)>>
2],HEAP32[(h+4|0)>>2],8,0);s=20*(n&65535)&-1;r=_i64Add(r,tempRet0,s,0>(s|0)?-1:0);FUNCTION_TABLE[d](t,r,tempRet0,0);d=8==(FUNCTION_TABLE[HEAP32[(b+636|0)>>2]](HEAP32[(b+628|0)>>2],q,8)|0)?44:43;break;case 43:_TIFFErrorExt(HEAP32[(b+628|0)>>2],46208,30800,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=49;break;case 44:d=b+16|0;HEAP32[(d|0)>>2]=0;HEAP32[(d+4|0)>>2]=0;d=46;break;case 45:d=HEAP32[(p+4|0)>>2];
HEAP32[(h|0)>>2]=HEAP32[(p|0)>>2];HEAP32[(h+4|0)>>2]=d;d=30;break;case 46:d=47;break;case 47:d=48;break;case 48:a=_TIFFWriteDirectory(b);d=49;break;case 49:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function __TIFFRewriteField(m,d,c,a,b){var e=0,g=STACKTOP;STACKTOP=STACKTOP+96|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var f,k,h,l,n,p,q=g,t,r=g+8,s=g+32,v=g+40,u=g+48,w=g+56,y,A=g+64,z,x,B=g+72,C=g+80,D,F,I=g+88;k=m;h=d;l=c;n=a;p=b;HEAP16[s>>1]=0;HEAP16[v>>1]=0;HEAP32[(u|0)>>2]=0;HEAP32[(u+4|0)>>2]=0;HEAP32[(w|0)>>2]=0;z=y=HEAP32[(w+4|0)>>2]=0;_TIFFFindField(k,h&65535,0);e=0!=(HEAP32[(k+12|0)>>2]&2048|0)?2:3;break;case 2:_TIFFErrorExt(HEAP32[(k+628|0)>>2],45120,27408,(tempInt=
STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));f=0;e=129;break;case 3:var G=k+16|0,e=0==(HEAP32[(G|0)>>2]|0)&0==(HEAP32[(G+4|0)>>2]|0)?4:5;break;case 4:_TIFFErrorExt(HEAP32[(k+628|0)>>2],45120,26224,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));f=0;e=129;break;case 5:var H=k+16|0,K=FUNCTION_TABLE[HEAP32[(k+640|0)>>2]](HEAP32[(k+628|0)>>
2],HEAP32[(H|0)>>2],HEAP32[(H+4|0)>>2],0),J=k+16|0,e=(K|0)==(HEAP32[(J|0)>>2]|0)&(tempRet0|0)==(HEAP32[(J+4|0)>>2]|0)?7:6;break;case 6:var E=HEAP32[(k|0)>>2];_TIFFErrorExt(HEAP32[(k+628|0)>>2],45120,25240,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=E,tempInt));f=0;e=129;break;case 7:var L=k+16|0,Q=HEAP32[(L+4|0)>>2];HEAP32[(A|0)>>2]=HEAP32[(L|0)>>2];HEAP32[(A+4|0)>>2]=Q;e=0!=(HEAP32[(k+12|0)>>2]&524288|0)?13:8;break;case 8:e=2==(FUNCTION_TABLE[HEAP32[(k+
632|0)>>2]](HEAP32[(k+628|0)>>2],q,2)|0)?10:9;break;case 9:var N=HEAP32[(k|0)>>2];_TIFFErrorExt(HEAP32[(k+628|0)>>2],45120,23856,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=N,tempInt));f=0;e=129;break;case 10:e=0!=(HEAP32[(k+12|0)>>2]&128|0)?11:12;break;case 11:_TIFFSwabShort(q);e=12;break;case 12:t=12;var P=_i64Add(HEAP32[(A|0)>>2],HEAP32[(A+4|0)>>2],2,0),W=tempRet0;HEAP32[(A|0)>>2]=P;HEAP32[(A+4|0)>>2]=W;e=18;break;case 13:e=8==(FUNCTION_TABLE[HEAP32[(k+
632|0)>>2]](HEAP32[(k+628|0)>>2],B,8)|0)?15:14;break;case 14:var O=HEAP32[(k|0)>>2];_TIFFErrorExt(HEAP32[(k+628|0)>>2],45120,23856,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=O,tempInt));f=0;e=129;break;case 15:e=0!=(HEAP32[(k+12|0)>>2]&128|0)?16:17;break;case 16:_TIFFSwabLong8(B);e=17;break;case 17:HEAP16[q>>1]=HEAP32[(B|0)>>2]&65535;t=20;var T=_i64Add(HEAP32[(A|0)>>2],HEAP32[(A+4|0)>>2],8,0),Y=tempRet0;HEAP32[(A|0)>>2]=T;HEAP32[(A+4|0)>>2]=Y;e=
18;break;case 18:e=19;break;case 19:e=0<(HEAP16[q>>1]&65535|0)?20:27;break;case 20:e=(FUNCTION_TABLE[HEAP32[(k+632|0)>>2]](HEAP32[(k+628|0)>>2],r|0,t)|0)==(t|0)?22:21;break;case 21:var S=HEAP32[(k|0)>>2];_TIFFErrorExt(HEAP32[(k+628|0)>>2],45120,23216,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=S,tempInt));f=0;e=129;break;case 22:var X=s,R=r|0;assert(!0);HEAP8[X]=HEAP8[R];HEAP8[X+1|0]=HEAP8[R+1|0];e=0!=(HEAP32[(k+12|0)>>2]&128|0)?23:24;break;case 23:_TIFFSwabShort(s);
e=24;break;case 24:e=(HEAP16[s>>1]&65535|0)==(h&65535|0)?25:26;break;case 25:e=27;break;case 26:var V=t,aa=_i64Add(HEAP32[(A|0)>>2],HEAP32[(A+4|0)>>2],V,0>(V|0)?-1:0),fa=tempRet0;HEAP32[(A|0)>>2]=aa;HEAP32[(A+4|0)>>2]=fa;e=19;break;case 27:e=(HEAP16[s>>1]&65535|0)!=(h&65535|0)?28:29;break;case 28:var Z=HEAP32[(k|0)>>2],ka=h&65535;_TIFFErrorExt(HEAP32[(k+628|0)>>2],45120,41904,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=Z,HEAP32[tempInt+8>>2]=ka,
tempInt));f=0;e=129;break;case 29:var M=v,ga=(r|0)+2|0;assert(!0);HEAP8[M]=HEAP8[ga];HEAP8[M+1|0]=HEAP8[ga+1|0];e=0!=(HEAP32[(k+12|0)>>2]&128|0)?30:31;break;case 30:_TIFFSwabShort(v);e=31;break;case 31:e=0!=(HEAP32[(k+12|0)>>2]&524288|0)?37:32;break;case 32:var na=C,ba=(r|0)+4|0;assert(!0);HEAP8[na]=HEAP8[ba];HEAP8[na+1|0]=HEAP8[ba+1|0];HEAP8[na+2|0]=HEAP8[ba+2|0];HEAP8[na+3|0]=HEAP8[ba+3|0];e=0!=(HEAP32[(k+12|0)>>2]&128|0)?33:34;break;case 33:_TIFFSwabLong(C);e=34;break;case 34:HEAP32[(u|0)>>2]=
HEAP32[C>>2];HEAP32[(u+4|0)>>2]=0;var ca=C,oa=(r|0)+8|0;assert(!0);HEAP8[ca]=HEAP8[oa];HEAP8[ca+1|0]=HEAP8[oa+1|0];HEAP8[ca+2|0]=HEAP8[oa+2|0];HEAP8[ca+3|0]=HEAP8[oa+3|0];e=0!=(HEAP32[(k+12|0)>>2]&128|0)?35:36;break;case 35:_TIFFSwabLong(C);e=36;break;case 36:HEAP32[(w|0)>>2]=HEAP32[C>>2];HEAP32[(w+4|0)>>2]=0;e=42;break;case 37:var va=u,pa=(r|0)+4|0;assert(!0);_memcpy(va,pa,8)|0;e=0!=(HEAP32[(k+12|0)>>2]&128|0)?38:39;break;case 38:_TIFFSwabLong8(u);e=39;break;case 39:var la=w,wa=(r|0)+12|0;assert(!0);
_memcpy(la,wa,8)|0;e=0!=(HEAP32[(k+12|0)>>2]&128|0)?40:41;break;case 40:_TIFFSwabLong8(w);e=41;break;case 41:e=42;break;case 42:e=8==(_TIFFDataWidth(l)|0)?43:54;break;case 43:e=0!=(HEAP32[(k+12|0)>>2]&524288|0)?54:44;break;case 44:e=16==(l|0)?45:46;break;case 45:x=4;e=53;break;case 46:e=17==(l|0)?47:48;break;case 47:x=9;e=52;break;case 48:e=18==(l|0)?49:50;break;case 49:x=13;e=51;break;case 50:x=l;e=51;break;case 51:e=52;break;case 52:e=53;break;case 53:e=55;break;case 54:x=l;e=55;break;case 55:var qa=
k,ea=n,xa=_TIFFDataWidth(x);z=__TIFFCheckMalloc(qa,ea,xa,41280);e=0!=(z|0)?57:56;break;case 56:f=0;e=129;break;case 57:e=(x|0)==(l|0)?58:59;break;case 58:var ja=z,da=p,Ga=n,$=_TIFFDataWidth(x),ma=Math.imul(Ga,$)|0;assert(0===ma%1);_memcpy(ja,da,ma)|0;e=81;break;case 59:e=9==(x|0)?60:68;break;case 60:e=17==(l|0)?61:68;break;case 61:D=0;e=62;break;case 62:e=(D|0)<(n|0)?63:67;break;case 63:HEAP32[(z+(D<<2)|0)>>2]=HEAP32[(p+(D<<3)|0)>>2];var ra=HEAP32[(z+(D<<2)|0)>>2],Aa=p+(D<<3)|0,e=(ra|0)!=(HEAP32[(Aa|
0)>>2]|0)|((0>(ra|0)?-1:0)|0)!=(HEAP32[(Aa+4|0)>>2]|0)?64:65;break;case 64:__TIFFfree(z);_TIFFErrorExt(HEAP32[(k+628|0)>>2],45120,40664,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));f=0;e=129;break;case 65:e=66;break;case 66:D=D+1|0;e=62;break;case 67:e=80;break;case 68:e=4==(x|0)?69:70;break;case 69:e=16==(l|0)?72:70;break;case 70:e=13==(x|0)?71:79;break;case 71:e=18==(l|0)?72:79;break;case 72:F=0;e=73;break;
case 73:e=(F|0)<(n|0)?74:78;break;case 74:HEAP32[(z+(F<<2)|0)>>2]=HEAP32[(p+(F<<3)|0)>>2];var Xa=p+(F<<3)|0,e=(HEAP32[(z+(F<<2)|0)>>2]|0)!=(HEAP32[(Xa|0)>>2]|0)|0!=(HEAP32[(Xa+4|0)>>2]|0)?75:76;break;case 75:__TIFFfree(z);_TIFFErrorExt(HEAP32[(k+628|0)>>2],45120,40664,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));f=0;e=129;break;case 76:e=77;break;case 77:F=F+1|0;e=73;break;case 78:e=79;break;case 79:e=80;break;
case 80:e=81;break;case 81:e=1<(_TIFFDataWidth(x)|0)?82:92;break;case 82:e=0!=(HEAP32[(k+12|0)>>2]&128|0)?83:92;break;case 83:e=2==(_TIFFDataWidth(x)|0)?84:85;break;case 84:_TIFFSwabArrayOfShort(z,n);e=91;break;case 85:e=4==(_TIFFDataWidth(x)|0)?86:87;break;case 86:_TIFFSwabArrayOfLong(z,n);e=90;break;case 87:e=8==(_TIFFDataWidth(x)|0)?88:89;break;case 88:_TIFFSwabArrayOfLong8(z,n);e=89;break;case 89:e=90;break;case 90:e=91;break;case 91:e=92;break;case 92:e=0!=(HEAP32[(k+12|0)>>2]&524288|0)?96:93;
break;case 93:var Da=_TIFFDataWidth(x),e=4>=(Math.imul(Da,n)|0)?94:95;break;case 94:var Ua=_i64Add(HEAP32[(A|0)>>2],HEAP32[(A+4|0)>>2],8,0),sa=tempRet0;HEAP32[(w|0)>>2]=Ua;HEAP32[(w+4|0)>>2]=sa;y=1;e=95;break;case 95:e=99;break;case 96:var ha=_TIFFDataWidth(x),e=8>=(Math.imul(ha,n)|0)?97:98;break;case 97:var U=_i64Add(HEAP32[(A|0)>>2],HEAP32[(A+4|0)>>2],12,0),gb=tempRet0;HEAP32[(w|0)>>2]=U;HEAP32[(w+4|0)>>2]=gb;y=1;e=98;break;case 98:e=99;break;case 99:var Ka=n,e=(HEAP32[(u|0)>>2]|0)==(Ka|0)&(HEAP32[(u+
4|0)>>2]|0)==((0>(Ka|0)?-1:0)|0)?100:106;break;case 100:e=(HEAP16[v>>1]&65535|0)==(x&65535|0)?101:106;break;case 101:e=(FUNCTION_TABLE[HEAP32[(k+640|0)>>2]](HEAP32[(k+628|0)>>2],HEAP32[(w|0)>>2],HEAP32[(w+4|0)>>2],0)|0)==(HEAP32[(w|0)>>2]|0)&(tempRet0|0)==(HEAP32[(w+4|0)>>2]|0)?103:102;break;case 102:__TIFFfree(z);var Ia=HEAP32[(k|0)>>2];_TIFFErrorExt(HEAP32[(k+628|0)>>2],45120,25240,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=Ia,tempInt));f=0;e=
129;break;case 103:var ia=HEAP32[(k+636|0)>>2],Ba=HEAP32[(k+628|0)>>2],Ra=z,Sa=n,ib=_TIFFDataWidth(x),ua=Math.imul(Sa,ib)|0,Va=FUNCTION_TABLE[ia](Ba,Ra,ua),eb=n,Ea=_TIFFDataWidth(x),Ya=Math.imul(eb,Ea)|0,e=(Va|0)==(Ya|0)?105:104;break;case 104:__TIFFfree(z);_TIFFErrorExt(HEAP32[(k+628|0)>>2],45120,30800,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));f=0;e=129;break;case 105:__TIFFfree(z);f=1;e=129;break;case 106:e=
0!=(y|0)?110:107;break;case 107:var La=FUNCTION_TABLE[HEAP32[(k+640|0)>>2]](HEAP32[(k+628|0)>>2],0,0,2),Ma=tempRet0;HEAP32[(w|0)>>2]=La;HEAP32[(w+4|0)>>2]=Ma;var Fa=HEAP32[(k+636|0)>>2],Na=HEAP32[(k+628|0)>>2],Oa=z,jb=n,Za=_TIFFDataWidth(x),Ca=Math.imul(jb,Za)|0,$a=FUNCTION_TABLE[Fa](Na,Oa,Ca),ab=n,Ha=_TIFFDataWidth(x),Wa=Math.imul(ab,Ha)|0,e=($a|0)==(Wa|0)?109:108;break;case 108:__TIFFfree(z);_TIFFErrorExt(HEAP32[(k+628|0)>>2],45120,30800,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+
7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));f=0;e=129;break;case 109:__TIFFfree(z);e=111;break;case 110:var bb=w,Pa=z,Ja=n,cb=_TIFFDataWidth(x),Qa=Math.imul(Ja,cb)|0;assert(0===Qa%1);_memcpy(bb,Pa,Qa)|0;e=111;break;case 111:HEAP16[v>>1]=x&65535;var fb=(r|0)+2|0,hb=v;assert(!0);HEAP8[fb]=HEAP8[hb];HEAP8[fb+1|0]=HEAP8[hb+1|0];e=0!=(HEAP32[(k+12|0)>>2]&128|0)?112:113;break;case 112:_TIFFSwabShort((r|0)+2|0);e=113;break;case 113:e=0!=(HEAP32[(k+12|0)>>2]&524288|0)?119:
114;break;case 114:HEAP32[I>>2]=HEAP32[(u|0)>>2];var ya=(r|0)+4|0,db=I;assert(!0);HEAP8[ya]=HEAP8[db];HEAP8[ya+1|0]=HEAP8[db+1|0];HEAP8[ya+2|0]=HEAP8[db+2|0];HEAP8[ya+3|0]=HEAP8[db+3|0];e=0!=(HEAP32[(k+12|0)>>2]&128|0)?115:116;break;case 115:_TIFFSwabLong((r|0)+4|0);e=116;break;case 116:HEAP32[I>>2]=HEAP32[(w|0)>>2];var Ta=(r|0)+8|0,kb=I;assert(!0);HEAP8[Ta]=HEAP8[kb];HEAP8[Ta+1|0]=HEAP8[kb+1|0];HEAP8[Ta+2|0]=HEAP8[kb+2|0];HEAP8[Ta+3|0]=HEAP8[kb+3|0];e=0!=(HEAP32[(k+12|0)>>2]&128|0)?117:118;break;
case 117:_TIFFSwabLong((r|0)+8|0);e=118;break;case 118:e=124;break;case 119:var lb=(r|0)+4|0,mb=u;assert(!0);_memcpy(lb,mb,8)|0;e=0!=(HEAP32[(k+12|0)>>2]&128|0)?120:121;break;case 120:_TIFFSwabLong8((r|0)+4|0);e=121;break;case 121:var ta=(r|0)+12|0,nb=w;assert(!0);_memcpy(ta,nb,8)|0;e=0!=(HEAP32[(k+12|0)>>2]&128|0)?122:123;break;case 122:_TIFFSwabLong8((r|0)+12|0);e=123;break;case 123:e=124;break;case 124:e=(FUNCTION_TABLE[HEAP32[(k+640|0)>>2]](HEAP32[(k+628|0)>>2],HEAP32[(A|0)>>2],HEAP32[(A+4|0)>>
2],0)|0)==(HEAP32[(A|0)>>2]|0)&(tempRet0|0)==(HEAP32[(A+4|0)>>2]|0)?126:125;break;case 125:var pb=HEAP32[(k|0)>>2];_TIFFErrorExt(HEAP32[(k+628|0)>>2],45120,25240,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=pb,tempInt));f=0;e=129;break;case 126:e=(FUNCTION_TABLE[HEAP32[(k+636|0)>>2]](HEAP32[(k+628|0)>>2],r|0,t)|0)==(t|0)?128:127;break;case 127:var rb=HEAP32[(k|0)>>2];_TIFFErrorExt(HEAP32[(k+628|0)>>2],45120,39976,(tempInt=STACKTOP,STACKTOP=STACKTOP+
8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=rb,tempInt));f=0;e=129;break;case 128:f=1;e=129;break;case 129:var qb=f;STACKTOP=g;return qb;default:assert(0,"bad label: "+e)}}
function _TIFFWriteDirectoryTagShortLong(m,d,c,a,b){for(var e=0,e=1;;)switch(e){case 1:var g,f,k,h,l,n;f=m;k=d;h=c;l=a;n=b;e=0==(h|0)?2:3;break;case 2:e=k;HEAP32[e>>2]=HEAP32[e>>2]+1|0;g=1;e=6;break;case 3:e=65535>=n>>>0?4:5;break;case 4:g=_TIFFWriteDirectoryTagCheckedShort(f,k,h,l,n&65535);e=6;break;case 5:g=_TIFFWriteDirectoryTagCheckedLong(f,k,h,l,n);e=6;break;case 6:return g;default:assert(0,"bad label: "+e)}}
function _TIFFWriteDirectoryTagRational(m,d,c,a,b){for(var e=0,e=1;;)switch(e){case 1:var g,f,k,h,l,n;f=m;k=d;h=c;l=a;n=b;e=0==(h|0)?2:3;break;case 2:e=k;HEAP32[e>>2]=HEAP32[e>>2]+1|0;g=1;e=4;break;case 3:g=_TIFFWriteDirectoryTagCheckedRational(f,k,h,l,n);e=4;break;case 4:return g;default:assert(0,"bad label: "+e)}}
function _TIFFWriteDirectoryTagLong(m,d,c,a,b){for(var e=0,e=1;;)switch(e){case 1:var g,f,k,h,l,n;f=m;k=d;h=c;l=a;n=b;e=0==(h|0)?2:3;break;case 2:e=k;HEAP32[e>>2]=HEAP32[e>>2]+1|0;g=1;e=4;break;case 3:g=_TIFFWriteDirectoryTagCheckedLong(f,k,h,l,n);e=4;break;case 4:return g;default:assert(0,"bad label: "+e)}}
function _TIFFWriteDirectoryTagShortPerSample(m,d,c,a,b){var e=0,g=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var f,k,h,l,n,p,q,t,r;k=m;h=d;l=c;n=a;p=b;e=0==(l|0)?2:3;break;case 2:e=h;HEAP32[e>>2]=HEAP32[e>>2]+1|0;f=1;e=10;break;case 3:q=__TIFFmalloc((HEAP16[((k+40|0)+58|0)>>1]&65535)<<1);e=0==(q|0)?4:5;break;case 4:_TIFFErrorExt(HEAP32[(k+628|0)>>2],45696,32032,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>
2]=0,tempInt));f=0;e=10;break;case 5:t=q;r=0;e=6;break;case 6:e=(r&65535|0)<(HEAP16[((k+40|0)+58|0)>>1]&65535|0)?7:9;break;case 7:HEAP16[t>>1]=p;e=8;break;case 8:t=t+2|0;r=r+1&65535;e=6;break;case 9:e=_TIFFWriteDirectoryTagCheckedShortArray(k,h,l,n,HEAP16[((k+40|0)+58|0)>>1]&65535,q);__TIFFfree(q);f=e;e=10;break;case 10:return m=f,STACKTOP=g,m;default:assert(0,"bad label: "+e)}}
function _TIFFWriteDirectoryTagShort(m,d,c,a,b){for(var e=0,e=1;;)switch(e){case 1:var g,f,k,h,l,n;f=m;k=d;h=c;l=a;n=b;e=0==(h|0)?2:3;break;case 2:e=k;HEAP32[e>>2]=HEAP32[e>>2]+1|0;g=1;e=4;break;case 3:g=_TIFFWriteDirectoryTagCheckedShort(f,k,h,l,n);e=4;break;case 4:return g;default:assert(0,"bad label: "+e)}}
function _TIFFWriteDirectoryTagShortArray(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p,q;k=m;h=d;l=c;n=a;p=b;q=e;g=0==(l|0)?2:3;break;case 2:g=h;HEAP32[g>>2]=HEAP32[g>>2]+1|0;f=1;g=4;break;case 3:f=_TIFFWriteDirectoryTagCheckedShortArray(k,h,l,n,p,q);g=4;break;case 4:return f;default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagLongLong8Array(m,d,c,a,b,e){var g=0,f=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(g=1;;)switch(g){case 1:var k,h,l,n,p,q,t,r,s,v,u;h=m;l=d;n=c;p=a;q=b;t=e;g=0==(n|0)?2:3;break;case 2:k=l;HEAP32[k>>2]=HEAP32[k>>2]+1|0;k=1;g=14;break;case 3:g=0!=(HEAP32[(h+12|0)>>2]&524288|0)?4:5;break;case 4:k=_TIFFWriteDirectoryTagCheckedLong8Array(h,l,n,p,q,t);g=14;break;case 5:v=__TIFFmalloc(q<<2);g=0==(v|0)?6:7;break;case 6:_TIFFErrorExt(HEAP32[(h+628|0)>>2],45776,32032,(tempInt=
STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));k=0;g=14;break;case 7:u=v;r=t;s=0;g=8;break;case 8:g=s>>>0<q>>>0?9:13;break;case 9:var g=r,w=HEAP32[(g+4|0)>>2],g=0<w>>>0|0==w>>>0&4294967295<HEAP32[(g|0)>>2]>>>0?10:11;break;case 10:_TIFFErrorExt(HEAP32[(h+628|0)>>2],45776,30720,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));__TIFFfree(v);
k=0;g=14;break;case 11:HEAP32[u>>2]=HEAP32[(r|0)>>2];g=12;break;case 12:r=r+8|0;s=s+1|0;u=u+4|0;g=8;break;case 13:k=_TIFFWriteDirectoryTagCheckedLongArray(h,l,n,p,q,v);__TIFFfree(v);g=14;break;case 14:return m=k,STACKTOP=f,m;default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagColormap(m,d,c){var a=0,b=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l;g=m;f=d;k=c;a=0==(k|0)?2:3;break;case 2:a=f;HEAP32[a>>2]=HEAP32[a>>2]+1|0;e=1;a=6;break;case 3:h=1<<(HEAP16[((g+40|0)+44|0)>>1]&65535);l=__TIFFmalloc((3*h&-1)<<1);a=0==(l|0)?4:5;break;case 4:_TIFFErrorExt(HEAP32[(g+628|0)>>2],45888,32032,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>
2]=0,tempInt));e=0;a=6;break;case 5:__TIFFmemcpy(l|0,HEAP32[((g+40|0)+100|0)>>2],h<<1);__TIFFmemcpy(l+(h<<1)|0,HEAP32[(((g+40|0)+100|0)+4|0)>>2],h<<1);__TIFFmemcpy(l+(h<<1<<1)|0,HEAP32[(((g+40|0)+100|0)+8|0)>>2],h<<1);a=_TIFFWriteDirectoryTagCheckedShortArray(g,f,k,320,3*h&-1,l);__TIFFfree(l);e=a;a=6;break;case 6:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFWriteDirectoryTagSampleformatArray(m,d,c,a,b,e){var g=0,f=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(g=1;;)switch(g){case 1:var k,h,l,n,p,q,t,r,s,v;h=m;l=d;n=c;p=a;q=b;t=e;r=__TIFFmalloc(q<<3);g=0==(r|0)?2:3;break;case 2:_TIFFErrorExt(HEAP32[(h+628|0)>>2],45736,32032,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));k=0;g=52;break;case 3:g=HEAP16[((h+40|0)+46|0)>>1]&65535;g=3==(g|0)?4:2==(g|0)?
12:1==(g|0)?31:50;break;case 4:g=32>=(HEAP16[((h+40|0)+44|0)>>1]&65535|0)?5:10;break;case 5:s=0;g=6;break;case 6:g=s>>>0<q>>>0?7:9;break;case 7:HEAPF32[(r+(s<<2)|0)>>2]=HEAPF64[(t+(s<<3)|0)>>3];g=8;break;case 8:s=s+1|0;g=6;break;case 9:v=_TIFFWriteDirectoryTagFloatArray(h,l,n,p,q,r);g=11;break;case 10:v=_TIFFWriteDirectoryTagDoubleArray(h,l,n,p,q,t);g=11;break;case 11:g=51;break;case 12:g=8>=(HEAP16[((h+40|0)+44|0)>>1]&65535|0)?13:18;break;case 13:s=0;g=14;break;case 14:g=s>>>0<q>>>0?15:17;break;
case 15:HEAP8[r+s|0]=HEAPF64[(t+(s<<3)|0)>>3]&-1;g=16;break;case 16:s=s+1|0;g=14;break;case 17:v=_TIFFWriteDirectoryTagSbyteArray(h,l,n,p,q,r);g=30;break;case 18:g=16>=(HEAP16[((h+40|0)+44|0)>>1]&65535|0)?19:24;break;case 19:s=0;g=20;break;case 20:g=s>>>0<q>>>0?21:23;break;case 21:HEAP16[(r+(s<<1)|0)>>1]=HEAPF64[(t+(s<<3)|0)>>3]&-1;g=22;break;case 22:s=s+1|0;g=20;break;case 23:v=_TIFFWriteDirectoryTagSshortArray(h,l,n,p,q,r);g=29;break;case 24:s=0;g=25;break;case 25:g=s>>>0<q>>>0?26:28;break;case 26:HEAP32[(r+
(s<<2)|0)>>2]=HEAPF64[(t+(s<<3)|0)>>3]&-1;g=27;break;case 27:s=s+1|0;g=25;break;case 28:v=_TIFFWriteDirectoryTagSlongArray(h,l,n,p,q,r);g=29;break;case 29:g=30;break;case 30:g=51;break;case 31:g=8>=(HEAP16[((h+40|0)+44|0)>>1]&65535|0)?32:37;break;case 32:s=0;g=33;break;case 33:g=s>>>0<q>>>0?34:36;break;case 34:g=HEAPF64[(t+(s<<3)|0)>>3];g=0<=g?Math.floor(g):Math.ceil(g);HEAP8[r+s|0]=g;g=35;break;case 35:s=s+1|0;g=33;break;case 36:v=_TIFFWriteDirectoryTagByteArray(h,l,n,p,q,r);g=49;break;case 37:g=
16>=(HEAP16[((h+40|0)+44|0)>>1]&65535|0)?38:43;break;case 38:s=0;g=39;break;case 39:g=s>>>0<q>>>0?40:42;break;case 40:g=HEAPF64[(t+(s<<3)|0)>>3];g=0<=g?Math.floor(g):Math.ceil(g);HEAP16[(r+(s<<1)|0)>>1]=g;g=41;break;case 41:s=s+1|0;g=39;break;case 42:v=_TIFFWriteDirectoryTagShortArray(h,l,n,p,q,r);g=48;break;case 43:s=0;g=44;break;case 44:g=s>>>0<q>>>0?45:47;break;case 45:g=HEAPF64[(t+(s<<3)|0)>>3];g=0<=g?Math.floor(g):Math.ceil(g);HEAP32[(r+(s<<2)|0)>>2]=g;g=46;break;case 46:s=s+1|0;g=44;break;case 47:v=
_TIFFWriteDirectoryTagLongArray(h,l,n,p,q,r);g=48;break;case 48:g=49;break;case 49:g=51;break;case 50:v=0;g=51;break;case 51:__TIFFfree(r);k=v;g=52;break;case 52:return m=k,STACKTOP=f,m;default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagRationalArray(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p,q;k=m;h=d;l=c;n=a;p=b;q=e;g=0==(l|0)?2:3;break;case 2:g=h;HEAP32[g>>2]=HEAP32[g>>2]+1|0;f=1;g=4;break;case 3:f=_TIFFWriteDirectoryTagCheckedRationalArray(k,h,l,n,p,q);g=4;break;case 4:return f;default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagTransferfunction(m,d,c){var a=0,b=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l,n;g=m;f=d;k=c;a=0==(k|0)?2:3;break;case 2:e=f;HEAP32[e>>2]=HEAP32[e>>2]+1|0;e=1;a=22;break;case 3:h=1<<(HEAP16[((g+40|0)+44|0)>>1]&65535);l=((HEAP16[((g+40|0)+58|0)>>1]&65535)-(HEAP16[((g+40|0)+116|0)>>1]&65535)|0)&65535;a=3<(l&65535|0)?4:5;break;case 4:l=3;a=5;break;case 5:a=3==(l&65535|0)?6:9;break;case 6:a=0!=(__TIFFmemcmp(HEAP32[((g+40|0)+160|
0)>>2],HEAP32[(((g+40|0)+160|0)+8|0)>>2],h<<1)|0)?8:7;break;case 7:l=2;a=8;break;case 8:a=9;break;case 9:a=2==(l&65535|0)?10:13;break;case 10:a=0!=(__TIFFmemcmp(HEAP32[((g+40|0)+160|0)>>2],HEAP32[(((g+40|0)+160|0)+4|0)>>2],h<<1)|0)?12:11;break;case 11:l=1;a=12;break;case 12:a=13;break;case 13:a=0==(l&65535|0)?14:15;break;case 14:l=1;a=15;break;case 15:n=(Math.imul(l&65535,h)|0)<<1;n=__TIFFmalloc(n);a=0==(n|0)?16:17;break;case 16:_TIFFErrorExt(HEAP32[(g+628|0)>>2],45624,32032,(tempInt=STACKTOP,STACKTOP=
STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));e=0;a=22;break;case 17:__TIFFmemcpy(n|0,HEAP32[((g+40|0)+160|0)>>2],h<<1);a=1<(l&65535|0)?18:19;break;case 18:__TIFFmemcpy(n+(h<<1)|0,HEAP32[(((g+40|0)+160|0)+4|0)>>2],h<<1);a=19;break;case 19:a=2<(l&65535|0)?20:21;break;case 20:__TIFFmemcpy(n+(h<<1<<1)|0,HEAP32[(((g+40|0)+160|0)+8|0)>>2],h<<1);a=21;break;case 21:e=g;var a=f,p=k,q=Math.imul(l&65535,h)|0;e=_TIFFWriteDirectoryTagCheckedShortArray(e,
a,p,301,q,n);__TIFFfree(n);a=22;break;case 22:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}function _TIFFWriteDirectoryTagAscii(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p,q;k=m;h=d;l=c;n=a;p=b;q=e;g=0==(l|0)?2:3;break;case 2:g=h;HEAP32[g>>2]=HEAP32[g>>2]+1|0;f=1;g=4;break;case 3:f=_TIFFWriteDirectoryTagCheckedAscii(k,h,l,n,p,q);g=4;break;case 4:return f;default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagUndefinedArray(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p,q;k=m;h=d;l=c;n=a;p=b;q=e;g=0==(l|0)?2:3;break;case 2:g=h;HEAP32[g>>2]=HEAP32[g>>2]+1|0;f=1;g=4;break;case 3:f=_TIFFWriteDirectoryTagCheckedUndefinedArray(k,h,l,n,p,q);g=4;break;case 4:return f;default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagByteArray(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p,q;k=m;h=d;l=c;n=a;p=b;q=e;g=0==(l|0)?2:3;break;case 2:g=h;HEAP32[g>>2]=HEAP32[g>>2]+1|0;f=1;g=4;break;case 3:f=_TIFFWriteDirectoryTagCheckedByteArray(k,h,l,n,p,q);g=4;break;case 4:return f;default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagSbyteArray(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p,q;k=m;h=d;l=c;n=a;p=b;q=e;g=0==(l|0)?2:3;break;case 2:g=h;HEAP32[g>>2]=HEAP32[g>>2]+1|0;f=1;g=4;break;case 3:f=_TIFFWriteDirectoryTagCheckedSbyteArray(k,h,l,n,p,q);g=4;break;case 4:return f;default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagSshortArray(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p,q;k=m;h=d;l=c;n=a;p=b;q=e;g=0==(l|0)?2:3;break;case 2:g=h;HEAP32[g>>2]=HEAP32[g>>2]+1|0;f=1;g=4;break;case 3:f=_TIFFWriteDirectoryTagCheckedSshortArray(k,h,l,n,p,q);g=4;break;case 4:return f;default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagLongArray(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p,q;k=m;h=d;l=c;n=a;p=b;q=e;g=0==(l|0)?2:3;break;case 2:g=h;HEAP32[g>>2]=HEAP32[g>>2]+1|0;f=1;g=4;break;case 3:f=_TIFFWriteDirectoryTagCheckedLongArray(k,h,l,n,p,q);g=4;break;case 4:return f;default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagSlongArray(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p,q;k=m;h=d;l=c;n=a;p=b;q=e;g=0==(l|0)?2:3;break;case 2:g=h;HEAP32[g>>2]=HEAP32[g>>2]+1|0;f=1;g=4;break;case 3:f=_TIFFWriteDirectoryTagCheckedSlongArray(k,h,l,n,p,q);g=4;break;case 4:return f;default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagLong8Array(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p,q;k=m;h=d;l=c;n=a;p=b;q=e;g=0==(l|0)?2:3;break;case 2:g=h;HEAP32[g>>2]=HEAP32[g>>2]+1|0;f=1;g=4;break;case 3:f=_TIFFWriteDirectoryTagCheckedLong8Array(k,h,l,n,p,q);g=4;break;case 4:return f;default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagSlong8Array(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p,q;k=m;h=d;l=c;n=a;p=b;q=e;g=0==(l|0)?2:3;break;case 2:g=h;HEAP32[g>>2]=HEAP32[g>>2]+1|0;f=1;g=4;break;case 3:f=_TIFFWriteDirectoryTagCheckedSlong8Array(k,h,l,n,p,q);g=4;break;case 4:return f;default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagSrationalArray(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p,q;k=m;h=d;l=c;n=a;p=b;q=e;g=0==(l|0)?2:3;break;case 2:g=h;HEAP32[g>>2]=HEAP32[g>>2]+1|0;f=1;g=4;break;case 3:f=_TIFFWriteDirectoryTagCheckedSrationalArray(k,h,l,n,p,q);g=4;break;case 4:return f;default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagFloatArray(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p,q;k=m;h=d;l=c;n=a;p=b;q=e;g=0==(l|0)?2:3;break;case 2:g=h;HEAP32[g>>2]=HEAP32[g>>2]+1|0;f=1;g=4;break;case 3:f=_TIFFWriteDirectoryTagCheckedFloatArray(k,h,l,n,p,q);g=4;break;case 4:return f;default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagDoubleArray(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p,q;k=m;h=d;l=c;n=a;p=b;q=e;g=0==(l|0)?2:3;break;case 2:g=h;HEAP32[g>>2]=HEAP32[g>>2]+1|0;f=1;g=4;break;case 3:f=_TIFFWriteDirectoryTagCheckedDoubleArray(k,h,l,n,p,q);g=4;break;case 4:return f;default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagSubifd(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h=b,l,n,p,q,t;g=m;f=d;k=c;a=0==(HEAP16[((g+40|0)+144|0)>>1]&65535|0)?2:3;break;case 2:e=1;a=26;break;case 3:a=0==(k|0)?4:5;break;case 4:e=f;HEAP32[e>>2]=HEAP32[e>>2]+1|0;e=1;a=26;break;case 5:var a=g+464|0,r=HEAP32[(a+4|0)>>2];HEAP32[(h|0)>>2]=HEAP32[(a|0)>>2];HEAP32[(h+4|0)>>2]=r;a=0!=(HEAP32[(g+12|0)>>2]&524288|0)?19:6;break;case 6:n=__TIFFmalloc((HEAP16[((g+
40|0)+144|0)>>1]&65535)<<2);a=0==(n|0)?7:8;break;case 7:_TIFFErrorExt(HEAP32[(g+628|0)>>2],45664,32032,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));e=0;a=26;break;case 8:p=HEAP32[((g+40|0)+148|0)>>2];q=n;t=0;a=9;break;case 9:a=(t&65535|0)<(HEAP16[((g+40|0)+144|0)>>1]&65535|0)?10:18;break;case 10:a=0!=(p|0)?11:12;break;case 11:a=13;break;case 12:throw ___assert_func(37672,1868,43344,29192),"Reached an unreachable!";
case 13:a=p;r=HEAP32[(a+4|0)>>2];a=0>=r>>>0&(0>r>>>0|4294967295>=HEAP32[(a|0)>>2]>>>0)?14:15;break;case 14:a=16;break;case 15:throw ___assert_func(37672,1869,43344,28944),"Reached an unreachable!";case 16:a=p;p=a+8|0;a=HEAP32[(a|0)>>2];r=q;q=r+4|0;HEAP32[r>>2]=a;a=17;break;case 17:t=t+1&65535;a=9;break;case 18:l=_TIFFWriteDirectoryTagCheckedIfdArray(g,f,k,330,HEAP16[((g+40|0)+144|0)>>1]&65535,n);__TIFFfree(n);a=20;break;case 19:l=_TIFFWriteDirectoryTagCheckedIfd8Array(g,f,k,330,HEAP16[((g+40|0)+144|
0)>>1]&65535,HEAP32[((g+40|0)+148|0)>>2]);a=20;break;case 20:a=0!=(l|0)?22:21;break;case 21:e=0;a=26;break;case 22:a=g+12|0;HEAP32[a>>2]|=8192;HEAP16[(g+472|0)>>1]=HEAP16[((g+40|0)+144|0)>>1];a=1==(HEAP16[((g+40|0)+144|0)>>1]&65535|0)?23:24;break;case 23:a=g+480|0;HEAP32[(a|0)>>2]=0;HEAP32[(a+4|0)>>2]=0;a=25;break;case 24:a=HEAP32[(h+4|0)>>2];r=g+480|0;HEAP32[(r|0)>>2]=HEAP32[(h|0)>>2];HEAP32[(r+4|0)>>2]=a;a=25;break;case 25:e=1;a=26;break;case 26:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+
a)}}function _TIFFWriteDirectoryTagIfdArray(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p,q;k=m;h=d;l=c;n=a;p=b;q=e;g=0==(l|0)?2:3;break;case 2:g=h;HEAP32[g>>2]=HEAP32[g>>2]+1|0;f=1;g=4;break;case 3:f=_TIFFWriteDirectoryTagCheckedIfdArray(k,h,l,n,p,q);g=4;break;case 4:return f;default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagIfdIfd8Array(m,d,c,a,b,e){var g=0,f=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(g=1;;)switch(g){case 1:var k,h,l,n,p,q,t,r,s,v,u;h=m;l=d;n=c;p=a;q=b;t=e;g=0==(n|0)?2:3;break;case 2:k=l;HEAP32[k>>2]=HEAP32[k>>2]+1|0;k=1;g=14;break;case 3:g=0!=(HEAP32[(h+12|0)>>2]&524288|0)?4:5;break;case 4:k=_TIFFWriteDirectoryTagCheckedIfd8Array(h,l,n,p,q,t);g=14;break;case 5:v=__TIFFmalloc(q<<2);g=0==(v|0)?6:7;break;case 6:_TIFFErrorExt(HEAP32[(h+628|0)>>2],45816,32032,(tempInt=
STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));k=0;g=14;break;case 7:u=v;r=t;s=0;g=8;break;case 8:g=s>>>0<q>>>0?9:13;break;case 9:var g=r,w=HEAP32[(g+4|0)>>2],g=0<w>>>0|0==w>>>0&4294967295<HEAP32[(g|0)>>2]>>>0?10:11;break;case 10:_TIFFErrorExt(HEAP32[(h+628|0)>>2],45816,30720,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));__TIFFfree(v);
k=0;g=14;break;case 11:HEAP32[u>>2]=HEAP32[(r|0)>>2];g=12;break;case 12:r=r+8|0;s=s+1|0;u=u+4|0;g=8;break;case 13:k=_TIFFWriteDirectoryTagCheckedIfdArray(h,l,n,p,q,v);__TIFFfree(v);g=14;break;case 14:return m=k,STACKTOP=f,m;default:assert(0,"bad label: "+g)}}
function _TIFFLinkDirectory(m){var d=0,c=STACKTOP;STACKTOP=STACKTOP+72|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e=c,g=c+8,f=c+16,k,h=c+24,l=c+32,n=c+40,p=c+48,q=c+56,t,r=c+64;b=m;var d=FUNCTION_TABLE[HEAP32[(b+640|0)>>2]](HEAP32[(b+628|0)>>2],0,0,2),d=_i64Add(d,tempRet0,1,0),s=tempRet0&-1,v=b+16|0;HEAP32[(v|0)>>2]=d&-2;HEAP32[(v+4|0)>>2]=s;d=0!=(HEAP32[(b+12|0)>>2]&8192|0)?2:19;break;case 2:d=0!=(HEAP32[(b+12|0)>>2]&524288|0)?11:3;break;case 3:HEAP32[e>>2]=HEAP32[(b+
16|0)>>2];d=0!=(HEAP32[(b+12|0)>>2]&128|0)?4:5;break;case 4:_TIFFSwabLong(e);d=5;break;case 5:d=b+480|0;FUNCTION_TABLE[HEAP32[(b+640|0)>>2]](HEAP32[(b+628|0)>>2],HEAP32[(d|0)>>2],HEAP32[(d+4|0)>>2],0);d=4==(FUNCTION_TABLE[HEAP32[(b+636|0)>>2]](HEAP32[(b+628|0)>>2],e,4)|0)?7:6;break;case 6:_TIFFErrorExt(HEAP32[(b+628|0)>>2],46632,31136,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=67;break;case 7:d=b+472|
0;s=HEAP16[d>>1]-1&65535;HEAP16[d>>1]=s;d=0!=s<<16>>16?8:9;break;case 8:d=b+480|0;s=_i64Add(HEAP32[(d|0)>>2],HEAP32[(d+4|0)>>2],4,0);v=tempRet0;HEAP32[(d|0)>>2]=s;HEAP32[(d+4|0)>>2]=v;d=10;break;case 9:d=b+12|0;HEAP32[d>>2]&=-8193;d=10;break;case 10:a=1;d=67;break;case 11:d=b+16|0;s=HEAP32[(d+4|0)>>2];HEAP32[(g|0)>>2]=HEAP32[(d|0)>>2];HEAP32[(g+4|0)>>2]=s;d=0!=(HEAP32[(b+12|0)>>2]&128|0)?12:13;break;case 12:_TIFFSwabLong8(g);d=13;break;case 13:d=b+480|0;FUNCTION_TABLE[HEAP32[(b+640|0)>>2]](HEAP32[(b+
628|0)>>2],HEAP32[(d|0)>>2],HEAP32[(d+4|0)>>2],0);d=8==(FUNCTION_TABLE[HEAP32[(b+636|0)>>2]](HEAP32[(b+628|0)>>2],g,8)|0)?15:14;break;case 14:_TIFFErrorExt(HEAP32[(b+628|0)>>2],46632,31136,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=67;break;case 15:d=b+472|0;s=HEAP16[d>>1]-1&65535;HEAP16[d>>1]=s;d=0!=s<<16>>16?16:17;break;case 16:d=b+480|0;s=_i64Add(HEAP32[(d|0)>>2],HEAP32[(d+4|0)>>2],8,0);v=tempRet0;
HEAP32[(d|0)>>2]=s;HEAP32[(d+4|0)>>2]=v;d=18;break;case 17:d=b+12|0;HEAP32[d>>2]&=-8193;d=18;break;case 18:a=1;d=67;break;case 19:d=0!=(HEAP32[(b+12|0)>>2]&524288|0)?42:20;break;case 20:HEAP32[f>>2]=HEAP32[(b+16|0)>>2];d=0!=(HEAP32[(b+12|0)>>2]&128|0)?21:22;break;case 21:_TIFFSwabLong(f);d=22;break;case 22:d=0==(HEAP32[((b+424|0)+4|0)>>2]|0)?23:26;break;case 23:HEAP32[((b+424|0)+4|0)>>2]=HEAP32[(b+16|0)>>2];FUNCTION_TABLE[HEAP32[(b+640|0)>>2]](HEAP32[(b+628|0)>>2],4,0,0);d=4==(FUNCTION_TABLE[HEAP32[(b+
636|0)>>2]](HEAP32[(b+628|0)>>2],f,4)|0)?25:24;break;case 24:_TIFFErrorExt(HEAP32[(b+628|0)>>2],HEAP32[(b|0)>>2],30920,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=67;break;case 25:a=1;d=67;break;case 26:k=HEAP32[((b+424|0)+4|0)>>2];d=27;break;case 27:d=(FUNCTION_TABLE[HEAP32[(b+640|0)>>2]](HEAP32[(b+628|0)>>2],k,0,0)|0)==(k|0)&0==(tempRet0|0)?28:29;break;case 28:d=2==(FUNCTION_TABLE[HEAP32[(b+632|0)>>2]](HEAP32[(b+
628|0)>>2],h,2)|0)?30:29;break;case 29:_TIFFErrorExt(HEAP32[(b+628|0)>>2],46632,40128,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=67;break;case 30:d=0!=(HEAP32[(b+12|0)>>2]&128|0)?31:32;break;case 31:_TIFFSwabShort(h);d=32;break;case 32:FUNCTION_TABLE[HEAP32[(b+640|0)>>2]](HEAP32[(b+628|0)>>2],(k+2|0)+(12*(HEAP16[h>>1]&65535)&-1)|0,0,0);d=4==(FUNCTION_TABLE[HEAP32[(b+632|0)>>2]](HEAP32[(b+628|0)>>2],l,
4)|0)?34:33;break;case 33:_TIFFErrorExt(HEAP32[(b+628|0)>>2],46632,33504,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=67;break;case 34:d=0!=(HEAP32[(b+12|0)>>2]&128|0)?35:36;break;case 35:_TIFFSwabLong(l);d=36;break;case 36:d=0==(HEAP32[l>>2]|0)?37:40;break;case 37:FUNCTION_TABLE[HEAP32[(b+640|0)>>2]](HEAP32[(b+628|0)>>2],(k+2|0)+(12*(HEAP16[h>>1]&65535)&-1)|0,0,0);d=4==(FUNCTION_TABLE[HEAP32[(b+636|0)>>
2]](HEAP32[(b+628|0)>>2],f,4)|0)?39:38;break;case 38:_TIFFErrorExt(HEAP32[(b+628|0)>>2],46632,30800,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=67;break;case 39:d=41;break;case 40:k=HEAP32[l>>2];d=27;break;case 41:d=66;break;case 42:d=b+16|0;s=HEAP32[(d+4|0)>>2];HEAP32[(n|0)>>2]=HEAP32[(d|0)>>2];HEAP32[(n+4|0)>>2]=s;d=0!=(HEAP32[(b+12|0)>>2]&128|0)?43:44;break;case 43:_TIFFSwabLong8(n);d=44;break;case 44:d=
(b+424|0)+8|0;d=0==(HEAP32[(d|0)>>2]|0)&0==(HEAP32[(d+4|0)>>2]|0)?45:48;break;case 45:d=b+16|0;s=HEAP32[(d+4|0)>>2];v=(b+424|0)+8|0;HEAP32[(v|0)>>2]=HEAP32[(d|0)>>2];HEAP32[(v+4|0)>>2]=s;FUNCTION_TABLE[HEAP32[(b+640|0)>>2]](HEAP32[(b+628|0)>>2],8,0,0);d=8==(FUNCTION_TABLE[HEAP32[(b+636|0)>>2]](HEAP32[(b+628|0)>>2],n,8)|0)?47:46;break;case 46:_TIFFErrorExt(HEAP32[(b+628|0)>>2],HEAP32[(b|0)>>2],30920,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|
0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=67;break;case 47:a=1;d=67;break;case 48:d=(b+424|0)+8|0;s=HEAP32[(d+4|0)>>2];HEAP32[(p|0)>>2]=HEAP32[(d|0)>>2];HEAP32[(p+4|0)>>2]=s;d=49;break;case 49:d=(FUNCTION_TABLE[HEAP32[(b+640|0)>>2]](HEAP32[(b+628|0)>>2],HEAP32[(p|0)>>2],HEAP32[(p+4|0)>>2],0)|0)==(HEAP32[(p|0)>>2]|0)&(tempRet0|0)==(HEAP32[(p+4|0)>>2]|0)?50:51;break;case 50:d=8==(FUNCTION_TABLE[HEAP32[(b+632|0)>>2]](HEAP32[(b+628|0)>>2],q,8)|0)?52:51;break;case 51:_TIFFErrorExt(HEAP32[(b+628|0)>>2],46632,
40128,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=67;break;case 52:d=0!=(HEAP32[(b+12|0)>>2]&128|0)?53:54;break;case 53:_TIFFSwabLong8(q);d=54;break;case 54:d=HEAP32[(q+4|0)>>2];d=0<d>>>0|0==d>>>0&65535<HEAP32[(q|0)>>2]>>>0?55:56;break;case 55:_TIFFErrorExt(HEAP32[(b+628|0)>>2],46632,28784,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>
2]=0,tempInt));a=0;d=67;break;case 56:t=HEAP32[(q|0)>>2]&65535;var d=HEAP32[(b+640|0)>>2],s=HEAP32[(b+628|0)>>2],v=_i64Add(HEAP32[(p|0)>>2],HEAP32[(p+4|0)>>2],8,0),u=20*(t&65535)&-1,v=_i64Add(v,tempRet0,u,0>(u|0)?-1:0);FUNCTION_TABLE[d](s,v,tempRet0,0);d=8==(FUNCTION_TABLE[HEAP32[(b+632|0)>>2]](HEAP32[(b+628|0)>>2],r,8)|0)?58:57;break;case 57:_TIFFErrorExt(HEAP32[(b+628|0)>>2],46632,33504,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>
2]=0,tempInt));a=0;d=67;break;case 58:d=0!=(HEAP32[(b+12|0)>>2]&128|0)?59:60;break;case 59:_TIFFSwabLong8(r);d=60;break;case 60:d=0==(HEAP32[(r|0)>>2]|0)&0==(HEAP32[(r+4|0)>>2]|0)?61:64;break;case 61:d=HEAP32[(b+640|0)>>2];s=HEAP32[(b+628|0)>>2];v=_i64Add(HEAP32[(p|0)>>2],HEAP32[(p+4|0)>>2],8,0);u=20*(t&65535)&-1;v=_i64Add(v,tempRet0,u,0>(u|0)?-1:0);FUNCTION_TABLE[d](s,v,tempRet0,0);d=8==(FUNCTION_TABLE[HEAP32[(b+636|0)>>2]](HEAP32[(b+628|0)>>2],n,8)|0)?63:62;break;case 62:_TIFFErrorExt(HEAP32[(b+
628|0)>>2],46632,30800,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=67;break;case 63:d=65;break;case 64:d=HEAP32[(r+4|0)>>2];HEAP32[(p|0)>>2]=HEAP32[(r|0)>>2];HEAP32[(p+4|0)>>2]=d;d=49;break;case 65:d=66;break;case 66:a=1;d=67;break;case 67:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _TIFFWriteDirectoryTagCheckedIfd8Array(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p;f=m;k=d;h=c;l=a;n=b;p=e;g=536870912>n>>>0?2:3;break;case 2:g=4;break;case 3:throw ___assert_func(37672,2285,43728,29624),"Reached an unreachable!";case 4:g=0!=(HEAP32[(f+12|0)>>2]&524288|0)?5:6;break;case 5:g=7;break;case 6:throw ___assert_func(37672,2287,43728,29424),"Reached an unreachable!";case 7:g=0!=(HEAP32[(f+12|0)>>2]&128|0)?8:9;break;case 8:_TIFFSwabArrayOfLong8(p,n);g=9;break;
case 9:return _TIFFWriteDirectoryTagData(f,k,h,l,18,n,n<<3,p);default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagCheckedIfdArray(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p;f=m;k=d;h=c;l=a;n=b;p=e;g=1073741824>n>>>0?2:3;break;case 2:g=4;break;case 3:throw ___assert_func(37672,2275,43688,30512),"Reached an unreachable!";case 4:g=0!=(HEAP32[(f+12|0)>>2]&128|0)?5:6;break;case 5:_TIFFSwabArrayOfLong(p,n);g=6;break;case 6:return _TIFFWriteDirectoryTagData(f,k,h,l,13,n,n<<2,p);default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagCheckedSrationalArray(m,d,c,a,b,e){var g=0,f=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(g=1;;)switch(g){case 1:var k,h,l,n,p,q,t,r,s,v,u;h=m;l=d;n=c;p=a;q=b;t=e;r=__TIFFmalloc(q<<1<<2);g=0==(r|0)?2:3;break;case 2:_TIFFErrorExt(HEAP32[(h+628|0)>>2],45920,32032,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));k=0;g=25;break;case 3:s=t;v=r;u=0;g=4;break;case 4:g=u>>>0<q>>>0?5:22;
break;case 5:g=0>HEAPF32[s>>2]?6:13;break;case 6:g=HEAPF32[s>>2]==(HEAPF32[s>>2]&-1|0)?7:8;break;case 7:HEAP32[(v|0)>>2]=HEAPF32[s>>2]&-1;HEAP32[(v+4|0)>>2]=1;g=12;break;case 8:g=-1<HEAPF32[s>>2]?9:10;break;case 9:HEAP32[(v|0)>>2]=-(2147483648*-HEAPF32[s>>2]&-1)|0;HEAP32[(v+4|0)>>2]=2147483647;g=11;break;case 10:HEAP32[(v|0)>>2]=-2147483647;HEAP32[(v+4|0)>>2]=2147483648/-HEAPF32[s>>2]&-1;g=11;break;case 11:g=12;break;case 12:g=20;break;case 13:g=HEAPF32[s>>2]==(HEAPF32[s>>2]&-1|0)?14:15;break;case 14:HEAP32[(v|
0)>>2]=HEAPF32[s>>2]&-1;HEAP32[(v+4|0)>>2]=1;g=19;break;case 15:g=1>HEAPF32[s>>2]?16:17;break;case 16:HEAP32[(v|0)>>2]=2147483648*HEAPF32[s>>2]&-1;HEAP32[(v+4|0)>>2]=2147483647;g=18;break;case 17:HEAP32[(v|0)>>2]=2147483647;HEAP32[(v+4|0)>>2]=2147483648/HEAPF32[s>>2]&-1;g=18;break;case 18:g=19;break;case 19:g=20;break;case 20:g=21;break;case 21:s=s+4|0;v=v+8|0;u=u+1|0;g=4;break;case 22:g=0!=(HEAP32[(h+12|0)>>2]&128|0)?23:24;break;case 23:_TIFFSwabArrayOfLong(r,q<<1);g=24;break;case 24:g=_TIFFWriteDirectoryTagData(h,
l,n,p,10,q,q<<3,r|0);__TIFFfree(r);k=g;g=25;break;case 25:return m=k,STACKTOP=f,m;default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagData(m,d,c,a,b,e,g,f){var k=0,h=STACKTOP;STACKTOP=STACKTOP+24|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(k=1;;)switch(k){case 1:var l,n,p,q,t,r,s,v,u,w,y,A=h,z=h+8,x=h+16;n=m;p=d;q=c;t=a;r=b;s=e;v=g;u=f;w=0;k=2;break;case 2:k=w>>>0<HEAP32[p>>2]>>>0?3:9;break;case 3:k=(HEAP16[(q+(24*w&-1)|0)>>1]&65535|0)!=(t&65535|0)?4:5;break;case 4:k=6;break;case 5:throw ___assert_func(37672,2301,43376,30248),"Reached an unreachable!";case 6:k=(HEAP16[(q+(24*w&-1)|0)>>1]&65535|0)>(t&
65535|0)?7:8;break;case 7:k=9;break;case 8:w=w+1|0;k=2;break;case 9:k=w>>>0<HEAP32[p>>2]>>>0?10:15;break;case 10:y=HEAP32[p>>2];k=11;break;case 11:k=y>>>0>w>>>0?12:14;break;case 12:var k=q+(24*y&-1)|0,B=q+(24*(y-1|0)&-1)|0;assert(!0);HEAP32[k>>2]=HEAP32[B>>2];HEAP32[k+4>>2]=HEAP32[B+4>>2];HEAP32[k+8>>2]=HEAP32[B+8>>2];HEAP32[k+12>>2]=HEAP32[B+12>>2];HEAP32[k+16>>2]=HEAP32[B+16>>2];HEAP32[k+20>>2]=HEAP32[B+20>>2];k=13;break;case 13:y=y-1|0;k=11;break;case 14:k=15;break;case 15:HEAP16[(q+(24*w&-1)|
0)>>1]=t;HEAP16[((q+(24*w&-1)|0)+2|0)>>1]=r;k=(q+(24*w&-1)|0)+8|0;HEAP32[(k|0)>>2]=s;HEAP32[(k+4|0)>>2]=0;k=(q+(24*w&-1)|0)+16|0;HEAP32[(k|0)>>2]=0;HEAP32[(k+4|0)>>2]=0;k=v>>>0<=(0!=(HEAP32[(n+12|0)>>2]&524288|0)?8:4)>>>0?16:17;break;case 16:__TIFFmemcpy((q+(24*w&-1)|0)+16|0,u,v);k=39;break;case 17:k=n+464|0;B=HEAP32[(k+4|0)>>2];HEAP32[(A|0)>>2]=HEAP32[(k|0)>>2];HEAP32[(A+4|0)>>2]=B;k=_i64Add(HEAP32[(A|0)>>2],HEAP32[(A+4|0)>>2],v,0);B=tempRet0;HEAP32[(z|0)>>2]=k;HEAP32[(z+4|0)>>2]=B;k=0!=(HEAP32[(n+
12|0)>>2]&524288|0)?19:18;break;case 18:HEAP32[(z|0)>>2]=HEAP32[(z|0)>>2];HEAP32[(z+4|0)>>2]=0;k=19;break;case 19:k=HEAP32[(z+4|0)>>2];B=HEAP32[(A+4|0)>>2];k=k>>>0<B>>>0|k>>>0==B>>>0&HEAP32[(z|0)>>2]>>>0<HEAP32[(A|0)>>2]>>>0?21:20;break;case 20:k=HEAP32[(z+4|0)>>2];k=0>k>>>0|0==k>>>0&HEAP32[(z|0)>>2]>>>0<v>>>0?21:22;break;case 21:_TIFFErrorExt(HEAP32[(n+628|0)>>2],45856,31752,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=
0,tempInt));l=0;k=40;break;case 22:k=(FUNCTION_TABLE[HEAP32[(n+640|0)>>2]](HEAP32[(n+628|0)>>2],HEAP32[(A|0)>>2],HEAP32[(A+4|0)>>2],0)|0)==(HEAP32[(A|0)>>2]|0)&(tempRet0|0)==(HEAP32[(A+4|0)>>2]|0)?24:23;break;case 23:_TIFFErrorExt(HEAP32[(n+628|0)>>2],45856,3E4,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));l=0;k=40;break;case 24:k=2147483648>v>>>0?25:26;break;case 25:k=27;break;case 26:throw ___assert_func(37672,
2335,43376,29872),"Reached an unreachable!";case 27:k=(FUNCTION_TABLE[HEAP32[(n+636|0)>>2]](HEAP32[(n+628|0)>>2],u,v)|0)==(v|0)?29:28;break;case 28:_TIFFErrorExt(HEAP32[(n+628|0)>>2],45856,3E4,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));l=0;k=40;break;case 29:k=HEAP32[(z+4|0)>>2];B=n+464|0;HEAP32[(B|0)>>2]=HEAP32[(z|0)>>2];HEAP32[(B+4|0)>>2]=k;k=n+464|0;k=0!=(HEAP32[(k|0)>>2]&1|0)|0!=(HEAP32[(k+4|0)>>2]&0|0)?
30:31;break;case 30:var k=n+464|0,B=_i64Add(HEAP32[(k|0)>>2],HEAP32[(k+4|0)>>2],1,0),C=tempRet0;HEAP32[(k|0)>>2]=B;HEAP32[(k+4|0)>>2]=C;k=31;break;case 31:k=0!=(HEAP32[(n+12|0)>>2]&524288|0)?35:32;break;case 32:HEAP32[x>>2]=HEAP32[(A|0)>>2];k=0!=(HEAP32[(n+12|0)>>2]&128|0)?33:34;break;case 33:_TIFFSwabLong(x);k=34;break;case 34:__TIFFmemcpy((q+(24*w&-1)|0)+16|0,x,4);k=38;break;case 35:k=HEAP32[(A+4|0)>>2];B=(q+(24*w&-1)|0)+16|0;HEAP32[(B|0)>>2]=HEAP32[(A|0)>>2];HEAP32[(B+4|0)>>2]=k;k=0!=(HEAP32[(n+
12|0)>>2]&128|0)?36:37;break;case 36:_TIFFSwabLong8((q+(24*w&-1)|0)+16|0);k=37;break;case 37:k=38;break;case 38:k=39;break;case 39:l=p;HEAP32[l>>2]=HEAP32[l>>2]+1|0;l=1;k=40;break;case 40:return m=l,STACKTOP=h,m;default:assert(0,"bad label: "+k)}}
function _TIFFWriteDirectoryTagCheckedDoubleArray(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p;f=m;k=d;h=c;l=a;n=b;p=e;g=536870912>n>>>0?2:3;break;case 2:g=4;break;case 3:throw ___assert_func(37672,2264,43808,29624),"Reached an unreachable!";case 4:g=0!=(HEAP32[(f+12|0)>>2]&128|0)?5:6;break;case 5:_TIFFSwabArrayOfDouble(p,n);g=6;break;case 6:return _TIFFWriteDirectoryTagData(f,k,h,l,12,n,n<<3,p);default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagCheckedFloatArray(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p;f=m;k=d;h=c;l=a;n=b;p=e;g=1073741824>n>>>0?2:3;break;case 2:g=4;break;case 3:throw ___assert_func(37672,2239,43768,30512),"Reached an unreachable!";case 4:g=0!=(HEAP32[(f+12|0)>>2]&128|0)?5:6;break;case 5:_TIFFSwabArrayOfFloat(p,n);g=6;break;case 6:return _TIFFWriteDirectoryTagData(f,k,h,l,11,n,n<<2,p);default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagCheckedSlong8Array(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p;f=m;k=d;h=c;l=a;n=b;p=e;g=536870912>n>>>0?2:3;break;case 2:g=4;break;case 3:throw ___assert_func(37672,2072,43488,29624),"Reached an unreachable!";case 4:g=0!=(HEAP32[(f+12|0)>>2]&524288|0)?5:6;break;case 5:g=7;break;case 6:throw ___assert_func(37672,2074,43488,29424),"Reached an unreachable!";case 7:g=0!=(HEAP32[(f+12|0)>>2]&128|0)?8:9;break;case 8:_TIFFSwabArrayOfLong8(p,n);g=9;break;
case 9:return _TIFFWriteDirectoryTagData(f,k,h,l,17,n,n<<3,p);default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagCheckedLong8Array(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p;f=m;k=d;h=c;l=a;n=b;p=e;g=536870912>n>>>0?2:3;break;case 2:g=4;break;case 3:throw ___assert_func(37672,2047,43648,29624),"Reached an unreachable!";case 4:g=0!=(HEAP32[(f+12|0)>>2]&524288|0)?5:6;break;case 5:g=7;break;case 6:throw ___assert_func(37672,2049,43648,29424),"Reached an unreachable!";case 7:g=0!=(HEAP32[(f+12|0)>>2]&128|0)?8:9;break;case 8:_TIFFSwabArrayOfLong8(p,n);g=9;break;
case 9:return _TIFFWriteDirectoryTagData(f,k,h,l,16,n,n<<3,p);default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagCheckedSlongArray(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p;f=m;k=d;h=c;l=a;n=b;p=e;g=1073741824>n>>>0?2:3;break;case 2:g=4;break;case 3:throw ___assert_func(37672,2023,43448,30512),"Reached an unreachable!";case 4:g=0!=(HEAP32[(f+12|0)>>2]&128|0)?5:6;break;case 5:_TIFFSwabArrayOfLong(p,n);g=6;break;case 6:return _TIFFWriteDirectoryTagData(f,k,h,l,9,n,n<<2,p);default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagCheckedLongArray(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p;f=m;k=d;h=c;l=a;n=b;p=e;g=1073741824>n>>>0?2:3;break;case 2:g=4;break;case 3:throw ___assert_func(37672,2E3,43608,30512),"Reached an unreachable!";case 4:g=0!=(HEAP32[(f+12|0)>>2]&128|0)?5:6;break;case 5:_TIFFSwabArrayOfLong(p,n);g=6;break;case 6:return _TIFFWriteDirectoryTagData(f,k,h,l,4,n,n<<2,p);default:assert(0,"bad label: "+g)}}function _DumpFixupTags(m){return 1}
function _TIFFInitDumpMode(m,d){HEAP32[(m+504|0)>>2]=12;HEAP32[(m+532|0)>>2]=2;HEAP32[(m+540|0)>>2]=2;HEAP32[(m+548|0)>>2]=2;HEAP32[(m+536|0)>>2]=100;HEAP32[(m+544|0)>>2]=100;HEAP32[(m+552|0)>>2]=100;HEAP32[(m+560|0)>>2]=298;return 1}function _DumpModeSeek(m,d){var c=Math.imul(d,HEAP32[(m+580|0)>>2])|0,a=m+604|0;HEAP32[a>>2]=HEAP32[a>>2]+c|0;c=Math.imul(d,HEAP32[(m+580|0)>>2])|0;a=m+608|0;HEAP32[a>>2]=HEAP32[a>>2]-c|0;return 1}
function _TIFFWriteDirectoryTagCheckedSbyteArray(m,d,c,a,b,e){return _TIFFWriteDirectoryTagData(m,d,c,a,6,b,b,e)}function _TIFFWriteDirectoryTagCheckedByteArray(m,d,c,a,b,e){return _TIFFWriteDirectoryTagData(m,d,c,a,1,b,b,e)}function _TIFFWriteDirectoryTagCheckedUndefinedArray(m,d,c,a,b,e){return _TIFFWriteDirectoryTagData(m,d,c,a,7,b,b,e)}function _TIFFWriteDirectoryTagCheckedAscii(m,d,c,a,b,e){return _TIFFWriteDirectoryTagData(m,d,c,a,2,b,b,e)}
function _TIFFWriteDirectoryTagCheckedRationalArray(m,d,c,a,b,e){var g=0,f=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(g=1;;)switch(g){case 1:var k,h,l,n,p,q,t,r,s,v,u;h=m;l=d;n=c;p=a;q=b;t=e;r=__TIFFmalloc(q<<1<<2);g=0==(r|0)?2:3;break;case 2:_TIFFErrorExt(HEAP32[(h+628|0)>>2],45968,32032,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));k=0;g=19;break;case 3:s=t;v=r;u=0;g=4;break;case 4:g=u>>>0<q>>>0?5:16;
break;case 5:g=0>=HEAPF32[s>>2]?6:7;break;case 6:HEAP32[(v|0)>>2]=0;HEAP32[(v+4|0)>>2]=1;g=14;break;case 7:var g=HEAPF32[s>>2],w=HEAPF32[s>>2],w=(0<=w?Math.floor(w):Math.ceil(w))>>>0,g=g==w?8:9;break;case 8:g=HEAPF32[s>>2];g=0<=g?Math.floor(g):Math.ceil(g);HEAP32[(v|0)>>2]=g;HEAP32[(v+4|0)>>2]=1;g=13;break;case 9:g=1>HEAPF32[s>>2]?10:11;break;case 10:g=4294967296*HEAPF32[s>>2];g=0<=g?Math.floor(g):Math.ceil(g);HEAP32[(v|0)>>2]=g;HEAP32[(v+4|0)>>2]=-1;g=12;break;case 11:HEAP32[(v|0)>>2]=-1;g=4294967296/
HEAPF32[s>>2];g=0<=g?Math.floor(g):Math.ceil(g);HEAP32[(v+4|0)>>2]=g;g=12;break;case 12:g=13;break;case 13:g=14;break;case 14:g=15;break;case 15:s=s+4|0;v=v+8|0;u=u+1|0;g=4;break;case 16:g=0!=(HEAP32[(h+12|0)>>2]&128|0)?17:18;break;case 17:_TIFFSwabArrayOfLong(r,q<<1);g=18;break;case 18:k=_TIFFWriteDirectoryTagData(h,l,n,p,5,q,q<<3,r|0);__TIFFfree(r);g=19;break;case 19:return m=k,STACKTOP=f,m;default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagCheckedShort(m,d,c,a,b){var e=0,g=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var f,k,h,l,n=g;f=m;k=d;h=c;l=a;HEAP16[n>>1]=b;e=0!=(HEAP32[(f+12|0)>>2]&128|0)?2:3;break;case 2:_TIFFSwabShort(n);e=3;break;case 3:return m=_TIFFWriteDirectoryTagData(f,k,h,l,3,1,2,n),STACKTOP=g,m;default:assert(0,"bad label: "+e)}}
function _TIFFWriteDirectoryTagCheckedLong(m,d,c,a,b){var e=0,g=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var f,k,h,l,n=g;f=m;k=d;h=c;l=a;HEAP32[n>>2]=b;e=0!=(HEAP32[(f+12|0)>>2]&128|0)?2:3;break;case 2:_TIFFSwabLong(n);e=3;break;case 3:return m=_TIFFWriteDirectoryTagData(f,k,h,l,4,1,4,n),STACKTOP=g,m;default:assert(0,"bad label: "+e)}}
function _DumpModeDecode(m,d,c,a){var b=0;a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var e,g,f,k;g=m;f=d;k=c;b=(HEAP32[(g+608|0)>>2]|0)<(k|0)?2:3;break;case 2:e=HEAP32[(g+444|0)>>2];var h=HEAP32[(g+608|0)>>2],b=h,h=0>(h|0)?-1:0,l=k,n=l,l=0>(l|0)?-1:0;_TIFFErrorExt(HEAP32[(g+628|0)>>2],148528,33256,(tempInt=STACKTOP,STACKTOP=STACKTOP+40|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,HEAP32[tempInt+8>>2]=b,HEAP32[tempInt+16>>2]=h,HEAP32[tempInt+24>>2]=n,
HEAP32[tempInt+32>>2]=l,tempInt));e=0;b=6;break;case 3:b=(HEAP32[(g+604|0)>>2]|0)!=(f|0)?4:5;break;case 4:__TIFFmemcpy(f,HEAP32[(g+604|0)>>2],k);b=5;break;case 5:e=g+604|0;HEAP32[e>>2]=HEAP32[e>>2]+k|0;e=g+608|0;HEAP32[e>>2]=HEAP32[e>>2]-k|0;e=1;b=6;break;case 6:return m=e,STACKTOP=a,m;default:assert(0,"bad label: "+b)}}
function _TIFFErrorExt(m,d,c,a){var b=0,e=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h=e;g=m;f=d;k=c;b=h|0;HEAP32[b>>2]=a;HEAP32[b+4>>2]=0;b=0!=(HEAP32[11274]|0)?2:3;break;case 2:FUNCTION_TABLE[HEAP32[11274]](f,k,h|0);b=3;break;case 3:b=0!=(HEAP32[37386]|0)?4:5;break;case 4:FUNCTION_TABLE[HEAP32[37386]](g,f,k,h|0);b=5;break;case 5:STACKTOP=e;return;default:assert(0,"bad label: "+b)}}
function _TIFFWriteDirectoryTagCheckedSshortArray(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p;f=m;k=d;h=c;l=a;n=b;p=e;g=2147483648>n>>>0?2:3;break;case 2:g=4;break;case 3:throw ___assert_func(37672,1979,43408,29296),"Reached an unreachable!";case 4:g=0!=(HEAP32[(f+12|0)>>2]&128|0)?5:6;break;case 5:_TIFFSwabArrayOfShort(p,n);g=6;break;case 6:return _TIFFWriteDirectoryTagData(f,k,h,l,8,n,n<<1,p);default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagCheckedShortArray(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p;f=m;k=d;h=c;l=a;n=b;p=e;g=2147483648>n>>>0?2:3;break;case 2:g=4;break;case 3:throw ___assert_func(37672,1956,43528,29296),"Reached an unreachable!";case 4:g=0!=(HEAP32[(f+12|0)>>2]&128|0)?5:6;break;case 5:_TIFFSwabArrayOfShort(p,n);g=6;break;case 6:return _TIFFWriteDirectoryTagData(f,k,h,l,3,n,n<<1,p);default:assert(0,"bad label: "+g)}}
function _TIFFWriteDirectoryTagCheckedRational(m,d,c,a,b){var e=0,g=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var f,k,h,l,n,p=g;f=m;k=d;h=c;l=a;n=b;e=0<=n?2:3;break;case 2:e=4;break;case 3:throw ___assert_func(37672,2084,43568,28712),"Reached an unreachable!";case 4:e=0>=n?5:6;break;case 5:HEAP32[(p|0)>>2]=0;HEAP32[(p+4|0)>>2]=1;e=13;break;case 6:var q=e=n,q=(0<=q?Math.floor(q):Math.ceil(q))>>>0,e=e==q?7:8;break;case 7:e=n;e=0<=e?Math.floor(e):
Math.ceil(e);HEAP32[(p|0)>>2]=e;HEAP32[(p+4|0)>>2]=1;e=12;break;case 8:e=1>n?9:10;break;case 9:e=4294967295*n;e=0<=e?Math.floor(e):Math.ceil(e);HEAP32[(p|0)>>2]=e;HEAP32[(p+4|0)>>2]=-1;e=11;break;case 10:HEAP32[(p|0)>>2]=-1;e=4294967295/n;e=0<=e?Math.floor(e):Math.ceil(e);HEAP32[(p+4|0)>>2]=e;e=11;break;case 11:e=12;break;case 12:e=13;break;case 13:e=0!=(HEAP32[(f+12|0)>>2]&128|0)?14:15;break;case 14:_TIFFSwabLong(p|0);_TIFFSwabLong(p+4|0);e=15;break;case 15:return m=_TIFFWriteDirectoryTagData(f,
k,h,l,5,1,8,p|0),STACKTOP=g,m;default:assert(0,"bad label: "+e)}}
function _DumpModeEncode(m,d,c,a){a=0;for(a=1;;)switch(a){case 1:var b,e,g,f,k;e=m;g=d;f=c;a=2;break;case 2:a=0<(f|0)?3:14;break;case 3:k=f;a=(HEAP32[(e+608|0)>>2]+k|0)>(HEAP32[(e+592|0)>>2]|0)?4:5;break;case 4:k=HEAP32[(e+592|0)>>2]-HEAP32[(e+608|0)>>2]|0;a=5;break;case 5:a=0<(k|0)?6:7;break;case 6:a=8;break;case 7:throw ___assert_func(30336,55,45E3,39856),"Reached an unreachable!";case 8:a=(HEAP32[(e+604|0)>>2]|0)!=(g|0)?9:10;break;case 9:__TIFFmemcpy(HEAP32[(e+604|0)>>2],g,k);a=10;break;case 10:a=
e+604|0;HEAP32[a>>2]=HEAP32[a>>2]+k|0;a=e+608|0;HEAP32[a>>2]=HEAP32[a>>2]+k|0;g=g+k|0;f=f-k|0;a=(HEAP32[(e+608|0)>>2]|0)>=(HEAP32[(e+592|0)>>2]|0)?11:13;break;case 11:a=0!=(_TIFFFlushData1(e)|0)?13:12;break;case 12:b=-1;a=15;break;case 13:a=2;break;case 14:b=1;a=15;break;case 15:return b;default:assert(0,"bad label: "+a)}}
function _TIFFInitCCITTFax3(m,d){var c=0,a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e;e=m;c=0!=(_InitCCITTFax3(e)|0)?2:5;break;case 2:c=0!=(__TIFFMergeFields(e,11704,1)|0)?4:3;break;case 3:_TIFFErrorExt(HEAP32[(e+628|0)>>2],33184,30632,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=0;c=6;break;case 4:b=_TIFFSetField(e,65536,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|
0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=1,tempInt));c=6;break;case 5:b=1;c=6;break;case 6:return c=b,STACKTOP=a,c;default:assert(0,"bad label: "+c)}}
function _InitCCITTFax3(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b;b=m;d=0!=(__TIFFMergeFields(b,11480,5)|0)?3:2;break;case 2:_TIFFErrorExt(HEAP32[(b+628|0)>>2],34936,34336,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=8;break;case 3:d=__TIFFmalloc(96);HEAP32[(b+576|0)>>2]=d;d=0==(HEAP32[(b+576|0)>>2]|0)?4:5;break;case 4:_TIFFErrorExt(HEAP32[(b+628|0)>>2],
148368,33784,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=8;break;case 5:d=HEAP32[(b+576|0)>>2];HEAP32[(d|0)>>2]=HEAP32[(b+8|0)>>2];HEAP32[(d+32|0)>>2]=HEAP32[((b+668|0)+4|0)>>2];HEAP32[((b+668|0)+4|0)>>2]=320;HEAP32[(d+36|0)>>2]=HEAP32[(b+668|0)>>2];HEAP32[(b+668|0)>>2]=386;HEAP32[(d+40|0)>>2]=HEAP32[((b+668|0)+8|0)>>2];HEAP32[((b+668|0)+8|0)>>2]=318;HEAP32[(d+28|0)>>2]=0;d=0==(HEAP32[(d|0)>>2]|0)?6:7;
break;case 6:d=b+12|0;HEAP32[d>>2]|=256;d=7;break;case 7:HEAP32[(HEAP32[(b+576|0)>>2]+64|0)>>2]=0;_TIFFSetField(b,65540,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=132,tempInt));HEAP32[(HEAP32[(b+576|0)>>2]+80|0)>>2]=0;HEAP32[(b+504|0)>>2]=58;HEAP32[(b+508|0)>>2]=76;HEAP32[(b+512|0)>>2]=146;HEAP32[(b+532|0)>>2]=404;HEAP32[(b+540|0)>>2]=404;HEAP32[(b+548|0)>>2]=404;HEAP32[(b+516|0)>>2]=76;HEAP32[(b+524|0)>>2]=308;HEAP32[(b+528|0)>>2]=148;HEAP32[(b+
536|0)>>2]=282;HEAP32[(b+544|0)>>2]=282;HEAP32[(b+552|0)>>2]=282;HEAP32[(b+556|0)>>2]=108;HEAP32[(b+564|0)>>2]=188;a=1;d=8;break;case 8:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _TIFFInitCCITTFax4(m,d){var c=0,a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e;e=m;c=0!=(_InitCCITTFax3(e)|0)?2:5;break;case 2:c=0!=(__TIFFMergeFields(e,11664,1)|0)?4:3;break;case 3:_TIFFErrorExt(HEAP32[(e+628|0)>>2],28664,27304,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=0;c=6;break;case 4:HEAP32[(e+532|0)>>2]=204;HEAP32[(e+540|0)>>2]=204;HEAP32[(e+548|0)>>2]=204;
HEAP32[(e+536|0)>>2]=354;HEAP32[(e+544|0)>>2]=354;HEAP32[(e+552|0)>>2]=354;HEAP32[(e+528|0)>>2]=232;b=_TIFFSetField(e,65536,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=1,tempInt));c=6;break;case 5:b=0;c=6;break;case 6:return c=b,STACKTOP=a,c;default:assert(0,"bad label: "+c)}}
function __TIFFFax3fillruns(m,d,c,a){for(var b=0,b=1;;)switch(b){case 1:var e,g,f,k,h,l,n,p,q,t,r;e=m;g=d;f=c;k=a;b=0!=((f-g|0)/4&1|0)?2:3;break;case 2:b=f;f=b+4|0;HEAP32[b>>2]=0;b=3;break;case 3:l=0;b=4;break;case 4:b=g>>>0<f>>>0?5:91;break;case 5:p=HEAP32[(g|0)>>2];b=(l+p|0)>>>0>k>>>0?7:6;break;case 6:b=p>>>0>k>>>0?7:8;break;case 7:p=k-l|0;HEAP32[(g|0)>>2]=p;b=8;break;case 8:b=0!=(p|0)?9:47;break;case 9:h=e+(l>>>3)|0;n=l&7;b=p>>>0>(8-n|0)>>>0?10:45;break;case 10:b=0!=(n|0)?11:12;break;case 11:var b=
255<<(8-n|0),s=h;h=s+1|0;HEAP8[s]=HEAP8[s]&255&b&255;p=p-(8-n|0)|0;b=12;break;case 12:q=b=p>>>3;b=0!=(b|0)?13:42;break;case 13:b=1<((q>>>0)/4&-1)>>>0?14:24;break;case 14:b=15;break;case 15:if(0!=(q|0))b=16;else var v=0,b=17;break;case 16:v=0==(h&3|0)^1;b=17;break;case 17:b=v?18:20;break;case 18:b=h;h=b+1|0;HEAP8[b]=0;b=19;break;case 19:q=q-1|0;b=15;break;case 20:r=h;t=(q>>>0)/4&-1;q=q-(t<<2)|0;b=21;break;case 21:b=r;r=b+4|0;HEAP32[b>>2]=0;b=22;break;case 22:t=b=t-1|0;b=0!=(b|0)?21:23;break;case 23:h=
r;b=24;break;case 24:b=q;b=15==(b|0)?25:14==(b|0)?26:13==(b|0)?27:12==(b|0)?28:11==(b|0)?29:10==(b|0)?30:9==(b|0)?31:8==(b|0)?32:7==(b|0)?33:6==(b|0)?34:5==(b|0)?35:4==(b|0)?36:3==(b|0)?37:2==(b|0)?38:1==(b|0)?39:0==(b|0)?40:41;break;case 25:HEAP8[h+14|0]=0;b=26;break;case 26:HEAP8[h+13|0]=0;b=27;break;case 27:HEAP8[h+12|0]=0;b=28;break;case 28:HEAP8[h+11|0]=0;b=29;break;case 29:HEAP8[h+10|0]=0;b=30;break;case 30:HEAP8[h+9|0]=0;b=31;break;case 31:HEAP8[h+8|0]=0;b=32;break;case 32:HEAP8[h+7|0]=0;b=
33;break;case 33:HEAP8[h+6|0]=0;b=34;break;case 34:HEAP8[h+5|0]=0;b=35;break;case 35:HEAP8[h+4|0]=0;b=36;break;case 36:HEAP8[h+3|0]=0;b=37;break;case 37:HEAP8[h+2|0]=0;b=38;break;case 38:HEAP8[h+1|0]=0;b=39;break;case 39:HEAP8[h|0]=0;h=h+q|0;b=40;break;case 40:b=41;break;case 41:p&=7;b=42;break;case 42:b=0!=(p|0)?43:44;break;case 43:b=h|0;HEAP8[b]=HEAP8[b]&255&255>>(p|0)&255;b=44;break;case 44:b=46;break;case 45:b=h|0;HEAP8[b]=HEAP8[b]&255&((HEAP8[45184+p|0]&255)>>(n|0)^-1)&255;b=46;break;case 46:l=
l+HEAP32[(g|0)>>2]|0;b=47;break;case 47:p=HEAP32[(g+4|0)>>2];b=(l+p|0)>>>0>k>>>0?49:48;break;case 48:b=p>>>0>k>>>0?49:50;break;case 49:p=k-l|0;HEAP32[(g+4|0)>>2]=p;b=50;break;case 50:b=0!=(p|0)?51:89;break;case 51:h=e+(l>>>3)|0;n=l&7;b=p>>>0>(8-n|0)>>>0?52:87;break;case 52:b=0!=(n|0)?53:54;break;case 53:b=255>>(n|0);s=h;h=s+1|0;HEAP8[s]=(HEAP8[s]&255|b)&255;p=p-(8-n|0)|0;b=54;break;case 54:q=b=p>>>3;b=0!=(b|0)?55:84;break;case 55:b=1<((q>>>0)/4&-1)>>>0?56:66;break;case 56:b=57;break;case 57:if(0!=
(q|0))b=58;else var u=0,b=59;break;case 58:u=0==(h&3|0)^1;b=59;break;case 59:b=u?60:62;break;case 60:b=h;h=b+1|0;HEAP8[b]=-1;b=61;break;case 61:q=q-1|0;b=57;break;case 62:r=h;t=(q>>>0)/4&-1;q=q-(t<<2)|0;b=63;break;case 63:b=r;r=b+4|0;HEAP32[b>>2]=-1;b=64;break;case 64:t=b=t-1|0;b=0!=(b|0)?63:65;break;case 65:h=r;b=66;break;case 66:b=q;b=15==(b|0)?67:14==(b|0)?68:13==(b|0)?69:12==(b|0)?70:11==(b|0)?71:10==(b|0)?72:9==(b|0)?73:8==(b|0)?74:7==(b|0)?75:6==(b|0)?76:5==(b|0)?77:4==(b|0)?78:3==(b|0)?79:
2==(b|0)?80:1==(b|0)?81:0==(b|0)?82:83;break;case 67:HEAP8[h+14|0]=-1;b=68;break;case 68:HEAP8[h+13|0]=-1;b=69;break;case 69:HEAP8[h+12|0]=-1;b=70;break;case 70:HEAP8[h+11|0]=-1;b=71;break;case 71:HEAP8[h+10|0]=-1;b=72;break;case 72:HEAP8[h+9|0]=-1;b=73;break;case 73:HEAP8[h+8|0]=-1;b=74;break;case 74:HEAP8[h+7|0]=-1;b=75;break;case 75:HEAP8[h+6|0]=-1;b=76;break;case 76:HEAP8[h+5|0]=-1;b=77;break;case 77:HEAP8[h+4|0]=-1;b=78;break;case 78:HEAP8[h+3|0]=-1;b=79;break;case 79:HEAP8[h+2|0]=-1;b=80;break;
case 80:HEAP8[h+1|0]=-1;b=81;break;case 81:HEAP8[h|0]=-1;h=h+q|0;b=82;break;case 82:b=83;break;case 83:p&=7;b=84;break;case 84:b=0!=(p|0)?85:86;break;case 85:b=h|0;HEAP8[b]=(HEAP8[b]&255|65280>>(p|0))&255;b=86;break;case 86:b=88;break;case 87:b=h|0;HEAP8[b]=(HEAP8[b]&255|(HEAP8[45184+p|0]&255)>>(n|0))&255;b=88;break;case 88:l=l+HEAP32[(g+4|0)>>2]|0;b=89;break;case 89:b=90;break;case 90:g=g+8|0;b=4;break;case 91:b=(l|0)==(k|0)?92:93;break;case 92:b=94;break;case 93:throw ___assert_func(30088,452,43208,
39752),"Reached an unreachable!";case 94:return;default:assert(0,"bad label: "+b)}}
function _Fax4Decode(m,d,c,a){var b=0,e=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h,l,n,p,q,t,r,s,v,u,w,y,A,z,x,B,C;f=m;k=d;h=c;l=HEAP32[(f+576|0)>>2];p=HEAP32[((l|0)+12|0)>>2];A=HEAP32[(l+44|0)>>2];b=0!=((h|0)%(HEAP32[((l|0)+8|0)>>2]|0)&-1|0)?2:3;break;case 2:_TIFFErrorExt(HEAP32[(f+628|0)>>2],148408,26184,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));g=-1;b=322;break;
case 3:b=4;break;case 4:q=HEAP32[(l+48|0)>>2];t=HEAP32[(l+52|0)>>2];y=HEAP32[(l+56|0)>>2];s=HEAP32[(f+604|0)>>2];v=s+HEAP32[(f+608|0)>>2]|0;b=5;break;case 5:b=6;break;case 6:b=0<(h|0)?7:319;break;case 7:r=n=0;var D=HEAP32[(l+72|0)>>2];u=w=D;var F=B=HEAP32[(l+68|0)>>2];B=F+4|0;x=HEAP32[F>>2];b=8;break;case 8:b=9;break;case 9:b=(n|0)<(p|0)?10:243;break;case 10:b=11;break;case 11:b=12;break;case 12:b=7>(t|0)?13:19;break;case 13:b=s>>>0>=v>>>0?14:17;break;case 14:b=0==(t|0)?15:16;break;case 15:b=211;
break;case 16:t=7;b=18;break;case 17:var I=s;s=I+1|0;q|=(HEAP8[A+(HEAP8[I]&255)|0]&255)<<t;t=t+8|0;b=18;break;case 18:b=19;break;case 19:b=20;break;case 20:z=80256+((q&127)<<3)|0;b=21;break;case 21:t=t-(HEAP8[z+1|0]&255)|0;q>>>=(HEAP8[z+1|0]&255)>>>0;b=22;break;case 22:b=23;break;case 23:var G=HEAP8[z|0]&255,b=1==(G|0)?24:2==(G|0)?34:3==(G|0)?151:4==(G|0)?163:5==(G|0)?175:6==(G|0)?192:12==(G|0)?193:207;break;case 24:b=25;break;case 25:b=(u|0)!=(w|0)?26:32;break;case 26:b=27;break;case 27:if((x|0)<=
(n|0))b=28;else var H=0,b=29;break;case 28:H=(x|0)<(p|0);b=29;break;case 29:b=H?30:31;break;case 30:x=x+(HEAP32[(B|0)>>2]+HEAP32[(B+4|0)>>2]|0)|0;B=B+8|0;b=27;break;case 31:b=32;break;case 32:b=33;break;case 33:var K=B;B=K+4|0;x=x+HEAP32[K>>2]|0;r=r+(x-n|0)|0;n=x;var J=B;B=J+4|0;x=x+HEAP32[J>>2]|0;b=242;break;case 34:b=0!=((u-w|0)/4&1|0)?35:88;break;case 35:b=36;break;case 36:b=37;break;case 37:b=38;break;case 38:b=13>(t|0)?39:50;break;case 39:b=s>>>0>=v>>>0?40:43;break;case 40:b=0==(t|0)?41:42;break;
case 41:b=211;break;case 42:t=13;b=49;break;case 43:var E=s;s=E+1|0;q|=(HEAP8[A+(HEAP8[E]&255)|0]&255)<<t;var L=t+8|0;t=L;b=13>(L|0)?44:48;break;case 44:b=s>>>0>=v>>>0?45:46;break;case 45:t=13;b=47;break;case 46:var Q=s;s=Q+1|0;q|=(HEAP8[A+(HEAP8[Q]&255)|0]&255)<<t;t=t+8|0;b=47;break;case 47:b=48;break;case 48:b=49;break;case 49:b=50;break;case 50:b=51;break;case 51:z=81280+((q&8191)<<3)|0;b=52;break;case 52:t=t-(HEAP8[z+1|0]&255)|0;q>>>=(HEAP8[z+1|0]&255)>>>0;b=53;break;case 53:b=54;break;case 54:var N=
HEAP8[z|0]&255,b=8==(N|0)?55:10==(N|0)|11==(N|0)?58:59;break;case 55:b=56;break;case 56:var P=r+HEAP32[(z+4|0)>>2]|0,W=u;u=W+4|0;HEAP32[W>>2]=P;n=n+HEAP32[(z+4|0)>>2]|0;r=0;b=57;break;case 57:b=61;break;case 58:n=n+HEAP32[(z+4|0)>>2]|0;r=r+HEAP32[(z+4|0)>>2]|0;b=60;break;case 59:b=209;break;case 60:b=36;break;case 61:b=62;break;case 62:b=63;break;case 63:b=64;break;case 64:b=12>(t|0)?65:76;break;case 65:b=s>>>0>=v>>>0?66:69;break;case 66:b=0==(t|0)?67:68;break;case 67:b=211;break;case 68:t=12;b=75;
break;case 69:var O=s;s=O+1|0;q|=(HEAP8[A+(HEAP8[O]&255)|0]&255)<<t;var T=t+8|0;t=T;b=12>(T|0)?70:74;break;case 70:b=s>>>0>=v>>>0?71:72;break;case 71:t=12;b=73;break;case 72:var Y=s;s=Y+1|0;q|=(HEAP8[A+(HEAP8[Y]&255)|0]&255)<<t;t=t+8|0;b=73;break;case 73:b=74;break;case 74:b=75;break;case 75:b=76;break;case 76:b=77;break;case 77:z=46832+((q&4095)<<3)|0;b=78;break;case 78:t=t-(HEAP8[z+1|0]&255)|0;q>>>=(HEAP8[z+1|0]&255)>>>0;b=79;break;case 79:b=80;break;case 80:var S=HEAP8[z|0]&255,b=7==(S|0)?81:9==
(S|0)|11==(S|0)?84:85;break;case 81:b=82;break;case 82:var X=r+HEAP32[(z+4|0)>>2]|0,R=u;u=R+4|0;HEAP32[R>>2]=X;n=n+HEAP32[(z+4|0)>>2]|0;r=0;b=83;break;case 83:b=87;break;case 84:n=n+HEAP32[(z+4|0)>>2]|0;r=r+HEAP32[(z+4|0)>>2]|0;b=86;break;case 85:b=210;break;case 86:b=62;break;case 87:b=141;break;case 88:b=89;break;case 89:b=90;break;case 90:b=91;break;case 91:b=12>(t|0)?92:103;break;case 92:b=s>>>0>=v>>>0?93:96;break;case 93:b=0==(t|0)?94:95;break;case 94:b=211;break;case 95:t=12;b=102;break;case 96:var V=
s;s=V+1|0;q|=(HEAP8[A+(HEAP8[V]&255)|0]&255)<<t;var aa=t+8|0;t=aa;b=12>(aa|0)?97:101;break;case 97:b=s>>>0>=v>>>0?98:99;break;case 98:t=12;b=100;break;case 99:var fa=s;s=fa+1|0;q|=(HEAP8[A+(HEAP8[fa]&255)|0]&255)<<t;t=t+8|0;b=100;break;case 100:b=101;break;case 101:b=102;break;case 102:b=103;break;case 103:b=104;break;case 104:z=46832+((q&4095)<<3)|0;b=105;break;case 105:t=t-(HEAP8[z+1|0]&255)|0;q>>>=(HEAP8[z+1|0]&255)>>>0;b=106;break;case 106:b=107;break;case 107:var Z=HEAP8[z|0]&255,b=7==(Z|0)?
108:9==(Z|0)|11==(Z|0)?111:112;break;case 108:b=109;break;case 109:var ka=r+HEAP32[(z+4|0)>>2]|0,M=u;u=M+4|0;HEAP32[M>>2]=ka;n=n+HEAP32[(z+4|0)>>2]|0;r=0;b=110;break;case 110:b=114;break;case 111:n=n+HEAP32[(z+4|0)>>2]|0;r=r+HEAP32[(z+4|0)>>2]|0;b=113;break;case 112:b=210;break;case 113:b=89;break;case 114:b=115;break;case 115:b=116;break;case 116:b=117;break;case 117:b=13>(t|0)?118:129;break;case 118:b=s>>>0>=v>>>0?119:122;break;case 119:b=0==(t|0)?120:121;break;case 120:b=211;break;case 121:t=13;
b=128;break;case 122:var ga=s;s=ga+1|0;q|=(HEAP8[A+(HEAP8[ga]&255)|0]&255)<<t;var na=t+8|0;t=na;b=13>(na|0)?123:127;break;case 123:b=s>>>0>=v>>>0?124:125;break;case 124:t=13;b=126;break;case 125:var ba=s;s=ba+1|0;q|=(HEAP8[A+(HEAP8[ba]&255)|0]&255)<<t;t=t+8|0;b=126;break;case 126:b=127;break;case 127:b=128;break;case 128:b=129;break;case 129:b=130;break;case 130:z=81280+((q&8191)<<3)|0;b=131;break;case 131:t=t-(HEAP8[z+1|0]&255)|0;q>>>=(HEAP8[z+1|0]&255)>>>0;b=132;break;case 132:b=133;break;case 133:var ca=
HEAP8[z|0]&255,b=8==(ca|0)?134:10==(ca|0)|11==(ca|0)?137:138;break;case 134:b=135;break;case 135:var oa=r+HEAP32[(z+4|0)>>2]|0,va=u;u=va+4|0;HEAP32[va>>2]=oa;n=n+HEAP32[(z+4|0)>>2]|0;r=0;b=136;break;case 136:b=140;break;case 137:n=n+HEAP32[(z+4|0)>>2]|0;r=r+HEAP32[(z+4|0)>>2]|0;b=139;break;case 138:b=209;break;case 139:b=115;break;case 140:b=141;break;case 141:b=142;break;case 142:b=(u|0)!=(w|0)?143:149;break;case 143:b=144;break;case 144:if((x|0)<=(n|0))b=145;else var pa=0,b=146;break;case 145:pa=
(x|0)<(p|0);b=146;break;case 146:b=pa?147:148;break;case 147:x=x+(HEAP32[(B|0)>>2]+HEAP32[(B+4|0)>>2]|0)|0;B=B+8|0;b=144;break;case 148:b=149;break;case 149:b=150;break;case 150:b=242;break;case 151:b=152;break;case 152:b=(u|0)!=(w|0)?153:159;break;case 153:b=154;break;case 154:if((x|0)<=(n|0))b=155;else var la=0,b=156;break;case 155:la=(x|0)<(p|0);b=156;break;case 156:b=la?157:158;break;case 157:x=x+(HEAP32[(B|0)>>2]+HEAP32[(B+4|0)>>2]|0)|0;B=B+8|0;b=154;break;case 158:b=159;break;case 159:b=160;
break;case 160:b=161;break;case 161:var wa=r+(x-n|0)|0,qa=u;u=qa+4|0;HEAP32[qa>>2]=wa;n=n+(x-n|0)|0;r=0;b=162;break;case 162:var ea=B;B=ea+4|0;x=x+HEAP32[ea>>2]|0;b=242;break;case 163:b=164;break;case 164:b=(u|0)!=(w|0)?165:171;break;case 165:b=166;break;case 166:if((x|0)<=(n|0))b=167;else var xa=0,b=168;break;case 167:xa=(x|0)<(p|0);b=168;break;case 168:b=xa?169:170;break;case 169:x=x+(HEAP32[(B|0)>>2]+HEAP32[(B+4|0)>>2]|0)|0;B=B+8|0;b=166;break;case 170:b=171;break;case 171:b=172;break;case 172:b=
173;break;case 173:var ja=r+((x-n|0)+HEAP32[(z+4|0)>>2]|0)|0,da=u;u=da+4|0;HEAP32[da>>2]=ja;n=n+((x-n|0)+HEAP32[(z+4|0)>>2]|0)|0;r=0;b=174;break;case 174:var Ga=B;B=Ga+4|0;x=x+HEAP32[Ga>>2]|0;b=242;break;case 175:b=176;break;case 176:b=(u|0)!=(w|0)?177:183;break;case 177:b=178;break;case 178:if((x|0)<=(n|0))b=179;else var $=0,b=180;break;case 179:$=(x|0)<(p|0);b=180;break;case 180:b=$?181:182;break;case 181:x=x+(HEAP32[(B|0)>>2]+HEAP32[(B+4|0)>>2]|0)|0;B=B+8|0;b=178;break;case 182:b=183;break;case 183:b=
184;break;case 184:b=(x|0)<=(n+HEAP32[(z+4|0)>>2]|0)?185:189;break;case 185:b=(x|0)<(n+HEAP32[(z+4|0)>>2]|0)?187:186;break;case 186:b=(u|0)!=(w|0)?187:188;break;case 187:_Fax3Unexpected(148408,f,HEAP32[(l+92|0)>>2],n);b=263;break;case 188:b=189;break;case 189:b=190;break;case 190:var ma=r+((x-n|0)-HEAP32[(z+4|0)>>2]|0)|0,ra=u;u=ra+4|0;HEAP32[ra>>2]=ma;n=n+((x-n|0)-HEAP32[(z+4|0)>>2]|0)|0;r=0;b=191;break;case 191:var Aa=B-4|0;B=Aa;x=x-HEAP32[Aa>>2]|0;b=242;break;case 192:var Xa=p-n|0,Da=u;u=Da+4|0;
HEAP32[Da>>2]=Xa;_Fax3Extension(148408,f,HEAP32[(l+92|0)>>2],n);b=263;break;case 193:var Ua=p-n|0,sa=u;u=sa+4|0;HEAP32[sa>>2]=Ua;b=194;break;case 194:b=4>(t|0)?195:201;break;case 195:b=s>>>0>=v>>>0?196:199;break;case 196:b=0==(t|0)?197:198;break;case 197:b=211;break;case 198:t=4;b=200;break;case 199:var ha=s;s=ha+1|0;q|=(HEAP8[A+(HEAP8[ha]&255)|0]&255)<<t;t=t+8|0;b=200;break;case 200:b=201;break;case 201:b=202;break;case 202:b=0!=(q&15|0)?203:204;break;case 203:_Fax3Unexpected(148408,f,HEAP32[(l+
92|0)>>2],n);b=204;break;case 204:b=205;break;case 205:t=t-4|0;q>>>=4;b=206;break;case 206:y=1;b=263;break;case 207:b=208;break;case 208:_Fax3Unexpected(148408,f,HEAP32[(l+92|0)>>2],n);b=263;break;case 209:_Fax3Unexpected(148408,f,HEAP32[(l+92|0)>>2],n);b=263;break;case 210:_Fax3Unexpected(148408,f,HEAP32[(l+92|0)>>2],n);b=263;break;case 211:_Fax3PrematureEOF(148408,f,HEAP32[(l+92|0)>>2],n);b=212;break;case 212:b=0!=(r|0)?213:216;break;case 213:b=214;break;case 214:var U=r|0,gb=u;u=gb+4|0;HEAP32[gb>>
2]=U;n|=0;r=0;b=215;break;case 215:b=216;break;case 216:b=(n|0)!=(p|0)?217:240;break;case 217:_Fax3BadLength(148408,f,HEAP32[(l+92|0)>>2],n,p);b=218;break;case 218:if((n|0)>(p|0))b=219;else var Ka=0,b=220;break;case 219:Ka=u>>>0>w>>>0;b=220;break;case 220:b=Ka?221:222;break;case 221:var Ia=u-4|0;u=Ia;n=n-HEAP32[Ia>>2]|0;b=218;break;case 222:b=(n|0)<(p|0)?223:232;break;case 223:b=0>(n|0)?224:225;break;case 224:n=0;b=225;break;case 225:b=0!=((u-w|0)/4&1|0)?226:229;break;case 226:b=227;break;case 227:var ia=
r|0,Ba=u;u=Ba+4|0;HEAP32[Ba>>2]=ia;n|=0;r=0;b=228;break;case 228:b=229;break;case 229:b=230;break;case 230:var Ra=r+(p-n|0)|0,Sa=u;u=Sa+4|0;HEAP32[Sa>>2]=Ra;n=n+(p-n|0)|0;r=0;b=231;break;case 231:b=239;break;case 232:b=(n|0)>(p|0)?233:238;break;case 233:b=234;break;case 234:var ib=r+p|0,ua=u;u=ua+4|0;HEAP32[ua>>2]=ib;n=n+p|0;r=0;b=235;break;case 235:b=236;break;case 236:var Va=r|0,eb=u;u=eb+4|0;HEAP32[eb>>2]=Va;n|=0;r=0;b=237;break;case 237:b=238;break;case 238:b=239;break;case 239:b=240;break;case 240:b=
241;break;case 241:b=299;break;case 242:b=9;break;case 243:b=0!=(r|0)?244:262;break;case 244:b=(r+n|0)<(p|0)?245:259;break;case 245:b=246;break;case 246:b=1>(t|0)?247:253;break;case 247:b=s>>>0>=v>>>0?248:251;break;case 248:b=0==(t|0)?249:250;break;case 249:b=211;break;case 250:t=1;b=252;break;case 251:var Ea=s;s=Ea+1|0;q|=(HEAP8[A+(HEAP8[Ea]&255)|0]&255)<<t;t=t+8|0;b=252;break;case 252:b=253;break;case 253:b=254;break;case 254:b=0!=(q&1|0)?256:255;break;case 255:b=208;break;case 256:b=257;break;
case 257:t=t-1|0;q>>>=1;b=258;break;case 258:b=259;break;case 259:b=260;break;case 260:var Ya=r|0,La=u;u=La+4|0;HEAP32[La>>2]=Ya;n|=0;r=0;b=261;break;case 261:b=262;break;case 262:b=263;break;case 263:b=264;break;case 264:b=0!=(r|0)?265:268;break;case 265:b=266;break;case 266:var Ma=r|0,Fa=u;u=Fa+4|0;HEAP32[Fa>>2]=Ma;n|=0;r=0;b=267;break;case 267:b=268;break;case 268:b=(n|0)!=(p|0)?269:292;break;case 269:_Fax3BadLength(148408,f,HEAP32[(l+92|0)>>2],n,p);b=270;break;case 270:if((n|0)>(p|0))b=271;else var Na=
0,b=272;break;case 271:Na=u>>>0>w>>>0;b=272;break;case 272:b=Na?273:274;break;case 273:var Oa=u-4|0;u=Oa;n=n-HEAP32[Oa>>2]|0;b=270;break;case 274:b=(n|0)<(p|0)?275:284;break;case 275:b=0>(n|0)?276:277;break;case 276:n=0;b=277;break;case 277:b=0!=((u-w|0)/4&1|0)?278:281;break;case 278:b=279;break;case 279:var jb=r|0,Za=u;u=Za+4|0;HEAP32[Za>>2]=jb;n|=0;r=0;b=280;break;case 280:b=281;break;case 281:b=282;break;case 282:var Ca=r+(p-n|0)|0,$a=u;u=$a+4|0;HEAP32[$a>>2]=Ca;n=n+(p-n|0)|0;r=0;b=283;break;case 283:b=
291;break;case 284:b=(n|0)>(p|0)?285:290;break;case 285:b=286;break;case 286:var ab=r+p|0,Ha=u;u=Ha+4|0;HEAP32[Ha>>2]=ab;n=n+p|0;r=0;b=287;break;case 287:b=288;break;case 288:var Wa=r|0,bb=u;u=bb+4|0;HEAP32[bb>>2]=Wa;n|=0;r=0;b=289;break;case 289:b=290;break;case 290:b=291;break;case 291:b=292;break;case 292:b=293;break;case 293:b=294;break;case 294:b=0!=(y|0)?295:296;break;case 295:b=299;break;case 296:FUNCTION_TABLE[HEAP32[(l+60|0)>>2]](k,w,u,p);b=297;break;case 297:var Pa=r|0,Ja=u;u=Ja+4|0;HEAP32[Ja>>
2]=Pa;n|=0;r=0;b=298;break;case 298:C=HEAP32[(l+72|0)>>2];HEAP32[(l+72|0)>>2]=HEAP32[(l+68|0)>>2];HEAP32[(l+68|0)>>2]=C;k=k+HEAP32[((l|0)+8|0)>>2]|0;h=h-HEAP32[((l|0)+8|0)>>2]|0;var cb=l+92|0;HEAP32[cb>>2]=HEAP32[cb>>2]+1|0;b=6;break;case 299:b=300;break;case 300:b=13>(t|0)?301:312;break;case 301:b=s>>>0>=v>>>0?302:305;break;case 302:b=0==(t|0)?303:304;break;case 303:b=314;break;case 304:t=13;b=311;break;case 305:var Qa=s;s=Qa+1|0;q|=(HEAP8[A+(HEAP8[Qa]&255)|0]&255)<<t;var fb=t+8|0;t=fb;b=13>(fb|
0)?306:310;break;case 306:b=s>>>0>=v>>>0?307:308;break;case 307:t=13;b=309;break;case 308:var hb=s;s=hb+1|0;q|=(HEAP8[A+(HEAP8[hb]&255)|0]&255)<<t;t=t+8|0;b=309;break;case 309:b=310;break;case 310:b=311;break;case 311:b=312;break;case 312:b=313;break;case 313:b=314;break;case 314:b=315;break;case 315:t=t-13|0;q>>>=13;b=316;break;case 316:FUNCTION_TABLE[HEAP32[(l+60|0)>>2]](k,w,u,p);b=317;break;case 317:HEAP32[(l+52|0)>>2]=t;HEAP32[(l+48|0)>>2]=q;HEAP32[(l+56|0)>>2]=y;var ya=f+608|0;HEAP32[ya>>2]=
HEAP32[ya>>2]-(s-HEAP32[(f+604|0)>>2]|0)|0;HEAP32[(f+604|0)>>2]=s;b=318;break;case 318:g=0!=(HEAP32[(l+92|0)>>2]|0)?1:-1;b=322;break;case 319:b=320;break;case 320:HEAP32[(l+52|0)>>2]=t;HEAP32[(l+48|0)>>2]=q;HEAP32[(l+56|0)>>2]=y;var db=f+608|0;HEAP32[db>>2]=HEAP32[db>>2]-(s-HEAP32[(f+604|0)>>2]|0)|0;HEAP32[(f+604|0)>>2]=s;b=321;break;case 321:g=1;b=322;break;case 322:var Ta=g;STACKTOP=e;return Ta;default:assert(0,"bad label: "+b)}}
function _Fax4Encode(m,d,c,a){var b=0;a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var e,g,f,k,h;g=m;f=d;k=c;h=HEAP32[(g+576|0)>>2];b=0!=((k|0)%(HEAP32[((h|0)+8|0)>>2]|0)&-1|0)?2:3;break;case 2:_TIFFErrorExt(HEAP32[(g+628|0)>>2],148392,38384,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));e=0;b=9;break;case 3:b=4;break;case 4:b=0<(k|0)?5:8;break;case 5:b=0!=(_Fax3Encode2DRow(g,f,HEAP32[(h+
80|0)>>2],HEAP32[((h|0)+12|0)>>2])|0)?7:6;break;case 6:e=0;b=9;break;case 7:__TIFFmemcpy(HEAP32[(h+80|0)>>2],f,HEAP32[((h|0)+8|0)>>2]);f=f+HEAP32[((h|0)+8|0)>>2]|0;k=k-HEAP32[((h|0)+8|0)>>2]|0;b=4;break;case 8:e=1;b=9;break;case 9:return m=e,STACKTOP=a,m;default:assert(0,"bad label: "+b)}}
function _Fax4PostEncode(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;c=m;a=HEAP32[(c+576|0)>>2];_Fax3PutBits(c,1,12);_Fax3PutBits(c,1,12);d=8!=(HEAP32[(a+52|0)>>2]|0)?2:5;break;case 2:d=(HEAP32[(c+608|0)>>2]|0)>=(HEAP32[(c+592|0)>>2]|0)?3:4;break;case 3:_TIFFFlushData1(c);d=4;break;case 4:var d=HEAP32[(a+48|0)>>2]&255,b=c+604|0,e=HEAP32[b>>2];HEAP32[b>>2]=e+1|0;HEAP8[e]=d;d=c+608|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;HEAP32[(a+48|0)>>2]=0;HEAP32[(a+52|0)>>2]=8;d=5;break;case 5:return 1;default:assert(0,
"bad label: "+d)}}function _TIFFInitCCITTRLE(m,d){var c=0,a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e;e=m;c=0!=(_InitCCITTFax3(e)|0)?2:3;break;case 2:HEAP32[(e+532|0)>>2]=98;HEAP32[(e+540|0)>>2]=98;HEAP32[(e+548|0)>>2]=98;b=_TIFFSetField(e,65536,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=7,tempInt));c=4;break;case 3:b=0;c=4;break;case 4:return c=b,STACKTOP=a,c;default:assert(0,"bad label: "+c)}}
function _Fax3DecodeRLE(m,d,c,a){var b=0;a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var e,g,f,k,h,l,n,p,q,t,r,s,v,u,w,y,A,z,x,B;g=m;f=d;k=c;h=HEAP32[(g+576|0)>>2];n=HEAP32[((h|0)+12|0)>>2];y=HEAP32[(h+44|0)>>2];z=HEAP32[((h|0)+4|0)>>2];b=0!=((k|0)%(HEAP32[((h|0)+8|0)>>2]|0)&-1|0)?2:3;break;case 2:_TIFFErrorExt(HEAP32[(g+628|0)>>2],148456,26184,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,
tempInt));e=-1;b=152;break;case 3:b=4;break;case 4:p=HEAP32[(h+48|0)>>2];q=HEAP32[(h+52|0)>>2];w=HEAP32[(h+56|0)>>2];r=HEAP32[(g+604|0)>>2];s=r+HEAP32[(g+608|0)>>2]|0;b=5;break;case 5:u=HEAP32[(h+72|0)>>2];b=6;break;case 6:b=0<(k|0)?7:149;break;case 7:t=l=0;v=u;b=8;break;case 8:b=9;break;case 9:b=10;break;case 10:b=11;break;case 11:b=12;break;case 12:b=12>(q|0)?13:24;break;case 13:b=r>>>0>=s>>>0?14:17;break;case 14:b=0==(q|0)?15:16;break;case 15:b=71;break;case 16:q=12;b=23;break;case 17:b=r;r=b+
1|0;p|=(HEAP8[y+(HEAP8[b]&255)|0]&255)<<q;q=b=q+8|0;b=12>(b|0)?18:22;break;case 18:b=r>>>0>=s>>>0?19:20;break;case 19:q=12;b=21;break;case 20:b=r;r=b+1|0;p|=(HEAP8[y+(HEAP8[b]&255)|0]&255)<<q;q=q+8|0;b=21;break;case 21:b=22;break;case 22:b=23;break;case 23:b=24;break;case 24:b=25;break;case 25:A=46832+((p&4095)<<3)|0;b=26;break;case 26:q=q-(HEAP8[A+1|0]&255)|0;p>>>=(HEAP8[A+1|0]&255)>>>0;b=27;break;case 27:b=28;break;case 28:b=HEAP8[A|0]&255;b=12==(b|0)?29:7==(b|0)?30:9==(b|0)|11==(b|0)?33:34;break;
case 29:w=1;b=102;break;case 30:b=31;break;case 31:t=t+HEAP32[(A+4|0)>>2]|0;b=v;v=b+4|0;HEAP32[b>>2]=t;l=l+HEAP32[(A+4|0)>>2]|0;t=0;b=32;break;case 32:b=36;break;case 33:l=l+HEAP32[(A+4|0)>>2]|0;t=t+HEAP32[(A+4|0)>>2]|0;b=35;break;case 34:_Fax3Unexpected(148456,g,HEAP32[(h+92|0)>>2],l);b=102;break;case 35:b=10;break;case 36:b=(l|0)>=(n|0)?37:38;break;case 37:b=102;break;case 38:b=39;break;case 39:b=40;break;case 40:b=41;break;case 41:b=13>(q|0)?42:53;break;case 42:b=r>>>0>=s>>>0?43:46;break;case 43:b=
0==(q|0)?44:45;break;case 44:b=71;break;case 45:q=13;b=52;break;case 46:b=r;r=b+1|0;p|=(HEAP8[y+(HEAP8[b]&255)|0]&255)<<q;q=b=q+8|0;b=13>(b|0)?47:51;break;case 47:b=r>>>0>=s>>>0?48:49;break;case 48:q=13;b=50;break;case 49:b=r;r=b+1|0;p|=(HEAP8[y+(HEAP8[b]&255)|0]&255)<<q;q=q+8|0;b=50;break;case 50:b=51;break;case 51:b=52;break;case 52:b=53;break;case 53:b=54;break;case 54:A=81280+((p&8191)<<3)|0;b=55;break;case 55:q=q-(HEAP8[A+1|0]&255)|0;p>>>=(HEAP8[A+1|0]&255)>>>0;b=56;break;case 56:b=57;break;
case 57:b=HEAP8[A|0]&255;b=12==(b|0)?58:8==(b|0)?59:10==(b|0)|11==(b|0)?62:63;break;case 58:w=1;b=102;break;case 59:b=60;break;case 60:t=t+HEAP32[(A+4|0)>>2]|0;b=v;v=b+4|0;HEAP32[b>>2]=t;l=l+HEAP32[(A+4|0)>>2]|0;t=0;b=61;break;case 61:b=65;break;case 62:l=l+HEAP32[(A+4|0)>>2]|0;t=t+HEAP32[(A+4|0)>>2]|0;b=64;break;case 63:_Fax3Unexpected(148456,g,HEAP32[(h+92|0)>>2],l);b=102;break;case 64:b=39;break;case 65:b=(l|0)>=(n|0)?66:67;break;case 66:b=102;break;case 67:b=0==(HEAP32[(v-4|0)>>2]|0)?68:70;break;
case 68:b=0==(HEAP32[(v-8|0)>>2]|0)?69:70;break;case 69:v=v-8|0;b=70;break;case 70:b=9;break;case 71:_Fax3PrematureEOF(148456,g,HEAP32[(h+92|0)>>2],l);b=72;break;case 72:b=0!=(t|0)?73:76;break;case 73:b=74;break;case 74:t|=0;b=v;v=b+4|0;HEAP32[b>>2]=t;l|=0;t=0;b=75;break;case 75:b=76;break;case 76:b=(l|0)!=(n|0)?77:100;break;case 77:_Fax3BadLength(148456,g,HEAP32[(h+92|0)>>2],l,n);b=78;break;case 78:if((l|0)>(n|0))b=79;else var C=0,b=80;break;case 79:C=v>>>0>u>>>0;b=80;break;case 80:b=C?81:82;break;
case 81:v=b=v-4|0;l=l-HEAP32[b>>2]|0;b=78;break;case 82:b=(l|0)<(n|0)?83:92;break;case 83:b=0>(l|0)?84:85;break;case 84:l=0;b=85;break;case 85:b=0!=((v-u|0)/4&1|0)?86:89;break;case 86:b=87;break;case 87:t|=0;b=v;v=b+4|0;HEAP32[b>>2]=t;l|=0;t=0;b=88;break;case 88:b=89;break;case 89:b=90;break;case 90:t=t+(n-l|0)|0;b=v;v=b+4|0;HEAP32[b>>2]=t;l=l+(n-l|0)|0;t=0;b=91;break;case 91:b=99;break;case 92:b=(l|0)>(n|0)?93:98;break;case 93:b=94;break;case 94:t=t+n|0;b=v;v=b+4|0;HEAP32[b>>2]=t;l=l+n|0;t=0;b=95;
break;case 95:b=96;break;case 96:t|=0;b=v;v=b+4|0;HEAP32[b>>2]=t;l|=0;t=0;b=97;break;case 97:b=98;break;case 98:b=99;break;case 99:b=100;break;case 100:b=101;break;case 101:b=146;break;case 102:b=103;break;case 103:b=0!=(t|0)?104:107;break;case 104:b=105;break;case 105:t|=0;b=v;v=b+4|0;HEAP32[b>>2]=t;l|=0;t=0;b=106;break;case 106:b=107;break;case 107:b=(l|0)!=(n|0)?108:131;break;case 108:_Fax3BadLength(148456,g,HEAP32[(h+92|0)>>2],l,n);b=109;break;case 109:if((l|0)>(n|0))b=110;else var D=0,b=111;
break;case 110:D=v>>>0>u>>>0;b=111;break;case 111:b=D?112:113;break;case 112:v=b=v-4|0;l=l-HEAP32[b>>2]|0;b=109;break;case 113:b=(l|0)<(n|0)?114:123;break;case 114:b=0>(l|0)?115:116;break;case 115:l=0;b=116;break;case 116:b=0!=((v-u|0)/4&1|0)?117:120;break;case 117:b=118;break;case 118:t|=0;b=v;v=b+4|0;HEAP32[b>>2]=t;l|=0;t=0;b=119;break;case 119:b=120;break;case 120:b=121;break;case 121:t=t+(n-l|0)|0;b=v;v=b+4|0;HEAP32[b>>2]=t;l=l+(n-l|0)|0;t=0;b=122;break;case 122:b=130;break;case 123:b=(l|0)>(n|
0)?124:129;break;case 124:b=125;break;case 125:t=t+n|0;b=v;v=b+4|0;HEAP32[b>>2]=t;l=l+n|0;t=0;b=126;break;case 126:b=127;break;case 127:t|=0;b=v;v=b+4|0;HEAP32[b>>2]=t;l|=0;t=0;b=128;break;case 128:b=129;break;case 129:b=130;break;case 130:b=131;break;case 131:b=132;break;case 132:b=133;break;case 133:FUNCTION_TABLE[HEAP32[(h+60|0)>>2]](f,u,v,n);b=0!=(z&4|0)?134:137;break;case 134:x=q-(q&-8)|0;b=135;break;case 135:q=q-x|0;p>>>=x>>>0;b=136;break;case 136:b=145;break;case 137:b=0!=(z&8|0)?138:144;break;
case 138:B=q-(q&-16)|0;b=139;break;case 139:q=q-B|0;p>>>=B>>>0;b=140;break;case 140:b=0==(q|0)?141:143;break;case 141:b=0==(r&1|0)?143:142;break;case 142:r=r+1|0;b=143;break;case 143:b=144;break;case 144:b=145;break;case 145:f=f+HEAP32[((h|0)+8|0)>>2]|0;k=k-HEAP32[((h|0)+8|0)>>2]|0;b=h+92|0;HEAP32[b>>2]=HEAP32[b>>2]+1|0;b=6;break;case 146:FUNCTION_TABLE[HEAP32[(h+60|0)>>2]](f,u,v,n);b=147;break;case 147:HEAP32[(h+52|0)>>2]=q;HEAP32[(h+48|0)>>2]=p;HEAP32[(h+56|0)>>2]=w;b=g+608|0;HEAP32[b>>2]=HEAP32[b>>
2]-(r-HEAP32[(g+604|0)>>2]|0)|0;HEAP32[(g+604|0)>>2]=r;b=148;break;case 148:e=-1;b=152;break;case 149:b=150;break;case 150:HEAP32[(h+52|0)>>2]=q;HEAP32[(h+48|0)>>2]=p;HEAP32[(h+56|0)>>2]=w;b=g+608|0;HEAP32[b>>2]=HEAP32[b>>2]-(r-HEAP32[(g+604|0)>>2]|0)|0;HEAP32[(g+604|0)>>2]=r;b=151;break;case 151:e=1;b=152;break;case 152:return m=e,STACKTOP=a,m;default:assert(0,"bad label: "+b)}}
function _find0span(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k,h,l;e=m;g=d;f=c-g|0;e=e+(g>>3)|0;a=0<(f|0)?2:10;break;case 2:k=a=g&7;a=0!=(a|0)?3:10;break;case 3:h=HEAP8[48+((HEAP8[e]&255)<<k&255)|0]&255;a=(h|0)>(8-k|0)?4:5;break;case 4:h=8-k|0;a=5;break;case 5:a=(h|0)>(f|0)?6:7;break;case 6:h=f;a=7;break;case 7:a=8>(k+h|0)?8:9;break;case 8:b=h;a=34;break;case 9:f=f-h|0;e=e+1|0;a=11;break;case 10:h=0;a=11;break;case 11:a=64<=(f|0)?12:23;break;case 12:a=13;break;case 13:a=0==(e&3|0)^1?
14:17;break;case 14:a=0!=(HEAP8[e]&255|0)?15:16;break;case 15:b=h+(HEAP8[48+(HEAP8[e]&255)|0]&255)|0;a=34;break;case 16:h=h+8|0;f=f-8|0;e=e+1|0;a=13;break;case 17:l=e;a=18;break;case 18:if(32<=(f|0))a=19;else var n=0,a=20;break;case 19:n=0==(HEAP32[l>>2]|0);a=20;break;case 20:a=n?21:22;break;case 21:h=h+32|0;f=f-32|0;l=l+4|0;a=18;break;case 22:e=l;a=23;break;case 23:a=24;break;case 24:a=8<=(f|0)?25:28;break;case 25:a=0!=(HEAP8[e]&255|0)?26:27;break;case 26:b=h+(HEAP8[48+(HEAP8[e]&255)|0]&255)|0;a=
34;break;case 27:h=h+8|0;f=f-8|0;e=e+1|0;a=24;break;case 28:a=0<(f|0)?29:33;break;case 29:k=HEAP8[48+(HEAP8[e]&255)|0]&255;a=(k|0)>(f|0)?30:31;break;case 30:var p=f,a=32;break;case 31:p=k;a=32;break;case 32:h=h+p|0;a=33;break;case 33:b=h;a=34;break;case 34:return b;default:assert(0,"bad label: "+a)}}
function _TIFFInitCCITTRLEW(m,d){var c=0,a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e;e=m;c=0!=(_InitCCITTFax3(e)|0)?2:3;break;case 2:HEAP32[(e+532|0)>>2]=98;HEAP32[(e+540|0)>>2]=98;HEAP32[(e+548|0)>>2]=98;b=_TIFFSetField(e,65536,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=11,tempInt));c=4;break;case 3:b=0;c=4;break;case 4:return c=b,STACKTOP=a,c;default:assert(0,"bad label: "+c)}}
function _Fax3Unexpected(m,d,c,a){var b=0,e=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h;g=m;f=d;k=c;h=a;var l=HEAP32[(f+628|0)>>2],n=0!=(HEAP32[(f+12|0)>>2]&1024|0)?41896:41272,b=0!=(HEAP32[(f+12|0)>>2]&1024|0)?2:3;break;case 2:var p=HEAP32[(f+492|0)>>2],b=4;break;case 3:p=HEAP32[(f+452|0)>>2];b=4;break;case 4:m=h;_TIFFErrorExt(l,g,39928,(tempInt=STACKTOP,STACKTOP=STACKTOP+32|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=k,HEAP32[tempInt+8>>2]=
n,HEAP32[tempInt+16>>2]=p,HEAP32[tempInt+24>>2]=m,tempInt));STACKTOP=e;return;default:assert(0,"bad label: "+b)}}
function _Fax3PrematureEOF(m,d,c,a){var b=0,e=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h;g=m;f=d;k=c;h=a;var l=HEAP32[(f+628|0)>>2],n=0!=(HEAP32[(f+12|0)>>2]&1024|0)?41896:41272,b=0!=(HEAP32[(f+12|0)>>2]&1024|0)?2:3;break;case 2:var p=HEAP32[(f+492|0)>>2],b=4;break;case 3:p=HEAP32[(f+452|0)>>2];b=4;break;case 4:m=h;_TIFFWarningExt(l,g,40600,(tempInt=STACKTOP,STACKTOP=STACKTOP+32|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=k,HEAP32[tempInt+8>>
2]=n,HEAP32[tempInt+16>>2]=p,HEAP32[tempInt+24>>2]=m,tempInt));STACKTOP=e;return;default:assert(0,"bad label: "+b)}}
function _Fax3BadLength(m,d,c,a,b){var e=0,g=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var f,k,h,l,n;f=m;k=d;h=c;l=a;n=b;var p=HEAP32[(k+628|0)>>2],q=l>>>0<n>>>0?23840:23192,t=0!=(HEAP32[(k+12|0)>>2]&1024|0)?41896:41272,e=0!=(HEAP32[(k+12|0)>>2]&1024|0)?2:3;break;case 2:var r=HEAP32[(k+492|0)>>2],e=4;break;case 3:r=HEAP32[(k+452|0)>>2];e=4;break;case 4:m=l;_TIFFWarningExt(p,f,25136,(tempInt=STACKTOP,STACKTOP=STACKTOP+48|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>
2]=q,HEAP32[tempInt+8>>2]=h,HEAP32[tempInt+16>>2]=t,HEAP32[tempInt+24>>2]=r,HEAP32[tempInt+32>>2]=m,HEAP32[tempInt+40>>2]=n,tempInt));STACKTOP=g;return;default:assert(0,"bad label: "+e)}}
function _Fax3Encode2DRow(m,d,c,a){for(var b=0,b=1;;)switch(b){case 1:var e,g,f,k,h,l,n,p,q,t;e=m;g=d;f=c;k=a;h=0;b=0!=((HEAP8[g|0]&255)>>7&1|0)?2:3;break;case 2:var r=0,b=4;break;case 3:r=_find0span(g,0,k)|0;b=4;break;case 4:l=r;b=0!=((HEAP8[f|0]&255)>>7&1|0)?5:6;break;case 5:var s=0,b=7;break;case 6:s=_find0span(f,0,k)|0;b=7;break;case 7:n=s;b=8;break;case 8:b=n>>>0<k>>>0?9:13;break;case 9:var v=n,b=0!=((HEAP8[f+(n>>>3)|0]&255)>>(7-(n&7)|0)&1|0)?10:11;break;case 10:var u=_find1span(f,n,k),b=12;
break;case 11:u=_find0span(f,n,k);b=12;break;case 12:var w=v+u|0,b=14;break;case 13:w=k;b=14;break;case 14:q=w;b=q>>>0>=l>>>0?15:30;break;case 15:t=n-l|0;b=-3<=(t|0)?16:17;break;case 16:b=3>=(t|0)?28:17;break;case 17:b=l>>>0<k>>>0?18:22;break;case 18:var y=l,b=0!=((HEAP8[g+(l>>>3)|0]&255)>>(7-(l&7)|0)&1|0)?19:20;break;case 19:var A=_find1span(g,l,k),b=21;break;case 20:A=_find0span(g,l,k);b=21;break;case 21:var z=y+A|0,b=23;break;case 22:z=k;b=23;break;case 23:p=z;_Fax3PutBits(e,HEAP16[4649]&65535,
HEAP16[4648]&65535);b=0==(h+l|0)?25:24;break;case 24:b=0==((HEAP8[g+(h>>>3)|0]&255)>>(7-(h&7)|0)&1|0)?25:26;break;case 25:_putspan(e,l-h|0,79600);_putspan(e,p-l|0,146816);b=27;break;case 26:_putspan(e,l-h|0,146816);_putspan(e,p-l|0,79600);b=27;break;case 27:h=p;b=29;break;case 28:_Fax3PutBits(e,HEAP16[((344+(6*(t+3|0)&-1)|0)+2|0)>>1]&65535,HEAP16[(344+(6*(t+3|0)&-1)|0)>>1]&65535);h=l;b=29;break;case 29:b=31;break;case 30:_Fax3PutBits(e,HEAP16[4345]&65535,HEAP16[4344]&65535);h=q;b=31;break;case 31:b=
h>>>0>=k>>>0?32:33;break;case 32:b=43;break;case 33:var x=h,b=0!=((HEAP8[g+(h>>>3)|0]&255)>>(7-(h&7)|0)&1|0)?34:35;break;case 34:var B=_find1span(g,h,k),b=36;break;case 35:B=_find0span(g,h,k);b=36;break;case 36:l=x+B|0;var C=h,b=0!=((HEAP8[g+(h>>>3)|0]&255)>>(7-(h&7)|0)&1|0)?38:37;break;case 37:var D=_find1span(f,h,k),b=39;break;case 38:D=_find0span(f,h,k);b=39;break;case 39:var F=n=C+D|0,b=0!=((HEAP8[g+(h>>>3)|0]&255)>>(7-(h&7)|0)&1|0)?40:41;break;case 40:var I=_find1span(f,n,k),b=42;break;case 41:I=
_find0span(f,n,k);b=42;break;case 42:n=F+I|0;b=8;break;case 43:return 1;default:assert(0,"bad label: "+b)}}
function _Fax3PutBits(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k,h;b=m;e=d;g=c;f=HEAP32[(b+576|0)>>2];k=HEAP32[(f+52|0)>>2];h=HEAP32[(f+48|0)>>2];a=2;break;case 2:a=g>>>0>k>>>0?3:6;break;case 3:h|=e>>>((g-k|0)>>>0);g=g-k|0;a=(HEAP32[(b+608|0)>>2]|0)>=(HEAP32[(b+592|0)>>2]|0)?4:5;break;case 4:_TIFFFlushData1(b);a=5;break;case 5:a=h&255;k=b+604|0;h=HEAP32[k>>2];HEAP32[k>>2]=h+1|0;HEAP8[h]=a;a=b+608|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;h=0;k=8;a=2;break;case 6:a=9>g>>>0?7:8;break;case 7:a=9;
break;case 8:throw ___assert_func(30088,608,44920,39312),"Reached an unreachable!";case 9:h|=(e&HEAP32[(42144+(g<<2)|0)>>2])<<(k-g|0);k=k-g|0;a=0==(k|0)?10:13;break;case 10:a=(HEAP32[(b+608|0)>>2]|0)>=(HEAP32[(b+592|0)>>2]|0)?11:12;break;case 11:_TIFFFlushData1(b);a=12;break;case 12:a=h&255;k=b+604|0;h=HEAP32[k>>2];HEAP32[k>>2]=h+1|0;HEAP8[h]=a;a=b+608|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;h=0;k=8;a=13;break;case 13:HEAP32[(f+48|0)>>2]=h;HEAP32[(f+52|0)>>2]=k;return;default:assert(0,"bad label: "+a)}}
function _find1span(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k,h,l;e=m;g=d;f=c-g|0;e=e+(g>>3)|0;a=0<(f|0)?2:10;break;case 2:k=a=g&7;a=0!=(a|0)?3:10;break;case 3:h=HEAP8[8696+((HEAP8[e]&255)<<k&255)|0]&255;a=(h|0)>(8-k|0)?4:5;break;case 4:h=8-k|0;a=5;break;case 5:a=(h|0)>(f|0)?6:7;break;case 6:h=f;a=7;break;case 7:a=8>(k+h|0)?8:9;break;case 8:b=h;a=34;break;case 9:f=f-h|0;e=e+1|0;a=11;break;case 10:h=0;a=11;break;case 11:a=64<=(f|0)?12:23;break;case 12:a=13;break;case 13:a=0==(e&3|0)^
1?14:17;break;case 14:a=255!=(HEAP8[e]&255|0)?15:16;break;case 15:b=h+(HEAP8[8696+(HEAP8[e]&255)|0]&255)|0;a=34;break;case 16:h=h+8|0;f=f-8|0;e=e+1|0;a=13;break;case 17:l=e;a=18;break;case 18:if(32<=(f|0))a=19;else var n=0,a=20;break;case 19:n=-1==(HEAP32[l>>2]|0);a=20;break;case 20:a=n?21:22;break;case 21:h=h+32|0;f=f-32|0;l=l+4|0;a=18;break;case 22:e=l;a=23;break;case 23:a=24;break;case 24:a=8<=(f|0)?25:28;break;case 25:a=255!=(HEAP8[e]&255|0)?26:27;break;case 26:b=h+(HEAP8[8696+(HEAP8[e]&255)|
0]&255)|0;a=34;break;case 27:h=h+8|0;f=f-8|0;e=e+1|0;a=24;break;case 28:a=0<(f|0)?29:33;break;case 29:k=HEAP8[8696+(HEAP8[e]&255)|0]&255;a=(k|0)>(f|0)?30:31;break;case 30:var p=f,a=32;break;case 31:p=k;a=32;break;case 32:h=h+p|0;a=33;break;case 33:b=h;a=34;break;case 34:return b;default:assert(0,"bad label: "+a)}}
function _Fax3Extension(m,d,c,a){var b=0,e=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h;g=m;f=d;k=c;h=a;var l=HEAP32[(f+628|0)>>2],n=0!=(HEAP32[(f+12|0)>>2]&1024|0)?41896:41272,b=0!=(HEAP32[(f+12|0)>>2]&1024|0)?2:3;break;case 2:var p=HEAP32[(f+492|0)>>2],b=4;break;case 3:p=HEAP32[(f+452|0)>>2];b=4;break;case 4:m=h;_TIFFErrorExt(l,g,36952,(tempInt=STACKTOP,STACKTOP=STACKTOP+32|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=k,HEAP32[tempInt+8>>2]=n,
HEAP32[tempInt+16>>2]=p,HEAP32[tempInt+24>>2]=m,tempInt));STACKTOP=e;return;default:assert(0,"bad label: "+b)}}
function _putspan(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k,h,l,n,p,q;b=m;e=d;g=c;f=HEAP32[(b+576|0)>>2];k=HEAP32[(f+52|0)>>2];h=HEAP32[(f+48|0)>>2];a=2;break;case 2:a=2624<=(e|0)?3:16;break;case 3:p=g+618|0;l=HEAP16[(p+2|0)>>1]&65535;n=HEAP16[(p|0)>>1]&65535;a=4;break;case 4:a=n>>>0>k>>>0?5:8;break;case 5:h|=l>>>((n-k|0)>>>0);n=n-k|0;a=(HEAP32[(b+608|0)>>2]|0)>=(HEAP32[(b+592|0)>>2]|0)?6:7;break;case 6:_TIFFFlushData1(b);a=7;break;case 7:a=h&255;k=b+604|0;h=HEAP32[k>>2];HEAP32[k>>2]=
h+1|0;HEAP8[h]=a;a=b+608|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;h=0;k=8;a=4;break;case 8:a=9>n>>>0?9:10;break;case 9:a=11;break;case 10:throw ___assert_func(30088,650,42984,39312),"Reached an unreachable!";case 11:h|=(l&HEAP32[(42144+(n<<2)|0)>>2])<<(k-n|0);k=k-n|0;a=0==(k|0)?12:15;break;case 12:a=(HEAP32[(b+608|0)>>2]|0)>=(HEAP32[(b+592|0)>>2]|0)?13:14;break;case 13:_TIFFFlushData1(b);a=14;break;case 14:a=h&255;k=b+604|0;h=HEAP32[k>>2];HEAP32[k>>2]=h+1|0;HEAP8[h]=a;a=b+608|0;HEAP32[a>>2]=HEAP32[a>>2]+1|
0;h=0;k=8;a=15;break;case 15:e=e-(HEAP16[(p+4|0)>>1]<<16>>16)|0;a=2;break;case 16:a=64<=(e|0)?17:33;break;case 17:q=g+(6*((e>>6)+63|0)&-1)|0;a=(HEAP16[(q+4|0)>>1]<<16>>16|0)==(e>>6<<6|0)?18:19;break;case 18:a=20;break;case 19:throw ___assert_func(30088,655,42984,37640),"Reached an unreachable!";case 20:l=HEAP16[(q+2|0)>>1]&65535;n=HEAP16[(q|0)>>1]&65535;a=21;break;case 21:a=n>>>0>k>>>0?22:25;break;case 22:h|=l>>>((n-k|0)>>>0);n=n-k|0;a=(HEAP32[(b+608|0)>>2]|0)>=(HEAP32[(b+592|0)>>2]|0)?23:24;break;
case 23:_TIFFFlushData1(b);a=24;break;case 24:a=h&255;k=b+604|0;h=HEAP32[k>>2];HEAP32[k>>2]=h+1|0;HEAP8[h]=a;a=b+608|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;h=0;k=8;a=21;break;case 25:a=9>n>>>0?26:27;break;case 26:a=28;break;case 27:throw ___assert_func(30088,660,42984,39312),"Reached an unreachable!";case 28:h|=(l&HEAP32[(42144+(n<<2)|0)>>2])<<(k-n|0);k=k-n|0;a=0==(k|0)?29:32;break;case 29:a=(HEAP32[(b+608|0)>>2]|0)>=(HEAP32[(b+592|0)>>2]|0)?30:31;break;case 30:_TIFFFlushData1(b);a=31;break;case 31:a=h&
255;k=b+604|0;h=HEAP32[k>>2];HEAP32[k>>2]=h+1|0;HEAP8[h]=a;a=b+608|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;h=0;k=8;a=32;break;case 32:e=e-(HEAP16[(q+4|0)>>1]<<16>>16)|0;a=33;break;case 33:l=HEAP16[((g+(6*e&-1)|0)+2|0)>>1]&65535;n=HEAP16[(g+(6*e&-1)|0)>>1]&65535;a=34;break;case 34:a=n>>>0>k>>>0?35:38;break;case 35:h|=l>>>((n-k|0)>>>0);n=n-k|0;a=(HEAP32[(b+608|0)>>2]|0)>=(HEAP32[(b+592|0)>>2]|0)?36:37;break;case 36:_TIFFFlushData1(b);a=37;break;case 37:a=h&255;k=b+604|0;h=HEAP32[k>>2];HEAP32[k>>2]=h+1|0;HEAP8[h]=
a;a=b+608|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;h=0;k=8;a=34;break;case 38:a=9>n>>>0?39:40;break;case 39:a=41;break;case 40:throw ___assert_func(30088,667,42984,39312),"Reached an unreachable!";case 41:h|=(l&HEAP32[(42144+(n<<2)|0)>>2])<<(k-n|0);k=k-n|0;a=0==(k|0)?42:45;break;case 42:a=(HEAP32[(b+608|0)>>2]|0)>=(HEAP32[(b+592|0)>>2]|0)?43:44;break;case 43:_TIFFFlushData1(b);a=44;break;case 44:a=h&255;k=b+604|0;h=HEAP32[k>>2];HEAP32[k>>2]=h+1|0;HEAP8[h]=a;a=b+608|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;h=0;k=8;
a=45;break;case 45:HEAP32[(f+48|0)>>2]=h;HEAP32[(f+52|0)>>2]=k;return;default:assert(0,"bad label: "+a)}}
function _Fax3VGetField(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k;e=m;g=d;f=c;k=HEAP32[(e+576|0)>>2];a=0!=(k|0)?2:3;break;case 2:a=4;break;case 3:throw ___assert_func(30088,1198,44888,33384),"Reached an unreachable!";case 4:a=g;a=65536==(a|0)?5:65540==(a|0)?6:292==(a|0)|293==(a|0)?7:326==(a|0)?8:327==(a|0)?9:328==(a|0)?10:11;break;case 5:var a=HEAP32[(k+4|0)>>2],h=f,h=(tempInt=HEAP32[h+4>>2],HEAP32[h+4>>2]=tempInt+8,HEAP32[HEAP32[h>>2]+tempInt>>2]);HEAP32[h>>2]=a;a=12;break;case 6:a=
HEAP32[(HEAP32[(e+576|0)>>2]+60|0)>>2];h=f;h=(tempInt=HEAP32[h+4>>2],HEAP32[h+4>>2]=tempInt+8,HEAP32[HEAP32[h>>2]+tempInt>>2]);HEAP32[h>>2]=a;a=12;break;case 7:a=HEAP32[(k+28|0)>>2];h=f;h=(tempInt=HEAP32[h+4>>2],HEAP32[h+4>>2]=tempInt+8,HEAP32[HEAP32[h>>2]+tempInt>>2]);HEAP32[h>>2]=a;a=12;break;case 8:a=HEAP32[(k+24|0)>>2];h=f;h=(tempInt=HEAP32[h+4>>2],HEAP32[h+4>>2]=tempInt+8,HEAP32[HEAP32[h>>2]+tempInt>>2]);HEAP32[h>>2]=a;a=12;break;case 9:a=HEAP16[(k+16|0)>>1];h=f;h=(tempInt=HEAP32[h+4>>2],HEAP32[h+
4>>2]=tempInt+8,HEAP32[HEAP32[h>>2]+tempInt>>2]);HEAP16[h>>1]=a;a=12;break;case 10:a=HEAP32[(k+20|0)>>2];h=f;h=(tempInt=HEAP32[h+4>>2],HEAP32[h+4>>2]=tempInt+8,HEAP32[HEAP32[h>>2]+tempInt>>2]);HEAP32[h>>2]=a;a=12;break;case 11:b=FUNCTION_TABLE[HEAP32[(k+32|0)>>2]](e,g,f);a=13;break;case 12:b=1;a=13;break;case 13:return b;default:assert(0,"bad label: "+a)}}function _Fax3FixupTags(m){return 1}
function _Fax3SetupState(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e,g,f,k,h,l,n;b=m;e=b+40|0;g=HEAP32[(b+576|0)>>2];k=HEAP32[(b+576|0)>>2];d=1!=(HEAP16[(e+44|0)>>1]&65535|0)?2:3;break;case 2:_TIFFErrorExt(HEAP32[(b+628|0)>>2],148424,32200,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=42;break;case 3:d=0!=(HEAP32[(b+12|0)>>2]&1024|0)?4:5;break;case 4:h=
_TIFFTileRowSize(b);l=HEAP32[(e+28|0)>>2];d=6;break;case 5:h=_TIFFScanlineSize(b);l=HEAP32[(e+16|0)>>2];d=6;break;case 6:HEAP32[(g+8|0)>>2]=h;HEAP32[(g+12|0)>>2]=l;if(0!=(HEAP32[(g+28|0)>>2]&1|0))var p=1,d=8;else d=7;break;case 7:p=4==(HEAP16[(e+48|0)>>1]&65535|0);d=8;break;case 8:f=p&1;HEAP32[(k+64|0)>>2]=0;d=4294967264>l>>>0?9:10;break;case 9:var q=((l+31|0)>>>0)/32&-1,d=11;break;case 10:q=0;d=11;break;case 11:n=q<<5;d=0!=(f|0)?12:16;break;case 12:d=((n<<1>>>0)/2&-1|0)==(n|0)?13:14;break;case 13:var t=
n<<1,d=15;break;case 14:t=0;d=15;break;case 15:n=t;d=16;break;case 16:d=0==(n|0)?21:17;break;case 17:d=((n<<1>>>0)/2&-1|0)==(n|0)?18:19;break;case 18:var r=n<<1,d=20;break;case 19:r=0;d=20;break;case 20:d=0==(r|0)?21:22;break;case 21:a=l;_TIFFErrorExt(HEAP32[(b+628|0)>>2],HEAP32[(b|0)>>2],31984,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,tempInt));a=0;d=42;break;case 22:var s=b,d=((n<<1>>>0)/2&-1|0)==(n|0)?23:24;break;case 23:var v=n<<1,d=25;break;
case 24:v=0;d=25;break;case 25:d=__TIFFCheckMalloc(s,v,4,31720);HEAP32[(k+64|0)>>2]=d;d=0==(HEAP32[(k+64|0)>>2]|0)?26:27;break;case 26:a=0;d=42;break;case 27:var u=HEAP32[(k+64|0)>>2],d=((n<<1>>>0)/2&-1|0)==(n|0)?28:29;break;case 28:var w=n<<1,d=30;break;case 29:w=0;d=30;break;case 30:_memset(u,0,w<<2);HEAP32[(k+72|0)>>2]=HEAP32[(k+64|0)>>2];d=0!=(f|0)?31:32;break;case 31:HEAP32[(k+68|0)>>2]=HEAP32[(k+64|0)>>2]+(n<<2)|0;d=33;break;case 32:HEAP32[(k+68|0)>>2]=0;d=33;break;case 33:d=3==(HEAP16[(e+48|
0)>>1]&65535|0)?34:36;break;case 34:d=0!=(HEAP32[((k|0)+28|0)>>2]&1|0)?35:36;break;case 35:HEAP32[(b+532|0)>>2]=252;HEAP32[(b+540|0)>>2]=252;HEAP32[(b+548|0)>>2]=252;d=36;break;case 36:d=0!=(f|0)?37:40;break;case 37:var d=HEAP32[(b+576|0)>>2],y=__TIFFmalloc(h);HEAP32[(d+80|0)>>2]=y;d=0==(HEAP32[(d+80|0)>>2]|0)?38:39;break;case 38:_TIFFErrorExt(HEAP32[(b+628|0)>>2],148424,31432,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=
0,tempInt));a=0;d=42;break;case 39:d=41;break;case 40:HEAP32[(HEAP32[(b+576|0)>>2]+80|0)>>2]=0;d=41;break;case 41:a=1;d=42;break;case 42:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _Fax3VSetField(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k,h;e=m;g=d;f=c;k=HEAP32[(e+576|0)>>2];a=0!=(k|0)?2:3;break;case 2:a=4;break;case 3:throw ___assert_func(30088,1151,44872,33384),"Reached an unreachable!";case 4:a=0!=(HEAP32[(k+36|0)>>2]|0)?5:6;break;case 5:a=7;break;case 6:throw ___assert_func(30088,1152,44872,28376),"Reached an unreachable!";case 7:a=g;a=65536==(a|0)?8:65540==(a|0)?9:292==(a|0)?10:293==(a|0)?13:326==(a|0)?16:327==(a|0)?17:328==(a|0)?18:19;break;case 8:b=
f;b=(tempInt=HEAP32[b+4>>2],HEAP32[b+4>>2]=tempInt+8,HEAP32[HEAP32[b>>2]+tempInt>>2]);HEAP32[(k+4|0)>>2]=b;b=1;a=24;break;case 9:b=f;b=(tempInt=HEAP32[b+4>>2],HEAP32[b+4>>2]=tempInt+8,HEAP32[HEAP32[b>>2]+tempInt>>2]);HEAP32[(HEAP32[(e+576|0)>>2]+60|0)>>2]=b;b=1;a=24;break;case 10:a=3==(HEAP16[((e+40|0)+48|0)>>1]&65535|0)?11:12;break;case 11:a=f;a=(tempInt=HEAP32[a+4>>2],HEAP32[a+4>>2]=tempInt+8,HEAP32[HEAP32[a>>2]+tempInt>>2]);HEAP32[(k+28|0)>>2]=a;a=12;break;case 12:a=20;break;case 13:a=4==(HEAP16[((e+
40|0)+48|0)>>1]&65535|0)?14:15;break;case 14:a=f;a=(tempInt=HEAP32[a+4>>2],HEAP32[a+4>>2]=tempInt+8,HEAP32[HEAP32[a>>2]+tempInt>>2]);HEAP32[(k+28|0)>>2]=a;a=15;break;case 15:a=20;break;case 16:a=f;a=(tempInt=HEAP32[a+4>>2],HEAP32[a+4>>2]=tempInt+8,HEAP32[HEAP32[a>>2]+tempInt>>2]);HEAP32[(k+24|0)>>2]=a;a=20;break;case 17:a=f;a=(tempInt=HEAP32[a+4>>2],HEAP32[a+4>>2]=tempInt+8,HEAP32[HEAP32[a>>2]+tempInt>>2])&65535;HEAP16[(k+16|0)>>1]=a;a=20;break;case 18:a=f;a=(tempInt=HEAP32[a+4>>2],HEAP32[a+4>>2]=
tempInt+8,HEAP32[HEAP32[a>>2]+tempInt>>2]);HEAP32[(k+20|0)>>2]=a;a=20;break;case 19:b=FUNCTION_TABLE[HEAP32[(k+36|0)>>2]](e,g,f);a=24;break;case 20:h=a=_TIFFFieldWithTag(e,g);a=0!=(a|0)?21:22;break;case 21:a=(e+40|0)+(((HEAP16[(h+24|0)>>1]&65535|0)/32&-1)<<2)|0;HEAP32[a>>2]|=1<<(HEAP16[(h+24|0)>>1]&31);a=23;break;case 22:b=0;a=24;break;case 23:b=e+12|0;HEAP32[b>>2]|=8;b=1;a=24;break;case 24:return b;default:assert(0,"bad label: "+a)}}
function _Fax3PrintDir(m,d,c){var a=0,b=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h;e=m;g=d;f=c;k=HEAP32[(e+576|0)>>2];a=0!=(k|0)?2:3;break;case 2:a=4;break;case 3:throw ___assert_func(30088,1231,44936,33384),"Reached an unreachable!";case 4:a=0!=(HEAP32[((e+40|0)+8|0)>>2]&512|0)?5:17;break;case 5:h=31288;a=4==(HEAP16[((e+40|0)+48|0)>>1]&65535|0)?6:9;break;case 6:_fprintf(g,31112,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|
0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0!=(HEAP32[(k+28|0)>>2]&2|0)?7:8;break;case 7:a=h;_fprintf(g,30896,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,tempInt));a=8;break;case 8:a=16;break;case 9:_fprintf(g,30696,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0!=(HEAP32[(k+28|0)>>2]&1|0)?10:11;break;case 10:_fprintf(g,30496,(tempInt=STACKTOP,STACKTOP=
STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=h,tempInt));h=30240;a=11;break;case 11:a=0!=(HEAP32[(k+28|0)>>2]&4|0)?12:13;break;case 12:_fprintf(g,29984,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=h,tempInt));h=30240;a=13;break;case 13:a=0!=(HEAP32[(k+28|0)>>2]&2|0)?14:15;break;case 14:a=h;_fprintf(g,30896,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,tempInt));a=15;break;
case 15:a=16;break;case 16:var a=HEAP32[(k+28|0)>>2],l=HEAP32[(k+28|0)>>2];_fprintf(g,29856,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,HEAP32[tempInt+8>>2]=l,tempInt));a=17;break;case 17:a=0!=(HEAP32[((e+40|0)+8|0)>>2]&8|0)?18:23;break;case 18:_fprintf(g,29608,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=HEAP16[(k+16|0)>>1]&65535;a=0==(a|0)?19:1==(a|0)?
20:2==(a|0)?21:22;break;case 19:_fprintf(g,29416,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=22;break;case 20:_fprintf(g,29272,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=22;break;case 21:_fprintf(g,29168,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>
2]=0,tempInt));a=22;break;case 22:a=HEAP16[(k+16|0)>>1]&65535;l=HEAP16[(k+16|0)>>1]&65535;_fprintf(g,28928,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,HEAP32[tempInt+8>>2]=l,tempInt));a=23;break;case 23:a=0!=(HEAP32[((e+40|0)+8|0)>>2]&4|0)?24:25;break;case 24:a=HEAP32[(k+24|0)>>2];_fprintf(g,28688,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,tempInt));a=25;break;case 25:a=0!=(HEAP32[((e+40|
0)+8|0)>>2]&16|0)?26:27;break;case 26:a=HEAP32[(k+20|0)>>2];_fprintf(g,28560,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,tempInt));a=27;break;case 27:a=0!=(HEAP32[(k+40|0)>>2]|0)?28:29;break;case 28:FUNCTION_TABLE[HEAP32[(k+40|0)>>2]](e,g,f);a=29;break;case 29:STACKTOP=b;return;default:assert(0,"bad label: "+a)}}
function _Fax3PreDecode(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b;a=m;b=HEAP32[(a+576|0)>>2];c=0!=(b|0)?2:3;break;case 2:c=4;break;case 3:throw ___assert_func(30088,152,44968,32592),"Reached an unreachable!";case 4:HEAP32[(b+52|0)>>2]=0;HEAP32[(b+48|0)>>2]=0;HEAP32[(b+56|0)>>2]=0;c=_TIFFGetBitRevTable(2!=(HEAP16[((a+40|0)+54|0)>>1]&65535|0)&1);HEAP32[(b+44|0)>>2]=c;c=0!=(HEAP32[(b+68|0)>>2]|0)?5:6;break;case 5:HEAP32[(HEAP32[(b+68|0)>>2]|0)>>2]=HEAP32[((b|0)+12|0)>>2];HEAP32[(HEAP32[(b+68|0)>>
2]+4|0)>>2]=0;c=6;break;case 6:return HEAP32[(b+92|0)>>2]=0,1;default:assert(0,"bad label: "+c)}}
function _Fax3Decode1D(m,d,c,a){var b=0;a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var e,g,f,k,h,l,n,p,q,t,r,s,v,u,w,y,A;g=m;f=d;k=c;h=HEAP32[(g+576|0)>>2];n=HEAP32[((h|0)+12|0)>>2];y=HEAP32[(h+44|0)>>2];b=0!=((k|0)%(HEAP32[((h|0)+8|0)>>2]|0)&-1|0)?2:3;break;case 2:_TIFFErrorExt(HEAP32[(g+628|0)>>2],148488,26184,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));e=-1;b=217;break;case 3:b=
4;break;case 4:p=HEAP32[(h+48|0)>>2];q=HEAP32[(h+52|0)>>2];w=HEAP32[(h+56|0)>>2];r=HEAP32[(g+604|0)>>2];s=r+HEAP32[(g+608|0)>>2]|0;b=5;break;case 5:u=HEAP32[(h+72|0)>>2];b=6;break;case 6:b=0<(k|0)?7:214;break;case 7:t=l=0;v=u;b=8;break;case 8:b=0==(w|0)?9:30;break;case 9:b=10;break;case 10:b=11;break;case 11:b=11>(q|0)?12:23;break;case 12:b=r>>>0>=s>>>0?13:16;break;case 13:b=0==(q|0)?14:15;break;case 14:b=180;break;case 15:q=11;b=22;break;case 16:b=r;r=b+1|0;p|=(HEAP8[y+(HEAP8[b]&255)|0]&255)<<q;
q=b=q+8|0;b=11>(b|0)?17:21;break;case 17:b=r>>>0>=s>>>0?18:19;break;case 18:q=11;b=20;break;case 19:b=r;r=b+1|0;p|=(HEAP8[y+(HEAP8[b]&255)|0]&255)<<q;q=q+8|0;b=20;break;case 20:b=21;break;case 21:b=22;break;case 22:b=23;break;case 23:b=24;break;case 24:b=0==(p&2047|0)?25:26;break;case 25:b=29;break;case 26:b=27;break;case 27:q=q-1|0;p>>>=1;b=28;break;case 28:b=10;break;case 29:b=30;break;case 30:b=31;break;case 31:b=32;break;case 32:b=8>(q|0)?33:39;break;case 33:b=r>>>0>=s>>>0?34:37;break;case 34:b=
0==(q|0)?35:36;break;case 35:b=180;break;case 36:q=8;b=38;break;case 37:b=r;r=b+1|0;p|=(HEAP8[y+(HEAP8[b]&255)|0]&255)<<q;q=q+8|0;b=38;break;case 38:b=39;break;case 39:b=40;break;case 40:b=0!=(p&255|0)?41:42;break;case 41:b=45;break;case 42:b=43;break;case 43:q=q-8|0;p>>>=8;b=44;break;case 44:b=31;break;case 45:b=46;break;case 46:b=0==(p&1|0)?47:50;break;case 47:b=48;break;case 48:q=q-1|0;p>>>=1;b=49;break;case 49:b=46;break;case 50:b=51;break;case 51:q=q-1|0;p>>>=1;b=52;break;case 52:w=0;b=53;break;
case 53:b=54;break;case 54:b=55;break;case 55:b=56;break;case 56:b=57;break;case 57:b=58;break;case 58:b=12>(q|0)?59:70;break;case 59:b=r>>>0>=s>>>0?60:63;break;case 60:b=0==(q|0)?61:62;break;case 61:b=117;break;case 62:q=12;b=69;break;case 63:b=r;r=b+1|0;p|=(HEAP8[y+(HEAP8[b]&255)|0]&255)<<q;q=b=q+8|0;b=12>(b|0)?64:68;break;case 64:b=r>>>0>=s>>>0?65:66;break;case 65:q=12;b=67;break;case 66:b=r;r=b+1|0;p|=(HEAP8[y+(HEAP8[b]&255)|0]&255)<<q;q=q+8|0;b=67;break;case 67:b=68;break;case 68:b=69;break;
case 69:b=70;break;case 70:b=71;break;case 71:A=46832+((p&4095)<<3)|0;b=72;break;case 72:q=q-(HEAP8[A+1|0]&255)|0;p>>>=(HEAP8[A+1|0]&255)>>>0;b=73;break;case 73:b=74;break;case 74:b=HEAP8[A|0]&255;b=12==(b|0)?75:7==(b|0)?76:9==(b|0)|11==(b|0)?79:80;break;case 75:w=1;b=148;break;case 76:b=77;break;case 77:t=t+HEAP32[(A+4|0)>>2]|0;b=v;v=b+4|0;HEAP32[b>>2]=t;l=l+HEAP32[(A+4|0)>>2]|0;t=0;b=78;break;case 78:b=82;break;case 79:l=l+HEAP32[(A+4|0)>>2]|0;t=t+HEAP32[(A+4|0)>>2]|0;b=81;break;case 80:_Fax3Unexpected(148488,
g,HEAP32[(h+92|0)>>2],l);b=148;break;case 81:b=56;break;case 82:b=(l|0)>=(n|0)?83:84;break;case 83:b=148;break;case 84:b=85;break;case 85:b=86;break;case 86:b=87;break;case 87:b=13>(q|0)?88:99;break;case 88:b=r>>>0>=s>>>0?89:92;break;case 89:b=0==(q|0)?90:91;break;case 90:b=117;break;case 91:q=13;b=98;break;case 92:b=r;r=b+1|0;p|=(HEAP8[y+(HEAP8[b]&255)|0]&255)<<q;q=b=q+8|0;b=13>(b|0)?93:97;break;case 93:b=r>>>0>=s>>>0?94:95;break;case 94:q=13;b=96;break;case 95:b=r;r=b+1|0;p|=(HEAP8[y+(HEAP8[b]&
255)|0]&255)<<q;q=q+8|0;b=96;break;case 96:b=97;break;case 97:b=98;break;case 98:b=99;break;case 99:b=100;break;case 100:A=81280+((p&8191)<<3)|0;b=101;break;case 101:q=q-(HEAP8[A+1|0]&255)|0;p>>>=(HEAP8[A+1|0]&255)>>>0;b=102;break;case 102:b=103;break;case 103:b=HEAP8[A|0]&255;b=12==(b|0)?104:8==(b|0)?105:10==(b|0)|11==(b|0)?108:109;break;case 104:w=1;b=148;break;case 105:b=106;break;case 106:t=t+HEAP32[(A+4|0)>>2]|0;b=v;v=b+4|0;HEAP32[b>>2]=t;l=l+HEAP32[(A+4|0)>>2]|0;t=0;b=107;break;case 107:b=111;
break;case 108:l=l+HEAP32[(A+4|0)>>2]|0;t=t+HEAP32[(A+4|0)>>2]|0;b=110;break;case 109:_Fax3Unexpected(148488,g,HEAP32[(h+92|0)>>2],l);b=148;break;case 110:b=85;break;case 111:b=(l|0)>=(n|0)?112:113;break;case 112:b=148;break;case 113:b=0==(HEAP32[(v-4|0)>>2]|0)?114:116;break;case 114:b=0==(HEAP32[(v-8|0)>>2]|0)?115:116;break;case 115:v=v-8|0;b=116;break;case 116:b=55;break;case 117:_Fax3PrematureEOF(148488,g,HEAP32[(h+92|0)>>2],l);b=118;break;case 118:b=0!=(t|0)?119:122;break;case 119:b=120;break;
case 120:t|=0;b=v;v=b+4|0;HEAP32[b>>2]=t;l|=0;t=0;b=121;break;case 121:b=122;break;case 122:b=(l|0)!=(n|0)?123:146;break;case 123:_Fax3BadLength(148488,g,HEAP32[(h+92|0)>>2],l,n);b=124;break;case 124:if((l|0)>(n|0))b=125;else var z=0,b=126;break;case 125:z=v>>>0>u>>>0;b=126;break;case 126:b=z?127:128;break;case 127:v=b=v-4|0;l=l-HEAP32[b>>2]|0;b=124;break;case 128:b=(l|0)<(n|0)?129:138;break;case 129:b=0>(l|0)?130:131;break;case 130:l=0;b=131;break;case 131:b=0!=((v-u|0)/4&1|0)?132:135;break;case 132:b=
133;break;case 133:t|=0;b=v;v=b+4|0;HEAP32[b>>2]=t;l|=0;t=0;b=134;break;case 134:b=135;break;case 135:b=136;break;case 136:t=t+(n-l|0)|0;b=v;v=b+4|0;HEAP32[b>>2]=t;l=l+(n-l|0)|0;t=0;b=137;break;case 137:b=145;break;case 138:b=(l|0)>(n|0)?139:144;break;case 139:b=140;break;case 140:t=t+n|0;b=v;v=b+4|0;HEAP32[b>>2]=t;l=l+n|0;t=0;b=141;break;case 141:b=142;break;case 142:t|=0;b=v;v=b+4|0;HEAP32[b>>2]=t;l|=0;t=0;b=143;break;case 143:b=144;break;case 144:b=145;break;case 145:b=146;break;case 146:b=147;
break;case 147:b=211;break;case 148:b=149;break;case 149:b=0!=(t|0)?150:153;break;case 150:b=151;break;case 151:t|=0;b=v;v=b+4|0;HEAP32[b>>2]=t;l|=0;t=0;b=152;break;case 152:b=153;break;case 153:b=(l|0)!=(n|0)?154:177;break;case 154:_Fax3BadLength(148488,g,HEAP32[(h+92|0)>>2],l,n);b=155;break;case 155:if((l|0)>(n|0))b=156;else var x=0,b=157;break;case 156:x=v>>>0>u>>>0;b=157;break;case 157:b=x?158:159;break;case 158:v=b=v-4|0;l=l-HEAP32[b>>2]|0;b=155;break;case 159:b=(l|0)<(n|0)?160:169;break;case 160:b=
0>(l|0)?161:162;break;case 161:l=0;b=162;break;case 162:b=0!=((v-u|0)/4&1|0)?163:166;break;case 163:b=164;break;case 164:t|=0;b=v;v=b+4|0;HEAP32[b>>2]=t;l|=0;t=0;b=165;break;case 165:b=166;break;case 166:b=167;break;case 167:t=t+(n-l|0)|0;b=v;v=b+4|0;HEAP32[b>>2]=t;l=l+(n-l|0)|0;t=0;b=168;break;case 168:b=176;break;case 169:b=(l|0)>(n|0)?170:175;break;case 170:b=171;break;case 171:t=t+n|0;b=v;v=b+4|0;HEAP32[b>>2]=t;l=l+n|0;t=0;b=172;break;case 172:b=173;break;case 173:t|=0;b=v;v=b+4|0;HEAP32[b>>2]=
t;l|=0;t=0;b=174;break;case 174:b=175;break;case 175:b=176;break;case 176:b=177;break;case 177:b=178;break;case 178:b=179;break;case 179:FUNCTION_TABLE[HEAP32[(h+60|0)>>2]](f,u,v,n);f=f+HEAP32[((h|0)+8|0)>>2]|0;k=k-HEAP32[((h|0)+8|0)>>2]|0;b=h+92|0;HEAP32[b>>2]=HEAP32[b>>2]+1|0;b=6;break;case 180:b=181;break;case 181:b=0!=(t|0)?182:185;break;case 182:b=183;break;case 183:t|=0;b=v;v=b+4|0;HEAP32[b>>2]=t;l|=0;t=0;b=184;break;case 184:b=185;break;case 185:b=(l|0)!=(n|0)?186:209;break;case 186:_Fax3BadLength(148488,
g,HEAP32[(h+92|0)>>2],l,n);b=187;break;case 187:if((l|0)>(n|0))b=188;else var B=0,b=189;break;case 188:B=v>>>0>u>>>0;b=189;break;case 189:b=B?190:191;break;case 190:v=b=v-4|0;l=l-HEAP32[b>>2]|0;b=187;break;case 191:b=(l|0)<(n|0)?192:201;break;case 192:b=0>(l|0)?193:194;break;case 193:l=0;b=194;break;case 194:b=0!=((v-u|0)/4&1|0)?195:198;break;case 195:b=196;break;case 196:t|=0;b=v;v=b+4|0;HEAP32[b>>2]=t;l|=0;t=0;b=197;break;case 197:b=198;break;case 198:b=199;break;case 199:t=t+(n-l|0)|0;b=v;v=b+
4|0;HEAP32[b>>2]=t;l=l+(n-l|0)|0;t=0;b=200;break;case 200:b=208;break;case 201:b=(l|0)>(n|0)?202:207;break;case 202:b=203;break;case 203:t=t+n|0;b=v;v=b+4|0;HEAP32[b>>2]=t;l=l+n|0;t=0;b=204;break;case 204:b=205;break;case 205:t|=0;b=v;v=b+4|0;HEAP32[b>>2]=t;l|=0;t=0;b=206;break;case 206:b=207;break;case 207:b=208;break;case 208:b=209;break;case 209:b=210;break;case 210:b=211;break;case 211:FUNCTION_TABLE[HEAP32[(h+60|0)>>2]](f,u,v,n);b=212;break;case 212:HEAP32[(h+52|0)>>2]=q;HEAP32[(h+48|0)>>2]=
p;HEAP32[(h+56|0)>>2]=w;b=g+608|0;HEAP32[b>>2]=HEAP32[b>>2]-(r-HEAP32[(g+604|0)>>2]|0)|0;HEAP32[(g+604|0)>>2]=r;b=213;break;case 213:e=-1;b=217;break;case 214:b=215;break;case 215:HEAP32[(h+52|0)>>2]=q;HEAP32[(h+48|0)>>2]=p;HEAP32[(h+56|0)>>2]=w;b=g+608|0;HEAP32[b>>2]=HEAP32[b>>2]-(r-HEAP32[(g+604|0)>>2]|0)|0;HEAP32[(g+604|0)>>2]=r;b=216;break;case 216:e=1;b=217;break;case 217:return m=e,STACKTOP=a,m;default:assert(0,"bad label: "+b)}}
function _Fax3PostEncode(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;c=m;a=HEAP32[(c+576|0)>>2];d=8!=(HEAP32[(a+52|0)>>2]|0)?2:5;break;case 2:d=(HEAP32[(c+608|0)>>2]|0)>=(HEAP32[(c+592|0)>>2]|0)?3:4;break;case 3:_TIFFFlushData1(c);d=4;break;case 4:var d=HEAP32[(a+48|0)>>2]&255,b=c+604|0,e=HEAP32[b>>2];HEAP32[b>>2]=e+1|0;HEAP8[e]=d;d=c+608|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;HEAP32[(a+48|0)>>2]=0;HEAP32[(a+52|0)>>2]=8;d=5;break;case 5:return 1;default:assert(0,"bad label: "+d)}}
function _Fax3Encode(m,d,c,a){var b=0;a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var e,g,f,k,h;g=m;f=d;k=c;h=HEAP32[(g+576|0)>>2];b=0!=((k|0)%(HEAP32[((h|0)+8|0)>>2]|0)&-1|0)?2:3;break;case 2:_TIFFErrorExt(HEAP32[(g+628|0)>>2],148440,38384,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));e=0;b=24;break;case 3:b=4;break;case 4:b=0<(k|0)?5:23;break;case 5:b=0==(HEAP32[((h|0)+4|0)>>2]&
2|0)?6:7;break;case 6:_Fax3PutEOL(g);b=7;break;case 7:b=0!=(HEAP32[((h|0)+28|0)>>2]&1|0)?8:19;break;case 8:b=0==(HEAP32[(h+76|0)>>2]|0)?9:12;break;case 9:b=0!=(_Fax3Encode1DRow(g,f,HEAP32[((h|0)+12|0)>>2])|0)?11:10;break;case 10:e=0;b=24;break;case 11:HEAP32[(h+76|0)>>2]=1;b=15;break;case 12:b=0!=(_Fax3Encode2DRow(g,f,HEAP32[(h+80|0)>>2],HEAP32[((h|0)+12|0)>>2])|0)?14:13;break;case 13:e=0;b=24;break;case 14:b=h+84|0;HEAP32[b>>2]=HEAP32[b>>2]-1|0;b=15;break;case 15:b=0==(HEAP32[(h+84|0)>>2]|0)?16:
17;break;case 16:HEAP32[(h+76|0)>>2]=0;HEAP32[(h+84|0)>>2]=HEAP32[(h+88|0)>>2]-1|0;b=18;break;case 17:__TIFFmemcpy(HEAP32[(h+80|0)>>2],f,HEAP32[((h|0)+8|0)>>2]);b=18;break;case 18:b=22;break;case 19:b=0!=(_Fax3Encode1DRow(g,f,HEAP32[((h|0)+12|0)>>2])|0)?21:20;break;case 20:e=0;b=24;break;case 21:b=22;break;case 22:f=f+HEAP32[((h|0)+8|0)>>2]|0;k=k-HEAP32[((h|0)+8|0)>>2]|0;b=4;break;case 23:e=1;b=24;break;case 24:return m=e,STACKTOP=a,m;default:assert(0,"bad label: "+b)}}
function _Fax3Close(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b,e,g;c=m;d=0==(HEAP32[(HEAP32[(c+576|0)>>2]+4|0)>>2]&1|0)?2:11;break;case 2:a=HEAP32[(c+576|0)>>2];b=1;e=12;d=0!=(HEAP32[((a|0)+28|0)>>2]&1|0)?3:4;break;case 3:b=b<<1|0==(HEAP32[(a+76|0)>>2]|0)&1;e=e+1|0;d=4;break;case 4:g=0;d=5;break;case 5:d=6>(g|0)?6:8;break;case 6:_Fax3PutBits(c,b,e);d=7;break;case 7:g=g+1|0;d=5;break;case 8:d=(HEAP32[(c+608|0)>>2]|0)>=(HEAP32[(c+592|0)>>2]|0)?9:10;break;case 9:_TIFFFlushData1(c);d=10;break;case 10:var d=
HEAP32[(a+48|0)>>2]&255,f=c+604|0,k=HEAP32[f>>2];HEAP32[f>>2]=k+1|0;HEAP8[k]=d;d=c+608|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;HEAP32[(a+48|0)>>2]=0;HEAP32[(a+52|0)>>2]=8;d=11;break;case 11:return;default:assert(0,"bad label: "+d)}}
function _Fax3PreEncode(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e;a=m;b=HEAP32[(a+576|0)>>2];c=0!=(b|0)?2:3;break;case 2:c=4;break;case 3:throw ___assert_func(30088,722,44952,32592),"Reached an unreachable!";case 4:HEAP32[(b+52|0)>>2]=8;HEAP32[(b+48|0)>>2]=0;HEAP32[(b+76|0)>>2]=0;c=0!=(HEAP32[(b+80|0)>>2]|0)?5:6;break;case 5:__TIFFmemset(HEAP32[(b+80|0)>>2],0,HEAP32[((b|0)+8|0)>>2]);c=6;break;case 6:c=0!=(HEAP32[((b|0)+28|0)>>2]&1|0)?7:10;break;case 7:e=HEAPF32[((a+40|0)+80|0)>>2];c=3==(HEAP16[((a+
40|0)+84|0)>>1]&65535|0)?8:9;break;case 8:e*=2.5399999618530273;c=9;break;case 9:HEAP32[(b+88|0)>>2]=150<e?4:2;HEAP32[(b+84|0)>>2]=HEAP32[(b+88|0)>>2]-1|0;c=11;break;case 10:HEAP32[(b+88|0)>>2]=0;HEAP32[(b+84|0)>>2]=0;c=11;break;case 11:return HEAP32[(b+92|0)>>2]=0,1;default:assert(0,"bad label: "+c)}}
function _Fax3Cleanup(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;c=m;a=HEAP32[(c+576|0)>>2];d=0!=(a|0)?2:3;break;case 2:d=4;break;case 3:throw ___assert_func(30088,1109,44984,33384),"Reached an unreachable!";case 4:HEAP32[((c+668|0)+4|0)>>2]=HEAP32[((a|0)+32|0)>>2];HEAP32[(c+668|0)>>2]=HEAP32[((a|0)+36|0)>>2];HEAP32[((c+668|0)+8|0)>>2]=HEAP32[((a|0)+40|0)>>2];d=0!=(HEAP32[(a+64|0)>>2]|0)?5:6;break;case 5:__TIFFfree(HEAP32[(a+64|0)>>2]);d=6;break;case 6:d=0!=(HEAP32[(a+80|0)>>2]|0)?7:8;break;case 7:__TIFFfree(HEAP32[(a+
80|0)>>2]);d=8;break;case 8:__TIFFfree(HEAP32[(c+576|0)>>2]);HEAP32[(c+576|0)>>2]=0;__TIFFSetDefaultCompressionState(c);return;default:assert(0,"bad label: "+d)}}
function _Fax3PutEOL(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b,e,g,f,k,h;c=m;a=HEAP32[(c+576|0)>>2];b=HEAP32[(a+52|0)>>2];e=HEAP32[(a+48|0)>>2];d=0!=(HEAP32[((a|0)+28|0)>>2]&4|0)?2:20;break;case 2:h=4;d=(h|0)!=(HEAP32[(a+52|0)>>2]|0)?3:19;break;case 3:d=(h|0)>(HEAP32[(a+52|0)>>2]|0)?4:5;break;case 4:h=HEAP32[(a+52|0)>>2]+(8-h|0)|0;d=6;break;case 5:h=HEAP32[(a+52|0)>>2]-h|0;d=6;break;case 6:g=0;k=h;d=7;break;case 7:d=k>>>0>b>>>0?8:11;break;case 8:e|=0>>(k-b|0);k=k-b|0;d=(HEAP32[(c+608|0)>>2]|
0)>=(HEAP32[(c+592|0)>>2]|0)?9:10;break;case 9:_TIFFFlushData1(c);d=10;break;case 10:d=e&255;b=c+604|0;e=HEAP32[b>>2];HEAP32[b>>2]=e+1|0;HEAP8[e]=d;d=c+608|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;e=0;b=8;d=7;break;case 11:d=9>k>>>0?12:13;break;case 12:d=14;break;case 13:throw ___assert_func(30088,701,44904,32968),"Reached an unreachable!";case 14:e|=(0&HEAP32[(42144+(k<<2)|0)>>2])<<(b-k|0);b=b-k|0;d=0==(b|0)?15:18;break;case 15:d=(HEAP32[(c+608|0)>>2]|0)>=(HEAP32[(c+592|0)>>2]|0)?16:17;break;case 16:_TIFFFlushData1(c);
d=17;break;case 17:d=e&255;b=c+604|0;e=HEAP32[b>>2];HEAP32[b>>2]=e+1|0;HEAP8[e]=d;d=c+608|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;e=0;b=8;d=18;break;case 18:d=19;break;case 19:d=20;break;case 20:g=1;f=12;d=0!=(HEAP32[((a|0)+28|0)>>2]&1|0)?21:22;break;case 21:g=g<<1|0==(HEAP32[(a+76|0)>>2]|0)&1;f=f+1|0;d=22;break;case 22:d=23;break;case 23:d=f>>>0>b>>>0?24:27;break;case 24:e|=g>>>((f-b|0)>>>0);f=f-b|0;d=(HEAP32[(c+608|0)>>2]|0)>=(HEAP32[(c+592|0)>>2]|0)?25:26;break;case 25:_TIFFFlushData1(c);d=26;break;case 26:d=
e&255;b=c+604|0;e=HEAP32[b>>2];HEAP32[b>>2]=e+1|0;HEAP8[e]=d;d=c+608|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;e=0;b=8;d=23;break;case 27:d=9>f>>>0?28:29;break;case 28:d=30;break;case 29:throw ___assert_func(30088,707,44904,39312),"Reached an unreachable!";case 30:e|=(g&HEAP32[(42144+(f<<2)|0)>>2])<<(b-f|0);b=b-f|0;d=0==(b|0)?31:34;break;case 31:d=(HEAP32[(c+608|0)>>2]|0)>=(HEAP32[(c+592|0)>>2]|0)?32:33;break;case 32:_TIFFFlushData1(c);d=33;break;case 33:d=e&255;b=c+604|0;e=HEAP32[b>>2];HEAP32[b>>2]=e+1|0;
HEAP8[e]=d;d=c+608|0;HEAP32[d>>2]=HEAP32[d>>2]+1|0;e=0;b=8;d=34;break;case 34:HEAP32[(a+48|0)>>2]=e;HEAP32[(a+52|0)>>2]=b;return;default:assert(0,"bad label: "+d)}}
function _Fax3Encode1DRow(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k;b=m;e=d;g=c;f=HEAP32[(b+576|0)>>2];k=0;a=2;break;case 2:a=_find0span(e,k,g);_putspan(b,a,79600);k=k+a|0;a=k>>>0>=g>>>0?3:4;break;case 3:a=7;break;case 4:a=_find1span(e,k,g);_putspan(b,a,146816);k=k+a|0;a=k>>>0>=g>>>0?5:6;break;case 5:a=7;break;case 6:a=2;break;case 7:a=0!=(HEAP32[((f|0)+4|0)>>2]&12|0)?8:18;break;case 8:a=8!=(HEAP32[(f+52|0)>>2]|0)?9:12;break;case 9:a=(HEAP32[(b+608|0)>>2]|0)>=(HEAP32[(b+592|0)>>2]|0)?
10:11;break;case 10:_TIFFFlushData1(b);a=11;break;case 11:var a=HEAP32[(f+48|0)>>2]&255,h=b+604|0,l=HEAP32[h>>2];HEAP32[h>>2]=l+1|0;HEAP8[l]=a;a=b+608|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;HEAP32[(f+48|0)>>2]=0;HEAP32[(f+52|0)>>2]=8;a=12;break;case 12:a=0!=(HEAP32[((f|0)+4|0)>>2]&8|0)?13:17;break;case 13:a=0==(HEAP32[(b+604|0)>>2]&1|0)?17:14;break;case 14:a=(HEAP32[(b+608|0)>>2]|0)>=(HEAP32[(b+592|0)>>2]|0)?15:16;break;case 15:_TIFFFlushData1(b);a=16;break;case 16:a=HEAP32[(f+48|0)>>2]&255;h=b+604|0;l=
HEAP32[h>>2];HEAP32[h>>2]=l+1|0;HEAP8[l]=a;a=b+608|0;HEAP32[a>>2]=HEAP32[a>>2]+1|0;HEAP32[(f+48|0)>>2]=0;HEAP32[(f+52|0)>>2]=8;a=17;break;case 17:a=18;break;case 18:return 1;default:assert(0,"bad label: "+a)}}
function _Fax3Decode2D(m,d,c,a){var b=0,e=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h,l,n,p,q,t,r,s,v,u,w,y,A,z,x,B,C,D;f=m;k=d;h=c;l=HEAP32[(f+576|0)>>2];p=HEAP32[((l|0)+12|0)>>2];A=HEAP32[(l+44|0)>>2];b=0!=((h|0)%(HEAP32[((l|0)+8|0)>>2]|0)&-1|0)?2:3;break;case 2:_TIFFErrorExt(HEAP32[(f+628|0)>>2],148472,26184,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));g=-1;b=520;break;
case 3:b=4;break;case 4:q=HEAP32[(l+48|0)>>2];t=HEAP32[(l+52|0)>>2];y=HEAP32[(l+56|0)>>2];s=HEAP32[(f+604|0)>>2];v=s+HEAP32[(f+608|0)>>2]|0;b=5;break;case 5:b=6;break;case 6:b=0<(h|0)?7:517;break;case 7:r=n=0;var F=HEAP32[(l+72|0)>>2];u=w=F;b=8;break;case 8:b=0==(y|0)?9:30;break;case 9:b=10;break;case 10:b=11;break;case 11:b=11>(t|0)?12:23;break;case 12:b=s>>>0>=v>>>0?13:16;break;case 13:b=0==(t|0)?14:15;break;case 14:b=483;break;case 15:t=11;b=22;break;case 16:var I=s;s=I+1|0;q|=(HEAP8[A+(HEAP8[I]&
255)|0]&255)<<t;var G=t+8|0;t=G;b=11>(G|0)?17:21;break;case 17:b=s>>>0>=v>>>0?18:19;break;case 18:t=11;b=20;break;case 19:var H=s;s=H+1|0;q|=(HEAP8[A+(HEAP8[H]&255)|0]&255)<<t;t=t+8|0;b=20;break;case 20:b=21;break;case 21:b=22;break;case 22:b=23;break;case 23:b=24;break;case 24:b=0==(q&2047|0)?25:26;break;case 25:b=29;break;case 26:b=27;break;case 27:t=t-1|0;q>>>=1;b=28;break;case 28:b=10;break;case 29:b=30;break;case 30:b=31;break;case 31:b=32;break;case 32:b=8>(t|0)?33:39;break;case 33:b=s>>>0>=
v>>>0?34:37;break;case 34:b=0==(t|0)?35:36;break;case 35:b=483;break;case 36:t=8;b=38;break;case 37:var K=s;s=K+1|0;q|=(HEAP8[A+(HEAP8[K]&255)|0]&255)<<t;t=t+8|0;b=38;break;case 38:b=39;break;case 39:b=40;break;case 40:b=0!=(q&255|0)?41:42;break;case 41:b=45;break;case 42:b=43;break;case 43:t=t-8|0;q>>>=8;b=44;break;case 44:b=31;break;case 45:b=46;break;case 46:b=0==(q&1|0)?47:50;break;case 47:b=48;break;case 48:t=t-1|0;q>>>=1;b=49;break;case 49:b=46;break;case 50:b=51;break;case 51:t=t-1|0;q>>>=
1;b=52;break;case 52:y=0;b=53;break;case 53:b=54;break;case 54:b=1>(t|0)?55:61;break;case 55:b=s>>>0>=v>>>0?56:59;break;case 56:b=0==(t|0)?57:58;break;case 57:b=483;break;case 58:t=1;b=60;break;case 59:var J=s;s=J+1|0;q|=(HEAP8[A+(HEAP8[J]&255)|0]&255)<<t;t=t+8|0;b=60;break;case 60:b=61;break;case 61:b=62;break;case 62:C=q&1;b=63;break;case 63:t=t-1|0;q>>>=1;b=64;break;case 64:var E=B=HEAP32[(l+68|0)>>2];B=E+4|0;x=HEAP32[E>>2];b=0!=(C|0)?65:192;break;case 65:b=66;break;case 66:b=67;break;case 67:b=
68;break;case 68:b=69;break;case 69:b=70;break;case 70:b=12>(t|0)?71:82;break;case 71:b=s>>>0>=v>>>0?72:75;break;case 72:b=0==(t|0)?73:74;break;case 73:b=129;break;case 74:t=12;b=81;break;case 75:var L=s;s=L+1|0;q|=(HEAP8[A+(HEAP8[L]&255)|0]&255)<<t;var Q=t+8|0;t=Q;b=12>(Q|0)?76:80;break;case 76:b=s>>>0>=v>>>0?77:78;break;case 77:t=12;b=79;break;case 78:var N=s;s=N+1|0;q|=(HEAP8[A+(HEAP8[N]&255)|0]&255)<<t;t=t+8|0;b=79;break;case 79:b=80;break;case 80:b=81;break;case 81:b=82;break;case 82:b=83;break;
case 83:z=46832+((q&4095)<<3)|0;b=84;break;case 84:t=t-(HEAP8[z+1|0]&255)|0;q>>>=(HEAP8[z+1|0]&255)>>>0;b=85;break;case 85:b=86;break;case 86:var P=HEAP8[z|0]&255,b=12==(P|0)?87:7==(P|0)?88:9==(P|0)|11==(P|0)?91:92;break;case 87:y=1;b=160;break;case 88:b=89;break;case 89:var W=r+HEAP32[(z+4|0)>>2]|0,O=u;u=O+4|0;HEAP32[O>>2]=W;n=n+HEAP32[(z+4|0)>>2]|0;r=0;b=90;break;case 90:b=94;break;case 91:n=n+HEAP32[(z+4|0)>>2]|0;r=r+HEAP32[(z+4|0)>>2]|0;b=93;break;case 92:_Fax3Unexpected(148472,f,HEAP32[(l+92|
0)>>2],n);b=160;break;case 93:b=68;break;case 94:b=(n|0)>=(p|0)?95:96;break;case 95:b=160;break;case 96:b=97;break;case 97:b=98;break;case 98:b=99;break;case 99:b=13>(t|0)?100:111;break;case 100:b=s>>>0>=v>>>0?101:104;break;case 101:b=0==(t|0)?102:103;break;case 102:b=129;break;case 103:t=13;b=110;break;case 104:var T=s;s=T+1|0;q|=(HEAP8[A+(HEAP8[T]&255)|0]&255)<<t;var Y=t+8|0;t=Y;b=13>(Y|0)?105:109;break;case 105:b=s>>>0>=v>>>0?106:107;break;case 106:t=13;b=108;break;case 107:var S=s;s=S+1|0;q|=
(HEAP8[A+(HEAP8[S]&255)|0]&255)<<t;t=t+8|0;b=108;break;case 108:b=109;break;case 109:b=110;break;case 110:b=111;break;case 111:b=112;break;case 112:z=81280+((q&8191)<<3)|0;b=113;break;case 113:t=t-(HEAP8[z+1|0]&255)|0;q>>>=(HEAP8[z+1|0]&255)>>>0;b=114;break;case 114:b=115;break;case 115:var X=HEAP8[z|0]&255,b=12==(X|0)?116:8==(X|0)?117:10==(X|0)|11==(X|0)?120:121;break;case 116:y=1;b=160;break;case 117:b=118;break;case 118:var R=r+HEAP32[(z+4|0)>>2]|0,V=u;u=V+4|0;HEAP32[V>>2]=R;n=n+HEAP32[(z+4|0)>>
2]|0;r=0;b=119;break;case 119:b=123;break;case 120:n=n+HEAP32[(z+4|0)>>2]|0;r=r+HEAP32[(z+4|0)>>2]|0;b=122;break;case 121:_Fax3Unexpected(148472,f,HEAP32[(l+92|0)>>2],n);b=160;break;case 122:b=97;break;case 123:b=(n|0)>=(p|0)?124:125;break;case 124:b=160;break;case 125:b=0==(HEAP32[(u-4|0)>>2]|0)?126:128;break;case 126:b=0==(HEAP32[(u-8|0)>>2]|0)?127:128;break;case 127:u=u-8|0;b=128;break;case 128:b=67;break;case 129:_Fax3PrematureEOF(148472,f,HEAP32[(l+92|0)>>2],n);b=130;break;case 130:b=0!=(r|0)?
131:134;break;case 131:b=132;break;case 132:var aa=r|0,fa=u;u=fa+4|0;HEAP32[fa>>2]=aa;n|=0;r=0;b=133;break;case 133:b=134;break;case 134:b=(n|0)!=(p|0)?135:158;break;case 135:_Fax3BadLength(148472,f,HEAP32[(l+92|0)>>2],n,p);b=136;break;case 136:if((n|0)>(p|0))b=137;else var Z=0,b=138;break;case 137:Z=u>>>0>w>>>0;b=138;break;case 138:b=Z?139:140;break;case 139:var ka=u-4|0;u=ka;n=n-HEAP32[ka>>2]|0;b=136;break;case 140:b=(n|0)<(p|0)?141:150;break;case 141:b=0>(n|0)?142:143;break;case 142:n=0;b=143;
break;case 143:b=0!=((u-w|0)/4&1|0)?144:147;break;case 144:b=145;break;case 145:var M=r|0,ga=u;u=ga+4|0;HEAP32[ga>>2]=M;n|=0;r=0;b=146;break;case 146:b=147;break;case 147:b=148;break;case 148:var na=r+(p-n|0)|0,ba=u;u=ba+4|0;HEAP32[ba>>2]=na;n=n+(p-n|0)|0;r=0;b=149;break;case 149:b=157;break;case 150:b=(n|0)>(p|0)?151:156;break;case 151:b=152;break;case 152:var ca=r+p|0,oa=u;u=oa+4|0;HEAP32[oa>>2]=ca;n=n+p|0;r=0;b=153;break;case 153:b=154;break;case 154:var va=r|0,pa=u;u=pa+4|0;HEAP32[pa>>2]=va;n|=
0;r=0;b=155;break;case 155:b=156;break;case 156:b=157;break;case 157:b=158;break;case 158:b=159;break;case 159:b=514;break;case 160:b=161;break;case 161:b=0!=(r|0)?162:165;break;case 162:b=163;break;case 163:var la=r|0,wa=u;u=wa+4|0;HEAP32[wa>>2]=la;n|=0;r=0;b=164;break;case 164:b=165;break;case 165:b=(n|0)!=(p|0)?166:189;break;case 166:_Fax3BadLength(148472,f,HEAP32[(l+92|0)>>2],n,p);b=167;break;case 167:if((n|0)>(p|0))b=168;else var qa=0,b=169;break;case 168:qa=u>>>0>w>>>0;b=169;break;case 169:b=
qa?170:171;break;case 170:var ea=u-4|0;u=ea;n=n-HEAP32[ea>>2]|0;b=167;break;case 171:b=(n|0)<(p|0)?172:181;break;case 172:b=0>(n|0)?173:174;break;case 173:n=0;b=174;break;case 174:b=0!=((u-w|0)/4&1|0)?175:178;break;case 175:b=176;break;case 176:var xa=r|0,ja=u;u=ja+4|0;HEAP32[ja>>2]=xa;n|=0;r=0;b=177;break;case 177:b=178;break;case 178:b=179;break;case 179:var da=r+(p-n|0)|0,Ga=u;u=Ga+4|0;HEAP32[Ga>>2]=da;n=n+(p-n|0)|0;r=0;b=180;break;case 180:b=188;break;case 181:b=(n|0)>(p|0)?182:187;break;case 182:b=
183;break;case 183:var $=r+p|0,ma=u;u=ma+4|0;HEAP32[ma>>2]=$;n=n+p|0;r=0;b=184;break;case 184:b=185;break;case 185:var ra=r|0,Aa=u;u=Aa+4|0;HEAP32[Aa>>2]=ra;n|=0;r=0;b=186;break;case 186:b=187;break;case 187:b=188;break;case 188:b=189;break;case 189:b=190;break;case 190:b=191;break;case 191:b=480;break;case 192:b=193;break;case 193:b=194;break;case 194:b=(n|0)<(p|0)?195:428;break;case 195:b=196;break;case 196:b=197;break;case 197:b=7>(t|0)?198:204;break;case 198:b=s>>>0>=v>>>0?199:202;break;case 199:b=
0==(t|0)?200:201;break;case 200:b=396;break;case 201:t=7;b=203;break;case 202:var Xa=s;s=Xa+1|0;q|=(HEAP8[A+(HEAP8[Xa]&255)|0]&255)<<t;t=t+8|0;b=203;break;case 203:b=204;break;case 204:b=205;break;case 205:z=80256+((q&127)<<3)|0;b=206;break;case 206:t=t-(HEAP8[z+1|0]&255)|0;q>>>=(HEAP8[z+1|0]&255)>>>0;b=207;break;case 207:b=208;break;case 208:var Da=HEAP8[z|0]&255,b=1==(Da|0)?209:2==(Da|0)?219:3==(Da|0)?336:4==(Da|0)?348:5==(Da|0)?360:6==(Da|0)?377:12==(Da|0)?378:392;break;case 209:b=210;break;case 210:b=
(u|0)!=(w|0)?211:217;break;case 211:b=212;break;case 212:if((x|0)<=(n|0))b=213;else var Ua=0,b=214;break;case 213:Ua=(x|0)<(p|0);b=214;break;case 214:b=Ua?215:216;break;case 215:x=x+(HEAP32[(B|0)>>2]+HEAP32[(B+4|0)>>2]|0)|0;B=B+8|0;b=212;break;case 216:b=217;break;case 217:b=218;break;case 218:var sa=B;B=sa+4|0;x=x+HEAP32[sa>>2]|0;r=r+(x-n|0)|0;n=x;var ha=B;B=ha+4|0;x=x+HEAP32[ha>>2]|0;b=427;break;case 219:b=0!=((u-w|0)/4&1|0)?220:273;break;case 220:b=221;break;case 221:b=222;break;case 222:b=223;
break;case 223:b=13>(t|0)?224:235;break;case 224:b=s>>>0>=v>>>0?225:228;break;case 225:b=0==(t|0)?226:227;break;case 226:b=396;break;case 227:t=13;b=234;break;case 228:var U=s;s=U+1|0;q|=(HEAP8[A+(HEAP8[U]&255)|0]&255)<<t;var gb=t+8|0;t=gb;b=13>(gb|0)?229:233;break;case 229:b=s>>>0>=v>>>0?230:231;break;case 230:t=13;b=232;break;case 231:var Ka=s;s=Ka+1|0;q|=(HEAP8[A+(HEAP8[Ka]&255)|0]&255)<<t;t=t+8|0;b=232;break;case 232:b=233;break;case 233:b=234;break;case 234:b=235;break;case 235:b=236;break;case 236:z=
81280+((q&8191)<<3)|0;b=237;break;case 237:t=t-(HEAP8[z+1|0]&255)|0;q>>>=(HEAP8[z+1|0]&255)>>>0;b=238;break;case 238:b=239;break;case 239:var Ia=HEAP8[z|0]&255,b=8==(Ia|0)?240:10==(Ia|0)|11==(Ia|0)?243:244;break;case 240:b=241;break;case 241:var ia=r+HEAP32[(z+4|0)>>2]|0,Ba=u;u=Ba+4|0;HEAP32[Ba>>2]=ia;n=n+HEAP32[(z+4|0)>>2]|0;r=0;b=242;break;case 242:b=246;break;case 243:n=n+HEAP32[(z+4|0)>>2]|0;r=r+HEAP32[(z+4|0)>>2]|0;b=245;break;case 244:b=394;break;case 245:b=221;break;case 246:b=247;break;case 247:b=
248;break;case 248:b=249;break;case 249:b=12>(t|0)?250:261;break;case 250:b=s>>>0>=v>>>0?251:254;break;case 251:b=0==(t|0)?252:253;break;case 252:b=396;break;case 253:t=12;b=260;break;case 254:var Ra=s;s=Ra+1|0;q|=(HEAP8[A+(HEAP8[Ra]&255)|0]&255)<<t;var Sa=t+8|0;t=Sa;b=12>(Sa|0)?255:259;break;case 255:b=s>>>0>=v>>>0?256:257;break;case 256:t=12;b=258;break;case 257:var ib=s;s=ib+1|0;q|=(HEAP8[A+(HEAP8[ib]&255)|0]&255)<<t;t=t+8|0;b=258;break;case 258:b=259;break;case 259:b=260;break;case 260:b=261;
break;case 261:b=262;break;case 262:z=46832+((q&4095)<<3)|0;b=263;break;case 263:t=t-(HEAP8[z+1|0]&255)|0;q>>>=(HEAP8[z+1|0]&255)>>>0;b=264;break;case 264:b=265;break;case 265:var ua=HEAP8[z|0]&255,b=7==(ua|0)?266:9==(ua|0)|11==(ua|0)?269:270;break;case 266:b=267;break;case 267:var Va=r+HEAP32[(z+4|0)>>2]|0,eb=u;u=eb+4|0;HEAP32[eb>>2]=Va;n=n+HEAP32[(z+4|0)>>2]|0;r=0;b=268;break;case 268:b=272;break;case 269:n=n+HEAP32[(z+4|0)>>2]|0;r=r+HEAP32[(z+4|0)>>2]|0;b=271;break;case 270:b=395;break;case 271:b=
247;break;case 272:b=326;break;case 273:b=274;break;case 274:b=275;break;case 275:b=276;break;case 276:b=12>(t|0)?277:288;break;case 277:b=s>>>0>=v>>>0?278:281;break;case 278:b=0==(t|0)?279:280;break;case 279:b=396;break;case 280:t=12;b=287;break;case 281:var Ea=s;s=Ea+1|0;q|=(HEAP8[A+(HEAP8[Ea]&255)|0]&255)<<t;var Ya=t+8|0;t=Ya;b=12>(Ya|0)?282:286;break;case 282:b=s>>>0>=v>>>0?283:284;break;case 283:t=12;b=285;break;case 284:var La=s;s=La+1|0;q|=(HEAP8[A+(HEAP8[La]&255)|0]&255)<<t;t=t+8|0;b=285;
break;case 285:b=286;break;case 286:b=287;break;case 287:b=288;break;case 288:b=289;break;case 289:z=46832+((q&4095)<<3)|0;b=290;break;case 290:t=t-(HEAP8[z+1|0]&255)|0;q>>>=(HEAP8[z+1|0]&255)>>>0;b=291;break;case 291:b=292;break;case 292:var Ma=HEAP8[z|0]&255,b=7==(Ma|0)?293:9==(Ma|0)|11==(Ma|0)?296:297;break;case 293:b=294;break;case 294:var Fa=r+HEAP32[(z+4|0)>>2]|0,Na=u;u=Na+4|0;HEAP32[Na>>2]=Fa;n=n+HEAP32[(z+4|0)>>2]|0;r=0;b=295;break;case 295:b=299;break;case 296:n=n+HEAP32[(z+4|0)>>2]|0;r=
r+HEAP32[(z+4|0)>>2]|0;b=298;break;case 297:b=395;break;case 298:b=274;break;case 299:b=300;break;case 300:b=301;break;case 301:b=302;break;case 302:b=13>(t|0)?303:314;break;case 303:b=s>>>0>=v>>>0?304:307;break;case 304:b=0==(t|0)?305:306;break;case 305:b=396;break;case 306:t=13;b=313;break;case 307:var Oa=s;s=Oa+1|0;q|=(HEAP8[A+(HEAP8[Oa]&255)|0]&255)<<t;var jb=t+8|0;t=jb;b=13>(jb|0)?308:312;break;case 308:b=s>>>0>=v>>>0?309:310;break;case 309:t=13;b=311;break;case 310:var Za=s;s=Za+1|0;q|=(HEAP8[A+
(HEAP8[Za]&255)|0]&255)<<t;t=t+8|0;b=311;break;case 311:b=312;break;case 312:b=313;break;case 313:b=314;break;case 314:b=315;break;case 315:z=81280+((q&8191)<<3)|0;b=316;break;case 316:t=t-(HEAP8[z+1|0]&255)|0;q>>>=(HEAP8[z+1|0]&255)>>>0;b=317;break;case 317:b=318;break;case 318:var Ca=HEAP8[z|0]&255,b=8==(Ca|0)?319:10==(Ca|0)|11==(Ca|0)?322:323;break;case 319:b=320;break;case 320:var $a=r+HEAP32[(z+4|0)>>2]|0,ab=u;u=ab+4|0;HEAP32[ab>>2]=$a;n=n+HEAP32[(z+4|0)>>2]|0;r=0;b=321;break;case 321:b=325;
break;case 322:n=n+HEAP32[(z+4|0)>>2]|0;r=r+HEAP32[(z+4|0)>>2]|0;b=324;break;case 323:b=394;break;case 324:b=300;break;case 325:b=326;break;case 326:b=327;break;case 327:b=(u|0)!=(w|0)?328:334;break;case 328:b=329;break;case 329:if((x|0)<=(n|0))b=330;else var Ha=0,b=331;break;case 330:Ha=(x|0)<(p|0);b=331;break;case 331:b=Ha?332:333;break;case 332:x=x+(HEAP32[(B|0)>>2]+HEAP32[(B+4|0)>>2]|0)|0;B=B+8|0;b=329;break;case 333:b=334;break;case 334:b=335;break;case 335:b=427;break;case 336:b=337;break;case 337:b=
(u|0)!=(w|0)?338:344;break;case 338:b=339;break;case 339:if((x|0)<=(n|0))b=340;else var Wa=0,b=341;break;case 340:Wa=(x|0)<(p|0);b=341;break;case 341:b=Wa?342:343;break;case 342:x=x+(HEAP32[(B|0)>>2]+HEAP32[(B+4|0)>>2]|0)|0;B=B+8|0;b=339;break;case 343:b=344;break;case 344:b=345;break;case 345:b=346;break;case 346:var bb=r+(x-n|0)|0,Pa=u;u=Pa+4|0;HEAP32[Pa>>2]=bb;n=n+(x-n|0)|0;r=0;b=347;break;case 347:var Ja=B;B=Ja+4|0;x=x+HEAP32[Ja>>2]|0;b=427;break;case 348:b=349;break;case 349:b=(u|0)!=(w|0)?350:
356;break;case 350:b=351;break;case 351:if((x|0)<=(n|0))b=352;else var cb=0,b=353;break;case 352:cb=(x|0)<(p|0);b=353;break;case 353:b=cb?354:355;break;case 354:x=x+(HEAP32[(B|0)>>2]+HEAP32[(B+4|0)>>2]|0)|0;B=B+8|0;b=351;break;case 355:b=356;break;case 356:b=357;break;case 357:b=358;break;case 358:var Qa=r+((x-n|0)+HEAP32[(z+4|0)>>2]|0)|0,fb=u;u=fb+4|0;HEAP32[fb>>2]=Qa;n=n+((x-n|0)+HEAP32[(z+4|0)>>2]|0)|0;r=0;b=359;break;case 359:var hb=B;B=hb+4|0;x=x+HEAP32[hb>>2]|0;b=427;break;case 360:b=361;break;
case 361:b=(u|0)!=(w|0)?362:368;break;case 362:b=363;break;case 363:if((x|0)<=(n|0))b=364;else var ya=0,b=365;break;case 364:ya=(x|0)<(p|0);b=365;break;case 365:b=ya?366:367;break;case 366:x=x+(HEAP32[(B|0)>>2]+HEAP32[(B+4|0)>>2]|0)|0;B=B+8|0;b=363;break;case 367:b=368;break;case 368:b=369;break;case 369:b=(x|0)<=(n+HEAP32[(z+4|0)>>2]|0)?370:374;break;case 370:b=(x|0)<(n+HEAP32[(z+4|0)>>2]|0)?372:371;break;case 371:b=(u|0)!=(w|0)?372:373;break;case 372:_Fax3Unexpected(148472,f,HEAP32[(l+92|0)>>2],
n);b=448;break;case 373:b=374;break;case 374:b=375;break;case 375:var db=r+((x-n|0)-HEAP32[(z+4|0)>>2]|0)|0,Ta=u;u=Ta+4|0;HEAP32[Ta>>2]=db;n=n+((x-n|0)-HEAP32[(z+4|0)>>2]|0)|0;r=0;b=376;break;case 376:var kb=B-4|0;B=kb;x=x-HEAP32[kb>>2]|0;b=427;break;case 377:var lb=p-n|0,mb=u;u=mb+4|0;HEAP32[mb>>2]=lb;_Fax3Extension(148472,f,HEAP32[(l+92|0)>>2],n);b=448;break;case 378:var ta=p-n|0,nb=u;u=nb+4|0;HEAP32[nb>>2]=ta;b=379;break;case 379:b=4>(t|0)?380:386;break;case 380:b=s>>>0>=v>>>0?381:384;break;case 381:b=
0==(t|0)?382:383;break;case 382:b=396;break;case 383:t=4;b=385;break;case 384:var pb=s;s=pb+1|0;q|=(HEAP8[A+(HEAP8[pb]&255)|0]&255)<<t;t=t+8|0;b=385;break;case 385:b=386;break;case 386:b=387;break;case 387:b=0!=(q&15|0)?388:389;break;case 388:_Fax3Unexpected(148472,f,HEAP32[(l+92|0)>>2],n);b=389;break;case 389:b=390;break;case 390:t=t-4|0;q>>>=4;b=391;break;case 391:y=1;b=448;break;case 392:b=393;break;case 393:_Fax3Unexpected(148472,f,HEAP32[(l+92|0)>>2],n);b=448;break;case 394:_Fax3Unexpected(148472,
f,HEAP32[(l+92|0)>>2],n);b=448;break;case 395:_Fax3Unexpected(148472,f,HEAP32[(l+92|0)>>2],n);b=448;break;case 396:_Fax3PrematureEOF(148472,f,HEAP32[(l+92|0)>>2],n);b=397;break;case 397:b=0!=(r|0)?398:401;break;case 398:b=399;break;case 399:var rb=r|0,qb=u;u=qb+4|0;HEAP32[qb>>2]=rb;n|=0;r=0;b=400;break;case 400:b=401;break;case 401:b=(n|0)!=(p|0)?402:425;break;case 402:_Fax3BadLength(148472,f,HEAP32[(l+92|0)>>2],n,p);b=403;break;case 403:if((n|0)>(p|0))b=404;else var sb=0,b=405;break;case 404:sb=
u>>>0>w>>>0;b=405;break;case 405:b=sb?406:407;break;case 406:var vb=u-4|0;u=vb;n=n-HEAP32[vb>>2]|0;b=403;break;case 407:b=(n|0)<(p|0)?408:417;break;case 408:b=0>(n|0)?409:410;break;case 409:n=0;b=410;break;case 410:b=0!=((u-w|0)/4&1|0)?411:414;break;case 411:b=412;break;case 412:var wb=r|0,xb=u;u=xb+4|0;HEAP32[xb>>2]=wb;n|=0;r=0;b=413;break;case 413:b=414;break;case 414:b=415;break;case 415:var Db=r+(p-n|0)|0,tb=u;u=tb+4|0;HEAP32[tb>>2]=Db;n=n+(p-n|0)|0;r=0;b=416;break;case 416:b=424;break;case 417:b=
(n|0)>(p|0)?418:423;break;case 418:b=419;break;case 419:var Gb=r+p|0,yb=u;u=yb+4|0;HEAP32[yb>>2]=Gb;n=n+p|0;r=0;b=420;break;case 420:b=421;break;case 421:var ub=r|0,Ab=u;u=Ab+4|0;HEAP32[Ab>>2]=ub;n|=0;r=0;b=422;break;case 422:b=423;break;case 423:b=424;break;case 424:b=425;break;case 425:b=426;break;case 426:b=514;break;case 427:b=194;break;case 428:b=0!=(r|0)?429:447;break;case 429:b=(r+n|0)<(p|0)?430:444;break;case 430:b=431;break;case 431:b=1>(t|0)?432:438;break;case 432:b=s>>>0>=v>>>0?433:436;
break;case 433:b=0==(t|0)?434:435;break;case 434:b=396;break;case 435:t=1;b=437;break;case 436:var Tb=s;s=Tb+1|0;q|=(HEAP8[A+(HEAP8[Tb]&255)|0]&255)<<t;t=t+8|0;b=437;break;case 437:b=438;break;case 438:b=439;break;case 439:b=0!=(q&1|0)?441:440;break;case 440:b=393;break;case 441:b=442;break;case 442:t=t-1|0;q>>>=1;b=443;break;case 443:b=444;break;case 444:b=445;break;case 445:var Kb=r|0,ac=u;u=ac+4|0;HEAP32[ac>>2]=Kb;n|=0;r=0;b=446;break;case 446:b=447;break;case 447:b=448;break;case 448:b=449;break;
case 449:b=0!=(r|0)?450:453;break;case 450:b=451;break;case 451:var Hb=r|0,Ob=u;u=Ob+4|0;HEAP32[Ob>>2]=Hb;n|=0;r=0;b=452;break;case 452:b=453;break;case 453:b=(n|0)!=(p|0)?454:477;break;case 454:_Fax3BadLength(148472,f,HEAP32[(l+92|0)>>2],n,p);b=455;break;case 455:if((n|0)>(p|0))b=456;else var bc=0,b=457;break;case 456:bc=u>>>0>w>>>0;b=457;break;case 457:b=bc?458:459;break;case 458:var Lb=u-4|0;u=Lb;n=n-HEAP32[Lb>>2]|0;b=455;break;case 459:b=(n|0)<(p|0)?460:469;break;case 460:b=0>(n|0)?461:462;break;
case 461:n=0;b=462;break;case 462:b=0!=((u-w|0)/4&1|0)?463:466;break;case 463:b=464;break;case 464:var Ub=r|0,Pb=u;u=Pb+4|0;HEAP32[Pb>>2]=Ub;n|=0;r=0;b=465;break;case 465:b=466;break;case 466:b=467;break;case 467:var cc=r+(p-n|0)|0,Vb=u;u=Vb+4|0;HEAP32[Vb>>2]=cc;n=n+(p-n|0)|0;r=0;b=468;break;case 468:b=476;break;case 469:b=(n|0)>(p|0)?470:475;break;case 470:b=471;break;case 471:var Mb=r+p|0,fc=u;u=fc+4|0;HEAP32[fc>>2]=Mb;n=n+p|0;r=0;b=472;break;case 472:b=473;break;case 473:var Wb=r|0,gc=u;u=gc+4|
0;HEAP32[gc>>2]=Wb;n|=0;r=0;b=474;break;case 474:b=475;break;case 475:b=476;break;case 476:b=477;break;case 477:b=478;break;case 478:b=479;break;case 479:b=480;break;case 480:FUNCTION_TABLE[HEAP32[(l+60|0)>>2]](k,w,u,p);b=481;break;case 481:var dc=r|0,Xb=u;u=Xb+4|0;HEAP32[Xb>>2]=dc;n|=0;r=0;b=482;break;case 482:D=HEAP32[(l+72|0)>>2];HEAP32[(l+72|0)>>2]=HEAP32[(l+68|0)>>2];HEAP32[(l+68|0)>>2]=D;k=k+HEAP32[((l|0)+8|0)>>2]|0;h=h-HEAP32[((l|0)+8|0)>>2]|0;var Yb=l+92|0;HEAP32[Yb>>2]=HEAP32[Yb>>2]+1|0;
b=6;break;case 483:b=484;break;case 484:b=0!=(r|0)?485:488;break;case 485:b=486;break;case 486:var oc=r|0,Qb=u;u=Qb+4|0;HEAP32[Qb>>2]=oc;n|=0;r=0;b=487;break;case 487:b=488;break;case 488:b=(n|0)!=(p|0)?489:512;break;case 489:_Fax3BadLength(148472,f,HEAP32[(l+92|0)>>2],n,p);b=490;break;case 490:if((n|0)>(p|0))b=491;else var hc=0,b=492;break;case 491:hc=u>>>0>w>>>0;b=492;break;case 492:b=hc?493:494;break;case 493:var ic=u-4|0;u=ic;n=n-HEAP32[ic>>2]|0;b=490;break;case 494:b=(n|0)<(p|0)?495:504;break;
case 495:b=0>(n|0)?496:497;break;case 496:n=0;b=497;break;case 497:b=0!=((u-w|0)/4&1|0)?498:501;break;case 498:b=499;break;case 499:var ec=r|0,kc=u;u=kc+4|0;HEAP32[kc>>2]=ec;n|=0;r=0;b=500;break;case 500:b=501;break;case 501:b=502;break;case 502:var jc=r+(p-n|0)|0,Zb=u;u=Zb+4|0;HEAP32[Zb>>2]=jc;n=n+(p-n|0)|0;r=0;b=503;break;case 503:b=511;break;case 504:b=(n|0)>(p|0)?505:510;break;case 505:b=506;break;case 506:var lc=r+p|0,Bb=u;u=Bb+4|0;HEAP32[Bb>>2]=lc;n=n+p|0;r=0;b=507;break;case 507:b=508;break;
case 508:var ob=r|0,Rb=u;u=Rb+4|0;HEAP32[Rb>>2]=ob;n|=0;r=0;b=509;break;case 509:b=510;break;case 510:b=511;break;case 511:b=512;break;case 512:b=513;break;case 513:b=514;break;case 514:FUNCTION_TABLE[HEAP32[(l+60|0)>>2]](k,w,u,p);b=515;break;case 515:HEAP32[(l+52|0)>>2]=t;HEAP32[(l+48|0)>>2]=q;HEAP32[(l+56|0)>>2]=y;var Nb=f+608|0;HEAP32[Nb>>2]=HEAP32[Nb>>2]-(s-HEAP32[(f+604|0)>>2]|0)|0;HEAP32[(f+604|0)>>2]=s;b=516;break;case 516:g=-1;b=520;break;case 517:b=518;break;case 518:HEAP32[(l+52|0)>>2]=
t;HEAP32[(l+48|0)>>2]=q;HEAP32[(l+56|0)>>2]=y;var $b=f+608|0;HEAP32[$b>>2]=HEAP32[$b>>2]-(s-HEAP32[(f+604|0)>>2]|0)|0;HEAP32[(f+604|0)>>2]=s;b=519;break;case 519:g=1;b=520;break;case 520:var pc=g;STACKTOP=e;return pc;default:assert(0,"bad label: "+b)}}
function _TIFFFlush(m){var d=0,c=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e=c,g=c+8;b=m;d=0==(HEAP32[(b+8|0)>>2]|0)?2:3;break;case 2:a=1;d=26;break;case 3:d=0!=(_TIFFFlushData(b)|0)?5:4;break;case 4:a=0;d=26;break;case 5:d=0!=(HEAP32[(b+12|0)>>2]&2097152|0)?6:22;break;case 6:d=0!=(HEAP32[(b+12|0)>>2]&8|0)?22:7;break;case 7:d=2==(HEAP32[(b+8|0)>>2]|0)?8:22;break;case 8:HEAP32[e>>2]=0;HEAP32[g>>2]=0;d=0!=(_TIFFIsTiled(b)|0)?9:15;break;case 9:d=
0!=(_TIFFGetField(b,324,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt))|0)?10:14;break;case 10:d=0!=(_TIFFGetField(b,325,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=g,tempInt))|0)?11:14;break;case 11:d=0!=(__TIFFRewriteField(b,324,16,HEAP32[((b+40|0)+128|0)>>2],HEAP32[e>>2])|0)?12:14;break;case 12:d=0!=(__TIFFRewriteField(b,325,16,HEAP32[((b+40|0)+128|0)>>2],HEAP32[g>>2])|0)?13:14;break;
case 13:d=b+12|0;HEAP32[d>>2]&=-2097153;d=b+12|0;HEAP32[d>>2]&=-65;a=1;d=26;break;case 14:d=21;break;case 15:d=0!=(_TIFFGetField(b,273,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt))|0)?16:20;break;case 16:d=0!=(_TIFFGetField(b,279,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=g,tempInt))|0)?17:20;break;case 17:d=0!=(__TIFFRewriteField(b,273,16,HEAP32[((b+40|0)+128|0)>>2],HEAP32[e>>2])|0)?
18:20;break;case 18:d=0!=(__TIFFRewriteField(b,279,16,HEAP32[((b+40|0)+128|0)>>2],HEAP32[g>>2])|0)?19:20;break;case 19:d=b+12|0;HEAP32[d>>2]&=-2097153;d=b+12|0;HEAP32[d>>2]&=-65;a=1;d=26;break;case 20:d=21;break;case 21:d=22;break;case 22:d=0!=(HEAP32[(b+12|0)>>2]&2097160|0)?23:25;break;case 23:d=0!=(_TIFFRewriteDirectory(b)|0)?25:24;break;case 24:a=0;d=26;break;case 25:a=1;d=26;break;case 26:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _TIFFFlushData(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;a=m;d=0==(HEAP32[(a+12|0)>>2]&64|0)?2:3;break;case 2:c=1;d=8;break;case 3:d=0!=(HEAP32[(a+12|0)>>2]&4096|0)?4:7;break;case 4:d=a+12|0;HEAP32[d>>2]&=-4097;d=0!=(FUNCTION_TABLE[HEAP32[(a+528|0)>>2]](a)|0)?6:5;break;case 5:c=0;d=8;break;case 6:d=7;break;case 7:c=_TIFFFlushData1(a);d=8;break;case 8:return c;default:assert(0,"bad label: "+d)}}
function _TIFFRGBAImageOK(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e,g,f,k=a,h,l=a+8;e=m;g=d;f=e+40|0;c=0!=(HEAP32[(e+500|0)>>2]|0)?3:2;break;case 2:_sprintf(g,28856,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=0;c=39;break;case 3:c=HEAP16[(f+44|0)>>1]&65535;c=1==(c|0)|2==(c|0)|4==(c|0)|8==(c|0)|16==(c|0)?4:5;break;case 4:c=6;break;
case 5:b=HEAP16[(f+44|0)>>1]&65535;_sprintf(g,39400,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,tempInt));b=0;c=39;break;case 6:h=(HEAP16[(f+58|0)>>1]&65535)-(HEAP16[(f+116|0)>>1]&65535)|0;c=0!=(_TIFFGetField(e,262,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=k,tempInt))|0)?12:7;break;case 7:c=h;c=1==(c|0)?8:3==(c|0)?9:10;break;case 8:HEAP16[k>>1]=1;c=11;break;case 9:HEAP16[k>>1]=2;c=11;break;
case 10:_sprintf(g,33024,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=8656,tempInt));b=0;c=39;break;case 11:c=12;break;case 12:c=HEAP16[k>>1]&65535;c=0==(c|0)|1==(c|0)|3==(c|0)?13:6==(c|0)?18:2==(c|0)?19:5==(c|0)?22:32844==(c|0)?27:32845==(c|0)?30:8==(c|0)?36:37;break;case 13:c=1==(HEAP16[(f+86|0)>>1]&65535|0)?14:17;break;case 14:c=1!=(HEAP16[(f+58|0)>>1]&65535|0)?15:17;break;case 15:c=8>(HEAP16[(f+44|0)>>1]&65535|0)?16:17;break;case 16:b=HEAP16[k>>
1]&65535;var c=HEAP16[(f+58|0)>>1]&65535,n=HEAP16[(f+44|0)>>1]&65535;_sprintf(g,30536,(tempInt=STACKTOP,STACKTOP=STACKTOP+40|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=8656,HEAP32[tempInt+8>>2]=b,HEAP32[tempInt+16>>2]=28600,HEAP32[tempInt+24>>2]=c,HEAP32[tempInt+32>>2]=n,tempInt));b=0;c=39;break;case 17:c=38;break;case 18:c=38;break;case 19:c=3>(h|0)?20:21;break;case 20:b=h;_sprintf(g,27184,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>
2]=26136,HEAP32[tempInt+8>>2]=b,tempInt));b=0;c=39;break;case 21:c=38;break;case 22:_TIFFGetFieldDefaulted(e,332,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=l,tempInt));c=1!=(HEAP16[l>>1]&65535|0)?23:24;break;case 23:b=HEAP16[l>>1]&65535;_sprintf(g,25016,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=23816,HEAP32[tempInt+8>>2]=b,tempInt));b=0;c=39;break;case 24:c=4>(HEAP16[(f+58|0)>>1]&65535|0)?25:
26;break;case 25:b=HEAP16[(f+58|0)>>1]&65535;_sprintf(g,25016,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=28600,HEAP32[tempInt+8>>2]=b,tempInt));b=0;c=39;break;case 26:c=38;break;case 27:c=34676!=(HEAP16[(f+48|0)>>1]&65535|0)?28:29;break;case 28:_sprintf(g,23136,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=41856,HEAP32[tempInt+8>>2]=34676,tempInt));b=0;c=39;break;case 29:c=38;break;case 30:c=34676!=
(HEAP16[(f+48|0)>>1]&65535|0)?31:33;break;case 31:c=34677!=(HEAP16[(f+48|0)>>1]&65535|0)?32:33;break;case 32:_sprintf(g,41208,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=41856,HEAP32[tempInt+8>>2]=34676,HEAP32[tempInt+16>>2]=34677,tempInt));b=0;c=39;break;case 33:c=1!=(HEAP16[(f+86|0)>>1]&65535|0)?34:35;break;case 34:b=HEAP16[(f+86|0)>>1]&65535;_sprintf(g,40536,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>
2]=39888,HEAP32[tempInt+8>>2]=b,tempInt));b=0;c=39;break;case 35:c=38;break;case 36:c=38;break;case 37:b=HEAP16[k>>1]&65535;_sprintf(g,39248,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=8656,HEAP32[tempInt+8>>2]=b,tempInt));b=0;c=39;break;case 38:b=1;c=39;break;case 39:return e=b,STACKTOP=a,e;default:assert(0,"bad label: "+c)}}
function _TIFFRGBAImageEnd(m){for(var d=0,d=1;;)switch(d){case 1:var c;c=m;d=0!=(HEAP32[(c+56|0)>>2]|0)?2:3;break;case 2:__TIFFfree(HEAP32[(c+56|0)>>2]);HEAP32[(c+56|0)>>2]=0;d=3;break;case 3:d=0!=(HEAP32[(c+60|0)>>2]|0)?4:5;break;case 4:__TIFFfree(HEAP32[(c+60|0)>>2]);HEAP32[(c+60|0)>>2]=0;d=5;break;case 5:d=0!=(HEAP32[(c+64|0)>>2]|0)?6:7;break;case 6:__TIFFfree(HEAP32[(c+64|0)>>2]);HEAP32[(c+64|0)>>2]=0;d=7;break;case 7:d=0!=(HEAP32[(c+68|0)>>2]|0)?8:9;break;case 8:__TIFFfree(HEAP32[(c+68|0)>>2]);
HEAP32[(c+68|0)>>2]=0;d=9;break;case 9:d=0!=(HEAP32[(c+72|0)>>2]|0)?10:11;break;case 10:__TIFFfree(HEAP32[(c+72|0)>>2]);HEAP32[(c+72|0)>>2]=0;d=11;break;case 11:d=0!=(HEAP32[(c+76|0)>>2]|0)?12:13;break;case 12:__TIFFfree(HEAP32[(c+76|0)>>2]);HEAP32[(c+76|0)>>2]=0;d=13;break;case 13:d=0!=(HEAP32[(c+80|0)>>2]|0)?14:15;break;case 14:__TIFFfree(HEAP32[(c+80|0)>>2]);HEAP32[(c+80|0)>>2]=0;d=15;break;case 15:d=0!=(HEAP32[(c+36|0)>>2]|0)?16:17;break;case 16:__TIFFfree(HEAP32[(c+36|0)>>2]);__TIFFfree(HEAP32[(c+
40|0)>>2]);__TIFFfree(HEAP32[(c+44|0)>>2]);HEAP32[(c+44|0)>>2]=0;HEAP32[(c+40|0)>>2]=0;HEAP32[(c+36|0)>>2]=0;d=17;break;case 17:return;default:assert(0,"bad label: "+d)}}
function _TIFFRGBAImageBegin(m,d,c,a){var b=0,e=STACKTOP;STACKTOP=STACKTOP+64|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h,l=e,n=e+8,p=e+16,q=e+24,t,r=e+32,s=e+40,v=e+48,u,w=e+56;f=m;k=d;b=c;h=a;HEAP32[(f+84|0)>>2]=0;HEAP32[(f+88|0)>>2]=0;HEAP32[(f+36|0)>>2]=0;HEAP32[(f+40|0)>>2]=0;HEAP32[(f+44|0)>>2]=0;HEAP16[(f+30|0)>>1]=4;HEAP32[(f|0)>>2]=k;HEAP32[(f+4|0)>>2]=b;b=f+24|0;_TIFFGetFieldDefaulted(k,258,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|
0))|0,HEAP32[tempInt>>2]=b,tempInt));b=HEAP16[(f+24|0)>>1]&65535;b=1==(b|0)|2==(b|0)|4==(b|0)|8==(b|0)|16==(b|0)?2:3;break;case 2:b=4;break;case 3:b=HEAP16[(f+24|0)>>1]&65535;_sprintf(h,39400,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,tempInt));b=74;break;case 4:HEAP32[(f+12|0)>>2]=0;b=f+26|0;_TIFFGetFieldDefaulted(k,277,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,tempInt));_TIFFGetFieldDefaulted(k,
338,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=n,HEAP32[tempInt+8>>2]=l,tempInt));b=1<=(HEAP16[n>>1]&65535|0)?5:11;break;case 5:b=HEAP16[(HEAP32[l>>2]|0)>>1]&65535;b=0==(b|0)?6:1==(b|0)|2==(b|0)?9:10;break;case 6:b=3<(HEAP16[(f+26|0)>>1]&65535|0)?7:8;break;case 7:HEAP32[(f+12|0)>>2]=1;b=8;break;case 8:b=10;break;case 9:HEAP32[(f+12|0)>>2]=HEAP16[(HEAP32[l>>2]|0)>>1]&65535;b=10;break;case 10:b=11;break;case 11:b=f+32|0;b=0!=(_TIFFGetField(k,262,
(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,tempInt))|0)?13:12;break;case 12:HEAP16[(f+32|0)>>1]=0;b=13;break;case 13:b=0==(HEAP16[n>>1]&65535|0)?14:17;break;case 14:b=4==(HEAP16[(f+26|0)>>1]&65535|0)?15:17;break;case 15:b=2==(HEAP16[(f+32|0)>>1]&65535|0)?16:17;break;case 16:HEAP32[(f+12|0)>>2]=1;HEAP16[n>>1]=1;b=17;break;case 17:t=(HEAP16[(f+26|0)>>1]&65535)-(HEAP16[n>>1]&65535)|0;_TIFFGetFieldDefaulted(k,259,(tempInt=STACKTOP,STACKTOP=STACKTOP+
8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=q,tempInt));_TIFFGetFieldDefaulted(k,284,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=p,tempInt));b=f+32|0;b=0!=(_TIFFGetField(k,262,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,tempInt))|0)?26:18;break;case 18:b=t;b=1==(b|0)?19:3==(b|0)?23:24;break;case 19:b=0!=(_isCCITTCompression(k)|0)?20:21;break;case 20:HEAP16[(f+32|0)>>1]=0;b=22;
break;case 21:HEAP16[(f+32|0)>>1]=1;b=22;break;case 22:b=25;break;case 23:HEAP16[(f+32|0)>>1]=2;b=25;break;case 24:_sprintf(h,33024,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=8656,tempInt));b=74;break;case 25:b=26;break;case 26:b=HEAP16[(f+32|0)>>1]&65535;b=3==(b|0)?27:0==(b|0)|1==(b|0)?34:6==(b|0)?39:2==(b|0)?45:5==(b|0)?48:32844==(b|0)?53:32845==(b|0)?56:8==(b|0)?62:63;break;case 27:b=0!=(_TIFFGetField(k,320,(tempInt=STACKTOP,STACKTOP=STACKTOP+
24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=r,HEAP32[tempInt+8>>2]=s,HEAP32[tempInt+16>>2]=v,tempInt))|0)?29:28;break;case 28:_sprintf(h,38304,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=74;break;case 29:u=1<<(HEAP16[(f+24|0)>>1]&65535);b=__TIFFmalloc(u<<1);HEAP32[(f+36|0)>>2]=b;b=__TIFFmalloc(u<<1);HEAP32[(f+40|0)>>2]=b;b=__TIFFmalloc(u<<1);HEAP32[(f+44|0)>>2]=b;b=0!=(HEAP32[(f+36|0)>>2]|
0)?30:32;break;case 30:b=0!=(HEAP32[(f+40|0)>>2]|0)?31:32;break;case 31:b=0!=(HEAP32[(f+44|0)>>2]|0)?33:32;break;case 32:_sprintf(h,37584,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=74;break;case 33:__TIFFmemcpy(HEAP32[(f+36|0)>>2],HEAP32[r>>2],u<<1);__TIFFmemcpy(HEAP32[(f+40|0)>>2],HEAP32[s>>2],u<<1);__TIFFmemcpy(HEAP32[(f+44|0)>>2],HEAP32[v>>2],u<<1);b=34;break;case 34:b=1==(HEAP16[p>>1]&65535|0)?35:38;break;
case 35:b=1!=(HEAP16[(f+26|0)>>1]&65535|0)?36:38;break;case 36:b=8>(HEAP16[(f+24|0)>>1]&65535|0)?37:38;break;case 37:var b=HEAP16[(f+32|0)>>1]&65535,y=HEAP16[(f+26|0)>>1]&65535,A=HEAP16[(f+24|0)>>1]&65535;_sprintf(h,30536,(tempInt=STACKTOP,STACKTOP=STACKTOP+40|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=8656,HEAP32[tempInt+8>>2]=b,HEAP32[tempInt+16>>2]=28600,HEAP32[tempInt+24>>2]=y,HEAP32[tempInt+32>>2]=A,tempInt));b=74;break;case 38:b=64;break;case 39:b=1==(HEAP16[p>>1]&65535|0)?40:
44;break;case 40:b=7==(HEAP16[q>>1]&65535|0)?41:42;break;case 41:_TIFFSetField(k,65538,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=1,tempInt));HEAP16[(f+32|0)>>1]=2;b=43;break;case 42:b=43;break;case 43:b=44;break;case 44:b=64;break;case 45:b=3>(t|0)?46:47;break;case 46:b=t;_sprintf(h,27184,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=26136,HEAP32[tempInt+8>>2]=b,tempInt));b=74;break;case 47:b=
64;break;case 48:_TIFFGetFieldDefaulted(k,332,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=w,tempInt));b=1!=(HEAP16[w>>1]&65535|0)?49:50;break;case 49:b=HEAP16[w>>1]&65535;_sprintf(h,25016,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=23816,HEAP32[tempInt+8>>2]=b,tempInt));b=74;break;case 50:b=4>(HEAP16[(f+26|0)>>1]&65535|0)?51:52;break;case 51:b=HEAP16[(f+26|0)>>1]&65535;_sprintf(h,25016,(tempInt=
STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=28600,HEAP32[tempInt+8>>2]=b,tempInt));b=74;break;case 52:b=64;break;case 53:b=34676!=(HEAP16[q>>1]&65535|0)?54:55;break;case 54:_sprintf(h,23136,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=41856,HEAP32[tempInt+8>>2]=34676,tempInt));b=74;break;case 55:_TIFFSetField(k,65560,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>
2]=3,tempInt));HEAP16[(f+32|0)>>1]=1;HEAP16[(f+24|0)>>1]=8;b=64;break;case 56:b=34676!=(HEAP16[q>>1]&65535|0)?57:59;break;case 57:b=34677!=(HEAP16[q>>1]&65535|0)?58:59;break;case 58:_sprintf(h,41208,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=41856,HEAP32[tempInt+8>>2]=34676,HEAP32[tempInt+16>>2]=34677,tempInt));b=74;break;case 59:b=1!=(HEAP16[p>>1]&65535|0)?60:61;break;case 60:g=HEAP16[p>>1]&65535;_sprintf(h,40536,(tempInt=STACKTOP,STACKTOP=STACKTOP+
16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=39888,HEAP32[tempInt+8>>2]=g,tempInt));g=0;b=75;break;case 61:_TIFFSetField(k,65560,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=3,tempInt));HEAP16[(f+32|0)>>1]=2;HEAP16[(f+24|0)>>1]=8;b=64;break;case 62:b=64;break;case 63:b=HEAP16[(f+32|0)>>1]&65535;_sprintf(h,39248,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=8656,HEAP32[tempInt+8>>2]=
b,tempInt));b=74;break;case 64:HEAP32[(f+56|0)>>2]=0;HEAP32[(f+60|0)>>2]=0;HEAP32[(f+64|0)>>2]=0;HEAP32[(f+68|0)>>2]=0;HEAP32[(f+72|0)>>2]=0;HEAP32[(f+76|0)>>2]=0;HEAP32[(f+80|0)>>2]=0;b=f+16|0;_TIFFGetField(k,256,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,tempInt));b=f+20|0;_TIFFGetField(k,257,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,tempInt));b=f+28|0;_TIFFGetFieldDefaulted(k,274,(tempInt=
STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,tempInt));if(2==(HEAP16[p>>1]&65535|0))b=65;else var z=0,b=66;break;case 65:z=1<(HEAP16[(f+26|0)>>1]&65535|0);b=66;break;case 66:HEAP32[(f+8|0)>>2]=(z^1)&1;b=0!=(HEAP32[(f+8|0)>>2]|0)?67:70;break;case 67:b=0!=(_PickContigCase(f)|0)?69:68;break;case 68:_sprintf(h,36904,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=74;break;
case 69:b=73;break;case 70:b=0!=(_PickSeparateCase(f)|0)?72:71;break;case 71:_sprintf(h,36904,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=74;break;case 72:b=73;break;case 73:g=1;b=75;break;case 74:__TIFFfree(HEAP32[(f+36|0)>>2]);__TIFFfree(HEAP32[(f+40|0)>>2]);__TIFFfree(HEAP32[(f+44|0)>>2]);HEAP32[(f+44|0)>>2]=0;HEAP32[(f+40|0)>>2]=0;g=HEAP32[(f+36|0)>>2]=0;b=75;break;case 75:return m=g,STACKTOP=e,m;default:assert(0,
"bad label: "+b)}}
function _isCCITTCompression(m){var d=0,c=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a=c;_TIFFGetField(m,259,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,tempInt));if(3==(HEAP16[a>>1]&65535|0))var b=1,d=5;else d=2;break;case 2:4==(HEAP16[a>>1]&65535|0)?(b=1,d=5):d=3;break;case 3:2==(HEAP16[a>>1]&65535|0)?(b=1,d=5):d=4;break;case 4:b=32771==(HEAP16[a>>1]&65535|0);d=5;break;case 5:return m=b&
1,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _PickContigCase(m){var d=0,c=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b=c,e=c+8;a=m;d=0!=(_TIFFIsTiled(HEAP32[(a|0)>>2])|0)?312:196;HEAP32[(a+48|0)>>2]=d;HEAP32[(a+52|0)>>2]=0;d=HEAP16[(a+32|0)>>1]&65535;d=2==(d|0)?2:5==(d|0)?27:3==(d|0)?35:0==(d|0)|1==(d|0)?43:6==(d|0)?56:8==(d|0)?70:75;break;case 2:d=HEAP16[(a+24|0)>>1]&65535;d=8==(d|0)?3:16==(d|0)?12:26;break;case 3:d=1==(HEAP32[(a+12|0)>>2]|0)?4:5;break;case 4:HEAP32[(a+52|
0)>>2]=360;d=11;break;case 5:d=2==(HEAP32[(a+12|0)>>2]|0)?6:9;break;case 6:d=0!=(_BuildMapUaToAa(a)|0)?7:8;break;case 7:HEAP32[(a+52|0)>>2]=270;d=8;break;case 8:d=10;break;case 9:HEAP32[(a+52|0)>>2]=138;d=10;break;case 10:d=11;break;case 11:d=26;break;case 12:d=1==(HEAP32[(a+12|0)>>2]|0)?13:16;break;case 13:d=0!=(_BuildMapBitdepth16To8(a)|0)?14:15;break;case 14:HEAP32[(a+52|0)>>2]=96;d=15;break;case 15:d=25;break;case 16:d=2==(HEAP32[(a+12|0)>>2]|0)?17:21;break;case 17:d=0!=(_BuildMapBitdepth16To8(a)|
0)?18:20;break;case 18:d=0!=(_BuildMapUaToAa(a)|0)?19:20;break;case 19:HEAP32[(a+52|0)>>2]=210;d=20;break;case 20:d=24;break;case 21:d=0!=(_BuildMapBitdepth16To8(a)|0)?22:23;break;case 22:HEAP32[(a+52|0)>>2]=82;d=23;break;case 23:d=24;break;case 24:d=25;break;case 25:d=26;break;case 26:d=75;break;case 27:d=0!=(_buildMap(a)|0)?28:34;break;case 28:d=8==(HEAP16[(a+24|0)>>1]&65535|0)?29:33;break;case 29:d=0!=(HEAP32[(a+56|0)>>2]|0)?31:30;break;case 30:HEAP32[(a+52|0)>>2]=94;d=32;break;case 31:HEAP32[(a+
52|0)>>2]=202;d=32;break;case 32:d=33;break;case 33:d=34;break;case 34:d=75;break;case 35:d=0!=(_buildMap(a)|0)?36:42;break;case 36:d=HEAP16[(a+24|0)>>1]&65535;d=8==(d|0)?37:4==(d|0)?38:2==(d|0)?39:1==(d|0)?40:41;break;case 37:HEAP32[(a+52|0)>>2]=154;d=41;break;case 38:HEAP32[(a+52|0)>>2]=44;d=41;break;case 39:HEAP32[(a+52|0)>>2]=218;d=41;break;case 40:HEAP32[(a+52|0)>>2]=390;d=41;break;case 41:d=42;break;case 42:d=75;break;case 43:d=0!=(_buildMap(a)|0)?44:55;break;case 44:d=HEAP16[(a+24|0)>>1]&65535;
d=16==(d|0)?45:8==(d|0)?46:4==(d|0)?51:2==(d|0)?52:1==(d|0)?53:54;break;case 45:HEAP32[(a+52|0)>>2]=36;d=54;break;case 46:d=0!=(HEAP32[(a+12|0)>>2]|0)?47:49;break;case 47:d=2==(HEAP16[(a+26|0)>>1]&65535|0)?48:49;break;case 48:HEAP32[(a+52|0)>>2]=274;d=50;break;case 49:HEAP32[(a+52|0)>>2]=14;d=50;break;case 50:d=54;break;case 51:HEAP32[(a+52|0)>>2]=256;d=54;break;case 52:HEAP32[(a+52|0)>>2]=114;d=54;break;case 53:HEAP32[(a+52|0)>>2]=346;d=54;break;case 54:d=55;break;case 55:d=75;break;case 56:d=8==
(HEAP16[(a+24|0)>>1]&65535|0)?57:69;break;case 57:d=3==(HEAP16[(a+26|0)>>1]&65535|0)?58:69;break;case 58:d=0!=(_initYCbCrConversion(a)|0)?59:68;break;case 59:_TIFFGetFieldDefaulted(HEAP32[(a|0)>>2],530,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,HEAP32[tempInt+8>>2]=e,tempInt));d=(HEAP16[b>>1]&65535)<<4|HEAP16[e>>1]&65535;d=68==(d|0)?60:66==(d|0)?61:65==(d|0)?62:34==(d|0)?63:33==(d|0)?64:18==(d|0)?65:17==(d|0)?66:67;break;case 60:HEAP32[(a+52|
0)>>2]=4;d=67;break;case 61:HEAP32[(a+52|0)>>2]=42;d=67;break;case 62:HEAP32[(a+52|0)>>2]=286;d=67;break;case 63:HEAP32[(a+52|0)>>2]=172;d=67;break;case 64:HEAP32[(a+52|0)>>2]=268;d=67;break;case 65:HEAP32[(a+52|0)>>2]=156;d=67;break;case 66:HEAP32[(a+52|0)>>2]=84;d=67;break;case 67:d=68;break;case 68:d=69;break;case 69:d=75;break;case 70:d=0!=(_buildMap(a)|0)?71:74;break;case 71:d=8==(HEAP16[(a+24|0)>>1]&65535|0)?72:73;break;case 72:d=_initCIELabConversion(a);HEAP32[(a+52|0)>>2]=d;d=73;break;case 73:d=
75;break;case 74:d=75;break;case 75:if(0!=(HEAP32[(a+48|0)>>2]|0))d=76;else var g=0,d=77;break;case 76:g=0!=(HEAP32[(a+52|0)>>2]|0);d=77;break;case 77:return m=g&1,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _PickSeparateCase(m){var d=0,c=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b=c,e=c+8;a=m;d=0!=(_TIFFIsTiled(HEAP32[(a|0)>>2])|0)?126:192;HEAP32[(a+48|0)>>2]=d;HEAP32[(a+52|0)>>2]=0;d=HEAP16[(a+32|0)>>1]&65535;d=0==(d|0)|1==(d|0)|2==(d|0)?2:5==(d|0)?27:6==(d|0)?31:39;break;case 2:d=HEAP16[(a+24|0)>>1]&65535;d=8==(d|0)?3:16==(d|0)?12:26;break;case 3:d=1==(HEAP32[(a+12|0)>>2]|0)?4:5;break;case 4:HEAP32[(a+52|0)>>2]=50;d=11;break;case 5:d=
2==(HEAP32[(a+12|0)>>2]|0)?6:9;break;case 6:d=0!=(_BuildMapUaToAa(a)|0)?7:8;break;case 7:HEAP32[(a+52|0)>>2]=276;d=8;break;case 8:d=10;break;case 9:HEAP32[(a+52|0)>>2]=240;d=10;break;case 10:d=11;break;case 11:d=26;break;case 12:d=1==(HEAP32[(a+12|0)>>2]|0)?13:16;break;case 13:d=0!=(_BuildMapBitdepth16To8(a)|0)?14:15;break;case 14:HEAP32[(a+52|0)>>2]=120;d=15;break;case 15:d=25;break;case 16:d=2==(HEAP32[(a+12|0)>>2]|0)?17:21;break;case 17:d=0!=(_BuildMapBitdepth16To8(a)|0)?18:20;break;case 18:d=
0!=(_BuildMapUaToAa(a)|0)?19:20;break;case 19:HEAP32[(a+52|0)>>2]=310;d=20;break;case 20:d=24;break;case 21:d=0!=(_BuildMapBitdepth16To8(a)|0)?22:23;break;case 22:HEAP32[(a+52|0)>>2]=46;d=23;break;case 23:d=24;break;case 24:d=25;break;case 25:d=26;break;case 26:d=39;break;case 27:d=8==(HEAP16[(a+24|0)>>1]&65535|0)?28:30;break;case 28:d=4==(HEAP16[(a+26|0)>>1]&65535|0)?29:30;break;case 29:HEAP32[(a+12|0)>>2]=1;HEAP32[(a+52|0)>>2]=168;d=30;break;case 30:d=39;break;case 31:d=8==(HEAP16[(a+24|0)>>1]&
65535|0)?32:38;break;case 32:d=3==(HEAP16[(a+26|0)>>1]&65535|0)?33:38;break;case 33:d=0!=(_initYCbCrConversion(a)|0)?34:37;break;case 34:_TIFFGetFieldDefaulted(HEAP32[(a|0)>>2],530,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,HEAP32[tempInt+8>>2]=e,tempInt));d=17==((HEAP16[b>>1]&65535)<<4|HEAP16[e>>1]&65535|0)?35:36;break;case 35:HEAP32[(a+52|0)>>2]=366;d=36;break;case 36:d=37;break;case 37:d=38;break;case 38:d=39;break;case 39:if(0!=(HEAP32[(a+
48|0)>>2]|0))d=40;else var g=0,d=41;break;case 40:g=0!=(HEAP32[(a+52|0)>>2]|0);d=41;break;case 41:return m=g&1,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _TIFFRGBAImageGet(m,d,c,a){var b=0,e=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h,l;f=m;k=d;h=c;l=a;b=0==(HEAP32[(f+48|0)>>2]|0)?2:3;break;case 2:b=HEAP32[(HEAP32[(f|0)>>2]+628|0)>>2];g=_TIFFFileName(HEAP32[(f|0)>>2]);_TIFFErrorExt(b,g,36104,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));g=0;b=6;break;case 3:b=0==(HEAP32[(f+52|0)>>2]|0)?4:5;break;case 4:b=HEAP32[(HEAP32[(f|
0)>>2]+628|0)>>2];g=_TIFFFileName(HEAP32[(f|0)>>2]);_TIFFErrorExt(b,g,35416,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));g=0;b=6;break;case 5:g=FUNCTION_TABLE[HEAP32[(f+48|0)>>2]](f,k,h,l);b=6;break;case 6:return m=g,STACKTOP=e,m;default:assert(0,"bad label: "+b)}}
function _TIFFReadRGBAImageOriented(m,d,c,a,b,e){var g=0,f=STACKTOP;STACKTOP=STACKTOP+1120|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(g=1;;)switch(g){case 1:var k,h,l,n,p,q,t=f,r=f+1024,s;k=m;h=d;l=c;n=a;p=b;q=e;_memset(t,0,1024);g=0!=(_TIFFRGBAImageOK(k,t|0)|0)?2:4;break;case 2:g=0!=(_TIFFRGBAImageBegin(r,k,q,t|0)|0)?3:4;break;case 3:HEAP16[(r+30|0)>>1]=p&65535;g=n;s=Math.imul(l-HEAP32[(r+20|0)>>2]|0,h)|0;s=_TIFFRGBAImageGet(r,g+(s<<2)|0,h,HEAP32[(r+20|0)>>2]);_TIFFRGBAImageEnd(r);g=5;break;case 4:g=
HEAP32[(k+628|0)>>2];s=_TIFFFileName(k);var v=t|0;_TIFFErrorExt(g,s,34904,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=v,tempInt));s=0;g=5;break;case 5:return m=s,STACKTOP=f,m;default:assert(0,"bad label: "+g)}}
function _gtTileSeparate(m,d,c,a){var b=0,e=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h,l,n,p,q,t,r,s,v,u=e,w=e+8,y,A,z,x,B,C,D,F,I,G,H,K,J,E,L,Q,N,P;f=m;k=d;h=c;l=a;n=HEAP32[(f|0)>>2];p=HEAP32[(f+52|0)>>2];G=HEAP32[(f+12|0)>>2];K=1;C=_TIFFTileSize(n);b=0!=(C|0)?2:4;break;case 2:b=((Math.imul(0!=(G|0)?4:3,C)|0)/(C|0)&-1|0)==((0!=(G|0)?4:3)|0)?3:4;break;case 3:var W=Math.imul(0!=(G|0)?4:3,C)|0,b=5;break;case 4:W=0;b=5;break;case 5:D=W;
b=0==(D|0)?6:7;break;case 6:g=HEAP32[(n+628|0)>>2];b=_TIFFFileName(n);_TIFFErrorExt(g,b,31264,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=30680,tempInt));g=0;b=66;break;case 7:y=__TIFFmalloc(D);b=0==(y|0)?8:9;break;case 8:g=HEAP32[(n+628|0)>>2];b=_TIFFFileName(n);_TIFFErrorExt(g,b,34904,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=30864,tempInt));g=0;b=66;break;case 9:__TIFFmemset(y,0,D);A=y;z=A+
C|0;x=z+C|0;b=0!=(G|0)?10:11;break;case 10:var O=x+C|0,b=12;break;case 11:O=0;b=12;break;case 12:B=O;_TIFFGetField(n,322,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=u,tempInt));_TIFFGetField(n,323,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=w,tempInt));J=_setorientation(f);b=0!=(J&1|0)?13:14;break;case 13:r=l-1|0;I=-(HEAP32[u>>2]+h|0)|0;b=15;break;case 14:r=0;I=-(HEAP32[u>>2]-h|0)|0;b=15;break;
case 15:b=HEAP16[(f+32|0)>>1]&65535;b=0==(b|0)|1==(b|0)|3==(b|0)?16:17;break;case 16:E=1;z=x=A;b=18;break;case 17:E=3;b=18;break;case 18:t=0;b=19;break;case 19:b=t>>>0<l>>>0?20:56;break;case 20:s=HEAP32[w>>2]-(((t+HEAP32[(f+84|0)>>2]|0)>>>0)%(HEAP32[w>>2]>>>0)&-1)|0;b=(t+s|0)>>>0>l>>>0?21:22;break;case 21:var T=l-t|0,b=23;break;case 22:T=s;b=23;break;case 23:H=T;q=0;b=24;break;case 24:b=q>>>0<h>>>0?25:51;break;case 25:b=-1==(_TIFFReadTile(n,A,q+HEAP32[(f+88|0)>>2]|0,t+HEAP32[(f+84|0)>>2]|0,0,0)|0)?
26:28;break;case 26:b=0!=(HEAP32[(f+4|0)>>2]|0)?27:28;break;case 27:K=0;b=51;break;case 28:b=1<(E|0)?29:32;break;case 29:b=-1==(_TIFFReadTile(n,z,q+HEAP32[(f+88|0)>>2]|0,t+HEAP32[(f+84|0)>>2]|0,0,1)|0)?30:32;break;case 30:b=0!=(HEAP32[(f+4|0)>>2]|0)?31:32;break;case 31:K=0;b=51;break;case 32:b=1<(E|0)?33:36;break;case 33:b=-1==(_TIFFReadTile(n,x,q+HEAP32[(f+88|0)>>2]|0,t+HEAP32[(f+84|0)>>2]|0,0,2)|0)?34:36;break;case 34:b=0!=(HEAP32[(f+4|0)>>2]|0)?35:36;break;case 35:K=0;b=51;break;case 36:b=0!=(G|
0)?37:40;break;case 37:b=-1==(_TIFFReadTile(n,B,q+HEAP32[(f+88|0)>>2]|0,t+HEAP32[(f+84|0)>>2]|0,0,E&65535)|0)?38:40;break;case 38:b=0!=(HEAP32[(f+4|0)>>2]|0)?39:40;break;case 39:K=0;b=51;break;case 40:v=((t+HEAP32[(f+84|0)>>2]|0)>>>0)%(HEAP32[w>>2]>>>0)&-1;b=_TIFFTileRowSize(n);v=Math.imul(v,b)|0;b=(q+HEAP32[u>>2]|0)>>>0>h>>>0?41:45;break;case 41:L=h-q|0;F=HEAP32[u>>2]-L|0;var Y=p,S=f,X=k,R=Math.imul(r,h)|0,X=(X+(R<<2)|0)+(q<<2)|0,R=q,V=r,aa=H,fa=F;F=I+F|0;var Z=A+v|0,ka=z+v|0,M=x+v|0,b=0!=(G|0)?
42:43;break;case 42:var ga=B+v|0,b=44;break;case 43:ga=0;b=44;break;case 44:FUNCTION_TABLE[Y](S,X,R,V,L,aa,fa,F,Z,ka,M,ga);b=49;break;case 45:var na=p,ba=f,ca=k,oa=Math.imul(r,h)|0,ca=(ca+(oa<<2)|0)+(q<<2)|0,oa=q,va=r,pa=HEAP32[u>>2],la=H,wa=I,qa=A+v|0,ea=z+v|0,xa=x+v|0,b=0!=(G|0)?46:47;break;case 46:var ja=B+v|0,b=48;break;case 47:ja=0;b=48;break;case 48:FUNCTION_TABLE[na](ba,ca,oa,va,pa,la,0,wa,qa,ea,xa,ja);b=49;break;case 49:b=50;break;case 50:q=q+HEAP32[u>>2]|0;b=24;break;case 51:b=0!=(J&1|0)?
52:53;break;case 52:var da=-H|0,b=54;break;case 53:da=H;b=54;break;case 54:r=r+da|0;b=55;break;case 55:t=t+H|0;b=19;break;case 56:b=0!=(J&2|0)?57:65;break;case 57:Q=0;b=58;break;case 58:b=Q>>>0<l>>>0?59:64;break;case 59:N=k;P=Math.imul(Q,h)|0;N=N+(P<<2)|0;P=(N+(h<<2)|0)-4|0;b=60;break;case 60:b=N>>>0<P>>>0?61:62;break;case 61:b=HEAP32[N>>2];HEAP32[N>>2]=HEAP32[P>>2];HEAP32[P>>2]=b;N=N+4|0;P=P-4|0;b=60;break;case 62:b=63;break;case 63:Q=Q+1|0;b=58;break;case 64:b=65;break;case 65:__TIFFfree(y);g=K;
b=66;break;case 66:return m=g,STACKTOP=e,m;default:assert(0,"bad label: "+b)}}
function _gtStripSeparate(m,d,c,a){var b=0,e=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h,l,n,p,q,t,r,s,v,u,w,y,A,z,x,B=e,C,D,F,I,G,H,K,J,E,L,Q,N,P;f=m;k=d;h=c;l=a;n=HEAP32[(f|0)>>2];p=HEAP32[(f+52|0)>>2];D=HEAP32[(f+16|0)>>2];K=HEAP32[(f+12|0)>>2];J=1;F=_TIFFStripSize(n);b=0!=(F|0)?2:4;break;case 2:b=((Math.imul(0!=(K|0)?4:3,F)|0)/(F|0)&-1|0)==((0!=(K|0)?4:3)|0)?3:4;break;case 3:var W=Math.imul(0!=(K|0)?4:3,F)|0,b=5;break;case 4:W=0;b=
5;break;case 5:I=W;b=0==(I|0)?6:7;break;case 6:g=HEAP32[(n+628|0)>>2];b=_TIFFFileName(n);_TIFFErrorExt(g,b,31264,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=31096,tempInt));g=0;b=60;break;case 7:q=t=__TIFFmalloc(I);b=0==(q|0)?8:9;break;case 8:g=HEAP32[(n+628|0)>>2];b=_TIFFFileName(n);_TIFFErrorExt(g,b,30864,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));g=0;b=
60;break;case 9:__TIFFmemset(q,0,I);r=t+F|0;s=r+F|0;b=0!=(K|0)?10:11;break;case 10:var O=s+F|0,b=12;break;case 11:O=0;b=12;break;case 12:v=O;E=_setorientation(f);b=0!=(E&1|0)?13:14;break;case 13:w=l-1|0;H=-(h+h|0)|0;b=15;break;case 14:w=0;H=-(h-h|0)|0;b=15;break;case 15:b=HEAP16[(f+32|0)>>1]&65535;b=0==(b|0)|1==(b|0)|3==(b|0)?16:17;break;case 16:L=1;r=s=t;b=18;break;case 17:L=3;b=18;break;case 18:_TIFFGetFieldDefaulted(n,278,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|
0,HEAP32[tempInt>>2]=B,tempInt));x=_TIFFScanlineSize(n);b=h>>>0<D>>>0?19:20;break;case 19:var T=D-h|0,b=21;break;case 20:T=0;b=21;break;case 21:G=T;u=0;b=22;break;case 22:b=u>>>0<l>>>0?23:50;break;case 23:A=HEAP32[B>>2]-(((u+HEAP32[(f+84|0)>>2]|0)>>>0)%(HEAP32[B>>2]>>>0)&-1)|0;b=(u+A|0)>>>0>l>>>0?24:25;break;case 24:var Y=l-u|0,b=26;break;case 25:Y=A;b=26;break;case 26:y=Y;C=u+HEAP32[(f+84|0)>>2]|0;var b=n,S=_TIFFComputeStrip(n,C,0),X=t,R=Math.imul((((u+HEAP32[(f+84|0)>>2]|0)>>>0)%(HEAP32[B>>2]>>>
0)&-1)+y|0,x)|0,b=-1==(_TIFFReadEncodedStrip(b,S,X,R)|0)?27:29;break;case 27:b=0!=(HEAP32[(f+4|0)>>2]|0)?28:29;break;case 28:J=0;b=50;break;case 29:b=1<(L|0)?30:33;break;case 30:b=n;S=_TIFFComputeStrip(n,C,1);X=r;R=Math.imul((((u+HEAP32[(f+84|0)>>2]|0)>>>0)%(HEAP32[B>>2]>>>0)&-1)+y|0,x)|0;b=-1==(_TIFFReadEncodedStrip(b,S,X,R)|0)?31:33;break;case 31:b=0!=(HEAP32[(f+4|0)>>2]|0)?32:33;break;case 32:J=0;b=50;break;case 33:b=1<(L|0)?34:37;break;case 34:b=n;S=_TIFFComputeStrip(n,C,2);X=s;R=Math.imul((((u+
HEAP32[(f+84|0)>>2]|0)>>>0)%(HEAP32[B>>2]>>>0)&-1)+y|0,x)|0;b=-1==(_TIFFReadEncodedStrip(b,S,X,R)|0)?35:37;break;case 35:b=0!=(HEAP32[(f+4|0)>>2]|0)?36:37;break;case 36:J=0;b=50;break;case 37:b=0!=(K|0)?38:42;break;case 38:b=n;S=_TIFFComputeStrip(n,C,L&65535);X=v;R=Math.imul((((u+HEAP32[(f+84|0)>>2]|0)>>>0)%(HEAP32[B>>2]>>>0)&-1)+y|0,x)|0;b=-1==(_TIFFReadEncodedStrip(b,S,X,R)|0)?39:41;break;case 39:b=0!=(HEAP32[(f+4|0)>>2]|0)?40:41;break;case 40:J=0;b=50;break;case 41:b=42;break;case 42:z=Math.imul(((u+
HEAP32[(f+84|0)>>2]|0)>>>0)%(HEAP32[B>>2]>>>0)&-1,x)|0;var V=p,aa=f,fa=k,Z=Math.imul(w,h)|0,fa=fa+(Z<<2)|0,Z=w,ka=h,M=y,ga=G,na=H,ba=t+z|0,ca=r+z|0,oa=s+z|0,b=0!=(K|0)?43:44;break;case 43:var va=v+z|0,b=45;break;case 44:va=0;b=45;break;case 45:FUNCTION_TABLE[V](aa,fa,0,Z,ka,M,ga,na,ba,ca,oa,va);b=0!=(E&1|0)?46:47;break;case 46:var pa=-y|0,b=48;break;case 47:pa=y;b=48;break;case 48:w=w+pa|0;b=49;break;case 49:u=u+y|0;b=22;break;case 50:b=0!=(E&2|0)?51:59;break;case 51:Q=0;b=52;break;case 52:b=Q>>>
0<l>>>0?53:58;break;case 53:N=k;P=Math.imul(Q,h)|0;N=N+(P<<2)|0;P=(N+(h<<2)|0)-4|0;b=54;break;case 54:b=N>>>0<P>>>0?55:56;break;case 55:b=HEAP32[N>>2];HEAP32[N>>2]=HEAP32[P>>2];HEAP32[P>>2]=b;N=N+4|0;P=P-4|0;b=54;break;case 56:b=57;break;case 57:Q=Q+1|0;b=52;break;case 58:b=59;break;case 59:__TIFFfree(q);g=J;b=60;break;case 60:return m=g,STACKTOP=e,m;default:assert(0,"bad label: "+b)}}
function _putRGBAAseparate8bittile(m,d,c,a,b,e,g,f,k,h,l,n){for(var p=0,p=1;;)switch(p){case 1:var q,t,r,s,v,u,w,y,A,z;q=d;t=b;r=e;s=g;v=f;u=k;w=h;y=l;A=n;p=2;break;case 2:var x=r;r=x-1|0;p=0<x>>>0?3:18;break;case 3:z=t;p=4;break;case 4:p=8<=z>>>0?5:7;break;case 5:var B=u;u=B+1|0;var C=HEAP8[B]&255,D=w;w=D+1|0;var F=C|(HEAP8[D]&255)<<8,I=y;y=I+1|0;var G=F|(HEAP8[I]&255)<<16,H=A;A=H+1|0;var K=G|(HEAP8[H]&255)<<24,J=q;q=J+4|0;HEAP32[J>>2]=K;var E=u;u=E+1|0;var L=HEAP8[E]&255,Q=w;w=Q+1|0;var N=L|(HEAP8[Q]&
255)<<8,P=y;y=P+1|0;var W=N|(HEAP8[P]&255)<<16,O=A;A=O+1|0;var T=W|(HEAP8[O]&255)<<24,Y=q;q=Y+4|0;HEAP32[Y>>2]=T;var S=u;u=S+1|0;var X=HEAP8[S]&255,R=w;w=R+1|0;var V=X|(HEAP8[R]&255)<<8,aa=y;y=aa+1|0;var fa=V|(HEAP8[aa]&255)<<16,Z=A;A=Z+1|0;var ka=fa|(HEAP8[Z]&255)<<24,M=q;q=M+4|0;HEAP32[M>>2]=ka;var ga=u;u=ga+1|0;var na=HEAP8[ga]&255,ba=w;w=ba+1|0;var ca=na|(HEAP8[ba]&255)<<8,oa=y;y=oa+1|0;var va=ca|(HEAP8[oa]&255)<<16,pa=A;A=pa+1|0;var la=va|(HEAP8[pa]&255)<<24,wa=q;q=wa+4|0;HEAP32[wa>>2]=la;var qa=
u;u=qa+1|0;var ea=HEAP8[qa]&255,xa=w;w=xa+1|0;var ja=ea|(HEAP8[xa]&255)<<8,da=y;y=da+1|0;var Ga=ja|(HEAP8[da]&255)<<16,$=A;A=$+1|0;var ma=Ga|(HEAP8[$]&255)<<24,ra=q;q=ra+4|0;HEAP32[ra>>2]=ma;var Aa=u;u=Aa+1|0;var Xa=HEAP8[Aa]&255,Da=w;w=Da+1|0;var Ua=Xa|(HEAP8[Da]&255)<<8,sa=y;y=sa+1|0;var ha=Ua|(HEAP8[sa]&255)<<16,U=A;A=U+1|0;var gb=ha|(HEAP8[U]&255)<<24,Ka=q;q=Ka+4|0;HEAP32[Ka>>2]=gb;var Ia=u;u=Ia+1|0;var ia=HEAP8[Ia]&255,Ba=w;w=Ba+1|0;var Ra=ia|(HEAP8[Ba]&255)<<8,Sa=y;y=Sa+1|0;var ib=Ra|(HEAP8[Sa]&
255)<<16,ua=A;A=ua+1|0;var Va=ib|(HEAP8[ua]&255)<<24,eb=q;q=eb+4|0;HEAP32[eb>>2]=Va;var Ea=u;u=Ea+1|0;var Ya=HEAP8[Ea]&255,La=w;w=La+1|0;var Ma=Ya|(HEAP8[La]&255)<<8,Fa=y;y=Fa+1|0;var Na=Ma|(HEAP8[Fa]&255)<<16,Oa=A;A=Oa+1|0;var jb=Na|(HEAP8[Oa]&255)<<24,Za=q;q=Za+4|0;HEAP32[Za>>2]=jb;p=6;break;case 6:z=z-8|0;p=4;break;case 7:p=0<z>>>0?8:17;break;case 8:var Ca=z,p=7==(Ca|0)?9:6==(Ca|0)?10:5==(Ca|0)?11:4==(Ca|0)?12:3==(Ca|0)?13:2==(Ca|0)?14:1==(Ca|0)?15:16;break;case 9:var $a=u;u=$a+1|0;var ab=HEAP8[$a]&
255,Ha=w;w=Ha+1|0;var Wa=ab|(HEAP8[Ha]&255)<<8,bb=y;y=bb+1|0;var Pa=Wa|(HEAP8[bb]&255)<<16,Ja=A;A=Ja+1|0;var cb=Pa|(HEAP8[Ja]&255)<<24,Qa=q;q=Qa+4|0;HEAP32[Qa>>2]=cb;p=10;break;case 10:var fb=u;u=fb+1|0;var hb=HEAP8[fb]&255,ya=w;w=ya+1|0;var db=hb|(HEAP8[ya]&255)<<8,Ta=y;y=Ta+1|0;var kb=db|(HEAP8[Ta]&255)<<16,lb=A;A=lb+1|0;var mb=kb|(HEAP8[lb]&255)<<24,ta=q;q=ta+4|0;HEAP32[ta>>2]=mb;p=11;break;case 11:var nb=u;u=nb+1|0;var pb=HEAP8[nb]&255,rb=w;w=rb+1|0;var qb=pb|(HEAP8[rb]&255)<<8,sb=y;y=sb+1|0;
var vb=qb|(HEAP8[sb]&255)<<16,wb=A;A=wb+1|0;var xb=vb|(HEAP8[wb]&255)<<24,Db=q;q=Db+4|0;HEAP32[Db>>2]=xb;p=12;break;case 12:var tb=u;u=tb+1|0;var Gb=HEAP8[tb]&255,yb=w;w=yb+1|0;var ub=Gb|(HEAP8[yb]&255)<<8,Ab=y;y=Ab+1|0;var Tb=ub|(HEAP8[Ab]&255)<<16,Kb=A;A=Kb+1|0;var ac=Tb|(HEAP8[Kb]&255)<<24,Hb=q;q=Hb+4|0;HEAP32[Hb>>2]=ac;p=13;break;case 13:var Ob=u;u=Ob+1|0;var bc=HEAP8[Ob]&255,Lb=w;w=Lb+1|0;var Ub=bc|(HEAP8[Lb]&255)<<8,Pb=y;y=Pb+1|0;var cc=Ub|(HEAP8[Pb]&255)<<16,Vb=A;A=Vb+1|0;var Mb=cc|(HEAP8[Vb]&
255)<<24,fc=q;q=fc+4|0;HEAP32[fc>>2]=Mb;p=14;break;case 14:var Wb=u;u=Wb+1|0;var gc=HEAP8[Wb]&255,dc=w;w=dc+1|0;var Xb=gc|(HEAP8[dc]&255)<<8,Yb=y;y=Yb+1|0;var oc=Xb|(HEAP8[Yb]&255)<<16,Qb=A;A=Qb+1|0;var hc=oc|(HEAP8[Qb]&255)<<24,ic=q;q=ic+4|0;HEAP32[ic>>2]=hc;p=15;break;case 15:var ec=u;u=ec+1|0;var kc=HEAP8[ec]&255,jc=w;w=jc+1|0;var Zb=kc|(HEAP8[jc]&255)<<8,lc=y;y=lc+1|0;var Bb=Zb|(HEAP8[lc]&255)<<16,ob=A;A=ob+1|0;var Rb=Bb|(HEAP8[ob]&255)<<24,Nb=q;q=Nb+4|0;HEAP32[Nb>>2]=Rb;p=16;break;case 16:p=
17;break;case 17:u=u+s|0;w=w+s|0;y=y+s|0;A=A+s|0;q=q+(v<<2)|0;p=2;break;case 18:return;default:assert(0,"bad label: "+p)}}
function _putRGBUAseparate8bittile(m,d,c,a,b,e,g,f,k,h,l,n){a=0;for(a=1;;)switch(a){case 1:var p,q,t,r,s,v,u,w,y,A,z,x,B,C;p=m;q=d;t=c;r=b;s=e;v=g;u=f;w=k;y=h;A=l;z=n;a=2;break;case 2:a=s;s=a-1|0;a=0<a>>>0?3:7;break;case 3:t=r;a=4;break;case 4:a=t;t=a-1|0;a=0<a>>>0?5:6;break;case 5:a=z;z=a+1|0;a=HEAP8[a]&255;C=HEAP32[(p+76|0)>>2]+(a<<8)|0;x=w;w=x+1|0;x=HEAP8[C+(HEAP8[x]&255)|0]&255;B=y;y=B+1|0;B=HEAP8[C+(HEAP8[B]&255)|0]&255;var D=A;A=D+1|0;C=HEAP8[C+(HEAP8[D]&255)|0]&255;a=x|B<<8|C<<16|a<<24;x=q;
q=x+4|0;HEAP32[x>>2]=a;a=4;break;case 6:w=w+v|0;y=y+v|0;A=A+v|0;z=z+v|0;q=q+(u<<2)|0;a=2;break;case 7:return;default:assert(0,"bad label: "+a)}}
function _BuildMapUaToAa(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e,g,f;b=m;d=0==(HEAP32[(b+76|0)>>2]|0)?2:3;break;case 2:d=4;break;case 3:throw ___assert_func(32184,2667,45048,31408),"Reached an unreachable!";case 4:d=__TIFFmalloc(65536);HEAP32[(b+76|0)>>2]=d;d=0==(HEAP32[(b+76|0)>>2]|0)?5:6;break;case 5:_TIFFErrorExt(HEAP32[(HEAP32[(b|0)>>2]+628|0)>>2],148544,31704,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|
0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=15;break;case 6:e=HEAP32[(b+76|0)>>2];g=0;d=7;break;case 7:d=256>(g&65535|0)?8:14;break;case 8:f=0;d=9;break;case 9:d=256>(f&65535|0)?10:12;break;case 10:var d=((Math.imul(f&65535,g&65535)|0)+127|0)/255&255,k=e;e=k+1|0;HEAP8[k]=d;d=11;break;case 11:f=f+1&65535;d=9;break;case 12:d=13;break;case 13:g=g+1&65535;d=7;break;case 14:a=1;d=15;break;case 15:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _putRGBseparate8bittile(m,d,c,a,b,e,g,f,k,h,l,n){for(var p=0,p=1;;)switch(p){case 1:var q,t,r,s,v,u,w,y,A;q=d;t=b;r=e;s=g;v=f;u=k;w=h;y=l;p=2;break;case 2:var z=r;r=z-1|0;p=0<z>>>0?3:18;break;case 3:A=t;p=4;break;case 4:p=8<=A>>>0?5:7;break;case 5:var x=u;u=x+1|0;var B=HEAP8[x]&255,C=w;w=C+1|0;var D=B|(HEAP8[C]&255)<<8,F=y;y=F+1|0;var I=D|(HEAP8[F]&255)<<16|-16777216,G=q;q=G+4|0;HEAP32[G>>2]=I;var H=u;u=H+1|0;var K=HEAP8[H]&255,J=w;w=J+1|0;var E=K|(HEAP8[J]&255)<<8,L=y;y=L+1|0;var Q=E|(HEAP8[L]&
255)<<16|-16777216,N=q;q=N+4|0;HEAP32[N>>2]=Q;var P=u;u=P+1|0;var W=HEAP8[P]&255,O=w;w=O+1|0;var T=W|(HEAP8[O]&255)<<8,Y=y;y=Y+1|0;var S=T|(HEAP8[Y]&255)<<16|-16777216,X=q;q=X+4|0;HEAP32[X>>2]=S;var R=u;u=R+1|0;var V=HEAP8[R]&255,aa=w;w=aa+1|0;var fa=V|(HEAP8[aa]&255)<<8,Z=y;y=Z+1|0;var ka=fa|(HEAP8[Z]&255)<<16|-16777216,M=q;q=M+4|0;HEAP32[M>>2]=ka;var ga=u;u=ga+1|0;var na=HEAP8[ga]&255,ba=w;w=ba+1|0;var ca=na|(HEAP8[ba]&255)<<8,oa=y;y=oa+1|0;var va=ca|(HEAP8[oa]&255)<<16|-16777216,pa=q;q=pa+4|0;
HEAP32[pa>>2]=va;var la=u;u=la+1|0;var wa=HEAP8[la]&255,qa=w;w=qa+1|0;var ea=wa|(HEAP8[qa]&255)<<8,xa=y;y=xa+1|0;var ja=ea|(HEAP8[xa]&255)<<16|-16777216,da=q;q=da+4|0;HEAP32[da>>2]=ja;var Ga=u;u=Ga+1|0;var $=HEAP8[Ga]&255,ma=w;w=ma+1|0;var ra=$|(HEAP8[ma]&255)<<8,Aa=y;y=Aa+1|0;var Xa=ra|(HEAP8[Aa]&255)<<16|-16777216,Da=q;q=Da+4|0;HEAP32[Da>>2]=Xa;var Ua=u;u=Ua+1|0;var sa=HEAP8[Ua]&255,ha=w;w=ha+1|0;var U=sa|(HEAP8[ha]&255)<<8,gb=y;y=gb+1|0;var Ka=U|(HEAP8[gb]&255)<<16|-16777216,Ia=q;q=Ia+4|0;HEAP32[Ia>>
2]=Ka;p=6;break;case 6:A=A-8|0;p=4;break;case 7:p=0<A>>>0?8:17;break;case 8:var ia=A,p=7==(ia|0)?9:6==(ia|0)?10:5==(ia|0)?11:4==(ia|0)?12:3==(ia|0)?13:2==(ia|0)?14:1==(ia|0)?15:16;break;case 9:var Ba=u;u=Ba+1|0;var Ra=HEAP8[Ba]&255,Sa=w;w=Sa+1|0;var ib=Ra|(HEAP8[Sa]&255)<<8,ua=y;y=ua+1|0;var Va=ib|(HEAP8[ua]&255)<<16|-16777216,eb=q;q=eb+4|0;HEAP32[eb>>2]=Va;p=10;break;case 10:var Ea=u;u=Ea+1|0;var Ya=HEAP8[Ea]&255,La=w;w=La+1|0;var Ma=Ya|(HEAP8[La]&255)<<8,Fa=y;y=Fa+1|0;var Na=Ma|(HEAP8[Fa]&255)<<
16|-16777216,Oa=q;q=Oa+4|0;HEAP32[Oa>>2]=Na;p=11;break;case 11:var jb=u;u=jb+1|0;var Za=HEAP8[jb]&255,Ca=w;w=Ca+1|0;var $a=Za|(HEAP8[Ca]&255)<<8,ab=y;y=ab+1|0;var Ha=$a|(HEAP8[ab]&255)<<16|-16777216,Wa=q;q=Wa+4|0;HEAP32[Wa>>2]=Ha;p=12;break;case 12:var bb=u;u=bb+1|0;var Pa=HEAP8[bb]&255,Ja=w;w=Ja+1|0;var cb=Pa|(HEAP8[Ja]&255)<<8,Qa=y;y=Qa+1|0;var fb=cb|(HEAP8[Qa]&255)<<16|-16777216,hb=q;q=hb+4|0;HEAP32[hb>>2]=fb;p=13;break;case 13:var ya=u;u=ya+1|0;var db=HEAP8[ya]&255,Ta=w;w=Ta+1|0;var kb=db|(HEAP8[Ta]&
255)<<8,lb=y;y=lb+1|0;var mb=kb|(HEAP8[lb]&255)<<16|-16777216,ta=q;q=ta+4|0;HEAP32[ta>>2]=mb;p=14;break;case 14:var nb=u;u=nb+1|0;var pb=HEAP8[nb]&255,rb=w;w=rb+1|0;var qb=pb|(HEAP8[rb]&255)<<8,sb=y;y=sb+1|0;var vb=qb|(HEAP8[sb]&255)<<16|-16777216,wb=q;q=wb+4|0;HEAP32[wb>>2]=vb;p=15;break;case 15:var xb=u;u=xb+1|0;var Db=HEAP8[xb]&255,tb=w;w=tb+1|0;var Gb=Db|(HEAP8[tb]&255)<<8,yb=y;y=yb+1|0;var ub=Gb|(HEAP8[yb]&255)<<16|-16777216,Ab=q;q=Ab+4|0;HEAP32[Ab>>2]=ub;p=16;break;case 16:p=17;break;case 17:u=
u+s|0;w=w+s|0;y=y+s|0;q=q+(v<<2)|0;p=2;break;case 18:return;default:assert(0,"bad label: "+p)}}
function _putRGBAAseparate16bittile(m,d,c,a,b,e,g,f,k,h,l,n){a=0;for(a=1;;)switch(a){case 1:var p,q,t,r,s,v,u,w,y,A,z;p=m;q=d;t=c;r=b;s=e;v=g;u=f;w=k;y=h;A=l;z=n;a=2;break;case 2:a=s;s=a-1|0;a=0<a>>>0?3:8;break;case 3:t=0;a=4;break;case 4:a=t>>>0<r>>>0?5:7;break;case 5:a=w;w=a+2|0;a=HEAP8[HEAP32[(p+80|0)>>2]+(HEAP16[a>>1]&65535)|0]&255;var x=y;y=x+2|0;a|=(HEAP8[HEAP32[(p+80|0)>>2]+(HEAP16[x>>1]&65535)|0]&255)<<8;x=A;A=x+2|0;a|=(HEAP8[HEAP32[(p+80|0)>>2]+(HEAP16[x>>1]&65535)|0]&255)<<16;x=z;z=x+2|
0;a|=(HEAP8[HEAP32[(p+80|0)>>2]+(HEAP16[x>>1]&65535)|0]&255)<<24;x=q;q=x+4|0;HEAP32[x>>2]=a;a=6;break;case 6:t=t+1|0;a=4;break;case 7:w=w+(v<<1)|0;y=y+(v<<1)|0;A=A+(v<<1)|0;z=z+(v<<1)|0;q=q+(u<<2)|0;a=2;break;case 8:return;default:assert(0,"bad label: "+a)}}
function _putRGBUAseparate16bittile(m,d,c,a,b,e,g,f,k,h,l,n){a=0;for(a=1;;)switch(a){case 1:var p,q,t,r,s,v,u,w,y,A,z,x,B,C;p=m;q=d;t=c;r=b;s=e;v=g;u=f;w=k;y=h;A=l;z=n;a=2;break;case 2:a=s;s=a-1|0;a=0<a>>>0?3:7;break;case 3:t=r;a=4;break;case 4:a=t;t=a-1|0;a=0<a>>>0?5:6;break;case 5:a=z;z=a+2|0;a=HEAP8[HEAP32[(p+80|0)>>2]+(HEAP16[a>>1]&65535)|0]&255;C=HEAP32[(p+76|0)>>2]+(a<<8)|0;x=w;w=x+2|0;x=HEAP8[C+(HEAP8[HEAP32[(p+80|0)>>2]+(HEAP16[x>>1]&65535)|0]&255)|0]&255;B=y;y=B+2|0;B=HEAP8[C+(HEAP8[HEAP32[(p+
80|0)>>2]+(HEAP16[B>>1]&65535)|0]&255)|0]&255;var D=A;A=D+2|0;C=HEAP8[C+(HEAP8[HEAP32[(p+80|0)>>2]+(HEAP16[D>>1]&65535)|0]&255)|0]&255;a=x|B<<8|C<<16|a<<24;x=q;q=x+4|0;HEAP32[x>>2]=a;a=4;break;case 6:w=w+(v<<1)|0;y=y+(v<<1)|0;A=A+(v<<1)|0;z=z+(v<<1)|0;q=q+(u<<2)|0;a=2;break;case 7:return;default:assert(0,"bad label: "+a)}}
function _BuildMapBitdepth16To8(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e,g;b=m;d=0==(HEAP32[(b+80|0)>>2]|0)?2:3;break;case 2:d=4;break;case 3:throw ___assert_func(32184,2689,45064,31952),"Reached an unreachable!";case 4:d=__TIFFmalloc(65536);HEAP32[(b+80|0)>>2]=d;d=0==(HEAP32[(b+80|0)>>2]|0)?5:6;break;case 5:_TIFFErrorExt(HEAP32[(HEAP32[(b|0)>>2]+628|0)>>2],148560,31704,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|
0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=11;break;case 6:e=HEAP32[(b+80|0)>>2];g=0;d=7;break;case 7:d=65536>g>>>0?8:10;break;case 8:var d=((g+128|0)>>>0)/257&255,f=e;e=f+1|0;HEAP8[f]=d;d=9;break;case 9:g=g+1|0;d=7;break;case 10:a=1;d=11;break;case 11:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _putRGBseparate16bittile(m,d,c,a,b,e,g,f,k,h,l,n){a=0;for(a=1;;)switch(a){case 1:var p,q,t,r,s,v,u,w,y,A;p=m;q=d;t=c;r=b;s=e;v=g;u=f;w=k;y=h;A=l;a=2;break;case 2:a=s;s=a-1|0;a=0<a>>>0?3:8;break;case 3:t=0;a=4;break;case 4:a=t>>>0<r>>>0?5:7;break;case 5:a=w;w=a+2|0;a=HEAP8[HEAP32[(p+80|0)>>2]+(HEAP16[a>>1]&65535)|0]&255;n=y;y=n+2|0;a|=(HEAP8[HEAP32[(p+80|0)>>2]+(HEAP16[n>>1]&65535)|0]&255)<<8;n=A;A=n+2|0;a=a|(HEAP8[HEAP32[(p+80|0)>>2]+(HEAP16[n>>1]&65535)|0]&255)<<16|-16777216;n=q;q=n+4|0;
HEAP32[n>>2]=a;a=6;break;case 6:t=t+1|0;a=4;break;case 7:w=w+(v<<1)|0;y=y+(v<<1)|0;A=A+(v<<1)|0;q=q+(u<<2)|0;a=2;break;case 8:return;default:assert(0,"bad label: "+a)}}
function _putCMYKseparate8bittile(m,d,c,a,b,e,g,f,k,h,l,n){m=0;for(m=1;;)switch(m){case 1:var p,q,t,r,s,v,u,w,y,A,z;p=d;q=c;t=b;r=e;s=g;v=f;u=k;w=h;y=l;A=n;m=2;break;case 2:m=r;r=m-1|0;m=0<m>>>0?3:7;break;case 3:q=t;m=4;break;case 4:m=q;q=m-1|0;m=0<m>>>0?5:6;break;case 5:m=A;A=m+1|0;m=a=255-(HEAP8[m]&255)|0;z=u;u=z+1|0;m=((Math.imul(m,255-(HEAP8[z]&255)|0)|0)>>>0)/255&-1;z=a;var x=w;w=x+1|0;z=((Math.imul(z,255-(HEAP8[x]&255)|0)|0)>>>0)/255&-1;x=y;y=x+1|0;a=((Math.imul(a,255-(HEAP8[x]&255)|0)|0)>>>
0)/255&-1;m=m|z<<8|a<<16|-16777216;a=p;p=a+4|0;HEAP32[a>>2]=m;m=4;break;case 6:u=u+s|0;w=w+s|0;y=y+s|0;A=A+s|0;p=p+(v<<2)|0;m=2;break;case 7:return;default:assert(0,"bad label: "+m)}}
function _setorientation(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;a=m;d=HEAP16[(a+28|0)>>1]&65535;d=1==(d|0)|5==(d|0)?2:2==(d|0)|6==(d|0)?12:3==(d|0)|7==(d|0)?22:4==(d|0)|8==(d|0)?32:42;break;case 2:d=2==(HEAP16[(a+30|0)>>1]&65535|0)?4:3;break;case 3:d=6==(HEAP16[(a+30|0)>>1]&65535|0)?4:5;break;case 4:c=2;d=43;break;case 5:d=3==(HEAP16[(a+30|0)>>1]&65535|0)?7:6;break;case 6:d=7==(HEAP16[(a+30|0)>>1]&65535|0)?7:8;break;case 7:c=3;d=43;break;case 8:d=4==(HEAP16[(a+30|0)>>1]&65535|0)?10:9;break;
case 9:d=8==(HEAP16[(a+30|0)>>1]&65535|0)?10:11;break;case 10:c=1;d=43;break;case 11:c=0;d=43;break;case 12:d=1==(HEAP16[(a+30|0)>>1]&65535|0)?14:13;break;case 13:d=5==(HEAP16[(a+30|0)>>1]&65535|0)?14:15;break;case 14:c=2;d=43;break;case 15:d=3==(HEAP16[(a+30|0)>>1]&65535|0)?17:16;break;case 16:d=7==(HEAP16[(a+30|0)>>1]&65535|0)?17:18;break;case 17:c=1;d=43;break;case 18:d=4==(HEAP16[(a+30|0)>>1]&65535|0)?20:19;break;case 19:d=8==(HEAP16[(a+30|0)>>1]&65535|0)?20:21;break;case 20:c=3;d=43;break;case 21:c=
0;d=43;break;case 22:d=1==(HEAP16[(a+30|0)>>1]&65535|0)?24:23;break;case 23:d=5==(HEAP16[(a+30|0)>>1]&65535|0)?24:25;break;case 24:c=3;d=43;break;case 25:d=2==(HEAP16[(a+30|0)>>1]&65535|0)?27:26;break;case 26:d=6==(HEAP16[(a+30|0)>>1]&65535|0)?27:28;break;case 27:c=1;d=43;break;case 28:d=4==(HEAP16[(a+30|0)>>1]&65535|0)?30:29;break;case 29:d=8==(HEAP16[(a+30|0)>>1]&65535|0)?30:31;break;case 30:c=2;d=43;break;case 31:c=0;d=43;break;case 32:d=1==(HEAP16[(a+30|0)>>1]&65535|0)?34:33;break;case 33:d=5==
(HEAP16[(a+30|0)>>1]&65535|0)?34:35;break;case 34:c=1;d=43;break;case 35:d=2==(HEAP16[(a+30|0)>>1]&65535|0)?37:36;break;case 36:d=6==(HEAP16[(a+30|0)>>1]&65535|0)?37:38;break;case 37:c=3;d=43;break;case 38:d=3==(HEAP16[(a+30|0)>>1]&65535|0)?40:39;break;case 39:d=7==(HEAP16[(a+30|0)>>1]&65535|0)?40:41;break;case 40:c=2;d=43;break;case 41:c=0;d=43;break;case 42:c=0;d=43;break;case 43:return c;default:assert(0,"bad label: "+d)}}
function _initYCbCrConversion(m){var d=0,c=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e=c,g=c+8;b=m;d=0==(HEAP32[(b+68|0)>>2]|0)?2:5;break;case 2:d=__TIFFmalloc(6168);HEAP32[(b+68|0)>>2]=d;d=0==(HEAP32[(b+68|0)>>2]|0)?3:4;break;case 3:_TIFFErrorExt(HEAP32[(HEAP32[(b|0)>>2]+628|0)>>2],8952,32496,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=8;break;
case 4:d=5;break;case 5:_TIFFGetFieldDefaulted(HEAP32[(b|0)>>2],529,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));_TIFFGetFieldDefaulted(HEAP32[(b|0)>>2],532,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=g,tempInt));d=0>(_TIFFYCbCrToRGBInit(HEAP32[(b+68|0)>>2],HEAP32[e>>2],HEAP32[g>>2])|0)?6:7;break;case 6:a=0;d=8;break;case 7:a=1;d=8;break;case 8:return m=a,STACKTOP=c,m;default:assert(0,
"bad label: "+d)}}
function _putseparate8bitYCbCr11tile(m,d,c,a,b,e,g,f,k,h,l,n){n=0;a=STACKTOP;STACKTOP=STACKTOP+24|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(n=1;;)switch(n){case 1:var p,q,t,r,s,v,u,w,y,A,z=a,x=a+8,B=a+16;p=m;q=d;t=c;r=b;s=e;v=g;u=f;w=k;y=h;A=l;n=2;break;case 2:n=s;s=n-1|0;n=0<n>>>0?3:7;break;case 3:t=r;n=4;break;case 4:n=HEAP32[(p+68|0)>>2];var C=w;w=C+1|0;var C=HEAP8[C]&255,D=y;y=D+1|0;var D=HEAP8[D]&255,F=A;A=F+1|0;_TIFFYCbCrtoRGB(n,C,D,HEAP8[F]&255,z,x,B);n=HEAP32[z>>2]|HEAP32[x>>2]<<8|HEAP32[B>>
2]<<16|-16777216;C=q;q=C+4|0;HEAP32[C>>2]=n;n=5;break;case 5:t=n=t-1|0;n=0!=(n|0)?4:6;break;case 6:w=w+v|0;y=y+v|0;A=A+v|0;q=q+(u<<2)|0;n=2;break;case 7:STACKTOP=a;return;default:assert(0,"bad label: "+n)}}
function _gtTileContig(m,d,c,a){var b=0,e=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h,l,n,p,q,t,r,s,v,u=e,w=e+8,y,A,z,x,B,C,D,F,I;f=m;k=d;h=c;l=a;n=HEAP32[(f|0)>>2];p=HEAP32[(f+52|0)>>2];x=1;y=_TIFFTileSize(n);y=__TIFFmalloc(y);b=0==(y|0)?2:3;break;case 2:g=HEAP32[(n+628|0)>>2];b=_TIFFFileName(n);_TIFFErrorExt(g,b,34904,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=30864,tempInt));g=0;
b=36;break;case 3:B=y;b=_TIFFTileSize(n);__TIFFmemset(B,0,b);_TIFFGetField(n,322,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=u,tempInt));_TIFFGetField(n,323,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=w,tempInt));B=_setorientation(f);b=0!=(B&1|0)?4:5;break;case 4:r=l-1|0;A=-(HEAP32[u>>2]+h|0)|0;b=6;break;case 5:r=0;A=-(HEAP32[u>>2]-h|0)|0;b=6;break;case 6:t=0;b=7;break;case 7:b=t>>>0<l>>>0?8:26;
break;case 8:s=HEAP32[w>>2]-(((t+HEAP32[(f+84|0)>>2]|0)>>>0)%(HEAP32[w>>2]>>>0)&-1)|0;b=(t+s|0)>>>0>l>>>0?9:10;break;case 9:var G=l-t|0,b=11;break;case 10:G=s;b=11;break;case 11:z=G;q=0;b=12;break;case 12:b=q>>>0<h>>>0?13:21;break;case 13:b=-1==(_TIFFReadTile(n,y,q+HEAP32[(f+88|0)>>2]|0,t+HEAP32[(f+84|0)>>2]|0,0,0)|0)?14:16;break;case 14:b=0!=(HEAP32[(f+4|0)>>2]|0)?15:16;break;case 15:x=0;b=21;break;case 16:v=((t+HEAP32[(f+84|0)>>2]|0)>>>0)%(HEAP32[w>>2]>>>0)&-1;b=_TIFFTileRowSize(n);v=Math.imul(v,
b)|0;b=(q+HEAP32[u>>2]|0)>>>0>h>>>0?17:18;break;case 17:C=h-q|0;var b=HEAP32[u>>2]-C|0,H=p,K=f,J=k,E=Math.imul(r,h)|0;FUNCTION_TABLE[H](K,(J+(E<<2)|0)+(q<<2)|0,q,r,C,z,b,A+b|0,y+v|0);b=19;break;case 18:b=p;C=f;H=k;K=Math.imul(r,h)|0;FUNCTION_TABLE[b](C,(H+(K<<2)|0)+(q<<2)|0,q,r,HEAP32[u>>2],z,0,A,y+v|0);b=19;break;case 19:b=20;break;case 20:q=q+HEAP32[u>>2]|0;b=12;break;case 21:b=0!=(B&1|0)?22:23;break;case 22:var L=-z|0,b=24;break;case 23:L=z;b=24;break;case 24:r=r+L|0;b=25;break;case 25:t=t+z|0;
b=7;break;case 26:__TIFFfree(y);b=0!=(B&2|0)?27:35;break;case 27:D=0;b=28;break;case 28:b=D>>>0<l>>>0?29:34;break;case 29:F=k;I=Math.imul(D,h)|0;F=F+(I<<2)|0;I=(F+(h<<2)|0)-4|0;b=30;break;case 30:b=F>>>0<I>>>0?31:32;break;case 31:b=HEAP32[F>>2];HEAP32[F>>2]=HEAP32[I>>2];HEAP32[I>>2]=b;F=F+4|0;I=I-4|0;b=30;break;case 32:b=33;break;case 33:D=D+1|0;b=28;break;case 34:b=35;break;case 35:g=x;b=36;break;case 36:return m=g,STACKTOP=e,m;default:assert(0,"bad label: "+b)}}
function _gtStripContig(m,d,c,a){var b=0,e=STACKTOP;STACKTOP=STACKTOP+24|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h,l,n,p,q,t,r,s,v,u,w=e,y=e+8,A=e+16,z,x,B,C,D,F,I,G,H;f=m;k=d;h=c;l=a;n=HEAP32[(f|0)>>2];p=HEAP32[(f+52|0)>>2];z=HEAP32[(f+16|0)>>2];D=1;u=_TIFFStripSize(n);u=__TIFFmalloc(u);b=0==(u|0)?2:3;break;case 2:g=HEAP32[(n+628|0)>>2];b=_TIFFFileName(n);_TIFFErrorExt(g,b,29240,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|
0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));g=0;b=34;break;case 3:F=u;b=_TIFFStripSize(n);__TIFFmemset(F,0,b);F=_setorientation(f);b=0!=(F&1|0)?4:5;break;case 4:t=l-1|0;C=-(h+h|0)|0;b=6;break;case 5:t=0;C=-(h-h|0)|0;b=6;break;case 6:_TIFFGetFieldDefaulted(n,278,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=w,tempInt));_TIFFGetFieldDefaulted(n,530,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=
y,HEAP32[tempInt+8>>2]=A,tempInt));x=_TIFFScanlineSize(n);b=h>>>0<z>>>0?7:8;break;case 7:var K=z-h|0,b=9;break;case 8:K=0;b=9;break;case 9:B=K;q=0;b=10;break;case 10:b=q>>>0<l>>>0?11:24;break;case 11:v=HEAP32[w>>2]-(((q+HEAP32[(f+84|0)>>2]|0)>>>0)%(HEAP32[w>>2]>>>0)&-1)|0;b=(q+v|0)>>>0>l>>>0?12:13;break;case 12:var J=l-q|0,b=14;break;case 13:J=v;b=14;break;case 14:s=r=J;b=0!=((s>>>0)%((HEAP16[A>>1]&65535)>>>0)&-1|0)?15:16;break;case 15:s=s+((HEAP16[A>>1]&65535)-((s>>>0)%((HEAP16[A>>1]&65535)>>>0)&
-1)|0)|0;b=16;break;case 16:var b=n,E=_TIFFComputeStrip(n,q+HEAP32[(f+84|0)>>2]|0,0),L=u,Q=Math.imul((((q+HEAP32[(f+84|0)>>2]|0)>>>0)%(HEAP32[w>>2]>>>0)&-1)+s|0,x)|0,b=-1==(_TIFFReadEncodedStrip(b,E,L,Q)|0)?17:19;break;case 17:b=0!=(HEAP32[(f+4|0)>>2]|0)?18:19;break;case 18:D=0;b=24;break;case 19:var b=Math.imul(((q+HEAP32[(f+84|0)>>2]|0)>>>0)%(HEAP32[w>>2]>>>0)&-1,x)|0,E=p,L=f,Q=k,N=Math.imul(t,h)|0;FUNCTION_TABLE[E](L,Q+(N<<2)|0,0,t,h,r,B,C,u+b|0);b=0!=(F&1|0)?20:21;break;case 20:var P=-r|0,b=22;
break;case 21:P=r;b=22;break;case 22:t=t+P|0;b=23;break;case 23:q=q+r|0;b=10;break;case 24:b=0!=(F&2|0)?25:33;break;case 25:I=0;b=26;break;case 26:b=I>>>0<l>>>0?27:32;break;case 27:G=k;H=Math.imul(I,h)|0;G=G+(H<<2)|0;H=(G+(h<<2)|0)-4|0;b=28;break;case 28:b=G>>>0<H>>>0?29:30;break;case 29:b=HEAP32[G>>2];HEAP32[G>>2]=HEAP32[H>>2];HEAP32[H>>2]=b;G=G+4|0;H=H-4|0;b=28;break;case 30:b=31;break;case 31:I=I+1|0;b=26;break;case 32:b=33;break;case 33:__TIFFfree(u);g=D;b=34;break;case 34:return m=g,STACKTOP=
e,m;default:assert(0,"bad label: "+b)}}
function _putRGBAAcontig8bittile(m,d,c,a,b,e,g,f,k){c=0;for(c=1;;)switch(c){case 1:var h,l,n,p,q,t,r,s;h=m;l=d;n=b;p=e;q=g;t=f;r=k;h=HEAP16[(h+26|0)>>1]&65535;q=Math.imul(q,h)|0;c=2;break;case 2:c=p;p=c-1|0;c=0<c>>>0?3:18;break;case 3:s=n;c=4;break;case 4:c=8<=s>>>0?5:7;break;case 5:c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|(HEAP8[r+3|0]&255)<<24;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|(HEAP8[r+3|0]&255)<<24;a=l;l=a+4|0;
HEAP32[a>>2]=c;r=r+h|0;c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|(HEAP8[r+3|0]&255)<<24;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|(HEAP8[r+3|0]&255)<<24;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|(HEAP8[r+3|0]&255)<<24;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|(HEAP8[r+3|0]&255)<<24;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|
0;c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|(HEAP8[r+3|0]&255)<<24;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|(HEAP8[r+3|0]&255)<<24;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=6;break;case 6:s=s-8|0;c=4;break;case 7:c=0<s>>>0?8:17;break;case 8:c=s;c=7==(c|0)?9:6==(c|0)?10:5==(c|0)?11:4==(c|0)?12:3==(c|0)?13:2==(c|0)?14:1==(c|0)?15:16;break;case 9:c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|(HEAP8[r+3|0]&255)<<24;
a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=10;break;case 10:c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|(HEAP8[r+3|0]&255)<<24;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=11;break;case 11:c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|(HEAP8[r+3|0]&255)<<24;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=12;break;case 12:c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|(HEAP8[r+3|0]&255)<<24;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=13;break;case 13:c=HEAP8[r|0]&255|(HEAP8[r+1|0]&
255)<<8|(HEAP8[r+2|0]&255)<<16|(HEAP8[r+3|0]&255)<<24;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=14;break;case 14:c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|(HEAP8[r+3|0]&255)<<24;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=15;break;case 15:c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|(HEAP8[r+3|0]&255)<<24;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=16;break;case 16:c=17;break;case 17:l=l+(t<<2)|0;r=r+q|0;c=2;break;case 18:return;default:assert(0,"bad label: "+c)}}
function _putRGBUAcontig8bittile(m,d,c,a,b,e,g,f,k){a=0;for(a=1;;)switch(a){case 1:var h,l,n,p,q,t,r,s,v,u,w,y;h=m;l=d;n=c;p=b;q=e;t=g;r=f;s=k;v=HEAP16[(h+26|0)>>1]&65535;t=Math.imul(t,v)|0;a=2;break;case 2:a=q;q=a-1|0;a=0<a>>>0?3:7;break;case 3:n=p;a=4;break;case 4:a=n;n=a-1|0;a=0<a>>>0?5:6;break;case 5:y=HEAP8[s+3|0]&255;w=HEAP32[(h+76|0)>>2]+(y<<8)|0;a=HEAP8[w+(HEAP8[s|0]&255)|0]&255;u=HEAP8[w+(HEAP8[s+1|0]&255)|0]&255;w=HEAP8[w+(HEAP8[s+2|0]&255)|0]&255;a=a|u<<8|w<<16|y<<24;u=l;l=u+4|0;HEAP32[u>>
2]=a;s=s+v|0;a=4;break;case 6:l=l+(r<<2)|0;s=s+t|0;a=2;break;case 7:return;default:assert(0,"bad label: "+a)}}
function _putRGBcontig8bittile(m,d,c,a,b,e,g,f,k){c=0;for(c=1;;)switch(c){case 1:var h,l,n,p,q,t,r,s;h=m;l=d;n=b;p=e;q=g;t=f;r=k;h=HEAP16[(h+26|0)>>1]&65535;q=Math.imul(q,h)|0;c=2;break;case 2:c=p;p=c-1|0;c=0<c>>>0?3:18;break;case 3:s=n;c=4;break;case 4:c=8<=s>>>0?5:7;break;case 5:c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=HEAP8[r|
0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|-16777216;a=l;l=a+4|0;
HEAP32[a>>2]=c;r=r+h|0;c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=6;break;case 6:s=s-8|0;c=4;break;case 7:c=0<s>>>0?8:17;break;case 8:c=s;c=7==(c|0)?9:6==(c|0)?10:5==(c|0)?11:4==(c|0)?12:3==(c|0)?13:2==(c|0)?14:1==(c|0)?15:16;break;case 9:c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=10;break;case 10:c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|-16777216;
a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=11;break;case 11:c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=12;break;case 12:c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=13;break;case 13:c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=14;break;case 14:c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|-16777216;
a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=15;break;case 15:c=HEAP8[r|0]&255|(HEAP8[r+1|0]&255)<<8|(HEAP8[r+2|0]&255)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=16;break;case 16:c=17;break;case 17:l=l+(t<<2)|0;r=r+q|0;c=2;break;case 18:return;default:assert(0,"bad label: "+c)}}
function _putRGBAAcontig16bittile(m,d,c,a,b,e,g,f,k){a=0;for(a=1;;)switch(a){case 1:var h,l,n,p,q,t,r,s,v;h=m;l=d;n=c;p=b;q=e;t=g;r=f;s=k;v=HEAP16[(h+26|0)>>1]&65535;t=Math.imul(t,v)|0;a=2;break;case 2:a=q;q=a-1|0;a=0<a>>>0?3:7;break;case 3:n=p;a=4;break;case 4:a=n;n=a-1|0;a=0<a>>>0?5:6;break;case 5:a=HEAP8[HEAP32[(h+80|0)>>2]+(HEAP16[(s|0)>>1]&65535)|0]&255|(HEAP8[HEAP32[(h+80|0)>>2]+(HEAP16[(s+2|0)>>1]&65535)|0]&255)<<8|(HEAP8[HEAP32[(h+80|0)>>2]+(HEAP16[(s+4|0)>>1]&65535)|0]&255)<<16|(HEAP8[HEAP32[(h+
80|0)>>2]+(HEAP16[(s+6|0)>>1]&65535)|0]&255)<<24;var u=l;l=u+4|0;HEAP32[u>>2]=a;s=s+(v<<1)|0;a=4;break;case 6:l=l+(r<<2)|0;s=s+(t<<1)|0;a=2;break;case 7:return;default:assert(0,"bad label: "+a)}}
function _putRGBUAcontig16bittile(m,d,c,a,b,e,g,f,k){a=0;for(a=1;;)switch(a){case 1:var h,l,n,p,q,t,r,s,v,u,w,y;h=m;l=d;n=c;p=b;q=e;t=g;r=f;s=k;v=HEAP16[(h+26|0)>>1]&65535;t=Math.imul(t,v)|0;a=2;break;case 2:a=q;q=a-1|0;a=0<a>>>0?3:7;break;case 3:n=p;a=4;break;case 4:a=n;n=a-1|0;a=0<a>>>0?5:6;break;case 5:y=HEAP8[HEAP32[(h+80|0)>>2]+(HEAP16[(s+6|0)>>1]&65535)|0]&255;w=HEAP32[(h+76|0)>>2]+(y<<8)|0;a=HEAP8[w+(HEAP8[HEAP32[(h+80|0)>>2]+(HEAP16[(s|0)>>1]&65535)|0]&255)|0]&255;u=HEAP8[w+(HEAP8[HEAP32[(h+
80|0)>>2]+(HEAP16[(s+2|0)>>1]&65535)|0]&255)|0]&255;w=HEAP8[w+(HEAP8[HEAP32[(h+80|0)>>2]+(HEAP16[(s+4|0)>>1]&65535)|0]&255)|0]&255;a=a|u<<8|w<<16|y<<24;u=l;l=u+4|0;HEAP32[u>>2]=a;s=s+(v<<1)|0;a=4;break;case 6:l=l+(r<<2)|0;s=s+(t<<1)|0;a=2;break;case 7:return;default:assert(0,"bad label: "+a)}}
function _putRGBcontig16bittile(m,d,c,a,b,e,g,f,k){a=0;for(a=1;;)switch(a){case 1:var h,l,n,p,q,t,r,s,v;h=m;l=d;n=c;p=b;q=e;t=g;r=f;s=k;v=HEAP16[(h+26|0)>>1]&65535;t=Math.imul(t,v)|0;a=2;break;case 2:a=q;q=a-1|0;a=0<a>>>0?3:7;break;case 3:n=p;a=4;break;case 4:a=n;n=a-1|0;a=0<a>>>0?5:6;break;case 5:a=HEAP8[HEAP32[(h+80|0)>>2]+(HEAP16[(s|0)>>1]&65535)|0]&255|(HEAP8[HEAP32[(h+80|0)>>2]+(HEAP16[(s+2|0)>>1]&65535)|0]&255)<<8|(HEAP8[HEAP32[(h+80|0)>>2]+(HEAP16[(s+4|0)>>1]&65535)|0]&255)<<16|-16777216;var u=
l;l=u+4|0;HEAP32[u>>2]=a;s=s+(v<<1)|0;a=4;break;case 6:l=l+(r<<2)|0;s=s+(t<<1)|0;a=2;break;case 7:return;default:assert(0,"bad label: "+a)}}
function _buildMap(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b;b=m;d=HEAP16[(b+32|0)>>1]&65535;d=2==(d|0)|6==(d|0)|5==(d|0)?2:1==(d|0)|0==(d|0)?5:3==(d|0)?8:15;break;case 2:d=8==(HEAP16[(b+24|0)>>1]&65535|0)?3:4;break;case 3:d=15;break;case 4:d=5;break;case 5:d=0!=(_setupMap(b)|0)?7:6;break;case 6:a=0;d=16;break;case 7:d=15;break;case 8:d=16==(_checkcmap(b)|0)?9:10;break;case 9:_cvtcmap(b);d=11;break;case 10:var d=HEAP32[(HEAP32[(b|0)>>2]+628|0)>>
2],e=_TIFFFileName(HEAP32[(b|0)>>2]);_TIFFWarningExt(d,e,29960,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));d=11;break;case 11:d=8>=(HEAP16[(b+24|0)>>1]&65535|0)?12:14;break;case 12:d=0!=(_makecmap(b)|0)?14:13;break;case 13:a=0;d=16;break;case 14:d=15;break;case 15:a=1;d=16;break;case 16:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _putRGBcontig8bitCMYKtile(m,d,c,a,b,e,g,f,k){c=0;for(c=1;;)switch(c){case 1:var h,l,n,p,q,t,r,s,v;h=m;l=d;n=b;p=e;q=g;t=f;r=k;h=HEAP16[(h+26|0)>>1]&65535;q=Math.imul(q,h)|0;c=2;break;case 2:c=p;p=c-1|0;c=0<c>>>0?3:18;break;case 3:v=n;c=4;break;case 4:c=8<=v>>>0?5:7;break;case 5:s=(255-(HEAP8[r+3|0]&255)|0)&65535;c=(Math.imul(s&65535,255-(HEAP8[r|0]&255)|0)|0)/255&65535;a=(Math.imul(s&65535,255-(HEAP8[r+1|0]&255)|0)|0)/255&65535;s=(Math.imul(s&65535,255-(HEAP8[r+2|0]&255)|0)|0)/255&65535;
c=c&65535|(a&65535)<<8|(s&65535)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;s=(255-(HEAP8[r+3|0]&255)|0)&65535;c=(Math.imul(s&65535,255-(HEAP8[r|0]&255)|0)|0)/255&65535;a=(Math.imul(s&65535,255-(HEAP8[r+1|0]&255)|0)|0)/255&65535;s=(Math.imul(s&65535,255-(HEAP8[r+2|0]&255)|0)|0)/255&65535;c=c&65535|(a&65535)<<8|(s&65535)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;s=(255-(HEAP8[r+3|0]&255)|0)&65535;c=(Math.imul(s&65535,255-(HEAP8[r|0]&255)|0)|0)/255&65535;a=(Math.imul(s&65535,255-(HEAP8[r+
1|0]&255)|0)|0)/255&65535;s=(Math.imul(s&65535,255-(HEAP8[r+2|0]&255)|0)|0)/255&65535;c=c&65535|(a&65535)<<8|(s&65535)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;s=(255-(HEAP8[r+3|0]&255)|0)&65535;c=(Math.imul(s&65535,255-(HEAP8[r|0]&255)|0)|0)/255&65535;a=(Math.imul(s&65535,255-(HEAP8[r+1|0]&255)|0)|0)/255&65535;s=(Math.imul(s&65535,255-(HEAP8[r+2|0]&255)|0)|0)/255&65535;c=c&65535|(a&65535)<<8|(s&65535)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;s=(255-(HEAP8[r+3|0]&255)|0)&65535;c=(Math.imul(s&
65535,255-(HEAP8[r|0]&255)|0)|0)/255&65535;a=(Math.imul(s&65535,255-(HEAP8[r+1|0]&255)|0)|0)/255&65535;s=(Math.imul(s&65535,255-(HEAP8[r+2|0]&255)|0)|0)/255&65535;c=c&65535|(a&65535)<<8|(s&65535)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;s=(255-(HEAP8[r+3|0]&255)|0)&65535;c=(Math.imul(s&65535,255-(HEAP8[r|0]&255)|0)|0)/255&65535;a=(Math.imul(s&65535,255-(HEAP8[r+1|0]&255)|0)|0)/255&65535;s=(Math.imul(s&65535,255-(HEAP8[r+2|0]&255)|0)|0)/255&65535;c=c&65535|(a&65535)<<8|(s&65535)<<16|-16777216;
a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;s=(255-(HEAP8[r+3|0]&255)|0)&65535;c=(Math.imul(s&65535,255-(HEAP8[r|0]&255)|0)|0)/255&65535;a=(Math.imul(s&65535,255-(HEAP8[r+1|0]&255)|0)|0)/255&65535;s=(Math.imul(s&65535,255-(HEAP8[r+2|0]&255)|0)|0)/255&65535;c=c&65535|(a&65535)<<8|(s&65535)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;s=(255-(HEAP8[r+3|0]&255)|0)&65535;c=(Math.imul(s&65535,255-(HEAP8[r|0]&255)|0)|0)/255&65535;a=(Math.imul(s&65535,255-(HEAP8[r+1|0]&255)|0)|0)/255&65535;s=(Math.imul(s&65535,
255-(HEAP8[r+2|0]&255)|0)|0)/255&65535;c=c&65535|(a&65535)<<8|(s&65535)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=6;break;case 6:v=v-8|0;c=4;break;case 7:c=0<v>>>0?8:17;break;case 8:c=v;c=7==(c|0)?9:6==(c|0)?10:5==(c|0)?11:4==(c|0)?12:3==(c|0)?13:2==(c|0)?14:1==(c|0)?15:16;break;case 9:s=(255-(HEAP8[r+3|0]&255)|0)&65535;c=(Math.imul(s&65535,255-(HEAP8[r|0]&255)|0)|0)/255&65535;a=(Math.imul(s&65535,255-(HEAP8[r+1|0]&255)|0)|0)/255&65535;s=(Math.imul(s&65535,255-(HEAP8[r+2|0]&255)|0)|0)/255&
65535;c=c&65535|(a&65535)<<8|(s&65535)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=10;break;case 10:s=(255-(HEAP8[r+3|0]&255)|0)&65535;c=(Math.imul(s&65535,255-(HEAP8[r|0]&255)|0)|0)/255&65535;a=(Math.imul(s&65535,255-(HEAP8[r+1|0]&255)|0)|0)/255&65535;s=(Math.imul(s&65535,255-(HEAP8[r+2|0]&255)|0)|0)/255&65535;c=c&65535|(a&65535)<<8|(s&65535)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=11;break;case 11:s=(255-(HEAP8[r+3|0]&255)|0)&65535;c=(Math.imul(s&65535,255-(HEAP8[r|0]&255)|0)|
0)/255&65535;a=(Math.imul(s&65535,255-(HEAP8[r+1|0]&255)|0)|0)/255&65535;s=(Math.imul(s&65535,255-(HEAP8[r+2|0]&255)|0)|0)/255&65535;c=c&65535|(a&65535)<<8|(s&65535)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=12;break;case 12:s=(255-(HEAP8[r+3|0]&255)|0)&65535;c=(Math.imul(s&65535,255-(HEAP8[r|0]&255)|0)|0)/255&65535;a=(Math.imul(s&65535,255-(HEAP8[r+1|0]&255)|0)|0)/255&65535;s=(Math.imul(s&65535,255-(HEAP8[r+2|0]&255)|0)|0)/255&65535;c=c&65535|(a&65535)<<8|(s&65535)<<16|-16777216;a=l;l=a+
4|0;HEAP32[a>>2]=c;r=r+h|0;c=13;break;case 13:s=(255-(HEAP8[r+3|0]&255)|0)&65535;c=(Math.imul(s&65535,255-(HEAP8[r|0]&255)|0)|0)/255&65535;a=(Math.imul(s&65535,255-(HEAP8[r+1|0]&255)|0)|0)/255&65535;s=(Math.imul(s&65535,255-(HEAP8[r+2|0]&255)|0)|0)/255&65535;c=c&65535|(a&65535)<<8|(s&65535)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=14;break;case 14:s=(255-(HEAP8[r+3|0]&255)|0)&65535;c=(Math.imul(s&65535,255-(HEAP8[r|0]&255)|0)|0)/255&65535;a=(Math.imul(s&65535,255-(HEAP8[r+1|0]&255)|0)|0)/
255&65535;s=(Math.imul(s&65535,255-(HEAP8[r+2|0]&255)|0)|0)/255&65535;c=c&65535|(a&65535)<<8|(s&65535)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=15;break;case 15:s=(255-(HEAP8[r+3|0]&255)|0)&65535;c=(Math.imul(s&65535,255-(HEAP8[r|0]&255)|0)|0)/255&65535;a=(Math.imul(s&65535,255-(HEAP8[r+1|0]&255)|0)|0)/255&65535;s=(Math.imul(s&65535,255-(HEAP8[r+2|0]&255)|0)|0)/255&65535;c=c&65535|(a&65535)<<8|(s&65535)<<16|-16777216;a=l;l=a+4|0;HEAP32[a>>2]=c;r=r+h|0;c=16;break;case 16:c=17;break;case 17:l=
l+(t<<2)|0;r=r+q|0;c=2;break;case 18:return;default:assert(0,"bad label: "+c)}}
function _putRGBcontig8bitCMYKMaptile(m,d,c,a,b,e,g,f,k){a=0;for(a=1;;)switch(a){case 1:var h,l,n,p,q,t,r,s,v,u,w;h=m;l=d;n=c;p=b;q=e;t=g;r=f;s=k;v=HEAP16[(h+26|0)>>1]&65535;h=HEAP32[(h+56|0)>>2];t=Math.imul(t,v)|0;a=2;break;case 2:a=q;q=a-1|0;a=0<a>>>0?3:7;break;case 3:n=p;a=4;break;case 4:a=n;n=a-1|0;a=0<a>>>0?5:6;break;case 5:w=(255-(HEAP8[s+3|0]&255)|0)&65535;a=(Math.imul(w&65535,255-(HEAP8[s|0]&255)|0)|0)/255&65535;u=(Math.imul(w&65535,255-(HEAP8[s+1|0]&255)|0)|0)/255&65535;w=(Math.imul(w&65535,
255-(HEAP8[s+2|0]&255)|0)|0)/255&65535;a=HEAP8[h+(a&65535)|0]&255|(HEAP8[h+(u&65535)|0]&255)<<8|(HEAP8[h+(w&65535)|0]&255)<<16|-16777216;u=l;l=u+4|0;HEAP32[u>>2]=a;s=s+v|0;a=4;break;case 6:s=s+t|0;l=l+(r<<2)|0;a=2;break;case 7:return;default:assert(0,"bad label: "+a)}}
function _put8bitcmaptile(m,d,c,a,b,e,g,f,k){a=0;for(a=1;;)switch(a){case 1:var h,l,n,p,q,t,r,s,v;h=m;l=d;n=c;p=b;q=e;t=g;r=f;s=k;v=HEAP32[(h+64|0)>>2];h=HEAP16[(h+26|0)>>1]&65535;a=2;break;case 2:a=q;q=a-1|0;a=0<a>>>0?3:7;break;case 3:n=p;a=4;break;case 4:a=n;n=a-1|0;a=0<a>>>0?5:6;break;case 5:a=HEAP32[(HEAP32[(v+((HEAP8[s]&255)<<2)|0)>>2]|0)>>2];var u=l;l=u+4|0;HEAP32[u>>2]=a;s=s+h|0;a=4;break;case 6:l=l+(r<<2)|0;s=s+t|0;a=2;break;case 7:return;default:assert(0,"bad label: "+a)}}
function _put4bitcmaptile(m,d,c,a,b,e,g,f,k){c=0;for(c=1;;)switch(c){case 1:var h,l,n,p,q,t,r,s;h=m;l=d;n=b;p=e;q=g;t=f;r=k;h=HEAP32[(h+64|0)>>2];q=(q|0)/2&-1;c=2;break;case 2:c=p;p=c-1|0;c=0<c>>>0?3:10;break;case 3:s=n;c=4;break;case 4:c=2<=s>>>0?5:7;break;case 5:c=r;r=c+1|0;a=c=HEAP32[(h+((HEAP8[c]&255)<<2)|0)>>2];c=a+4|0;a=HEAP32[a>>2];var v=l;l=v+4|0;HEAP32[v>>2]=a;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=6;break;case 6:s=s-2|0;c=4;break;case 7:c=0!=(s|0)?8:9;break;case 8:c=r;r=c+1|0;c=HEAP32[(h+
((HEAP8[c]&255)<<2)|0)>>2];c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=9;break;case 9:l=l+(t<<2)|0;r=r+q|0;c=2;break;case 10:return;default:assert(0,"bad label: "+c)}}
function _put2bitcmaptile(m,d,c,a,b,e,g,f,k){c=0;for(c=1;;)switch(c){case 1:var h,l,n,p,q,t,r,s,v;h=m;l=d;n=b;p=e;q=g;t=f;r=k;h=HEAP32[(h+64|0)>>2];q=(q|0)/4&-1;c=2;break;case 2:c=p;p=c-1|0;c=0<c>>>0?3:14;break;case 3:v=n;c=4;break;case 4:c=4<=v>>>0?5:7;break;case 5:s=r;r=s+1|0;c=s=HEAP32[(h+((HEAP8[s]&255)<<2)|0)>>2];s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=s;s=c+4|0;c=HEAP32[c>>
2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=6;break;case 6:v=v-4|0;c=4;break;case 7:c=0<v>>>0?8:13;break;case 8:s=r;r=s+1|0;s=HEAP32[(h+((HEAP8[s]&255)<<2)|0)>>2];c=v;c=3==(c|0)?9:2==(c|0)?10:1==(c|0)?11:12;break;case 9:c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=10;break;case 10:c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=11;break;case 11:c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=12;break;case 12:c=13;break;case 13:l=l+(t<<2)|0;r=r+q|0;c=2;break;case 14:return;default:assert(0,
"bad label: "+c)}}
function _put1bitcmaptile(m,d,c,a,b,e,g,f,k){c=0;for(c=1;;)switch(c){case 1:var h,l,n,p,q,t,r,s,v;h=m;l=d;n=b;p=e;q=g;t=f;r=k;h=HEAP32[(h+64|0)>>2];q=(q|0)/8&-1;c=2;break;case 2:c=p;p=c-1|0;c=0<c>>>0?3:18;break;case 3:v=n;c=4;break;case 4:c=8<=v>>>0?5:7;break;case 5:s=r;r=s+1|0;c=s=HEAP32[(h+((HEAP8[s]&255)<<2)|0)>>2];s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=s;s=c+4|0;c=HEAP32[c>>
2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=6;break;case 6:v=v-8|0;c=4;break;case 7:c=0<v>>>0?8:17;break;case 8:s=r;r=s+1|0;s=HEAP32[(h+((HEAP8[s]&255)<<2)|0)>>2];c=v;c=7==(c|0)?9:6==(c|0)?10:5==(c|0)?11:4==(c|0)?12:3==(c|0)?13:2==(c|0)?14:1==(c|0)?15:16;break;case 9:c=s;s=c+4|0;c=HEAP32[c>>2];a=
l;l=a+4|0;HEAP32[a>>2]=c;c=10;break;case 10:c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=11;break;case 11:c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=12;break;case 12:c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=13;break;case 13:c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=14;break;case 14:c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=15;break;case 15:c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=16;break;case 16:c=17;break;case 17:l=
l+(t<<2)|0;r=r+q|0;c=2;break;case 18:return;default:assert(0,"bad label: "+c)}}
function _put16bitbwtile(m,d,c,a,b,e,g,f,k){a=0;for(a=1;;)switch(a){case 1:var h,l,n,p,q,t,r,s,v,u;h=m;l=d;n=c;p=b;q=e;t=g;r=f;s=k;v=HEAP16[(h+26|0)>>1]&65535;h=HEAP32[(h+60|0)>>2];a=2;break;case 2:a=q;q=a-1|0;a=0<a>>>0?3:7;break;case 3:u=s;n=p;a=4;break;case 4:a=n;n=a-1|0;a=0<a>>>0?5:6;break;case 5:a=HEAP32[(HEAP32[(h+((HEAP16[u>>1]&65535)>>8<<2)|0)>>2]|0)>>2];var w=l;l=w+4|0;HEAP32[w>>2]=a;s=s+(v<<1)|0;u=u+(v<<1)|0;a=4;break;case 6:l=l+(r<<2)|0;s=s+t|0;a=2;break;case 7:return;default:assert(0,"bad label: "+
a)}}
function _putagreytile(m,d,c,a,b,e,g,f,k){a=0;for(a=1;;)switch(a){case 1:var h,l,n,p,q,t,r,s,v;h=m;l=d;n=c;p=b;q=e;t=g;r=f;s=k;v=HEAP16[(h+26|0)>>1]&65535;h=HEAP32[(h+60|0)>>2];a=2;break;case 2:a=q;q=a-1|0;a=0<a>>>0?3:7;break;case 3:n=p;a=4;break;case 4:a=n;n=a-1|0;a=0<a>>>0?5:6;break;case 5:a=HEAP32[(HEAP32[(h+((HEAP8[s]&255)<<2)|0)>>2]|0)>>2]&((HEAP8[s+1|0]&255)<<24|16777215);var u=l;l=u+4|0;HEAP32[u>>2]=a;s=s+v|0;a=4;break;case 6:l=l+(r<<2)|0;s=s+t|0;a=2;break;case 7:return;default:assert(0,"bad label: "+
a)}}function _putgreytile(m,d,c,a,b,e,g,f,k){a=0;for(a=1;;)switch(a){case 1:var h,l,n,p,q,t,r,s,v;h=m;l=d;n=c;p=b;q=e;t=g;r=f;s=k;v=HEAP16[(h+26|0)>>1]&65535;h=HEAP32[(h+60|0)>>2];a=2;break;case 2:a=q;q=a-1|0;a=0<a>>>0?3:7;break;case 3:n=p;a=4;break;case 4:a=n;n=a-1|0;a=0<a>>>0?5:6;break;case 5:a=HEAP32[(HEAP32[(h+((HEAP8[s]&255)<<2)|0)>>2]|0)>>2];var u=l;l=u+4|0;HEAP32[u>>2]=a;s=s+v|0;a=4;break;case 6:l=l+(r<<2)|0;s=s+t|0;a=2;break;case 7:return;default:assert(0,"bad label: "+a)}}
function _put4bitbwtile(m,d,c,a,b,e,g,f,k){c=0;for(c=1;;)switch(c){case 1:var h,l,n,p,q,t,r,s;h=m;l=d;n=b;p=e;q=g;t=f;r=k;h=HEAP32[(h+60|0)>>2];q=(q|0)/2&-1;c=2;break;case 2:c=p;p=c-1|0;c=0<c>>>0?3:10;break;case 3:s=n;c=4;break;case 4:c=2<=s>>>0?5:7;break;case 5:c=r;r=c+1|0;a=c=HEAP32[(h+((HEAP8[c]&255)<<2)|0)>>2];c=a+4|0;a=HEAP32[a>>2];var v=l;l=v+4|0;HEAP32[v>>2]=a;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=6;break;case 6:s=s-2|0;c=4;break;case 7:c=0!=(s|0)?8:9;break;case 8:c=r;r=c+1|0;c=HEAP32[(h+
((HEAP8[c]&255)<<2)|0)>>2];c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=9;break;case 9:l=l+(t<<2)|0;r=r+q|0;c=2;break;case 10:return;default:assert(0,"bad label: "+c)}}
function _put2bitbwtile(m,d,c,a,b,e,g,f,k){c=0;for(c=1;;)switch(c){case 1:var h,l,n,p,q,t,r,s,v;h=m;l=d;n=b;p=e;q=g;t=f;r=k;h=HEAP32[(h+60|0)>>2];q=(q|0)/4&-1;c=2;break;case 2:c=p;p=c-1|0;c=0<c>>>0?3:14;break;case 3:v=n;c=4;break;case 4:c=4<=v>>>0?5:7;break;case 5:s=r;r=s+1|0;c=s=HEAP32[(h+((HEAP8[s]&255)<<2)|0)>>2];s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=s;s=c+4|0;c=HEAP32[c>>2];
a=l;l=a+4|0;HEAP32[a>>2]=c;c=6;break;case 6:v=v-4|0;c=4;break;case 7:c=0<v>>>0?8:13;break;case 8:s=r;r=s+1|0;s=HEAP32[(h+((HEAP8[s]&255)<<2)|0)>>2];c=v;c=3==(c|0)?9:2==(c|0)?10:1==(c|0)?11:12;break;case 9:c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=10;break;case 10:c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=11;break;case 11:c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=12;break;case 12:c=13;break;case 13:l=l+(t<<2)|0;r=r+q|0;c=2;break;case 14:return;default:assert(0,
"bad label: "+c)}}
function _put1bitbwtile(m,d,c,a,b,e,g,f,k){c=0;for(c=1;;)switch(c){case 1:var h,l,n,p,q,t,r,s,v;h=m;l=d;n=b;p=e;q=g;t=f;r=k;h=HEAP32[(h+60|0)>>2];q=(q|0)/8&-1;c=2;break;case 2:c=p;p=c-1|0;c=0<c>>>0?3:18;break;case 3:v=n;c=4;break;case 4:c=8<=v>>>0?5:7;break;case 5:s=r;r=s+1|0;c=s=HEAP32[(h+((HEAP8[s]&255)<<2)|0)>>2];s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=s;s=c+4|0;c=HEAP32[c>>2];
a=l;l=a+4|0;HEAP32[a>>2]=c;c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=6;break;case 6:v=v-8|0;c=4;break;case 7:c=0<v>>>0?8:17;break;case 8:s=r;r=s+1|0;s=HEAP32[(h+((HEAP8[s]&255)<<2)|0)>>2];c=v;c=7==(c|0)?9:6==(c|0)?10:5==(c|0)?11:4==(c|0)?12:3==(c|0)?13:2==(c|0)?14:1==(c|0)?15:16;break;case 9:c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=
a+4|0;HEAP32[a>>2]=c;c=10;break;case 10:c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=11;break;case 11:c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=12;break;case 12:c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=13;break;case 13:c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=14;break;case 14:c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=15;break;case 15:c=s;s=c+4|0;c=HEAP32[c>>2];a=l;l=a+4|0;HEAP32[a>>2]=c;c=16;break;case 16:c=17;break;case 17:l=l+
(t<<2)|0;r=r+q|0;c=2;break;case 18:return;default:assert(0,"bad label: "+c)}}
function _putcontig8bitYCbCr44tile(m,d,c,a,b,e,g,f,k){var h=0,l=STACKTOP;STACKTOP=STACKTOP+768|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(h=1;;)switch(h){case 1:var n,p,q,t,r,s,v,u,w,y,A,z,x,B,C=l,D=l+8,F=l+16,I=l+24,G=l+32,H=l+40,K=l+48,J=l+56,E=l+64,L=l+72,Q=l+80,N=l+88,P=l+96,W=l+104,O=l+112,T=l+120,Y=l+128,S=l+136,X=l+144,R=l+152,V=l+160,aa=l+168,fa=l+176,Z=l+184,ka=l+192,M=l+200,ga=l+208,na=l+216,ba=l+224,ca=l+232,oa=l+240,va=l+248,pa=l+256,la=l+264,wa=l+272,qa=l+280,ea=l+288,xa=l+296,ja=l+304,
da=l+312,Ga=l+320,$=l+328,ma=l+336,ra=l+344,Aa=l+352,Xa=l+360,Da=l+368,Ua=l+376,sa,ha,U=l+384,gb=l+392,Ka=l+400,Ia=l+408,ia=l+416,Ba=l+424,Ra=l+432,Sa=l+440,ib=l+448,ua=l+456,Va=l+464,eb=l+472,Ea=l+480,Ya=l+488,La=l+496,Ma=l+504,Fa=l+512,Na=l+520,Oa=l+528,jb=l+536,Za=l+544,Ca=l+552,$a=l+560,ab=l+568,Ha=l+576,Wa=l+584,bb=l+592,Pa=l+600,Ja=l+608,cb=l+616,Qa=l+624,fb=l+632,hb=l+640,ya=l+648,db=l+656,Ta=l+664,kb=l+672,lb=l+680,mb=l+688,ta=l+696,nb=l+704,pb=l+712,rb=l+720,qb=l+728,sb=l+736,vb=l+744,wb=
l+752,xb=l+760;n=m;p=d;q=c;t=b;r=e;s=g;v=f;u=k;w=(p+(t<<2)|0)+(v<<2)|0;y=(w+(t<<2)|0)+(v<<2)|0;A=(y+(t<<2)|0)+(v<<2)|0;z=(3*t&-1)+(v<<2)|0;s=(18*s&-1|0)/4&-1;h=0==(r&3|0)?2:11;break;case 2:h=0==(t&3|0)?3:11;break;case 3:h=4;break;case 4:h=4<=r>>>0?5:10;break;case 5:q=t>>>2;h=6;break;case 6:x=HEAP8[u+16|0]&255;B=HEAP8[u+17|0]&255;_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u|0]&255,x,B,C,D,F);HEAP32[(p|0)>>2]=HEAP32[C>>2]|HEAP32[D>>2]<<8|HEAP32[F>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],
HEAP8[u+1|0]&255,x,B,I,G,H);HEAP32[(p+4|0)>>2]=HEAP32[I>>2]|HEAP32[G>>2]<<8|HEAP32[H>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+2|0]&255,x,B,K,J,E);HEAP32[(p+8|0)>>2]=HEAP32[K>>2]|HEAP32[J>>2]<<8|HEAP32[E>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+3|0]&255,x,B,L,Q,N);HEAP32[(p+12|0)>>2]=HEAP32[L>>2]|HEAP32[Q>>2]<<8|HEAP32[N>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+4|0]&255,x,B,P,W,O);HEAP32[(w|0)>>2]=HEAP32[P>>2]|HEAP32[W>>2]<<8|HEAP32[O>>
2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+5|0]&255,x,B,T,Y,S);HEAP32[(w+4|0)>>2]=HEAP32[T>>2]|HEAP32[Y>>2]<<8|HEAP32[S>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+6|0]&255,x,B,X,R,V);HEAP32[(w+8|0)>>2]=HEAP32[X>>2]|HEAP32[R>>2]<<8|HEAP32[V>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+7|0]&255,x,B,aa,fa,Z);HEAP32[(w+12|0)>>2]=HEAP32[aa>>2]|HEAP32[fa>>2]<<8|HEAP32[Z>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+8|0]&255,x,B,ka,M,
ga);HEAP32[(y|0)>>2]=HEAP32[ka>>2]|HEAP32[M>>2]<<8|HEAP32[ga>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+9|0]&255,x,B,na,ba,ca);HEAP32[(y+4|0)>>2]=HEAP32[na>>2]|HEAP32[ba>>2]<<8|HEAP32[ca>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+10|0]&255,x,B,oa,va,pa);HEAP32[(y+8|0)>>2]=HEAP32[oa>>2]|HEAP32[va>>2]<<8|HEAP32[pa>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+11|0]&255,x,B,la,wa,qa);HEAP32[(y+12|0)>>2]=HEAP32[la>>2]|HEAP32[wa>>2]<<8|HEAP32[qa>>2]<<
16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+12|0]&255,x,B,ea,xa,ja);HEAP32[(A|0)>>2]=HEAP32[ea>>2]|HEAP32[xa>>2]<<8|HEAP32[ja>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+13|0]&255,x,B,da,Ga,$);HEAP32[(A+4|0)>>2]=HEAP32[da>>2]|HEAP32[Ga>>2]<<8|HEAP32[$>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+14|0]&255,x,B,ma,ra,Aa);HEAP32[(A+8|0)>>2]=HEAP32[ma>>2]|HEAP32[ra>>2]<<8|HEAP32[Aa>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+15|0]&255,
x,B,Xa,Da,Ua);HEAP32[(A+12|0)>>2]=HEAP32[Xa>>2]|HEAP32[Da>>2]<<8|HEAP32[Ua>>2]<<16|-16777216;p=p+16|0;w=w+16|0;y=y+16|0;A=A+16|0;u=u+18|0;h=7;break;case 7:var Db=q-1|0;q=Db;h=0!=(Db|0)?6:8;break;case 8:p=p+(z<<2)|0;w=w+(z<<2)|0;y=y+(z<<2)|0;A=A+(z<<2)|0;u=u+s|0;h=9;break;case 9:r=r-4|0;h=4;break;case 10:h=48;break;case 11:h=12;break;case 12:h=0<r>>>0?13:47;break;case 13:q=t;h=14;break;case 14:h=0<q>>>0?15:44;break;case 15:sa=HEAP8[u+16|0]&255;ha=HEAP8[u+17|0]&255;var tb=q,h=3==(tb|0)?22:2==(tb|0)?
28:1==(tb|0)?34:16;break;case 16:var Gb=r,h=3==(Gb|0)?18:2==(Gb|0)?19:1==(Gb|0)?20:17;break;case 17:_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+15|0]&255,sa,ha,U,gb,Ka);HEAP32[(A+12|0)>>2]=HEAP32[U>>2]|HEAP32[gb>>2]<<8|HEAP32[Ka>>2]<<16|-16777216;h=18;break;case 18:_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+11|0]&255,sa,ha,Ia,ia,Ba);HEAP32[(y+12|0)>>2]=HEAP32[Ia>>2]|HEAP32[ia>>2]<<8|HEAP32[Ba>>2]<<16|-16777216;h=19;break;case 19:_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+7|0]&255,sa,ha,Ra,Sa,ib);
HEAP32[(w+12|0)>>2]=HEAP32[Ra>>2]|HEAP32[Sa>>2]<<8|HEAP32[ib>>2]<<16|-16777216;h=20;break;case 20:_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+3|0]&255,sa,ha,ua,Va,eb);HEAP32[(p+12|0)>>2]=HEAP32[ua>>2]|HEAP32[Va>>2]<<8|HEAP32[eb>>2]<<16|-16777216;h=21;break;case 21:h=22;break;case 22:var yb=r,h=3==(yb|0)?24:2==(yb|0)?25:1==(yb|0)?26:23;break;case 23:_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+14|0]&255,sa,ha,Ea,Ya,La);HEAP32[(A+8|0)>>2]=HEAP32[Ea>>2]|HEAP32[Ya>>2]<<8|HEAP32[La>>2]<<16|-16777216;h=
24;break;case 24:_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+10|0]&255,sa,ha,Ma,Fa,Na);HEAP32[(y+8|0)>>2]=HEAP32[Ma>>2]|HEAP32[Fa>>2]<<8|HEAP32[Na>>2]<<16|-16777216;h=25;break;case 25:_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+6|0]&255,sa,ha,Oa,jb,Za);HEAP32[(w+8|0)>>2]=HEAP32[Oa>>2]|HEAP32[jb>>2]<<8|HEAP32[Za>>2]<<16|-16777216;h=26;break;case 26:_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+2|0]&255,sa,ha,Ca,$a,ab);HEAP32[(p+8|0)>>2]=HEAP32[Ca>>2]|HEAP32[$a>>2]<<8|HEAP32[ab>>2]<<16|-16777216;h=27;
break;case 27:h=28;break;case 28:var ub=r,h=3==(ub|0)?30:2==(ub|0)?31:1==(ub|0)?32:29;break;case 29:_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+13|0]&255,sa,ha,Ha,Wa,bb);HEAP32[(A+4|0)>>2]=HEAP32[Ha>>2]|HEAP32[Wa>>2]<<8|HEAP32[bb>>2]<<16|-16777216;h=30;break;case 30:_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+9|0]&255,sa,ha,Pa,Ja,cb);HEAP32[(y+4|0)>>2]=HEAP32[Pa>>2]|HEAP32[Ja>>2]<<8|HEAP32[cb>>2]<<16|-16777216;h=31;break;case 31:_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+5|0]&255,sa,ha,Qa,fb,hb);
HEAP32[(w+4|0)>>2]=HEAP32[Qa>>2]|HEAP32[fb>>2]<<8|HEAP32[hb>>2]<<16|-16777216;h=32;break;case 32:_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+1|0]&255,sa,ha,ya,db,Ta);HEAP32[(p+4|0)>>2]=HEAP32[ya>>2]|HEAP32[db>>2]<<8|HEAP32[Ta>>2]<<16|-16777216;h=33;break;case 33:h=34;break;case 34:var Ab=r,h=3==(Ab|0)?36:2==(Ab|0)?37:1==(Ab|0)?38:35;break;case 35:_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+12|0]&255,sa,ha,kb,lb,mb);HEAP32[(A|0)>>2]=HEAP32[kb>>2]|HEAP32[lb>>2]<<8|HEAP32[mb>>2]<<16|-16777216;h=36;break;
case 36:_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+8|0]&255,sa,ha,ta,nb,pb);HEAP32[(y|0)>>2]=HEAP32[ta>>2]|HEAP32[nb>>2]<<8|HEAP32[pb>>2]<<16|-16777216;h=37;break;case 37:_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u+4|0]&255,sa,ha,rb,qb,sb);HEAP32[(w|0)>>2]=HEAP32[rb>>2]|HEAP32[qb>>2]<<8|HEAP32[sb>>2]<<16|-16777216;h=38;break;case 38:_TIFFYCbCrtoRGB(HEAP32[(n+68|0)>>2],HEAP8[u|0]&255,sa,ha,vb,wb,xb);HEAP32[(p|0)>>2]=HEAP32[vb>>2]|HEAP32[wb>>2]<<8|HEAP32[xb>>2]<<16|-16777216;h=39;break;case 39:h=40;
break;case 40:h=4>q>>>0?41:42;break;case 41:p=p+(q<<2)|0;w=w+(q<<2)|0;y=y+(q<<2)|0;A=A+(q<<2)|0;q=0;h=43;break;case 42:p=p+16|0;w=w+16|0;y=y+16|0;A=A+16|0;q=q-4|0;h=43;break;case 43:u=u+18|0;h=14;break;case 44:h=4>=r>>>0?45:46;break;case 45:h=47;break;case 46:r=r-4|0;p=p+(z<<2)|0;w=w+(z<<2)|0;y=y+(z<<2)|0;A=A+(z<<2)|0;u=u+s|0;h=12;break;case 47:h=48;break;case 48:STACKTOP=l;return;default:assert(0,"bad label: "+h)}}
function _putcontig8bitYCbCr42tile(m,d,c,a,b,e,g,f,k){var h=0;a=STACKTOP;STACKTOP=STACKTOP+384|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(h=1;;)switch(h){case 1:var l,n,p,q,t,r,s,v,u,w,y=a,A=a+8,z=a+16,x=a+24,B=a+32,C=a+40,D=a+48,F=a+56,I=a+64,G=a+72,H=a+80,K=a+88,J=a+96,E=a+104,L=a+112,Q=a+120,N=a+128,P=a+136,W=a+144,O=a+152,T=a+160,Y=a+168,S=a+176,X=a+184,R,V,aa=a+192,fa=a+200,Z=a+208,ka=a+216,M=a+224,ga=a+232,na=a+240,ba=a+248,ca=a+256,oa=a+264,va=a+272,pa=a+280,la=a+288,wa=a+296,qa=a+304,ea=a+
312,xa=a+320,ja=a+328,da=a+336,Ga=a+344,$=a+352,ma=a+360,ra=a+368,Aa=a+376;l=m;n=d;p=c;q=b;t=e;r=g;s=f;v=k;u=(n+(q<<2)|0)+(s<<2)|0;s=(s<<1)+q|0;r=(10*r&-1|0)/4&-1;h=0==(t&3|0)?2:11;break;case 2:h=0==(q&1|0)?3:11;break;case 3:h=4;break;case 4:h=2<=t>>>0?5:10;break;case 5:p=q>>>2;h=6;break;case 6:h=HEAP8[v+8|0]&255;w=HEAP8[v+9|0]&255;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v|0]&255,h,w,y,A,z);HEAP32[(n|0)>>2]=HEAP32[y>>2]|HEAP32[A>>2]<<8|HEAP32[z>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>
2],HEAP8[v+1|0]&255,h,w,x,B,C);HEAP32[(n+4|0)>>2]=HEAP32[x>>2]|HEAP32[B>>2]<<8|HEAP32[C>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+2|0]&255,h,w,D,F,I);HEAP32[(n+8|0)>>2]=HEAP32[D>>2]|HEAP32[F>>2]<<8|HEAP32[I>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+3|0]&255,h,w,G,H,K);HEAP32[(n+12|0)>>2]=HEAP32[G>>2]|HEAP32[H>>2]<<8|HEAP32[K>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+4|0]&255,h,w,J,E,L);HEAP32[(u|0)>>2]=HEAP32[J>>2]|HEAP32[E>>2]<<8|HEAP32[L>>
2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+5|0]&255,h,w,Q,N,P);HEAP32[(u+4|0)>>2]=HEAP32[Q>>2]|HEAP32[N>>2]<<8|HEAP32[P>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+6|0]&255,h,w,W,O,T);HEAP32[(u+8|0)>>2]=HEAP32[W>>2]|HEAP32[O>>2]<<8|HEAP32[T>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+7|0]&255,h,w,Y,S,X);HEAP32[(u+12|0)>>2]=HEAP32[Y>>2]|HEAP32[S>>2]<<8|HEAP32[X>>2]<<16|-16777216;n=n+16|0;u=u+16|0;v=v+10|0;h=7;break;case 7:p=h=p-1|0;h=0!=(h|0)?6:
8;break;case 8:n=n+(s<<2)|0;u=u+(s<<2)|0;v=v+r|0;h=9;break;case 9:t=t-2|0;h=4;break;case 10:h=40;break;case 11:h=12;break;case 12:h=0<t>>>0?13:39;break;case 13:p=q;h=14;break;case 14:h=0<p>>>0?15:36;break;case 15:R=HEAP8[v+8|0]&255;V=HEAP8[v+9|0]&255;h=p;h=3==(h|0)?20:2==(h|0)?24:1==(h|0)?28:16;break;case 16:h=1==(t|0)?18:17;break;case 17:_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+7|0]&255,R,V,aa,fa,Z);HEAP32[(u+12|0)>>2]=HEAP32[aa>>2]|HEAP32[fa>>2]<<8|HEAP32[Z>>2]<<16|-16777216;h=18;break;case 18:_TIFFYCbCrtoRGB(HEAP32[(l+
68|0)>>2],HEAP8[v+3|0]&255,R,V,ka,M,ga);HEAP32[(n+12|0)>>2]=HEAP32[ka>>2]|HEAP32[M>>2]<<8|HEAP32[ga>>2]<<16|-16777216;h=19;break;case 19:h=20;break;case 20:h=1==(t|0)?22:21;break;case 21:_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+6|0]&255,R,V,na,ba,ca);HEAP32[(u+8|0)>>2]=HEAP32[na>>2]|HEAP32[ba>>2]<<8|HEAP32[ca>>2]<<16|-16777216;h=22;break;case 22:_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+2|0]&255,R,V,oa,va,pa);HEAP32[(n+8|0)>>2]=HEAP32[oa>>2]|HEAP32[va>>2]<<8|HEAP32[pa>>2]<<16|-16777216;h=23;
break;case 23:h=24;break;case 24:h=1==(t|0)?26:25;break;case 25:_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+5|0]&255,R,V,la,wa,qa);HEAP32[(u+4|0)>>2]=HEAP32[la>>2]|HEAP32[wa>>2]<<8|HEAP32[qa>>2]<<16|-16777216;h=26;break;case 26:_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+1|0]&255,R,V,ea,xa,ja);HEAP32[(n+4|0)>>2]=HEAP32[ea>>2]|HEAP32[xa>>2]<<8|HEAP32[ja>>2]<<16|-16777216;h=27;break;case 27:h=28;break;case 28:h=1==(t|0)?30:29;break;case 29:_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+4|0]&255,R,V,da,
Ga,$);HEAP32[(u|0)>>2]=HEAP32[da>>2]|HEAP32[Ga>>2]<<8|HEAP32[$>>2]<<16|-16777216;h=30;break;case 30:_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v|0]&255,R,V,ma,ra,Aa);HEAP32[(n|0)>>2]=HEAP32[ma>>2]|HEAP32[ra>>2]<<8|HEAP32[Aa>>2]<<16|-16777216;h=31;break;case 31:h=32;break;case 32:h=4>p>>>0?33:34;break;case 33:n=n+(p<<2)|0;u=u+(p<<2)|0;p=0;h=35;break;case 34:n=n+16|0;u=u+16|0;p=p-4|0;h=35;break;case 35:v=v+10|0;h=14;break;case 36:h=2>=t>>>0?37:38;break;case 37:h=39;break;case 38:t=t-2|0;n=n+(s<<2)|0;
u=u+(s<<2)|0;v=v+r|0;h=12;break;case 39:h=40;break;case 40:STACKTOP=a;return;default:assert(0,"bad label: "+h)}}
function _putcontig8bitYCbCr41tile(m,d,c,a,b,e,g,f,k){var h=0;a=STACKTOP;STACKTOP=STACKTOP+168|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(h=1;;)switch(h){case 1:var l,n,p,q,t,r,s,v,u,w=a,y=a+8,A=a+16,z=a+24,x=a+32,B=a+40,C=a+48,D=a+56,F=a+64,I=a+72,G=a+80,H=a+88,K,J,E=a+96,L=a+104,Q=a+112,N=a+120,P=a+128,W=a+136,O=a+144,T=a+152,Y=a+160;l=m;n=d;p=c;q=b;t=e;r=g;s=f;v=k;h=2;break;case 2:p=q>>>2;h=3;break;case 3:h=HEAP8[v+4|0]&255;u=HEAP8[v+5|0]&255;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v|0]&255,
h,u,w,y,A);HEAP32[(n|0)>>2]=HEAP32[w>>2]|HEAP32[y>>2]<<8|HEAP32[A>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+1|0]&255,h,u,z,x,B);HEAP32[(n+4|0)>>2]=HEAP32[z>>2]|HEAP32[x>>2]<<8|HEAP32[B>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+2|0]&255,h,u,C,D,F);HEAP32[(n+8|0)>>2]=HEAP32[C>>2]|HEAP32[D>>2]<<8|HEAP32[F>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+3|0]&255,h,u,I,G,H);HEAP32[(n+12|0)>>2]=HEAP32[I>>2]|HEAP32[G>>2]<<8|HEAP32[H>>2]<<16|-16777216;
n=n+16|0;v=v+6|0;h=4;break;case 4:p=h=p-1|0;h=0!=(h|0)?3:5;break;case 5:h=0!=(q&3|0)?6:12;break;case 6:K=HEAP8[v+4|0]&255;J=HEAP8[v+5|0]&255;h=q&3;h=3==(h|0)?7:2==(h|0)?8:1==(h|0)?9:0==(h|0)?10:11;break;case 7:_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+2|0]&255,K,J,E,L,Q);HEAP32[(n+8|0)>>2]=HEAP32[E>>2]|HEAP32[L>>2]<<8|HEAP32[Q>>2]<<16|-16777216;h=8;break;case 8:_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+1|0]&255,K,J,N,P,W);HEAP32[(n+4|0)>>2]=HEAP32[N>>2]|HEAP32[P>>2]<<8|HEAP32[W>>2]<<16|-16777216;
h=9;break;case 9:_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v|0]&255,K,J,O,T,Y);HEAP32[(n|0)>>2]=HEAP32[O>>2]|HEAP32[T>>2]<<8|HEAP32[Y>>2]<<16|-16777216;h=10;break;case 10:h=11;break;case 11:n=n+((q&3)<<2)|0;v=v+6|0;h=12;break;case 12:n=n+(s<<2)|0;v=v+r|0;h=13;break;case 13:t=h=t-1|0;h=0!=(h|0)?2:14;break;case 14:STACKTOP=a;return;default:assert(0,"bad label: "+h)}}
function _putcontig8bitYCbCr22tile(m,d,c,a,b,e,g,f,k){var h=0;a=STACKTOP;STACKTOP=STACKTOP+216|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(h=1;;)switch(h){case 1:var l,n,p,q,t,r,s,v,u,w,y=a,A=a+8,z=a+16,x=a+24,B=a+32,C=a+40,D=a+48,F=a+56,I=a+64,G=a+72,H=a+80,K=a+88,J=a+96,E=a+104,L=a+112,Q=a+120,N=a+128,P=a+136,W=a+144,O=a+152,T=a+160,Y=a+168,S=a+176,X=a+184,R=a+192,V=a+200,aa=a+208;l=m;n=d;p=c;q=b;t=e;r=g;s=f;v=k;u=(s<<1)+q|0;r=6*((r|0)/2&-1)&-1;s=(n+(q<<2)|0)+(s<<2)|0;h=2;break;case 2:h=2<=t>>>0?
3:9;break;case 3:p=q;h=4;break;case 4:h=2<=p>>>0?5:6;break;case 5:h=HEAP8[v+4|0]&255;w=HEAP8[v+5|0]&255;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v|0]&255,h,w,y,A,z);HEAP32[(n|0)>>2]=HEAP32[y>>2]|HEAP32[A>>2]<<8|HEAP32[z>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+1|0]&255,h,w,x,B,C);HEAP32[(n+4|0)>>2]=HEAP32[x>>2]|HEAP32[B>>2]<<8|HEAP32[C>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+2|0]&255,h,w,D,F,I);HEAP32[(s|0)>>2]=HEAP32[D>>2]|HEAP32[F>>2]<<8|HEAP32[I>>2]<<
16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+3|0]&255,h,w,G,H,K);HEAP32[(s+4|0)>>2]=HEAP32[G>>2]|HEAP32[H>>2]<<8|HEAP32[K>>2]<<16|-16777216;n=n+8|0;s=s+8|0;v=v+6|0;p=p-2|0;h=4;break;case 6:h=1==(p|0)?7:8;break;case 7:h=HEAP8[v+4|0]&255;w=HEAP8[v+5|0]&255;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v|0]&255,h,w,J,E,L);HEAP32[(n|0)>>2]=HEAP32[J>>2]|HEAP32[E>>2]<<8|HEAP32[L>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+2|0]&255,h,w,Q,N,P);HEAP32[(s|0)>>2]=HEAP32[Q>>2]|HEAP32[N>>
2]<<8|HEAP32[P>>2]<<16|-16777216;n=n+4|0;s=s+4|0;v=v+6|0;h=8;break;case 8:n=n+(u<<2)|0;s=s+(u<<2)|0;v=v+r|0;t=t-2|0;h=2;break;case 9:h=1==(t|0)?10:16;break;case 10:p=q;h=11;break;case 11:h=2<=p>>>0?12:13;break;case 12:h=HEAP8[v+4|0]&255;w=HEAP8[v+5|0]&255;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v|0]&255,h,w,W,O,T);HEAP32[(n|0)>>2]=HEAP32[W>>2]|HEAP32[O>>2]<<8|HEAP32[T>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+1|0]&255,h,w,Y,S,X);HEAP32[(n+4|0)>>2]=HEAP32[Y>>2]|HEAP32[S>>2]<<
8|HEAP32[X>>2]<<16|-16777216;n=n+8|0;s=s+8|0;v=v+6|0;p=p-2|0;h=11;break;case 13:h=1==(p|0)?14:15;break;case 14:h=HEAP8[v+4|0]&255;w=HEAP8[v+5|0]&255;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v|0]&255,h,w,R,V,aa);HEAP32[(n|0)>>2]=HEAP32[R>>2]|HEAP32[V>>2]<<8|HEAP32[aa>>2]<<16|-16777216;h=15;break;case 15:h=16;break;case 16:STACKTOP=a;return;default:assert(0,"bad label: "+h)}}
function _putcontig8bitYCbCr21tile(m,d,c,a,b,e,g,f,k){var h=0;a=STACKTOP;STACKTOP=STACKTOP+72|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(h=1;;)switch(h){case 1:var l,n,p,q,t,r,s,v,u,w=a,y=a+8,A=a+16,z=a+24,x=a+32,B=a+40,C=a+48,D=a+56,F=a+64;l=m;n=d;p=c;q=b;t=e;r=g;s=f;v=k;r=(r<<2|0)/2&-1;h=2;break;case 2:p=q>>>1;h=3;break;case 3:h=HEAP8[v+2|0]&255;u=HEAP8[v+3|0]&255;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v|0]&255,h,u,w,y,A);HEAP32[(n|0)>>2]=HEAP32[w>>2]|HEAP32[y>>2]<<8|HEAP32[A>>2]<<16|-16777216;
_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+1|0]&255,h,u,z,x,B);HEAP32[(n+4|0)>>2]=HEAP32[z>>2]|HEAP32[x>>2]<<8|HEAP32[B>>2]<<16|-16777216;n=n+8|0;v=v+4|0;h=4;break;case 4:p=h=p-1|0;h=0!=(h|0)?3:5;break;case 5:h=0!=(q&1|0)?6:7;break;case 6:h=HEAP8[v+2|0]&255;u=HEAP8[v+3|0]&255;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v|0]&255,h,u,C,D,F);HEAP32[(n|0)>>2]=HEAP32[C>>2]|HEAP32[D>>2]<<8|HEAP32[F>>2]<<16|-16777216;n=n+4|0;v=v+4|0;h=7;break;case 7:n=n+(s<<2)|0;v=v+r|0;h=8;break;case 8:t=h=t-1|0;h=0!=(h|
0)?2:9;break;case 9:STACKTOP=a;return;default:assert(0,"bad label: "+h)}}
function _putcontig8bitYCbCr12tile(m,d,c,a,b,e,g,f,k){var h=0;a=STACKTOP;STACKTOP=STACKTOP+72|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(h=1;;)switch(h){case 1:var l,n,p,q,t,r,s,v,u,w,y=a,A=a+8,z=a+16,x=a+24,B=a+32,C=a+40,D=a+48,F=a+56,I=a+64;l=m;n=d;p=c;q=b;t=e;r=g;s=f;v=k;u=(s<<1)+q|0;r=((r|0)/2&-1)<<2;s=(n+(q<<2)|0)+(s<<2)|0;h=2;break;case 2:h=2<=t>>>0?3:7;break;case 3:p=q;h=4;break;case 4:h=HEAP8[v+2|0]&255;w=HEAP8[v+3|0]&255;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v|0]&255,h,w,y,A,z);HEAP32[(n|
0)>>2]=HEAP32[y>>2]|HEAP32[A>>2]<<8|HEAP32[z>>2]<<16|-16777216;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v+1|0]&255,h,w,x,B,C);HEAP32[(s|0)>>2]=HEAP32[x>>2]|HEAP32[B>>2]<<8|HEAP32[C>>2]<<16|-16777216;n=n+4|0;s=s+4|0;v=v+4|0;h=5;break;case 5:p=h=p-1|0;h=0!=(h|0)?4:6;break;case 6:n=n+(u<<2)|0;s=s+(u<<2)|0;v=v+r|0;t=t-2|0;h=2;break;case 7:h=1==(t|0)?8:12;break;case 8:p=q;h=9;break;case 9:h=HEAP8[v+2|0]&255;w=HEAP8[v+3|0]&255;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v|0]&255,h,w,D,F,I);HEAP32[(n|0)>>
2]=HEAP32[D>>2]|HEAP32[F>>2]<<8|HEAP32[I>>2]<<16|-16777216;n=n+4|0;v=v+4|0;h=10;break;case 10:p=h=p-1|0;h=0!=(h|0)?9:11;break;case 11:h=12;break;case 12:STACKTOP=a;return;default:assert(0,"bad label: "+h)}}
function _putcontig8bitYCbCr11tile(m,d,c,a,b,e,g,f,k){var h=0;a=STACKTOP;STACKTOP=STACKTOP+24|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(h=1;;)switch(h){case 1:var l,n,p,q,t,r,s,v,u,w=a,y=a+8,A=a+16;l=m;n=d;p=c;q=b;t=e;r=g;s=f;v=k;r=3*r&-1;h=2;break;case 2:p=q;h=3;break;case 3:h=HEAP8[v+1|0]&255;u=HEAP8[v+2|0]&255;_TIFFYCbCrtoRGB(HEAP32[(l+68|0)>>2],HEAP8[v|0]&255,h,u,w,y,A);h=HEAP32[w>>2]|HEAP32[y>>2]<<8|HEAP32[A>>2]<<16|-16777216;u=n;n=u+4|0;HEAP32[u>>2]=h;v=v+3|0;h=4;break;case 4:p=h=p-1|0;h=0!=
(h|0)?3:5;break;case 5:n=n+(s<<2)|0;v=v+r|0;h=6;break;case 6:t=h=t-1|0;h=0!=(h|0)?2:7;break;case 7:STACKTOP=a;return;default:assert(0,"bad label: "+h)}}
function _checkcmap(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b,e,g;a=m;b=HEAP32[(a+36|0)>>2];e=HEAP32[(a+40|0)>>2];g=HEAP32[(a+44|0)>>2];a=1<<(HEAP16[(a+24|0)>>1]&65535);d=2;break;case 2:d=a;a=d-1|0;d=0<(d|0)?3:8;break;case 3:d=b;b=d+2|0;d=256<=(HEAP16[d>>1]&65535|0)?6:4;break;case 4:d=e;e=d+2|0;d=256<=(HEAP16[d>>1]&65535|0)?6:5;break;case 5:d=g;g=d+2|0;d=256<=(HEAP16[d>>1]&65535|0)?6:7;break;case 6:c=16;d=9;break;case 7:d=2;break;case 8:c=8;d=9;break;case 9:return c;default:assert(0,"bad label: "+
d)}}
function _cvtcmap(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b,e,d=m;c=HEAP32[(d+36|0)>>2];a=HEAP32[(d+40|0)>>2];b=HEAP32[(d+44|0)>>2];e=(1<<(HEAP16[(d+24|0)>>1]&65535))-1|0;d=2;break;case 2:d=0<=(e|0)?3:5;break;case 3:HEAP16[(c+(e<<1)|0)>>1]=(HEAP16[(c+(e<<1)|0)>>1]&65535)>>8&65535;HEAP16[(a+(e<<1)|0)>>1]=(HEAP16[(a+(e<<1)|0)>>1]&65535)>>8&65535;HEAP16[(b+(e<<1)|0)>>1]=(HEAP16[(b+(e<<1)|0)>>1]&65535)>>8&65535;d=4;break;case 4:e=e-1|0;d=2;break;case 5:return;default:assert(0,"bad label: "+d)}}
function _initCIELabConversion(m){var d=0,c=STACKTOP;STACKTOP=STACKTOP+24|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e=c,g=c+8;b=m;d=0!=(HEAP32[(b+72|0)>>2]|0)?5:2;break;case 2:d=__TIFFmalloc(18124);HEAP32[(b+72|0)>>2]=d;d=0!=(HEAP32[(b+72|0)>>2]|0)?4:3;break;case 3:_TIFFErrorExt(HEAP32[(HEAP32[(b|0)>>2]+628|0)>>2],8976,30448,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=8;
break;case 4:d=5;break;case 5:_TIFFGetFieldDefaulted(HEAP32[(b|0)>>2],318,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));HEAPF32[(g+4|0)>>2]=100;HEAPF32[(g|0)>>2]=HEAPF32[(HEAP32[e>>2]|0)>>2]/HEAPF32[(HEAP32[e>>2]+4|0)>>2]*HEAPF32[(g+4|0)>>2];HEAPF32[(g+8|0)>>2]=(1-HEAPF32[(HEAP32[e>>2]|0)>>2]-HEAPF32[(HEAP32[e>>2]+4|0)>>2])/HEAPF32[(HEAP32[e>>2]+4|0)>>2]*HEAPF32[(g+4|0)>>2];d=0>(_TIFFCIELabToRGBInit(HEAP32[(b+72|0)>>2],14096,g|0)|0)?6:
7;break;case 6:_TIFFErrorExt(HEAP32[(HEAP32[(b|0)>>2]+628|0)>>2],8976,30144,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));__TIFFfree(HEAP32[(b+72|0)>>2]);a=0;d=8;break;case 7:a=340;d=8;break;case 8:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _putcontig8bitCIELab(m,d,c,a,b,e,g,f,k){var h=0;a=STACKTOP;STACKTOP=STACKTOP+48|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(h=1;;)switch(h){case 1:var l,n,p,q,t,r,s,v,u=a,w=a+8,y=a+16,A=a+24,z=a+32,x=a+40;l=m;n=d;p=c;q=b;t=e;r=g;s=f;v=k;r=3*r&-1;h=2;break;case 2:h=t;t=h-1|0;h=0<h>>>0?3:7;break;case 3:p=q;h=4;break;case 4:h=p;p=h-1|0;h=0<h>>>0?5:6;break;case 5:_TIFFCIELabToXYZ(HEAP32[(l+72|0)>>2],HEAP8[v|0]&255,HEAP8[v+1|0]<<24>>24,HEAP8[v+2|0]<<24>>24,u,w,y);_TIFFXYZToRGB(HEAP32[(l+72|0)>>
2],HEAPF32[u>>2],HEAPF32[w>>2],HEAPF32[y>>2],A,z,x);var h=HEAP32[A>>2]|HEAP32[z>>2]<<8|HEAP32[x>>2]<<16|-16777216,B=n;n=B+4|0;HEAP32[B>>2]=h;v=v+3|0;h=4;break;case 6:n=n+(s<<2)|0;v=v+r|0;h=2;break;case 7:STACKTOP=a;return;default:assert(0,"bad label: "+h)}}
function _setupMap(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e,g;b=m;g=(1<<(HEAP16[(b+24|0)>>1]&65535))-1|0;d=16==(HEAP16[(b+24|0)>>1]&65535|0)?2:3;break;case 2:g=255;d=3;break;case 3:d=__TIFFmalloc(g+1|0);HEAP32[(b+56|0)>>2]=d;d=0==(HEAP32[(b+56|0)>>2]|0)?4:5;break;case 4:a=HEAP32[(HEAP32[(b|0)>>2]+628|0)>>2];d=_TIFFFileName(HEAP32[(b|0)>>2]);_TIFFErrorExt(a,d,29560,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|
0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=23;break;case 5:d=0==(HEAP16[(b+32|0)>>1]&65535|0)?6:11;break;case 6:e=0;d=7;break;case 7:d=(e|0)<=(g|0)?8:10;break;case 8:HEAP8[HEAP32[(b+56|0)>>2]+e|0]=(255*(g-e|0)&-1|0)/(g|0)&255;d=9;break;case 9:e=e+1|0;d=7;break;case 10:d=16;break;case 11:e=0;d=12;break;case 12:d=(e|0)<=(g|0)?13:15;break;case 13:HEAP8[HEAP32[(b+56|0)>>2]+e|0]=(255*e&-1|0)/(g|0)&255;d=14;break;case 14:e=e+1|0;d=12;break;case 15:d=16;break;case 16:d=16>=(HEAP16[(b+24|0)>>
1]&65535|0)?17:22;break;case 17:d=1==(HEAP16[(b+32|0)>>1]&65535|0)?19:18;break;case 18:d=0==(HEAP16[(b+32|0)>>1]&65535|0)?19:22;break;case 19:d=0!=(_makebwmap(b)|0)?21:20;break;case 20:a=0;d=23;break;case 21:__TIFFfree(HEAP32[(b+56|0)>>2]);HEAP32[(b+56|0)>>2]=0;d=22;break;case 22:a=1;d=23;break;case 23:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _makecmap(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e,g,f,k,h,l;b=m;e=HEAP16[(b+24|0)>>1]&65535;d=8/(e|0)&-1;g=HEAP32[(b+36|0)>>2];f=HEAP32[(b+40|0)>>2];k=HEAP32[(b+44|0)>>2];d=__TIFFmalloc((d<<8<<2)+1024|0);HEAP32[(b+64|0)>>2]=d;d=0==(HEAP32[(b+64|0)>>2]|0)?2:3;break;case 2:a=HEAP32[(HEAP32[(b|0)>>2]+628|0)>>2];d=_TIFFFileName(HEAP32[(b|0)>>2]);_TIFFErrorExt(a,d,29816,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|
0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=13;break;case 3:h=HEAP32[(b+64|0)>>2]+1024|0;l=0;d=4;break;case 4:d=256>(l|0)?5:12;break;case 5:HEAP32[(HEAP32[(b+64|0)>>2]+(l<<2)|0)>>2]=h;d=e;d=1==(d|0)?6:2==(d|0)?7:4==(d|0)?8:8==(d|0)?9:10;break;case 6:var d=(l&255)>>7&255,d=HEAP16[(g+((d&255)<<1)|0)>>1]&255|(HEAP16[(f+((d&255)<<1)|0)>>1]&255)<<8|(HEAP16[(k+((d&255)<<1)|0)>>1]&255)<<16|-16777216,n=h;h=n+4|0;HEAP32[n>>2]=d;d=l>>6&1;d=HEAP16[(g+((d&255)<<1)|0)>>1]&255|(HEAP16[(f+((d&255)<<
1)|0)>>1]&255)<<8|(HEAP16[(k+((d&255)<<1)|0)>>1]&255)<<16|-16777216;n=h;h=n+4|0;HEAP32[n>>2]=d;d=l>>5&1;d=HEAP16[(g+((d&255)<<1)|0)>>1]&255|(HEAP16[(f+((d&255)<<1)|0)>>1]&255)<<8|(HEAP16[(k+((d&255)<<1)|0)>>1]&255)<<16|-16777216;n=h;h=n+4|0;HEAP32[n>>2]=d;d=l>>4&1;d=HEAP16[(g+((d&255)<<1)|0)>>1]&255|(HEAP16[(f+((d&255)<<1)|0)>>1]&255)<<8|(HEAP16[(k+((d&255)<<1)|0)>>1]&255)<<16|-16777216;n=h;h=n+4|0;HEAP32[n>>2]=d;d=l>>3&1;d=HEAP16[(g+((d&255)<<1)|0)>>1]&255|(HEAP16[(f+((d&255)<<1)|0)>>1]&255)<<8|
(HEAP16[(k+((d&255)<<1)|0)>>1]&255)<<16|-16777216;n=h;h=n+4|0;HEAP32[n>>2]=d;d=l>>2&1;d=HEAP16[(g+((d&255)<<1)|0)>>1]&255|(HEAP16[(f+((d&255)<<1)|0)>>1]&255)<<8|(HEAP16[(k+((d&255)<<1)|0)>>1]&255)<<16|-16777216;n=h;h=n+4|0;HEAP32[n>>2]=d;d=l>>1&1;d=HEAP16[(g+((d&255)<<1)|0)>>1]&255|(HEAP16[(f+((d&255)<<1)|0)>>1]&255)<<8|(HEAP16[(k+((d&255)<<1)|0)>>1]&255)<<16|-16777216;n=h;h=n+4|0;HEAP32[n>>2]=d;d=l&1;d=HEAP16[(g+((d&255)<<1)|0)>>1]&255|(HEAP16[(f+((d&255)<<1)|0)>>1]&255)<<8|(HEAP16[(k+((d&255)<<
1)|0)>>1]&255)<<16|-16777216;n=h;h=n+4|0;HEAP32[n>>2]=d;d=10;break;case 7:d=(l&255)>>6&255;d=HEAP16[(g+((d&255)<<1)|0)>>1]&255|(HEAP16[(f+((d&255)<<1)|0)>>1]&255)<<8|(HEAP16[(k+((d&255)<<1)|0)>>1]&255)<<16|-16777216;n=h;h=n+4|0;HEAP32[n>>2]=d;d=l>>4&3;d=HEAP16[(g+((d&255)<<1)|0)>>1]&255|(HEAP16[(f+((d&255)<<1)|0)>>1]&255)<<8|(HEAP16[(k+((d&255)<<1)|0)>>1]&255)<<16|-16777216;n=h;h=n+4|0;HEAP32[n>>2]=d;d=l>>2&3;d=HEAP16[(g+((d&255)<<1)|0)>>1]&255|(HEAP16[(f+((d&255)<<1)|0)>>1]&255)<<8|(HEAP16[(k+((d&
255)<<1)|0)>>1]&255)<<16|-16777216;n=h;h=n+4|0;HEAP32[n>>2]=d;d=l&3;d=HEAP16[(g+((d&255)<<1)|0)>>1]&255|(HEAP16[(f+((d&255)<<1)|0)>>1]&255)<<8|(HEAP16[(k+((d&255)<<1)|0)>>1]&255)<<16|-16777216;n=h;h=n+4|0;HEAP32[n>>2]=d;d=10;break;case 8:d=(l&255)>>4&255;d=HEAP16[(g+((d&255)<<1)|0)>>1]&255|(HEAP16[(f+((d&255)<<1)|0)>>1]&255)<<8|(HEAP16[(k+((d&255)<<1)|0)>>1]&255)<<16|-16777216;n=h;h=n+4|0;HEAP32[n>>2]=d;d=l&15;d=HEAP16[(g+((d&255)<<1)|0)>>1]&255|(HEAP16[(f+((d&255)<<1)|0)>>1]&255)<<8|(HEAP16[(k+((d&
255)<<1)|0)>>1]&255)<<16|-16777216;n=h;h=n+4|0;HEAP32[n>>2]=d;d=10;break;case 9:d=l&255;d=HEAP16[(g+((d&255)<<1)|0)>>1]&255|(HEAP16[(f+((d&255)<<1)|0)>>1]&255)<<8|(HEAP16[(k+((d&255)<<1)|0)>>1]&255)<<16|-16777216;n=h;h=n+4|0;HEAP32[n>>2]=d;d=10;break;case 10:d=11;break;case 11:l=l+1|0;d=4;break;case 12:a=1;d=13;break;case 13:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _makebwmap(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e,g,f,k,h;b=m;e=HEAP32[(b+56|0)>>2];g=HEAP16[(b+24|0)>>1]&65535;f=8/(g|0)&-1;d=0==(f|0)?2:3;break;case 2:f=1;d=3;break;case 3:d=__TIFFmalloc((f<<8<<2)+1024|0);HEAP32[(b+60|0)>>2]=d;d=0==(HEAP32[(b+60|0)>>2]|0)?4:5;break;case 4:a=HEAP32[(HEAP32[(b|0)>>2]+628|0)>>2];d=_TIFFFileName(HEAP32[(b|0)>>2]);_TIFFErrorExt(a,d,29384,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<
3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=15;break;case 5:h=HEAP32[(b+60|0)>>2]+1024|0;k=0;d=6;break;case 6:d=256>(k|0)?7:14;break;case 7:HEAP32[(HEAP32[(b+60|0)>>2]+(k<<2)|0)>>2]=h;d=g;d=1==(d|0)?8:2==(d|0)?9:4==(d|0)?10:8==(d|0)|16==(d|0)?11:12;break;case 8:var d=HEAP8[e+(k>>7)|0],d=d&255|(d&255)<<8|(d&255)<<16|-16777216,l=h;h=l+4|0;HEAP32[l>>2]=d;d=HEAP8[e+(k>>6&1)|0];d=d&255|(d&255)<<8|(d&255)<<16|-16777216;l=h;h=l+4|0;HEAP32[l>>2]=d;d=HEAP8[e+(k>>5&1)|0];d=d&
255|(d&255)<<8|(d&255)<<16|-16777216;l=h;h=l+4|0;HEAP32[l>>2]=d;d=HEAP8[e+(k>>4&1)|0];d=d&255|(d&255)<<8|(d&255)<<16|-16777216;l=h;h=l+4|0;HEAP32[l>>2]=d;d=HEAP8[e+(k>>3&1)|0];d=d&255|(d&255)<<8|(d&255)<<16|-16777216;l=h;h=l+4|0;HEAP32[l>>2]=d;d=HEAP8[e+(k>>2&1)|0];d=d&255|(d&255)<<8|(d&255)<<16|-16777216;l=h;h=l+4|0;HEAP32[l>>2]=d;d=HEAP8[e+(k>>1&1)|0];d=d&255|(d&255)<<8|(d&255)<<16|-16777216;l=h;h=l+4|0;HEAP32[l>>2]=d;d=HEAP8[e+(k&1)|0];d=d&255|(d&255)<<8|(d&255)<<16|-16777216;l=h;h=l+4|0;HEAP32[l>>
2]=d;d=12;break;case 9:d=HEAP8[e+(k>>6)|0];d=d&255|(d&255)<<8|(d&255)<<16|-16777216;l=h;h=l+4|0;HEAP32[l>>2]=d;d=HEAP8[e+(k>>4&3)|0];d=d&255|(d&255)<<8|(d&255)<<16|-16777216;l=h;h=l+4|0;HEAP32[l>>2]=d;d=HEAP8[e+(k>>2&3)|0];d=d&255|(d&255)<<8|(d&255)<<16|-16777216;l=h;h=l+4|0;HEAP32[l>>2]=d;d=HEAP8[e+(k&3)|0];d=d&255|(d&255)<<8|(d&255)<<16|-16777216;l=h;h=l+4|0;HEAP32[l>>2]=d;d=12;break;case 10:d=HEAP8[e+(k>>4)|0];d=d&255|(d&255)<<8|(d&255)<<16|-16777216;l=h;h=l+4|0;HEAP32[l>>2]=d;d=HEAP8[e+(k&15)|
0];d=d&255|(d&255)<<8|(d&255)<<16|-16777216;l=h;h=l+4|0;HEAP32[l>>2]=d;d=12;break;case 11:d=HEAP8[e+k|0];d=d&255|(d&255)<<8|(d&255)<<16|-16777216;l=h;h=l+4|0;HEAP32[l>>2]=d;d=12;break;case 12:d=13;break;case 13:k=k+1|0;d=6;break;case 14:a=1;d=15;break;case 15:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _LogL16toY(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b,e;a=m;b=a&32767;d=0!=(b|0)?3:2;break;case 2:c=0;d=7;break;case 3:e=Math.exp(0.0027076061740622863*((b|0)+0.5)-44.3614195558365);d=0!=(a&32768|0)?5:4;break;case 4:var g=e,d=6;break;case 5:g=-e;d=6;break;case 6:c=g;d=7;break;case 7:return c;default:assert(0,"bad label: "+d)}}
function _LogL16fromY(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e;b=m;e=d;c=1.8371976E19<=b?2:3;break;case 2:a=32767;c=16;break;case 3:c=-1.8371976E19>=b?4:5;break;case 4:a=65535;c=16;break;case 5:c=5.4136769E-20<b?6:10;break;case 6:c=0==(e|0)?7:8;break;case 7:var g=256*(1.4426950408889634*Math.log(b)+64)&-1,c=9;break;case 8:g=256*(1.4426950408889634*Math.log(b)+64);c=4.656612875245797E-10*(_rand()|0);g=g+c-0.5&-1;c=9;break;case 9:a=g;c=16;break;case 10:c=-5.4136769E-20>b?11:15;break;case 11:c=
0==(e|0)?12:13;break;case 12:var f=256*(1.4426950408889634*Math.log(-b)+64)&-1,c=14;break;case 13:f=256*(1.4426950408889634*Math.log(-b)+64);c=4.656612875245797E-10*(_rand()|0);f=f+c-0.5&-1;c=14;break;case 14:a=-32768|f;c=16;break;case 15:a=0;c=16;break;case 16:return a;default:assert(0,"bad label: "+c)}}
function _XYZtoRGB24(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e,g,c=m;a=d;b=2.69*HEAPF32[(c|0)>>2]+-1.276*HEAPF32[(c+4|0)>>2]+-0.414*HEAPF32[(c+8|0)>>2];e=-1.022*HEAPF32[(c|0)>>2]+1.978*HEAPF32[(c+4|0)>>2]+0.044*HEAPF32[(c+8|0)>>2];g=0.061*HEAPF32[(c|0)>>2]+-0.224*HEAPF32[(c+4|0)>>2]+1.163*HEAPF32[(c+8|0)>>2];c=0>=b?2:3;break;case 2:var f=0,c=7;break;case 3:c=1<=b?4:5;break;case 4:var k=255,c=6;break;case 5:k=256*Math.sqrt(b)&-1;c=6;break;case 6:f=k;c=7;break;case 7:HEAP8[a|0]=f&255;c=0>=e?
8:9;break;case 8:var h=0,c=13;break;case 9:c=1<=e?10:11;break;case 10:var l=255,c=12;break;case 11:l=256*Math.sqrt(e)&-1;c=12;break;case 12:h=l;c=13;break;case 13:HEAP8[a+1|0]=h&255;c=0>=g?14:15;break;case 14:var n=0,c=19;break;case 15:c=1<=g?16:17;break;case 16:var p=255,c=18;break;case 17:p=256*Math.sqrt(g)&-1;c=18;break;case 18:n=p;c=19;break;case 19:HEAP8[a+2|0]=n&255;return;default:assert(0,"bad label: "+c)}}
function _LogL10toY(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;a=m;d=0==(a|0)?2:3;break;case 2:c=0;d=4;break;case 3:c=Math.exp(0.010830424696249145*((a|0)+0.5)-8.317766166719343);d=4;break;case 4:return c;default:assert(0,"bad label: "+d)}}
function _LogL10fromY(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e;b=m;e=d;c=15.742<=b?2:3;break;case 2:a=1023;c=9;break;case 3:c=2.4283E-4>=b?4:5;break;case 4:a=0;c=9;break;case 5:c=0==(e|0)?6:7;break;case 6:var g=64*(1.4426950408889634*Math.log(b)+12)&-1,c=8;break;case 7:c=64*(1.4426950408889634*Math.log(b)+12);g=4.656612875245797E-10*(_rand()|0);g=c+g-0.5&-1;c=8;break;case 8:a=g;c=9;break;case 9:return a;default:assert(0,"bad label: "+c)}}
function _uv_encode(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k,h;e=m;g=d;f=c;a=0.016939999535679817>g?2:3;break;case 2:b=_oog_encode(e,g);a=16;break;case 3:a=0==(f|0)?4:5;break;case 4:var l=285.7142768952314*(g-0.016939999535679817)&-1,a=6;break;case 5:l=285.7142768952314*(g-0.016939999535679817);a=4.656612875245797E-10*(_rand()|0);l=l+a-0.5&-1;a=6;break;case 6:k=l;a=163<=(k|0)?7:8;break;case 7:b=_oog_encode(e,g);a=16;break;case 8:a=e<HEAPF32[(392+(k<<3)|0)>>2]?9:10;break;case 9:b=_oog_encode(e,
g);a=16;break;case 10:a=0==(f|0)?11:12;break;case 11:var n=285.7142768952314*(e-HEAPF32[(392+(k<<3)|0)>>2])&-1,a=13;break;case 12:n=285.7142768952314*(e-HEAPF32[(392+(k<<3)|0)>>2]);a=4.656612875245797E-10*(_rand()|0);n=n+a-0.5&-1;a=13;break;case 13:h=n;a=(h|0)>=(HEAP16[((392+(k<<3)|0)+4|0)>>1]<<16>>16|0)?14:15;break;case 14:b=_oog_encode(e,g);a=16;break;case 15:b=(HEAP16[((392+(k<<3)|0)+6|0)>>1]<<16>>16)+h|0;a=16;break;case 16:return b;default:assert(0,"bad label: "+a)}}
function _uv_decode(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k,h,l,n;e=m;g=d;f=c;a=0>(f|0)?3:2;break;case 2:a=16289<=(f|0)?3:4;break;case 3:b=-1;a=14;break;case 4:h=0;k=163;a=5;break;case 5:a=1<(k-h|0)?6:13;break;case 6:n=(h+k|0)>>1;l=f-(HEAP16[((392+(n<<3)|0)+6|0)>>1]<<16>>16)|0;a=0<(l|0)?7:8;break;case 7:h=n;a=12;break;case 8:a=0>(l|0)?9:10;break;case 9:k=n;a=11;break;case 10:h=n;a=13;break;case 11:a=12;break;case 12:a=5;break;case 13:n=h;l=f-(HEAP16[((392+(n<<3)|0)+6|0)>>1]<<16>>16)|
0;HEAPF64[e>>3]=HEAPF32[(392+(n<<3)|0)>>2]+0.0035000001080334187*((l|0)+0.5);HEAPF64[g>>3]=0.0035000001080334187*((n|0)+0.5)+0.016939999535679817;b=0;a=14;break;case 14:return b;default:assert(0,"bad label: "+a)}}
function _oog_encode(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+800|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e,g,f=a,k,h,l,n,p,q,t;b=m;e=d;c=0!=(HEAP32[37248]|0)?39:2;break;case 2:g=100;c=3;break;case 3:c=g;g=c-1|0;c=0!=(c|0)?4:5;break;case 4:HEAPF64[(f+(g<<3)|0)>>3]=2;c=3;break;case 5:n=163;c=6;break;case 6:c=n;n=c-1|0;c=0!=(c|0)?7:18;break;case 7:k=0.0035000001080334187*((n|0)+0.5)+0.016939999535679817;p=(HEAP16[((392+(n<<3)|0)+4|0)>>1]<<16>>16)-1|0;c=162==(n|0)?10:
8;break;case 8:c=0==(n|0)?10:9;break;case 9:c=0>=(p|0)?10:11;break;case 10:p=1;c=11;break;case 11:l=(HEAP16[((392+(n<<3)|0)+4|0)>>1]<<16>>16)-1|0;c=12;break;case 12:c=0<=(l|0)?13:17;break;case 13:g=HEAPF32[(392+(n<<3)|0)>>2]+0.0035000001080334187*((l|0)+0.5);h=15.915494277358546*Math.atan2(k-0.473684211,g-0.210526316)+50;g=h&-1;h=Math.abs(h-((g|0)+0.5));c=h<HEAPF64[(f+(g<<3)|0)>>3]?14:15;break;case 14:HEAP32[(148592+(g<<2)|0)>>2]=(HEAP16[((392+(n<<3)|0)+6|0)>>1]<<16>>16)+l|0;HEAPF64[(f+(g<<3)|0)>>
3]=h;c=15;break;case 15:c=16;break;case 16:l=l-p|0;c=12;break;case 17:c=6;break;case 18:g=100;c=19;break;case 19:c=g;g=c-1|0;c=0!=(c|0)?20:38;break;case 20:c=1.5<HEAPF64[(f+(g<<3)|0)>>3]?21:37;break;case 21:q=1;c=22;break;case 22:c=50>(q|0)?23:27;break;case 23:c=1.5>HEAPF64[(f+(((g+q|0)%100&-1)<<3)|0)>>3]?24:25;break;case 24:c=27;break;case 25:c=26;break;case 26:q=q+1|0;c=22;break;case 27:t=1;c=28;break;case 28:c=50>(t|0)?29:33;break;case 29:c=1.5>HEAPF64[(f+((((g+100|0)-t|0)%100&-1)<<3)|0)>>3]?30:
31;break;case 30:c=33;break;case 31:c=32;break;case 32:t=t+1|0;c=28;break;case 33:c=(q|0)<(t|0)?34:35;break;case 34:HEAP32[(148592+(g<<2)|0)>>2]=HEAP32[(148592+(((g+q|0)%100&-1)<<2)|0)>>2];c=36;break;case 35:HEAP32[(148592+(g<<2)|0)>>2]=HEAP32[(148592+((((g+100|0)-t|0)%100&-1)<<2)|0)>>2];c=36;break;case 36:c=37;break;case 37:c=19;break;case 38:HEAP32[37248]=1;c=39;break;case 39:return g=15.915494277358546*Math.atan2(e-0.473684211,b-0.210526316)+50&-1,b=HEAP32[(148592+(g<<2)|0)>>2],STACKTOP=a,b;default:assert(0,
"bad label: "+c)}}
function _LogLuv24toXYZ(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e,g,f=a,k=a+8,h;b=m;e=d;g=_LogL10toY(b>>>14&1023);c=0>=g?2:3;break;case 2:HEAPF32[(e+8|0)>>2]=0;HEAPF32[(e+4|0)>>2]=0;HEAPF32[(e|0)>>2]=0;c=6;break;case 3:c=b&16383;c=0>(_uv_decode(f,k,c)|0)?4:5;break;case 4:HEAPF64[f>>3]=0.210526316;HEAPF64[k>>3]=0.473684211;c=5;break;case 5:h=1/(6*HEAPF64[f>>3]-16*HEAPF64[k>>3]+12);c=9*HEAPF64[f>>3]*h;h*=4*HEAPF64[k>>3];HEAPF32[(e|
0)>>2]=c/h*g;HEAPF32[(e+4|0)>>2]=g;HEAPF32[(e+8|0)>>2]=(1-c-h)/h*g;c=6;break;case 6:STACKTOP=a;return;default:assert(0,"bad label: "+c)}}
function _LogLuv24fromXYZ(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e,g,f,k,h;a=m;b=d;e=_LogL10fromY(HEAPF32[(a+4|0)>>2],b);h=HEAPF32[(a|0)>>2]+15*HEAPF32[(a+4|0)>>2]+3*HEAPF32[(a+8|0)>>2];c=0!=(e|0)?2:3;break;case 2:c=0>=h?3:4;break;case 3:f=0.210526316;k=0.473684211;c=5;break;case 4:f=4*HEAPF32[(a|0)>>2]/h;k=9*HEAPF32[(a+4|0)>>2]/h;c=5;break;case 5:g=_uv_encode(f,k,b);c=0>(g|0)?6:7;break;case 6:g=_uv_encode(0.210526316,0.473684211,0);c=7;break;case 7:return e<<14|g;default:assert(0,"bad label: "+
c)}}function _LogLuv32toXYZ(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e,g,f;a=m;b=d;e=_LogL16toY(a>>16);c=0>=e?2:3;break;case 2:HEAPF32[(b+8|0)>>2]=0;HEAPF32[(b+4|0)>>2]=0;HEAPF32[(b|0)>>2]=0;c=4;break;case 3:g=0.0024390243902439024*(((a>>>8&255)>>>0)+0.5);c=0.0024390243902439024*(((a&255)>>>0)+0.5);f=1/(6*g-16*c+12);g=9*g*f;c=4*c*f;HEAPF32[(b|0)>>2]=g/c*e;HEAPF32[(b+4|0)>>2]=e;HEAPF32[(b+8|0)>>2]=(1-g-c)/c*e;c=4;break;case 4:return;default:assert(0,"bad label: "+c)}}
function _LogLuv32fromXYZ(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e,g,f,k,h,l;a=m;b=d;e=_LogL16fromY(HEAPF32[(a+4|0)>>2],b);l=HEAPF32[(a|0)>>2]+15*HEAPF32[(a+4|0)>>2]+3*HEAPF32[(a+8|0)>>2];c=0!=(e|0)?2:3;break;case 2:c=0>=l?3:4;break;case 3:k=0.210526316;h=0.473684211;c=5;break;case 4:k=4*HEAPF32[(a|0)>>2]/l;h=9*HEAPF32[(a+4|0)>>2]/l;c=5;break;case 5:c=0>=k?6:7;break;case 6:g=0;c=11;break;case 7:c=0==(b|0)?8:9;break;case 8:var n=410*k&-1,c=10;break;case 9:n=410*k;c=4.656612875245797E-10*(_rand()|
0);n=n+c-0.5&-1;c=10;break;case 10:g=n;c=11;break;case 11:c=255<g>>>0?12:13;break;case 12:g=255;c=13;break;case 13:c=0>=h?14:15;break;case 14:f=0;c=19;break;case 15:c=0==(b|0)?16:17;break;case 16:var p=410*h&-1,c=18;break;case 17:p=410*h;c=4.656612875245797E-10*(_rand()|0);p=p+c-0.5&-1;c=18;break;case 18:f=p;c=19;break;case 19:c=255<f>>>0?20:21;break;case 20:f=255;c=21;break;case 21:return e<<16|g<<8|f;default:assert(0,"bad label: "+c)}}function __logLuvNop(m,d,c){}
function _LogLuvFixupTags(m){return 1}function _LogLuvClose(m){m=m+40|0;HEAP16[(m+58|0)>>1]=(32844==(HEAP16[(m+50|0)>>1]&65535|0)?1:3)&65535;HEAP16[(m+44|0)>>1]=16;HEAP16[(m+46|0)>>1]=2}
function _LogLuvSetupDecode(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e,g;b=m;e=HEAP32[(b+576|0)>>2];g=b+40|0;HEAP32[(b+652|0)>>2]=376;d=HEAP16[(g+50|0)>>1]&65535;d=32845==(d|0)?2:32844==(d|0)?16:22;break;case 2:d=0!=(_LogLuvInitState(b)|0)?4:3;break;case 3:d=23;break;case 4:d=34677==(HEAP16[(g+48|0)>>1]&65535|0)?5:10;break;case 5:HEAP32[(b+532|0)>>2]=284;d=HEAP32[(e|0)>>2];d=0==(d|0)?6:1==(d|0)?7:3==(d|0)?8:9;break;case 6:HEAP32[(e+20|0)>>2]=162;
d=9;break;case 7:HEAP32[(e+20|0)>>2]=262;d=9;break;case 8:HEAP32[(e+20|0)>>2]=314;d=9;break;case 9:d=15;break;case 10:HEAP32[(b+532|0)>>2]=342;d=HEAP32[(e|0)>>2];d=0==(d|0)?11:1==(d|0)?12:3==(d|0)?13:14;break;case 11:HEAP32[(e+20|0)>>2]=300;d=14;break;case 12:HEAP32[(e+20|0)>>2]=266;d=14;break;case 13:HEAP32[(e+20|0)>>2]=116;d=14;break;case 14:d=15;break;case 15:a=1;d=24;break;case 16:d=0!=(_LogL16InitState(b)|0)?18:17;break;case 17:d=23;break;case 18:HEAP32[(b+532|0)>>2]=316;d=HEAP32[(e|0)>>2];d=
0==(d|0)?19:3==(d|0)?20:21;break;case 19:HEAP32[(e+20|0)>>2]=348;d=21;break;case 20:HEAP32[(e+20|0)>>2]=290;d=21;break;case 21:a=1;d=24;break;case 22:d=HEAP16[(g+50|0)>>1]&65535;_TIFFErrorExt(HEAP32[(b+628|0)>>2],148096,23744,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=d,HEAP32[tempInt+8>>2]=23104,tempInt));d=23;break;case 23:a=0;d=24;break;case 24:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _LogLuvSetupEncode(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e,g;b=m;e=HEAP32[(b+576|0)>>2];g=b+40|0;d=HEAP16[(g+50|0)>>1]&65535;d=32845==(d|0)?2:32844==(d|0)?18:25;break;case 2:d=0!=(_LogLuvInitState(b)|0)?4:3;break;case 3:d=26;break;case 4:d=34677==(HEAP16[(g+48|0)>>1]&65535|0)?5:11;break;case 5:HEAP32[(b+536|0)>>2]=370;d=HEAP32[(e|0)>>2];d=0==(d|0)?6:1==(d|0)?7:2==(d|0)?8:9;break;case 6:HEAP32[(e+20|0)>>2]=136;d=10;break;case 7:HEAP32[(e+
20|0)>>2]=130;d=10;break;case 8:d=10;break;case 9:d=27;break;case 10:d=17;break;case 11:HEAP32[(b+536|0)>>2]=22;d=HEAP32[(e|0)>>2];d=0==(d|0)?12:1==(d|0)?13:2==(d|0)?14:15;break;case 12:HEAP32[(e+20|0)>>2]=228;d=16;break;case 13:HEAP32[(e+20|0)>>2]=398;d=16;break;case 14:d=16;break;case 15:d=27;break;case 16:d=17;break;case 17:d=26;break;case 18:d=0!=(_LogL16InitState(b)|0)?20:19;break;case 19:d=26;break;case 20:HEAP32[(b+536|0)>>2]=70;d=HEAP32[(e|0)>>2];d=0==(d|0)?21:1==(d|0)?22:23;break;case 21:HEAP32[(e+
20|0)>>2]=302;d=24;break;case 22:d=24;break;case 23:d=27;break;case 24:d=26;break;case 25:d=HEAP16[(g+50|0)>>1]&65535;_TIFFErrorExt(HEAP32[(b+628|0)>>2],148072,23744,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=d,HEAP32[tempInt+8>>2]=23104,tempInt));d=26;break;case 26:a=1;d=28;break;case 27:a=32844==(HEAP16[(g+50|0)>>1]&65535|0)?41152:40512;_TIFFErrorExt(HEAP32[(b+628|0)>>2],148072,41784,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<
(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,tempInt));a=0;d=28;break;case 28:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _LogLuvVGetField(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k;e=m;g=d;f=c;k=HEAP32[(e+576|0)>>2];a=65560==(g|0)?2:3;break;case 2:a=HEAP32[(k|0)>>2];b=f;b=(tempInt=HEAP32[b+4>>2],HEAP32[b+4>>2]=tempInt+8,HEAP32[HEAP32[b>>2]+tempInt>>2]);HEAP32[b>>2]=a;b=1;a=4;break;case 3:b=FUNCTION_TABLE[HEAP32[(k+24|0)>>2]](e,g,f);a=4;break;case 4:return b;default:assert(0,"bad label: "+a)}}
function _TIFFInitSGILog(m,d){var c=0,a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e,g;e=m;g=d;c=34677==(g|0)?3:2;break;case 2:c=34676==(g|0)?3:4;break;case 3:c=5;break;case 4:throw ___assert_func(28232,1620,44112,38936),"Reached an unreachable!";case 5:c=0!=(__TIFFMergeFields(e,148136,2)|0)?7:6;break;case 6:_TIFFErrorExt(HEAP32[(e+628|0)>>2],46672,32872,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>
2]=0,tempInt));b=0;c=11;break;case 7:c=__TIFFmalloc(32);HEAP32[(e+576|0)>>2]=c;c=0==(HEAP32[(e+576|0)>>2]|0)?8:9;break;case 8:c=10;break;case 9:b=HEAP32[(e+576|0)>>2];__TIFFmemset(b,0,32);HEAP32[(b|0)>>2]=-1;HEAP32[(b+4|0)>>2]=34677==(g|0)?1:0;HEAP32[(b+20|0)>>2]=166;HEAP32[(e+504|0)>>2]=190;HEAP32[(e+508|0)>>2]=344;HEAP32[(e+540|0)>>2]=212;HEAP32[(e+548|0)>>2]=6;HEAP32[(e+516|0)>>2]=56;HEAP32[(e+544|0)>>2]=380;HEAP32[(e+552|0)>>2]=78;HEAP32[(e+556|0)>>2]=140;HEAP32[(e+564|0)>>2]=306;HEAP32[(b+24|
0)>>2]=HEAP32[((e+668|0)+4|0)>>2];HEAP32[((e+668|0)+4|0)>>2]=152;HEAP32[(b+28|0)>>2]=HEAP32[(e+668|0)>>2];HEAP32[(e+668|0)>>2]=66;b=1;c=11;break;case 10:b=HEAP32[(e|0)>>2];_TIFFErrorExt(HEAP32[(e+628|0)>>2],46672,30408,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,tempInt));b=0;c=11;break;case 11:return e=b,STACKTOP=a,e;default:assert(0,"bad label: "+c)}}
function _LogLuvDecodeStrip(m,d,c,a){for(var b=0,b=1;;)switch(b){case 1:var e,g,f,k,h;e=m;g=d;f=c;k=a;h=_TIFFScanlineSize(e);b=0==((f|0)%(h|0)&-1|0)?2:3;break;case 2:b=4;break;case 3:throw ___assert_func(28232,382,44624,25E3),"Reached an unreachable!";case 4:b=5;break;case 5:if(0!=(f|0))b=6;else var l=0,b=7;break;case 6:l=0!=(FUNCTION_TABLE[HEAP32[(e+532|0)>>2]](e,g,h,k)|0);b=7;break;case 7:b=l?8:9;break;case 8:g=g+h|0;f=f-h|0;b=5;break;case 9:return 0==(f|0)&1;default:assert(0,"bad label: "+b)}}
function _LogLuvDecodeTile(m,d,c,a){for(var b=0,b=1;;)switch(b){case 1:var e,g,f,k,h;e=m;g=d;f=c;k=a;h=_TIFFTileRowSize(e);b=0==((f|0)%(h|0)&-1|0)?2:3;break;case 2:b=4;break;case 3:throw ___assert_func(28232,398,44600,25E3),"Reached an unreachable!";case 4:b=5;break;case 5:if(0!=(f|0))b=6;else var l=0,b=7;break;case 6:l=0!=(FUNCTION_TABLE[HEAP32[(e+532|0)>>2]](e,g,h,k)|0);b=7;break;case 7:b=l?8:9;break;case 8:g=g+h|0;f=f-h|0;b=5;break;case 9:return 0==(f|0)&1;default:assert(0,"bad label: "+b)}}
function _LogLuvEncodeStrip(m,d,c,a){for(var b=0,b=1;;)switch(b){case 1:var e,g,f,k,h;e=m;g=d;f=c;k=a;h=_TIFFScanlineSize(e);b=0==((f|0)%(h|0)&-1|0)?2:3;break;case 2:b=4;break;case 3:throw ___assert_func(28232,647,44544,25E3),"Reached an unreachable!";case 4:b=5;break;case 5:if(0!=(f|0))b=6;else var l=0,b=7;break;case 6:l=1==(FUNCTION_TABLE[HEAP32[(e+536|0)>>2]](e,g,h,k)|0);b=7;break;case 7:b=l?8:9;break;case 8:g=g+h|0;f=f-h|0;b=5;break;case 9:return 0==(f|0)&1;default:assert(0,"bad label: "+b)}}
function _LogLuvEncodeTile(m,d,c,a){for(var b=0,b=1;;)switch(b){case 1:var e,g,f,k,h;e=m;g=d;f=c;k=a;h=_TIFFTileRowSize(e);b=0==((f|0)%(h|0)&-1|0)?2:3;break;case 2:b=4;break;case 3:throw ___assert_func(28232,662,44520,25E3),"Reached an unreachable!";case 4:b=5;break;case 5:if(0!=(f|0))b=6;else var l=0,b=7;break;case 6:l=1==(FUNCTION_TABLE[HEAP32[(e+536|0)>>2]](e,g,h,k)|0);b=7;break;case 7:b=l?8:9;break;case 8:g=g+h|0;f=f-h|0;b=5;break;case 9:return 0==(f|0)&1;default:assert(0,"bad label: "+b)}}
function _LogLuvCleanup(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;c=m;a=HEAP32[(c+576|0)>>2];d=0!=(a|0)?2:3;break;case 2:d=4;break;case 3:throw ___assert_func(28232,1523,44680,26128),"Reached an unreachable!";case 4:HEAP32[((c+668|0)+4|0)>>2]=HEAP32[(a+24|0)>>2];HEAP32[(c+668|0)>>2]=HEAP32[(a+28|0)>>2];d=0!=(HEAP32[(a+12|0)>>2]|0)?5:6;break;case 5:__TIFFfree(HEAP32[(a+12|0)>>2]);d=6;break;case 6:__TIFFfree(a);HEAP32[(c+576|0)>>2]=0;__TIFFSetDefaultCompressionState(c);return;default:assert(0,"bad label: "+
d)}}
function _LogLuvVSetField(m,d,c){var a=0,b=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l,n;g=m;f=d;k=c;h=HEAP32[(g+576|0)>>2];a=f;a=65560==(a|0)?2:65561==(a|0)?12:16;break;case 2:a=k;a=(tempInt=HEAP32[a+4>>2],HEAP32[a+4>>2]=tempInt+8,HEAP32[HEAP32[a>>2]+tempInt>>2]);HEAP32[(h|0)>>2]=a;a=HEAP32[(h|0)>>2];a=0==(a|0)?3:1==(a|0)?4:2==(a|0)?5:3==(a|0)?6:7;break;case 3:l=32;n=3;a=8;break;case 4:l=16;n=2;a=8;break;case 5:l=32;n=1;_TIFFSetField(g,277,(tempInt=STACKTOP,
STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=1,tempInt));a=8;break;case 6:l=8;n=1;a=8;break;case 7:e=HEAP32[(h|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],HEAP32[(g|0)>>2],28512,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=0;a=17;break;case 8:a=l;_TIFFSetField(g,258,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,tempInt));a=n;_TIFFSetField(g,339,(tempInt=
STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,tempInt));a=0!=(HEAP32[(g+12|0)>>2]&1024|0)?9:10;break;case 9:var p=_TIFFTileSize(g),a=11;break;case 10:p=-1;a=11;break;case 11:HEAP32[(g+496|0)>>2]=p;e=_TIFFScanlineSize(g);HEAP32[(g+580|0)>>2]=e;e=1;a=17;break;case 12:a=k;a=(tempInt=HEAP32[a+4>>2],HEAP32[a+4>>2]=tempInt+8,HEAP32[HEAP32[a>>2]+tempInt>>2]);HEAP32[(h+4|0)>>2]=a;a=0!=(HEAP32[(h+4|0)>>2]|0)?13:15;break;case 13:a=1!=(HEAP32[(h+4|0)>>2]|0)?14:15;break;
case 14:e=HEAP32[(h+4|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],148056,27136,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=0;a=17;break;case 15:e=1;a=17;break;case 16:e=FUNCTION_TABLE[HEAP32[(h+28|0)>>2]](g,f,k);a=17;break;case 17:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _Luv24fromXYZ(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f;b=m;e=d;g=c;f=HEAP32[(b+12|0)>>2];a=2;break;case 2:a=g;g=a-1|0;a=0<(a|0)?3:4;break;case 3:var a=_LogLuv24fromXYZ(e,HEAP32[(b+4|0)>>2]),k=f;f=k+4|0;HEAP32[k>>2]=a;e=e+12|0;a=2;break;case 4:return;default:assert(0,"bad label: "+a)}}
function _Luv24fromLuv48(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k,h;b=m;e=d;g=c;f=HEAP32[(b+12|0)>>2];a=2;break;case 2:a=g;g=a-1|0;a=0<(a|0)?3:18;break;case 3:a=0>=(HEAP16[(e|0)>>1]<<16>>16|0)?4:5;break;case 4:k=0;a=15;break;case 5:a=7410<=(HEAP16[(e|0)>>1]<<16>>16|0)?6:7;break;case 6:k=1023;a=14;break;case 7:a=0==(HEAP32[(b+4|0)>>2]|0)?8:9;break;case 8:k=((HEAP16[(e|0)>>1]<<16>>16)-3314|0)>>2;a=13;break;case 9:a=0==(HEAP32[(b+4|0)>>2]|0)?10:11;break;case 10:var l=0.25*((HEAP16[(e|
0)>>1]<<16>>16|0)-3314)&-1,a=12;break;case 11:l=0.25*((HEAP16[(e|0)>>1]<<16>>16|0)-3314);a=4.656612875245797E-10*(_rand()|0);l=l+a-0.5&-1;a=12;break;case 12:k=l;a=13;break;case 13:a=14;break;case 14:a=15;break;case 15:h=_uv_encode(((HEAP16[(e+2|0)>>1]<<16>>16|0)+0.5)/32768,((HEAP16[(e+4|0)>>1]<<16>>16|0)+0.5)/32768,HEAP32[(b+4|0)>>2]);a=0>(h|0)?16:17;break;case 16:h=_uv_encode(0.210526316,0.473684211,0);a=17;break;case 17:var a=k<<14|h,n=f;f=n+4|0;HEAP32[n>>2]=a;e=e+6|0;a=2;break;case 18:return;default:assert(0,
"bad label: "+a)}}
function _LogLuvInitState(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e,g;b=m;e=b+40|0;g=HEAP32[(b+576|0)>>2];d=0!=(g|0)?2:3;break;case 2:d=4;break;case 3:throw ___assert_func(28232,1321,44504,39224),"Reached an unreachable!";case 4:d=32845==(HEAP16[(e+50|0)>>1]&65535|0)?5:6;break;case 5:d=7;break;case 6:throw ___assert_func(28232,1322,44504,35368),"Reached an unreachable!";case 7:d=1!=(HEAP16[(e+86|0)>>1]&65535|0)?8:9;break;case 8:_TIFFErrorExt(HEAP32[(b+628|
0)>>2],148120,34848,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=24;break;case 9:d=-1==(HEAP32[(g|0)>>2]|0)?10:11;break;case 10:d=_LogLuvGuessDataFmt(e);HEAP32[(g|0)>>2]=d;d=11;break;case 11:d=HEAP32[(g|0)>>2];d=0==(d|0)?12:1==(d|0)?13:2==(d|0)?14:3==(d|0)?15:16;break;case 12:HEAP32[(g+8|0)>>2]=12;d=17;break;case 13:HEAP32[(g+8|0)>>2]=6;d=17;break;case 14:HEAP32[(g+8|0)>>2]=4;d=17;break;case 15:HEAP32[(g+
8|0)>>2]=3;d=17;break;case 16:_TIFFErrorExt(HEAP32[(b+628|0)>>2],148120,34272,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=24;break;case 17:d=0!=(HEAP32[(b+12|0)>>2]&1024|0)?18:19;break;case 18:d=_multiply_ms(HEAP32[(e+28|0)>>2],HEAP32[(e+32|0)>>2]);HEAP32[(g+16|0)>>2]=d;d=20;break;case 19:d=_multiply_ms(HEAP32[(e+16|0)>>2],HEAP32[(e+60|0)>>2]);HEAP32[(g+16|0)>>2]=d;d=20;break;case 20:d=0==(_multiply_ms(HEAP32[(g+
16|0)>>2],4)|0)?22:21;break;case 21:d=__TIFFmalloc(HEAP32[(g+16|0)>>2]<<2);HEAP32[(g+12|0)>>2]=d;d=0==(d|0)?22:23;break;case 22:_TIFFErrorExt(HEAP32[(b+628|0)>>2],148120,36064,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=24;break;case 23:a=1;d=24;break;case 24:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _LogLuvEncode24(m,d,c,a){for(var b=0,b=1;;)switch(b){case 1:var e,g,f,k,h,l,n,p,q,t;g=m;f=d;k=c;b=a;h=HEAP32[(g+576|0)>>2];b=0==(b&65535|0)?2:3;break;case 2:b=4;break;case 3:throw ___assert_func(28232,510,44584,39880),"Reached an unreachable!";case 4:b=0!=(h|0)?5:6;break;case 5:b=7;break;case 6:throw ___assert_func(28232,511,44584,39224),"Reached an unreachable!";case 7:n=(k|0)/(HEAP32[(h+8|0)>>2]|0)&-1;b=2==(HEAP32[(h|0)>>2]|0)?8:9;break;case 8:t=f;b=13;break;case 9:t=HEAP32[(h+12|0)>>2];
b=(HEAP32[(h+16|0)>>2]|0)>=(n|0)?10:11;break;case 10:b=12;break;case 11:throw ___assert_func(28232,518,44584,38280),"Reached an unreachable!";case 12:FUNCTION_TABLE[HEAP32[(h+20|0)>>2]](h,f,n);b=13;break;case 13:q=HEAP32[(g+604|0)>>2];p=HEAP32[(g+592|0)>>2]-HEAP32[(g+608|0)>>2]|0;l=n;b=14;break;case 14:b=l;l=b-1|0;b=0!=(b|0)?15:20;break;case 15:b=3>(p|0)?16:19;break;case 16:HEAP32[(g+604|0)>>2]=q;HEAP32[(g+608|0)>>2]=HEAP32[(g+592|0)>>2]-p|0;b=0!=(_TIFFFlushData1(g)|0)?18:17;break;case 17:e=-1;b=
21;break;case 18:q=HEAP32[(g+604|0)>>2];p=HEAP32[(g+592|0)>>2]-HEAP32[(g+608|0)>>2]|0;b=19;break;case 19:var b=HEAP32[t>>2]>>>16&255,r=q;q=r+1|0;HEAP8[r]=b;b=HEAP32[t>>2]>>>8&255;r=q;q=r+1|0;HEAP8[r]=b;b=t;t=b+4|0;b=HEAP32[b>>2]&255;r=q;q=r+1|0;HEAP8[r]=b;p=p-3|0;b=14;break;case 20:HEAP32[(g+604|0)>>2]=q;HEAP32[(g+608|0)>>2]=HEAP32[(g+592|0)>>2]-p|0;e=1;b=21;break;case 21:return e;default:assert(0,"bad label: "+b)}}
function _Luv32fromXYZ(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f;b=m;e=d;g=c;f=HEAP32[(b+12|0)>>2];a=2;break;case 2:a=g;g=a-1|0;a=0<(a|0)?3:4;break;case 3:var a=_LogLuv32fromXYZ(e,HEAP32[(b+4|0)>>2]),k=f;f=k+4|0;HEAP32[k>>2]=a;e=e+12|0;a=2;break;case 4:return;default:assert(0,"bad label: "+a)}}
function _Luv32fromLuv48(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f;b=m;e=d;g=c;f=HEAP32[(b+12|0)>>2];a=0==(HEAP32[(b+4|0)>>2]|0)?2:6;break;case 2:a=3;break;case 3:a=g;g=a-1|0;a=0<(a|0)?4:5;break;case 4:var a=HEAP16[(e|0)>>1]<<16>>16<<16|(410*(HEAP16[(e+2|0)>>1]<<16>>16)&-1)>>>7&65280|(410*(HEAP16[(e+4|0)>>1]<<16>>16)&-1)>>>15&255,k=f;f=k+4|0;HEAP32[k>>2]=a;e=e+6|0;a=3;break;case 5:a=15;break;case 6:a=7;break;case 7:a=g;g=a-1|0;a=0<(a|0)?8:15;break;case 8:var h=HEAP16[(e|0)>>1]<<16>>16<<
16,a=0==(HEAP32[(b+4|0)>>2]|0)?9:10;break;case 9:var l=0.01251220703125*(HEAP16[(e+2|0)>>1]<<16>>16|0)&-1,a=11;break;case 10:l=0.01251220703125*(HEAP16[(e+2|0)>>1]<<16>>16|0);a=4.656612875245797E-10*(_rand()|0);l=l+a-0.5&-1;a=11;break;case 11:var n=h|l<<8&65280,a=0==(HEAP32[(b+4|0)>>2]|0)?12:13;break;case 12:var p=0.01251220703125*(HEAP16[(e+4|0)>>1]<<16>>16|0)&-1,a=14;break;case 13:p=0.01251220703125*(HEAP16[(e+4|0)>>1]<<16>>16|0);a=4.656612875245797E-10*(_rand()|0);p=p+a-0.5&-1;a=14;break;case 14:a=
n|p&255;k=f;f=k+4|0;HEAP32[k>>2]=a;e=e+6|0;a=7;break;case 15:return;default:assert(0,"bad label: "+a)}}
function _LogLuvEncode32(m,d,c,a){for(var b=0,b=1;;)switch(b){case 1:var e,g,f,k,h,l,n,p,q,t,r,s,v,u,w,y;g=m;f=d;k=c;b=a;h=HEAP32[(g+576|0)>>2];u=0;b=0==(b&65535|0)?2:3;break;case 2:b=4;break;case 3:throw ___assert_func(28232,562,44568,39880),"Reached an unreachable!";case 4:b=0!=(h|0)?5:6;break;case 5:b=7;break;case 6:throw ___assert_func(28232,563,44568,39224),"Reached an unreachable!";case 7:q=(k|0)/(HEAP32[(h+8|0)>>2]|0)&-1;b=2==(HEAP32[(h|0)>>2]|0)?8:9;break;case 8:r=f;b=13;break;case 9:r=HEAP32[(h+
12|0)>>2];b=(HEAP32[(h+16|0)>>2]|0)>=(q|0)?10:11;break;case 10:b=12;break;case 11:throw ___assert_func(28232,571,44568,38280),"Reached an unreachable!";case 12:FUNCTION_TABLE[HEAP32[(h+20|0)>>2]](h,f,q);b=13;break;case 13:t=HEAP32[(g+604|0)>>2];v=HEAP32[(g+592|0)>>2]-HEAP32[(g+608|0)>>2]|0;l=32;b=14;break;case 14:l=b=l-8|0;b=0<=(b|0)?15:59;break;case 15:n=0;b=16;break;case 16:b=(n|0)<(q|0)?17:58;break;case 17:b=4>(v|0)?18:21;break;case 18:HEAP32[(g+604|0)>>2]=t;HEAP32[(g+608|0)>>2]=HEAP32[(g+592|
0)>>2]-v|0;b=0!=(_TIFFFlushData1(g)|0)?20:19;break;case 19:e=-1;b=60;break;case 20:t=HEAP32[(g+604|0)>>2];v=HEAP32[(g+592|0)>>2]-HEAP32[(g+608|0)>>2]|0;b=21;break;case 21:w=255<<l;y=n;b=22;break;case 22:b=(y|0)<(q|0)?23:33;break;case 23:s=HEAP32[(r+(y<<2)|0)>>2]&w;u=1;b=24;break;case 24:if(129>(u|0))b=25;else var A=0,b=27;break;case 25:(y+u|0)<(q|0)?b=26:(A=0,b=27);break;case 26:A=(HEAP32[(r+((y+u|0)<<2)|0)>>2]&w|0)==(s|0);b=27;break;case 27:b=A?28:29;break;case 28:u=u+1|0;b=24;break;case 29:b=4<=
(u|0)?30:31;break;case 30:b=33;break;case 31:b=32;break;case 32:y=y+u|0;b=22;break;case 33:b=1<(y-n|0)?34:41;break;case 34:b=4>(y-n|0)?35:41;break;case 35:s=HEAP32[(r+(n<<2)|0)>>2]&w;p=n+1|0;b=36;break;case 36:b=p;p=b+1|0;b=(HEAP32[(r+(b<<2)|0)>>2]&w|0)==(s|0)?37:40;break;case 37:b=(p|0)==(y|0)?38:39;break;case 38:n=((p+126|0)-n|0)&255;b=t;t=b+1|0;HEAP8[b]=n;n=s>>>(l>>>0)&255;b=t;t=b+1|0;HEAP8[b]=n;v=v-2|0;n=y;b=40;break;case 39:b=36;break;case 40:b=41;break;case 41:b=42;break;case 42:b=(n|0)<(y|
0)?43:53;break;case 43:p=b=y-n|0;b=127<(b|0)?44:45;break;case 44:p=127;b=45;break;case 45:b=(v|0)<(p+3|0)?46:49;break;case 46:HEAP32[(g+604|0)>>2]=t;HEAP32[(g+608|0)>>2]=HEAP32[(g+592|0)>>2]-v|0;b=0!=(_TIFFFlushData1(g)|0)?48:47;break;case 47:e=-1;b=60;break;case 48:t=HEAP32[(g+604|0)>>2];v=HEAP32[(g+592|0)>>2]-HEAP32[(g+608|0)>>2]|0;b=49;break;case 49:var b=p&255,z=t;t=z+1|0;HEAP8[z]=b;v=v-1|0;b=50;break;case 50:b=p;p=b-1|0;b=0!=(b|0)?51:52;break;case 51:b=n;n=b+1|0;b=HEAP32[(r+(b<<2)|0)>>2]>>>(l>>>
0)&255;z=t;t=z+1|0;HEAP8[z]=b;v=v-1|0;b=50;break;case 52:b=42;break;case 53:b=4<=(u|0)?54:55;break;case 54:b=(u+126|0)&255;z=t;t=z+1|0;HEAP8[z]=b;b=HEAP32[(r+(y<<2)|0)>>2]>>>(l>>>0)&255;z=t;t=z+1|0;HEAP8[z]=b;v=v-2|0;b=56;break;case 55:u=0;b=56;break;case 56:b=57;break;case 57:n=n+u|0;b=16;break;case 58:b=14;break;case 59:HEAP32[(g+604|0)>>2]=t;HEAP32[(g+608|0)>>2]=HEAP32[(g+592|0)>>2]-v|0;e=1;b=60;break;case 60:return e;default:assert(0,"bad label: "+b)}}
function _multiply_ms(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e;a=m;b=d;e=Math.imul(a,b)|0;c=0!=(a|0)?2:4;break;case 2:c=((e|0)/(a|0)&-1|0)!=(b|0)?3:4;break;case 3:e=0;c=4;break;case 4:return e;default:assert(0,"bad label: "+c)}}
function _LogL16GuessDataFmt(m){for(var d=0,d=1;;)switch(d){case 1:var c,d=m,d=(HEAP16[(d+44|0)>>1]&65535)<<6|(HEAP16[(d+58|0)>>1]&65535)<<3|HEAP16[(d+46|0)>>1]&65535,d=2059==(d|0)?2:1036==(d|0)|1034==(d|0)|1033==(d|0)?3:524==(d|0)|521==(d|0)?4:5;break;case 2:c=0;d=6;break;case 3:c=1;d=6;break;case 4:c=3;d=6;break;case 5:c=-1;d=6;break;case 6:return c;default:assert(0,"bad label: "+d)}}
function _LogLuvGuessDataFmt(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;c=m;d=(HEAP16[(c+44|0)>>1]&65535)<<3|HEAP16[(c+46|0)>>1]&65535;d=259==(d|0)?2:260==(d|0)|257==(d|0)|258==(d|0)?3:132==(d|0)|130==(d|0)|129==(d|0)?4:68==(d|0)|65==(d|0)?5:6;break;case 2:a=0;d=7;break;case 3:a=2;d=7;break;case 4:a=1;d=7;break;case 5:a=3;d=7;break;case 6:a=-1;d=7;break;case 7:d=HEAP16[(c+58|0)>>1]&65535;d=1==(d|0)?8:3==(d|0)?11:14;break;case 8:d=2!=(a|0)?9:10;break;case 9:a=-1;d=10;break;case 10:d=15;break;case 11:d=
2==(a|0)?12:13;break;case 12:a=-1;d=13;break;case 13:d=15;break;case 14:a=-1;d=15;break;case 15:return a;default:assert(0,"bad label: "+d)}}function _L16fromY(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f;b=m;e=d;g=c;f=HEAP32[(b+12|0)>>2];a=2;break;case 2:a=g;g=a-1|0;a=0<(a|0)?3:4;break;case 3:a=e;e=a+4|0;var a=_LogL16fromY(HEAPF32[a>>2],HEAP32[(b+4|0)>>2])&65535,k=f;f=k+2|0;HEAP16[k>>1]=a;a=2;break;case 4:return;default:assert(0,"bad label: "+a)}}
function _LogL16InitState(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e,g;b=m;e=b+40|0;g=HEAP32[(b+576|0)>>2];d=0!=(g|0)?2:3;break;case 2:d=4;break;case 3:throw ___assert_func(28232,1229,44696,39224),"Reached an unreachable!";case 4:d=32844==(HEAP16[(e+50|0)>>1]&65535|0)?5:6;break;case 5:d=7;break;case 6:throw ___assert_func(28232,1230,44696,37544),"Reached an unreachable!";case 7:d=-1==(HEAP32[(g|0)>>2]|0)?8:9;break;case 8:d=_LogL16GuessDataFmt(e);
HEAP32[(g|0)>>2]=d;d=9;break;case 9:d=HEAP32[(g|0)>>2];d=0==(d|0)?10:1==(d|0)?11:3==(d|0)?12:13;break;case 10:HEAP32[(g+8|0)>>2]=4;d=14;break;case 11:HEAP32[(g+8|0)>>2]=2;d=14;break;case 12:HEAP32[(g+8|0)>>2]=1;d=14;break;case 13:_TIFFErrorExt(HEAP32[(b+628|0)>>2],148240,36848,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=21;break;case 14:d=0!=(HEAP32[(b+12|0)>>2]&1024|0)?15:16;break;case 15:d=_multiply_ms(HEAP32[(e+
28|0)>>2],HEAP32[(e+32|0)>>2]);HEAP32[(g+16|0)>>2]=d;d=17;break;case 16:d=_multiply_ms(HEAP32[(e+16|0)>>2],HEAP32[(e+60|0)>>2]);HEAP32[(g+16|0)>>2]=d;d=17;break;case 17:d=0==(_multiply_ms(HEAP32[(g+16|0)>>2],2)|0)?19:18;break;case 18:d=__TIFFmalloc(HEAP32[(g+16|0)>>2]<<1);HEAP32[(g+12|0)>>2]=d;d=0==(d|0)?19:20;break;case 19:_TIFFErrorExt(HEAP32[(b+628|0)>>2],148240,36064,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));
a=0;d=21;break;case 20:a=1;d=21;break;case 21:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _LogL16Encode(m,d,c,a){for(var b=0,b=1;;)switch(b){case 1:var e,g,f,k,h,l,n,p,q,t,r,s,v,u,w,y;g=m;f=d;k=c;b=a;h=HEAP32[(g+576|0)>>2];u=0;b=0==(b&65535|0)?2:3;break;case 2:b=4;break;case 3:throw ___assert_func(28232,422,44712,39880),"Reached an unreachable!";case 4:b=0!=(h|0)?5:6;break;case 5:b=7;break;case 6:throw ___assert_func(28232,423,44712,39224),"Reached an unreachable!";case 7:q=(k|0)/(HEAP32[(h+8|0)>>2]|0)&-1;b=1==(HEAP32[(h|0)>>2]|0)?8:9;break;case 8:r=f;b=13;break;case 9:r=HEAP32[(h+
12|0)>>2];b=(HEAP32[(h+16|0)>>2]|0)>=(q|0)?10:11;break;case 10:b=12;break;case 11:throw ___assert_func(28232,430,44712,38280),"Reached an unreachable!";case 12:FUNCTION_TABLE[HEAP32[(h+20|0)>>2]](h,f,q);b=13;break;case 13:t=HEAP32[(g+604|0)>>2];v=HEAP32[(g+592|0)>>2]-HEAP32[(g+608|0)>>2]|0;l=16;b=14;break;case 14:l=b=l-8|0;b=0<=(b|0)?15:59;break;case 15:n=0;b=16;break;case 16:b=(n|0)<(q|0)?17:58;break;case 17:b=4>(v|0)?18:21;break;case 18:HEAP32[(g+604|0)>>2]=t;HEAP32[(g+608|0)>>2]=HEAP32[(g+592|
0)>>2]-v|0;b=0!=(_TIFFFlushData1(g)|0)?20:19;break;case 19:e=-1;b=60;break;case 20:t=HEAP32[(g+604|0)>>2];v=HEAP32[(g+592|0)>>2]-HEAP32[(g+608|0)>>2]|0;b=21;break;case 21:w=255<<l;y=n;b=22;break;case 22:b=(y|0)<(q|0)?23:33;break;case 23:s=HEAP16[(r+(y<<1)|0)>>1]<<16>>16&w&65535;u=1;b=24;break;case 24:if(129>(u|0))b=25;else var A=0,b=27;break;case 25:(y+u|0)<(q|0)?b=26:(A=0,b=27);break;case 26:A=(HEAP16[(r+((y+u|0)<<1)|0)>>1]<<16>>16&w|0)==(s<<16>>16|0);b=27;break;case 27:b=A?28:29;break;case 28:u=
u+1|0;b=24;break;case 29:b=4<=(u|0)?30:31;break;case 30:b=33;break;case 31:b=32;break;case 32:y=y+u|0;b=22;break;case 33:b=1<(y-n|0)?34:41;break;case 34:b=4>(y-n|0)?35:41;break;case 35:s=HEAP16[(r+(n<<1)|0)>>1]<<16>>16&w&65535;p=n+1|0;b=36;break;case 36:b=p;p=b+1|0;b=(HEAP16[(r+(b<<1)|0)>>1]<<16>>16&w|0)==(s<<16>>16|0)?37:40;break;case 37:b=(p|0)==(y|0)?38:39;break;case 38:n=((p+126|0)-n|0)&255;b=t;t=b+1|0;HEAP8[b]=n;n=s<<16>>16>>(l|0)&255;b=t;t=b+1|0;HEAP8[b]=n;v=v-2|0;n=y;b=40;break;case 39:b=36;
break;case 40:b=41;break;case 41:b=42;break;case 42:b=(n|0)<(y|0)?43:53;break;case 43:p=b=y-n|0;b=127<(b|0)?44:45;break;case 44:p=127;b=45;break;case 45:b=(v|0)<(p+3|0)?46:49;break;case 46:HEAP32[(g+604|0)>>2]=t;HEAP32[(g+608|0)>>2]=HEAP32[(g+592|0)>>2]-v|0;b=0!=(_TIFFFlushData1(g)|0)?48:47;break;case 47:e=-1;b=60;break;case 48:t=HEAP32[(g+604|0)>>2];v=HEAP32[(g+592|0)>>2]-HEAP32[(g+608|0)>>2]|0;b=49;break;case 49:var b=p&255,z=t;t=z+1|0;HEAP8[z]=b;v=v-1|0;b=50;break;case 50:b=p;p=b-1|0;b=0!=(b|0)?
51:52;break;case 51:b=n;n=b+1|0;b=HEAP16[(r+(b<<1)|0)>>1]<<16>>16>>(l|0)&255;z=t;t=z+1|0;HEAP8[z]=b;v=v-1|0;b=50;break;case 52:b=42;break;case 53:b=4<=(u|0)?54:55;break;case 54:b=(u+126|0)&255;z=t;t=z+1|0;HEAP8[z]=b;b=HEAP16[(r+(y<<1)|0)>>1]<<16>>16>>(l|0)&255;z=t;t=z+1|0;HEAP8[z]=b;v=v-2|0;b=56;break;case 55:u=0;b=56;break;case 56:b=57;break;case 57:n=n+u|0;b=16;break;case 58:b=14;break;case 59:HEAP32[(g+604|0)>>2]=t;HEAP32[(g+608|0)>>2]=HEAP32[(g+592|0)>>2]-v|0;e=1;b=60;break;case 60:return e;default:assert(0,
"bad label: "+b)}}
function _Luv32toLuv48(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f;b=m;e=d;g=c;b=HEAP32[(b+12|0)>>2];a=2;break;case 2:a=g;g=a-1|0;a=0<(a|0)?3:4;break;case 3:a=HEAP32[b>>2]>>>16&65535;f=e;e=f+2|0;HEAP16[f>>1]=a;f=0.0024390243902439024*(((HEAP32[b>>2]>>>8&255)>>>0)+0.5);a=0.0024390243902439024*(((HEAP32[b>>2]&255)>>>0)+0.5);f=32768*f&-1;var k=e;e=k+2|0;HEAP16[k>>1]=f;a=32768*a&-1;f=e;e=f+2|0;HEAP16[f>>1]=a;b=b+4|0;a=2;break;case 4:return;default:assert(0,"bad label: "+a)}}
function _Luv24toXYZ(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g;b=m;e=d;g=c;b=HEAP32[(b+12|0)>>2];a=2;break;case 2:a=g;g=a-1|0;a=0<(a|0)?3:4;break;case 3:_LogLuv24toXYZ(HEAP32[b>>2],e);e=e+12|0;b=b+4|0;a=2;break;case 4:return;default:assert(0,"bad label: "+a)}}
function _Luv24toLuv48(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k=b,h=b+8;e=m;g=d;f=c;e=HEAP32[(e+12|0)>>2];a=2;break;case 2:a=f;f=a-1|0;a=0<(a|0)?3:6;break;case 3:var a=((HEAP32[e>>2]>>>12&4093)+13314|0)&65535,l=g;g=l+2|0;HEAP16[l>>1]=a;a=0>(_uv_decode(k,h,HEAP32[e>>2]&16383)|0)?4:5;break;case 4:HEAPF64[k>>3]=0.210526316;HEAPF64[h>>3]=0.473684211;a=5;break;case 5:a=32768*HEAPF64[k>>3]&-1;l=g;g=l+2|0;HEAP16[l>>1]=a;
a=32768*HEAPF64[h>>3]&-1;l=g;g=l+2|0;HEAP16[l>>1]=a;e=e+4|0;a=2;break;case 6:STACKTOP=b;return;default:assert(0,"bad label: "+a)}}
function _Luv24toRGB(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k=b;e=m;g=d;f=c;e=HEAP32[(e+12|0)>>2];a=2;break;case 2:a=f;f=a-1|0;a=0<(a|0)?3:4;break;case 3:a=e;e=a+4|0;_LogLuv24toXYZ(HEAP32[a>>2],k|0);_XYZtoRGB24(k|0,g);g=g+3|0;a=2;break;case 4:STACKTOP=b;return;default:assert(0,"bad label: "+a)}}
function _Luv32toXYZ(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g;b=m;e=d;g=c;b=HEAP32[(b+12|0)>>2];a=2;break;case 2:a=g;g=a-1|0;a=0<(a|0)?3:4;break;case 3:a=b;b=a+4|0;_LogLuv32toXYZ(HEAP32[a>>2],e);e=e+12|0;a=2;break;case 4:return;default:assert(0,"bad label: "+a)}}
function _Luv32toRGB(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k=b;e=m;g=d;f=c;e=HEAP32[(e+12|0)>>2];a=2;break;case 2:a=f;f=a-1|0;a=0<(a|0)?3:4;break;case 3:a=e;e=a+4|0;_LogLuv32toXYZ(HEAP32[a>>2],k|0);_XYZtoRGB24(k|0,g);g=g+3|0;a=2;break;case 4:STACKTOP=b;return;default:assert(0,"bad label: "+a)}}
function _LogLuvDecode24(m,d,c,a){var b=0,e=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h,l,n,p,q,t,r;f=m;k=d;h=c;b=a;l=HEAP32[(f+576|0)>>2];b=0==(b&65535|0)?2:3;break;case 2:b=4;break;case 3:throw ___assert_func(28232,263,44664,39880),"Reached an unreachable!";case 4:b=0!=(l|0)?5:6;break;case 5:b=7;break;case 6:throw ___assert_func(28232,264,44664,39224),"Reached an unreachable!";case 7:q=(h|0)/(HEAP32[(l+8|0)>>2]|0)&-1;b=2==(HEAP32[(l|0)>>2]|0)?8:9;break;case 8:r=
k;b=13;break;case 9:b=(HEAP32[(l+16|0)>>2]|0)>=(q|0)?10:11;break;case 10:b=12;break;case 11:throw ___assert_func(28232,271,44664,38280),"Reached an unreachable!";case 12:r=HEAP32[(l+12|0)>>2];b=13;break;case 13:t=HEAP32[(f+604|0)>>2];n=HEAP32[(f+608|0)>>2];p=0;b=14;break;case 14:if((p|0)<(q|0))b=15;else var s=0,b=16;break;case 15:s=0<(n|0);b=16;break;case 16:b=s?17:19;break;case 17:HEAP32[(r+(p<<2)|0)>>2]=(HEAP8[t|0]&255)<<16|(HEAP8[t+1|0]&255)<<8|HEAP8[t+2|0]&255;t=t+3|0;n=n-3|0;b=18;break;case 18:p=
p+1|0;b=14;break;case 19:HEAP32[(f+604|0)>>2]=t;HEAP32[(f+608|0)>>2]=n;b=(p|0)!=(q|0)?20:21;break;case 20:g=HEAP32[(f+444|0)>>2];var v=q-p|0,b=v,v=0>(v|0)?-1:0;_TIFFErrorExt(HEAP32[(f+628|0)>>2],148224,33736,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=g,HEAP32[tempInt+8>>2]=b,HEAP32[tempInt+16>>2]=v,tempInt));g=0;b=22;break;case 21:FUNCTION_TABLE[HEAP32[(l+20|0)>>2]](l,k,q);g=1;b=22;break;case 22:return m=g,STACKTOP=e,m;default:assert(0,"bad label: "+
b)}}
function _LogLuvDecode32(m,d,c,a){var b=0,e=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h,l,n,p,q,t,r,s,v,u;f=m;k=d;h=c;b=0==(a&65535|0)?2:3;break;case 2:b=4;break;case 3:throw ___assert_func(28232,319,44648,39880),"Reached an unreachable!";case 4:l=HEAP32[(f+576|0)>>2];b=0!=(l|0)?5:6;break;case 5:b=7;break;case 6:throw ___assert_func(28232,321,44648,39224),"Reached an unreachable!";case 7:q=(h|0)/(HEAP32[(l+8|0)>>2]|0)&-1;b=2==(HEAP32[(l|0)>>2]|0)?8:9;break;case 8:r=
k;b=13;break;case 9:b=(HEAP32[(l+16|0)>>2]|0)>=(q|0)?10:11;break;case 10:b=12;break;case 11:throw ___assert_func(28232,328,44648,38280),"Reached an unreachable!";case 12:r=HEAP32[(l+12|0)>>2];b=13;break;case 13:__TIFFmemset(r,0,q<<2);t=HEAP32[(f+604|0)>>2];v=HEAP32[(f+608|0)>>2];n=32;b=14;break;case 14:n=b=n-8|0;b=0<=(b|0)?15:37;break;case 15:p=0;b=16;break;case 16:if((p|0)<(q|0))b=17;else var w=0,b=18;break;case 17:w=0<(v|0);b=18;break;case 18:b=w?19:34;break;case 19:b=128<=(HEAP8[t]&255|0)?20:26;
break;case 20:s=t;t=s+1|0;u=(HEAP8[s]&255)-126|0;s=t;t=s+1|0;s=(HEAP8[s]&255)<<n;v=v-2|0;b=21;break;case 21:b=u;u=b-1|0;if(0!=(b|0))b=22;else var y=0,b=23;break;case 22:y=(p|0)<(q|0);b=23;break;case 23:b=y?24:25;break;case 24:var b=s,A=p;p=A+1|0;A=r+(A<<2)|0;HEAP32[A>>2]|=b;b=21;break;case 25:b=33;break;case 26:u=t;t=u+1|0;u=HEAP8[u]&255;b=27;break;case 27:v=b=v-1|0;if(0!=(b|0))b=28;else var z=0,b=30;break;case 28:b=u;u=b-1|0;0!=(b|0)?b=29:(z=0,b=30);break;case 29:z=(p|0)<(q|0);b=30;break;case 30:b=
z?31:32;break;case 31:b=t;t=b+1|0;b=(HEAP8[b]&255)<<n;A=p;p=A+1|0;A=r+(A<<2)|0;HEAP32[A>>2]|=b;b=27;break;case 32:b=33;break;case 33:b=16;break;case 34:b=(p|0)!=(q|0)?35:36;break;case 35:g=HEAP32[(f+444|0)>>2];b=A=q-p|0;A=0>(A|0)?-1:0;_TIFFErrorExt(HEAP32[(f+628|0)>>2],148208,33736,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=g,HEAP32[tempInt+8>>2]=b,HEAP32[tempInt+16>>2]=A,tempInt));HEAP32[(f+604|0)>>2]=t;HEAP32[(f+608|0)>>2]=v;g=0;b=38;break;case 36:b=
14;break;case 37:FUNCTION_TABLE[HEAP32[(l+20|0)>>2]](l,k,q);HEAP32[(f+604|0)>>2]=t;HEAP32[(f+608|0)>>2]=v;g=1;b=38;break;case 38:return m=g,STACKTOP=e,m;default:assert(0,"bad label: "+b)}}function _LZWFixupTags(m){return 1}
function _L16toY(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g;b=m;e=d;g=c;b=HEAP32[(b+12|0)>>2];a=2;break;case 2:a=g;g=a-1|0;a=0<(a|0)?3:4;break;case 3:a=b;b=a+2|0;var a=_LogL16toY(HEAP16[a>>1]<<16>>16),f=e;e=f+4|0;HEAPF32[f>>2]=a;a=2;break;case 4:return;default:assert(0,"bad label: "+a)}}
function _L16toGry(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f;b=m;e=d;g=c;b=HEAP32[(b+12|0)>>2];a=2;break;case 2:a=g;g=a-1|0;a=0<(a|0)?3:10;break;case 3:f=b;b=f+2|0;f=_LogL16toY(HEAP16[f>>1]<<16>>16);a=0>=f?4:5;break;case 4:var k=0,a=9;break;case 5:a=1<=f?6:7;break;case 6:var h=255,a=8;break;case 7:h=256*Math.sqrt(f)&-1;a=8;break;case 8:k=h;a=9;break;case 9:var a=k&255,l=e;e=l+1|0;HEAP8[l]=a;a=2;break;case 10:return;default:assert(0,"bad label: "+a)}}
function _LogL16Decode(m,d,c,a){var b=0,e=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h,l,n,p,q,t,r,s,v,u;f=m;k=d;h=c;b=a;l=HEAP32[(f+576|0)>>2];b=0==(b&65535|0)?2:3;break;case 2:b=4;break;case 3:throw ___assert_func(28232,197,44728,39880),"Reached an unreachable!";case 4:b=0!=(l|0)?5:6;break;case 5:b=7;break;case 6:throw ___assert_func(28232,198,44728,39224),"Reached an unreachable!";case 7:q=(h|0)/(HEAP32[(l+8|0)>>2]|0)&-1;b=1==(HEAP32[(l|0)>>2]|0)?8:9;break;
case 8:r=k;b=13;break;case 9:b=(HEAP32[(l+16|0)>>2]|0)>=(q|0)?10:11;break;case 10:b=12;break;case 11:throw ___assert_func(28232,205,44728,38280),"Reached an unreachable!";case 12:r=HEAP32[(l+12|0)>>2];b=13;break;case 13:__TIFFmemset(r,0,q<<1);t=HEAP32[(f+604|0)>>2];v=HEAP32[(f+608|0)>>2];n=16;b=14;break;case 14:n=b=n-8|0;b=0<=(b|0)?15:37;break;case 15:p=0;b=16;break;case 16:if((p|0)<(q|0))b=17;else var w=0,b=18;break;case 17:w=0<(v|0);b=18;break;case 18:b=w?19:34;break;case 19:b=128<=(HEAP8[t]&255|
0)?20:26;break;case 20:s=t;t=s+1|0;u=(HEAP8[s]&255)-126|0;s=t;t=s+1|0;s=(HEAP8[s]&255)<<n&65535;v=v-2|0;b=21;break;case 21:b=u;u=b-1|0;if(0!=(b|0))b=22;else var y=0,b=23;break;case 22:y=(p|0)<(q|0);b=23;break;case 23:b=y?24:25;break;case 24:var b=s<<16>>16,A=p;p=A+1|0;A=r+(A<<1)|0;HEAP16[A>>1]=(HEAP16[A>>1]<<16>>16|b)&65535;b=21;break;case 25:b=33;break;case 26:u=t;t=u+1|0;u=HEAP8[u]&255;b=27;break;case 27:v=b=v-1|0;if(0!=(b|0))b=28;else var z=0,b=30;break;case 28:b=u;u=b-1|0;0!=(b|0)?b=29:(z=0,b=
30);break;case 29:z=(p|0)<(q|0);b=30;break;case 30:b=z?31:32;break;case 31:b=t;t=b+1|0;b=(HEAP8[b]&255)<<16>>16<<n;A=p;p=A+1|0;A=r+(A<<1)|0;HEAP16[A>>1]=(HEAP16[A>>1]<<16>>16|b)&65535;b=27;break;case 32:b=33;break;case 33:b=16;break;case 34:b=(p|0)!=(q|0)?35:36;break;case 35:g=HEAP32[(f+444|0)>>2];b=A=q-p|0;A=0>(A|0)?-1:0;_TIFFErrorExt(HEAP32[(f+628|0)>>2],148256,33736,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=g,HEAP32[tempInt+8>>2]=b,HEAP32[tempInt+
16>>2]=A,tempInt));HEAP32[(f+604|0)>>2]=t;HEAP32[(f+608|0)>>2]=v;g=0;b=38;break;case 36:b=14;break;case 37:FUNCTION_TABLE[HEAP32[(l+20|0)>>2]](l,k,q);HEAP32[(f+604|0)>>2]=t;HEAP32[(f+608|0)>>2]=v;g=1;b=38;break;case 38:return m=g,STACKTOP=e,m;default:assert(0,"bad label: "+b)}}
function _TIFFInitLZW(m,d){var c=0,a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e;e=m;c=5==(d|0)?2:3;break;case 2:c=4;break;case 3:throw ___assert_func(27760,1099,44152,38752),"Reached an unreachable!";case 4:c=__TIFFmalloc(160);HEAP32[(e+576|0)>>2]=c;c=0==(HEAP32[(e+576|0)>>2]|0)?5:6;break;case 5:c=7;break;case 6:HEAP32[(HEAP32[(e+576|0)>>2]+124|0)>>2]=0;HEAP32[(HEAP32[(e+576|0)>>2]+104|0)>>2]=0;HEAP32[(HEAP32[(e+576|0)>>2]+152|0)>>2]=0;HEAP32[(HEAP32[(e+576|0)>>
2]+80|0)>>2]=HEAP32[(e+8|0)>>2];HEAP32[(e+504|0)>>2]=372;HEAP32[(e+508|0)>>2]=54;HEAP32[(e+512|0)>>2]=214;HEAP32[(e+532|0)>>2]=48;HEAP32[(e+540|0)>>2]=48;HEAP32[(e+548|0)>>2]=48;HEAP32[(e+516|0)>>2]=28;HEAP32[(e+524|0)>>2]=176;HEAP32[(e+528|0)>>2]=90;HEAP32[(e+536|0)>>2]=236;HEAP32[(e+544|0)>>2]=236;HEAP32[(e+552|0)>>2]=236;HEAP32[(e+564|0)>>2]=296;_TIFFPredictorInit(e);b=1;c=8;break;case 7:_TIFFErrorExt(HEAP32[(e+628|0)>>2],46712,32752,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>
3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=0;c=8;break;case 8:return STACKTOP=a,b;default:assert(0,"bad label: "+c)}}
function _LZWSetupDecode(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e,g;b=m;e=HEAP32[(b+576|0)>>2];d=0==(e|0)?2:5;break;case 2:d=__TIFFmalloc(160);HEAP32[(b+576|0)>>2]=d;d=0==(HEAP32[(b+576|0)>>2]|0)?3:4;break;case 3:_TIFFErrorExt(HEAP32[(b+628|0)>>2],148304,32752,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=16;break;case 4:HEAP32[(HEAP32[(b+576|0)>>2]+
124|0)>>2]=0;HEAP32[(HEAP32[(b+576|0)>>2]+104|0)>>2]=0;_TIFFPredictorInit(b);e=HEAP32[(b+576|0)>>2];d=5;break;case 5:d=0!=(e|0)?6:7;break;case 6:d=8;break;case 7:throw ___assert_func(27760,229,44760,26096),"Reached an unreachable!";case 8:d=0==(HEAP32[(e+124|0)>>2]|0)?9:15;break;case 9:d=__TIFFmalloc(40952);HEAP32[(e+124|0)>>2]=d;d=0==(HEAP32[(e+124|0)>>2]|0)?10:11;break;case 10:_TIFFErrorExt(HEAP32[(b+628|0)>>2],148304,36008,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|
0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=16;break;case 11:g=255;d=12;break;case 12:HEAP8[(HEAP32[(e+124|0)>>2]+(g<<3)|0)+6|0]=g&255;HEAP8[(HEAP32[(e+124|0)>>2]+(g<<3)|0)+7|0]=g&255;HEAP16[((HEAP32[(e+124|0)>>2]+(g<<3)|0)+4|0)>>1]=1;HEAP32[(HEAP32[(e+124|0)>>2]+(g<<3)|0)>>2]=0;d=13;break;case 13:d=g;g=d-1|0;d=0!=(d|0)?12:14;break;case 14:__TIFFmemset(HEAP32[(e+124|0)>>2]+2048|0,0,16);d=15;break;case 15:a=1;d=16;break;case 16:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _LZWPreDecode(m,d){var c=0,a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e;b=m;e=HEAP32[(b+576|0)>>2];c=0!=(e|0)?2:3;break;case 2:c=4;break;case 3:throw ___assert_func(27760,267,44792,26096),"Reached an unreachable!";case 4:c=0==(HEAP32[(e+124|0)>>2]|0)?5:6;break;case 5:FUNCTION_TABLE[HEAP32[(b+508|0)>>2]](b);c=6;break;case 6:c=0==(HEAP8[HEAP32[(b+588|0)>>2]|0]&255|0)?7:11;break;case 7:c=0!=(HEAP8[HEAP32[(b+588|0)>>2]+1|0]&1|0)?8:11;break;case 8:c=0!=(HEAP32[(e+
104|0)>>2]|0)?10:9;break;case 9:_TIFFWarningExt(HEAP32[(b+628|0)>>2],148320,37464,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));HEAP32[(b+532|0)>>2]=8;HEAP32[(b+540|0)>>2]=8;HEAP32[(b+548|0)>>2]=8;FUNCTION_TABLE[HEAP32[(b+508|0)>>2]](b);HEAP32[(e+104|0)>>2]=8;c=10;break;case 10:HEAP16[((e|0)+66|0)>>1]=511;c=12;break;case 11:HEAP16[((e|0)+66|0)>>1]=510;HEAP32[(e+104|0)>>2]=48;c=12;break;case 12:HEAP16[((e|0)+64|
0)>>1]=9;HEAP32[((e|0)+76|0)>>2]=0;HEAP32[((e|0)+72|0)>>2]=0;HEAP32[(e+88|0)>>2]=0;HEAP32[(e+84|0)>>2]=511;c=b=HEAP32[(b+608|0)>>2];b=(0>(b|0)?-1:0)<<3|c>>>29;var g=e+96|0;HEAP32[(g|0)>>2]=c<<3|0;HEAP32[(g+4|0)>>2]=b;HEAP32[(e+116|0)>>2]=HEAP32[(e+124|0)>>2]+2064|0;__TIFFmemset(HEAP32[(e+116|0)>>2],0,38888);HEAP32[(e+112|0)>>2]=HEAP32[(e+124|0)>>2]-8|0;HEAP32[(e+120|0)>>2]=HEAP32[(e+124|0)>>2]+((HEAP32[(e+84|0)>>2]-1|0)<<3)|0;STACKTOP=a;return 1;default:assert(0,"bad label: "+c)}}
function _LZWDecode(m,d,c,a){var b=0;a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var e,g,f,k,h,l,n,p,q,t,r,s,v,u,w,y,A,z,x;g=m;f=d;k=c;h=HEAP32[(g+576|0)>>2];l=k;b=0!=(h|0)?2:3;break;case 2:b=4;break;case 3:throw ___assert_func(27760,372,44840,26096),"Reached an unreachable!";case 4:b=0!=(HEAP32[(h+124|0)>>2]|0)?5:6;break;case 5:b=7;break;case 6:throw ___assert_func(27760,373,44840,23704),"Reached an unreachable!";case 7:b=(l|0)!=(k|0)?8:9;break;case 8:e=0;b=98;break;
case 9:b=0!=(HEAP32[(h+88|0)>>2]|0)?10:30;break;case 10:w=HEAP32[(h+108|0)>>2];x=(HEAP16[(w+4|0)>>1]&65535)-HEAP32[(h+88|0)>>2]|0;b=(x|0)>(l|0)?11:24;break;case 11:b=h+88|0;HEAP32[b>>2]=HEAP32[b>>2]+l|0;b=12;break;case 12:w=HEAP32[(w|0)>>2];b=13;break;case 13:x=b=x-1|0;if((b|0)>(l|0))b=14;else var B=0,b=15;break;case 14:B=0!=(w|0);b=15;break;case 15:b=B?12:16;break;case 16:b=0!=(w|0)?17:23;break;case 17:n=f+l|0;b=18;break;case 18:var b=HEAP8[w+6|0],C=n-1|0;n=C;HEAP8[C]=b;w=HEAP32[(w|0)>>2];b=19;break;
case 19:l=b=l-1|0;if(0!=(b|0))b=20;else var D=0,b=21;break;case 20:D=0!=(w|0);b=21;break;case 21:b=D?18:22;break;case 22:b=23;break;case 23:e=1;b=98;break;case 24:f=f+x|0;l=l-x|0;n=f;b=25;break;case 25:n=n-1|0;b=HEAP8[w+6|0]&255;w=HEAP32[(w|0)>>2];HEAP8[n]=b&255;b=26;break;case 26:x=b=x-1|0;if(0!=(b|0))b=27;else var F=0,b=28;break;case 27:F=0!=(w|0);b=28;break;case 28:b=F?25:29;break;case 29:HEAP32[(h+88|0)>>2]=0;b=30;break;case 30:p=HEAP32[(g+604|0)>>2];r=HEAP16[((h|0)+64|0)>>1]&65535;v=HEAP32[((h|
0)+72|0)>>2];s=HEAP32[((h|0)+76|0)>>2];u=HEAP32[(h+84|0)>>2];z=HEAP32[(h+112|0)>>2];y=HEAP32[(h+116|0)>>2];A=HEAP32[(h+120|0)>>2];b=31;break;case 31:b=0<(l|0)?32:95;break;case 32:var b=h+96|0,C=HEAP32[(b+4|0)>>2],I=r,G=0>(I|0)?-1:0,b=C>>>0<G>>>0|C>>>0==G>>>0&HEAP32[(b|0)>>2]>>>0<I>>>0?33:34;break;case 33:q=HEAP32[(g+452|0)>>2];_TIFFWarningExt(HEAP32[(g+628|0)>>2],148336,23032,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=q,tempInt));q=257;b=37;break;
case 34:v<<=8;b=p;p=b+1|0;v|=HEAP8[b]&255;s=s+8|0;b=(s|0)<(r|0)?35:36;break;case 35:v<<=8;b=p;p=b+1|0;v|=HEAP8[b]&255;s=s+8|0;b=36;break;case 36:q=v>>(s-r|0)&u&65535;s=s-r|0;C=r;b=h+96|0;C=_i64Subtract(HEAP32[(b|0)>>2],HEAP32[(b+4|0)>>2],C,0>(C|0)?-1:0);I=tempRet0;HEAP32[(b|0)>>2]=C;HEAP32[(b+4|0)>>2]=I;b=37;break;case 37:b=257==(q&65535|0)?38:39;break;case 38:b=95;break;case 39:b=256==(q&65535|0)?40:50;break;case 40:y=HEAP32[(h+124|0)>>2]+2064|0;__TIFFmemset(y,0,38888);r=9;u=511;A=(HEAP32[(h+124|
0)>>2]+(u<<3)|0)-8|0;b=h+96|0;C=HEAP32[(b+4|0)>>2];I=r;G=0>(I|0)?-1:0;b=C>>>0<G>>>0|C>>>0==G>>>0&HEAP32[(b|0)>>2]>>>0<I>>>0?41:42;break;case 41:q=HEAP32[(g+452|0)>>2];_TIFFWarningExt(HEAP32[(g+628|0)>>2],148336,23032,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=q,tempInt));q=257;b=45;break;case 42:v<<=8;b=p;p=b+1|0;v|=HEAP8[b]&255;s=s+8|0;b=(s|0)<(r|0)?43:44;break;case 43:v<<=8;b=p;p=b+1|0;v|=HEAP8[b]&255;s=s+8|0;b=44;break;case 44:q=v>>(s-r|0)&u&
65535;s=s-r|0;C=r;b=h+96|0;C=_i64Subtract(HEAP32[(b|0)>>2],HEAP32[(b+4|0)>>2],C,0>(C|0)?-1:0);I=tempRet0;HEAP32[(b|0)>>2]=C;HEAP32[(b+4|0)>>2]=I;b=45;break;case 45:b=257==(q&65535|0)?46:47;break;case 46:b=95;break;case 47:b=256<=(q&65535|0)?48:49;break;case 48:e=HEAP32[(g+444|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],HEAP32[(g|0)>>2],41720,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=0;b=98;break;case 49:z=q&255;b=f;f=b+1|0;HEAP8[b]=
z;l=l-1|0;z=HEAP32[(h+124|0)>>2]+((q&65535)<<3)|0;b=31;break;case 50:w=HEAP32[(h+124|0)>>2]+((q&65535)<<3)|0;b=y>>>0<(HEAP32[(h+124|0)>>2]|0)>>>0?52:51;break;case 51:b=y>>>0>=(HEAP32[(h+124|0)>>2]+40952|0)>>>0?52:53;break;case 52:e=HEAP32[(g+444|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],148336,41096,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=0;b=98;break;case 53:HEAP32[(y|0)>>2]=z;b=HEAP32[(y|0)>>2]>>>0<(HEAP32[(h+124|0)>>2]|0)>>>
0?55:54;break;case 54:b=HEAP32[(y|0)>>2]>>>0>=(HEAP32[(h+124|0)>>2]+40952|0)>>>0?55:56;break;case 55:e=HEAP32[(g+444|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],148336,41096,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=0;b=98;break;case 56:HEAP8[y+7|0]=HEAP8[HEAP32[(y|0)>>2]+7|0];HEAP16[(y+4|0)>>1]=((HEAP16[(HEAP32[(y|0)>>2]+4|0)>>1]&65535)+1|0)&65535;b=w>>>0<y>>>0?57:58;break;case 57:var H=HEAP8[w+7|0]&255,b=59;break;case 58:H=HEAP8[y+
7|0]&255;b=59;break;case 59:HEAP8[y+6|0]=H&255;y=b=y+8|0;b=b>>>0>A>>>0?60:63;break;case 60:r=b=r+1|0;b=12<(b|0)?61:62;break;case 61:r=12;b=62;break;case 62:u=(1<<r)-1|0;A=(HEAP32[(h+124|0)>>2]+(u<<3)|0)-8|0;b=63;break;case 63:z=w;b=256<=(q&65535|0)?64:93;break;case 64:b=0==(HEAP16[(w+4|0)>>1]&65535|0)?65:66;break;case 65:e=HEAP32[(g+444|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],148336,40424,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));
e=0;b=98;break;case 66:b=(HEAP16[(w+4|0)>>1]&65535|0)>(l|0)?67:82;break;case 67:HEAP32[(h+108|0)>>2]=w;b=68;break;case 68:w=HEAP32[(w|0)>>2];b=69;break;case 69:if(0!=(w|0))b=70;else var K=0,b=71;break;case 70:K=(HEAP16[(w+4|0)>>1]&65535|0)>(l|0);b=71;break;case 71:b=K?68:72;break;case 72:b=0!=(w|0)?73:81;break;case 73:HEAP32[(h+88|0)>>2]=l;n=f+l|0;b=74;break;case 74:b=HEAP8[w+6|0];n=C=n-1|0;HEAP8[C]=b;w=HEAP32[(w|0)>>2];b=75;break;case 75:l=b=l-1|0;if(0!=(b|0))b=76;else var J=0,b=77;break;case 76:J=
0!=(w|0);b=77;break;case 77:b=J?74:78;break;case 78:b=0!=(w|0)?79:80;break;case 79:_codeLoop(g,148336);b=80;break;case 80:b=81;break;case 81:b=95;break;case 82:t=HEAP16[(w+4|0)>>1]&65535;n=f+t|0;b=83;break;case 83:n=n-1|0;b=HEAP8[w+6|0]&255;w=HEAP32[(w|0)>>2];HEAP8[n]=b&255;b=84;break;case 84:if(0!=(w|0))b=85;else var E=0,b=86;break;case 85:E=n>>>0>f>>>0;b=86;break;case 86:b=E?83:87;break;case 87:b=0!=(w|0)?88:89;break;case 88:_codeLoop(g,148336);b=95;break;case 89:b=(l|0)>=(t|0)?90:91;break;case 90:b=
92;break;case 91:throw ___assert_func(27760,536,44840,39864),"Reached an unreachable!";case 92:f=f+t|0;l=l-t|0;b=94;break;case 93:b=q&255;C=f;f=C+1|0;HEAP8[C]=b;l=l-1|0;b=94;break;case 94:b=31;break;case 95:HEAP32[(g+604|0)>>2]=p;HEAP16[((h|0)+64|0)>>1]=r&65535;HEAP32[((h|0)+72|0)>>2]=v;HEAP32[((h|0)+76|0)>>2]=s;HEAP32[(h+84|0)>>2]=u;HEAP32[(h+112|0)>>2]=z;HEAP32[(h+116|0)>>2]=y;HEAP32[(h+120|0)>>2]=A;b=0<(l|0)?96:97;break;case 96:e=HEAP32[(g+444|0)>>2];b=C=l;C=0>(C|0)?-1:0;_TIFFErrorExt(HEAP32[(g+
628|0)>>2],148336,39144,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,HEAP32[tempInt+8>>2]=b,HEAP32[tempInt+16>>2]=C,tempInt));e=0;b=98;break;case 97:e=1;b=98;break;case 98:return m=e,STACKTOP=a,m;default:assert(0,"bad label: "+b)}}
function _LZWPostEncode(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b,e,g,f;c=m;a=HEAP32[(c+576|0)>>2];b=HEAP32[(c+604|0)>>2];e=HEAP32[((a|0)+76|0)>>2];g=HEAP32[((a|0)+72|0)>>2];f=HEAP16[((a|0)+64|0)>>1]&65535;d=b>>>0>HEAP32[(a+148|0)>>2]>>>0?2:3;break;case 2:HEAP32[(c+608|0)>>2]=b-HEAP32[(c+588|0)>>2]|0;_TIFFFlushData1(c);b=HEAP32[(c+588|0)>>2];d=3;break;case 3:d=65535!=(HEAP32[(a+128|0)>>2]|0)?4:7;break;case 4:g=g<<f|HEAP32[(a+128|0)>>2];e=e+f|0;var d=g>>(e-8|0)&255,k=b;b=k+1|0;HEAP8[k]=d;e=e-
8|0;d=8<=(e|0)?5:6;break;case 5:d=g>>(e-8|0)&255;k=b;b=k+1|0;HEAP8[k]=d;e=e-8|0;d=6;break;case 6:HEAP32[(a+128|0)>>2]=65535;d=7;break;case 7:g=g<<f|257;e=e+f|0;d=g>>(e-8|0)&255;k=b;b=k+1|0;HEAP8[k]=d;e=e-8|0;d=8<=(e|0)?8:9;break;case 8:d=g>>(e-8|0)&255;k=b;b=k+1|0;HEAP8[k]=d;e=e-8|0;d=9;break;case 9:d=0<(e|0)?10:11;break;case 10:d=g<<(8-e|0)&255;k=b;b=k+1|0;HEAP8[k]=d;d=11;break;case 11:return HEAP32[(c+608|0)>>2]=b-HEAP32[(c+588|0)>>2]|0,1;default:assert(0,"bad label: "+d)}}
function _LZWSetupEncode(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e;b=m;e=HEAP32[(b+576|0)>>2];d=0!=(e|0)?2:3;break;case 2:d=4;break;case 3:throw ___assert_func(27760,781,44744,26096),"Reached an unreachable!";case 4:d=__TIFFmalloc(72008);HEAP32[(e+152|0)>>2]=d;d=0==(HEAP32[(e+152|0)>>2]|0)?5:6;break;case 5:_TIFFErrorExt(HEAP32[(b+628|0)>>2],148288,24936,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|
0))|0,HEAP32[tempInt>>2]=0,tempInt));a=0;d=7;break;case 6:a=1;d=7;break;case 7:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _LZWPreEncode(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b;a=m;b=HEAP32[(a+576|0)>>2];c=0!=(b|0)?2:3;break;case 2:c=4;break;case 3:throw ___assert_func(27760,800,44776,26096),"Reached an unreachable!";case 4:c=0==(HEAP32[(b+152|0)>>2]|0)?5:6;break;case 5:FUNCTION_TABLE[HEAP32[(a+516|0)>>2]](a);c=6;break;case 6:return HEAP16[((b|0)+64|0)>>1]=9,HEAP16[((b|0)+66|0)>>1]=511,HEAP16[((b|0)+68|0)>>1]=258,HEAP32[((b|0)+76|0)>>2]=0,HEAP32[((b|0)+72|0)>>2]=0,HEAP32[(b+132|0)>>2]=1E4,HEAP32[(b+136|
0)>>2]=0,HEAP32[(b+140|0)>>2]=0,HEAP32[(b+144|0)>>2]=0,HEAP32[(b+148|0)>>2]=((HEAP32[(a+588|0)>>2]+HEAP32[(a+592|0)>>2]|0)-1|0)-4|0,_cl_hash(b),HEAP32[(b+128|0)>>2]=65535,1;default:assert(0,"bad label: "+c)}}
function _cl_hash(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;c=HEAP32[(m+152|0)>>2]+72E3|0;a=8993;d=2;break;case 2:a=a-8|0;HEAP32[(c-56|0)>>2]=-1;HEAP32[(c-48|0)>>2]=-1;HEAP32[(c-40|0)>>2]=-1;HEAP32[(c-32|0)>>2]=-1;HEAP32[(c-24|0)>>2]=-1;HEAP32[(c-16|0)>>2]=-1;HEAP32[(c-8|0)>>2]=-1;HEAP32[(c|0)>>2]=-1;c=c-64|0;d=3;break;case 3:d=0<=(a|0)?2:4;break;case 4:a=a+8|0;d=5;break;case 5:d=0<(a|0)?6:8;break;case 6:HEAP32[(c|0)>>2]=-1;d=7;break;case 7:a=a-1|0;c=c-8|0;d=5;break;case 8:return;default:assert(0,
"bad label: "+d)}}function _codeLoop(m,d){var c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;var a=HEAP32[(m+444|0)>>2];_TIFFErrorExt(HEAP32[(m+628|0)>>2],d,38200,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,tempInt));STACKTOP=c}
function _LZWEncode(m,d,c,a){a=0;for(a=1;;)switch(a){case 1:var b,e,g,f,k,h,l,n,p,q,t,r,s,v,u,w,y,A,z,x,B,C;e=m;g=d;f=c;k=HEAP32[(e+576|0)>>2];a=0==(k|0)?2:3;break;case 2:b=0;a=57;break;case 3:a=0!=(HEAP32[(k+152|0)>>2]|0)?4:5;break;case 4:a=6;break;case 5:throw ___assert_func(27760,878,44808,28488),"Reached an unreachable!";case 6:r=HEAP32[(k+140|0)>>2];s=HEAP32[(k+144|0)>>2];v=HEAP32[(k+132|0)>>2];u=HEAP32[((k|0)+72|0)>>2];w=HEAP32[((k|0)+76|0)>>2];y=HEAP16[((k|0)+68|0)>>1]&65535;A=HEAP16[((k|0)+
66|0)>>1]&65535;z=HEAP16[((k|0)+64|0)>>1]&65535;x=HEAP32[(e+604|0)>>2];B=HEAP32[(k+148|0)>>2];q=HEAP32[(k+128|0)>>2]&65535;a=65535==(q&65535|0)?7:11;break;case 7:a=0<(f|0)?8:11;break;case 8:u=u<<z|256;w=w+z|0;a=u>>(w-8|0)&255;var D=x;x=D+1|0;HEAP8[D]=a;w=w-8|0;a=8<=(w|0)?9:10;break;case 9:a=u>>(w-8|0)&255;D=x;x=D+1|0;HEAP8[D]=a;w=w-8|0;a=10;break;case 10:s=s+z|0;q=g;g=q+1|0;q=HEAP8[q]&255;f=f-1|0;r=r+1|0;a=11;break;case 11:a=12;break;case 12:a=0<(f|0)?13:56;break;case 13:h=g;g=h+1|0;p=HEAP8[h]&255;
f=f-1|0;r=r+1|0;h=(p<<12)+(q&65535)|0;n=p<<5^q&65535;l=HEAP32[(k+152|0)>>2]+(n<<3)|0;a=(HEAP32[(l|0)>>2]|0)==(h|0)?14:15;break;case 14:q=HEAP16[(l+4|0)>>1];a=12;break;case 15:a=0<=(HEAP32[(l|0)>>2]|0)?16:26;break;case 16:t=9001-n|0;a=0==(n|0)?17:18;break;case 17:t=1;a=18;break;case 18:a=19;break;case 19:n=a=n-t|0;a=0>(a|0)?20:21;break;case 20:n=n+9001|0;a=21;break;case 21:l=HEAP32[(k+152|0)>>2]+(n<<3)|0;a=(HEAP32[(l|0)>>2]|0)==(h|0)?22:23;break;case 22:q=HEAP16[(l+4|0)>>1];a=55;break;case 23:a=24;
break;case 24:a=0<=(HEAP32[(l|0)>>2]|0)?19:25;break;case 25:a=26;break;case 26:a=x>>>0>B>>>0?27:28;break;case 27:HEAP32[(e+608|0)>>2]=x-HEAP32[(e+588|0)>>2]|0;_TIFFFlushData1(e);x=HEAP32[(e+588|0)>>2];a=28;break;case 28:u=u<<z|q&65535;w=w+z|0;a=u>>(w-8|0)&255;D=x;x=D+1|0;HEAP8[D]=a;w=w-8|0;a=8<=(w|0)?29:30;break;case 29:a=u>>(w-8|0)&255;D=x;x=D+1|0;HEAP8[D]=a;w=w-8|0;a=30;break;case 30:s=s+z|0;q=p&65535;a=y;y=a+1|0;HEAP16[(l+4|0)>>1]=a&65535;HEAP32[(l|0)>>2]=h;a=4094==(y|0)?31:34;break;case 31:_cl_hash(k);
s=r=HEAP32[(k+136|0)>>2]=0;y=258;u=u<<z|256;w=w+z|0;a=u>>(w-8|0)&255;D=x;x=D+1|0;HEAP8[D]=a;w=w-8|0;a=8<=(w|0)?32:33;break;case 32:a=u>>(w-8|0)&255;D=x;x=D+1|0;HEAP8[D]=a;w=w-8|0;a=33;break;case 33:s=s+z|0;z=9;A=511;a=54;break;case 34:a=(y|0)>(A|0)?35:39;break;case 35:z=z+1|0;a=12>=(z|0)?36:37;break;case 36:a=38;break;case 37:throw ___assert_func(27760,976,44808,27096),"Reached an unreachable!";case 38:A=(1<<z)-1|0;a=53;break;case 39:a=(r|0)>=(v|0)?40:52;break;case 40:v=r+1E4|0;a=8388607<(r|0)?41:
45;break;case 41:C=s>>8;a=0==(C|0)?42:43;break;case 42:var F=2147483647;a=44;break;case 43:F=(r|0)/(C|0)&-1;a=44;break;case 44:C=F;a=46;break;case 45:C=(r<<8|0)/(s|0)&-1;a=46;break;case 46:a=(C|0)<=(HEAP32[(k+136|0)>>2]|0)?47:50;break;case 47:_cl_hash(k);s=r=HEAP32[(k+136|0)>>2]=0;y=258;u=u<<z|256;w=w+z|0;a=u>>(w-8|0)&255;D=x;x=D+1|0;HEAP8[D]=a;w=w-8|0;a=8<=(w|0)?48:49;break;case 48:a=u>>(w-8|0)&255;D=x;x=D+1|0;HEAP8[D]=a;w=w-8|0;a=49;break;case 49:s=s+z|0;z=9;A=511;a=51;break;case 50:HEAP32[(k+136|
0)>>2]=C;a=51;break;case 51:a=52;break;case 52:a=53;break;case 53:a=54;break;case 54:a=55;break;case 55:a=12;break;case 56:HEAP32[(k+140|0)>>2]=r;HEAP32[(k+144|0)>>2]=s;HEAP32[(k+132|0)>>2]=v;HEAP32[(k+128|0)>>2]=q&65535;HEAP32[((k|0)+72|0)>>2]=u;HEAP32[((k|0)+76|0)>>2]=w;HEAP16[((k|0)+68|0)>>1]=y&65535;HEAP16[((k|0)+66|0)>>1]=A&65535;HEAP16[((k|0)+64|0)>>1]=z&65535;HEAP32[(e+604|0)>>2]=x;b=1;a=57;break;case 57:return b;default:assert(0,"bad label: "+a)}}
function _LZWCleanup(m){for(var d=0,d=1;;)switch(d){case 1:var c;c=m;_TIFFPredictorCleanup(c);d=0!=(HEAP32[(c+576|0)>>2]|0)?2:3;break;case 2:d=4;break;case 3:throw ___assert_func(27760,1081,44856,30368),"Reached an unreachable!";case 4:d=0!=(HEAP32[(HEAP32[(c+576|0)>>2]+124|0)>>2]|0)?5:6;break;case 5:__TIFFfree(HEAP32[(HEAP32[(c+576|0)>>2]+124|0)>>2]);d=6;break;case 6:d=0!=(HEAP32[(HEAP32[(c+576|0)>>2]+152|0)>>2]|0)?7:8;break;case 7:__TIFFfree(HEAP32[(HEAP32[(c+576|0)>>2]+152|0)>>2]);d=8;break;case 8:__TIFFfree(HEAP32[(c+
576|0)>>2]);HEAP32[(c+576|0)>>2]=0;__TIFFSetDefaultCompressionState(c);return;default:assert(0,"bad label: "+d)}}function _TIFFInitNeXT(m,d){HEAP32[(m+532|0)>>2]=106;HEAP32[(m+540|0)>>2]=106;HEAP32[(m+548|0)>>2]=106;return 1}
function _LZWDecodeCompat(m,d,c,a){var b=0;a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var e,g,f,k,h,l,n,p,q,t,r,s,v,u,w,y,A,z;g=m;f=d;k=c;h=HEAP32[(g+576|0)>>2];l=k;b=0!=(h|0)?2:3;break;case 2:b=4;break;case 3:throw ___assert_func(27760,596,44824,26096),"Reached an unreachable!";case 4:b=(l|0)!=(k|0)?5:6;break;case 5:e=0;b=75;break;case 6:b=0!=(HEAP32[(h+88|0)>>2]|0)?7:19;break;case 7:u=HEAP32[(h+108|0)>>2];z=(HEAP16[(u+4|0)>>1]&65535)-HEAP32[(h+88|0)>>2]|0;b=(z|0)>
(l|0)?8:15;break;case 8:b=h+88|0;HEAP32[b>>2]=HEAP32[b>>2]+l|0;b=9;break;case 9:u=HEAP32[(u|0)>>2];b=10;break;case 10:z=b=z-1|0;b=(b|0)>(l|0)?9:11;break;case 11:n=f+l|0;b=12;break;case 12:var b=HEAP8[u+6|0],x=n-1|0;n=x;HEAP8[x]=b;u=HEAP32[(u|0)>>2];b=13;break;case 13:l=b=l-1|0;b=0!=(b|0)?12:14;break;case 14:e=1;b=75;break;case 15:f=f+z|0;l=l-z|0;n=f;b=16;break;case 16:b=HEAP8[u+6|0];n=x=n-1|0;HEAP8[x]=b;u=HEAP32[(u|0)>>2];b=17;break;case 17:z=b=z-1|0;b=0!=(b|0)?16:18;break;case 18:HEAP32[(h+88|0)>>
2]=0;b=19;break;case 19:p=HEAP32[(g+604|0)>>2];t=HEAP16[((h|0)+64|0)>>1]&65535;s=HEAP32[((h|0)+72|0)>>2];r=HEAP32[((h|0)+76|0)>>2];v=HEAP32[(h+84|0)>>2];A=HEAP32[(h+112|0)>>2];w=HEAP32[(h+116|0)>>2];y=HEAP32[(h+120|0)>>2];b=20;break;case 20:b=0<(l|0)?21:72;break;case 21:var b=h+96|0,x=HEAP32[(b+4|0)>>2],B=t,C=0>(B|0)?-1:0,b=x>>>0<C>>>0|x>>>0==C>>>0&HEAP32[(b|0)>>2]>>>0<B>>>0?22:23;break;case 22:q=HEAP32[(g+452|0)>>2];_TIFFWarningExt(HEAP32[(g+628|0)>>2],148352,23032,(tempInt=STACKTOP,STACKTOP=STACKTOP+
8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=q,tempInt));q=257;b=26;break;case 23:b=p;p=b+1|0;s|=(HEAP8[b]&255)<<r;r=r+8|0;b=(r|0)<(t|0)?24:25;break;case 24:b=p;p=b+1|0;s|=(HEAP8[b]&255)<<r;r=r+8|0;b=25;break;case 25:q=s&v&65535;s>>=t|0;r=r-t|0;x=t;b=h+96|0;x=_i64Subtract(HEAP32[(b|0)>>2],HEAP32[(b+4|0)>>2],x,0>(x|0)?-1:0);B=tempRet0;HEAP32[(b|0)>>2]=x;HEAP32[(b+4|0)>>2]=B;b=26;break;case 26:b=257==(q|0)?27:28;break;case 27:b=72;break;case 28:b=256==(q|0)?29:39;break;case 29:w=HEAP32[(h+
124|0)>>2]+2064|0;__TIFFmemset(w,0,38888);t=9;v=511;y=HEAP32[(h+124|0)>>2]+(v<<3)|0;b=h+96|0;x=HEAP32[(b+4|0)>>2];B=t;C=0>(B|0)?-1:0;b=x>>>0<C>>>0|x>>>0==C>>>0&HEAP32[(b|0)>>2]>>>0<B>>>0?30:31;break;case 30:q=HEAP32[(g+452|0)>>2];_TIFFWarningExt(HEAP32[(g+628|0)>>2],148352,23032,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=q,tempInt));q=257;b=34;break;case 31:b=p;p=b+1|0;s|=(HEAP8[b]&255)<<r;r=r+8|0;b=(r|0)<(t|0)?32:33;break;case 32:b=p;p=b+1|0;s|=
(HEAP8[b]&255)<<r;r=r+8|0;b=33;break;case 33:q=s&v&65535;s>>=t|0;r=r-t|0;x=t;b=h+96|0;x=_i64Subtract(HEAP32[(b|0)>>2],HEAP32[(b+4|0)>>2],x,0>(x|0)?-1:0);B=tempRet0;HEAP32[(b|0)>>2]=x;HEAP32[(b+4|0)>>2]=B;b=34;break;case 34:b=257==(q|0)?35:36;break;case 35:b=72;break;case 36:b=256<=(q|0)?37:38;break;case 37:e=HEAP32[(g+444|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],HEAP32[(g|0)>>2],41720,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=0;
b=75;break;case 38:A=q&255;b=f;f=b+1|0;HEAP8[b]=A;l=l-1|0;A=HEAP32[(h+124|0)>>2]+(q<<3)|0;b=20;break;case 39:u=HEAP32[(h+124|0)>>2]+(q<<3)|0;b=w>>>0<(HEAP32[(h+124|0)>>2]|0)>>>0?41:40;break;case 40:b=w>>>0>=(HEAP32[(h+124|0)>>2]+40952|0)>>>0?41:42;break;case 41:e=HEAP32[(g+444|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],148352,41096,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=0;b=75;break;case 42:HEAP32[(w|0)>>2]=A;b=HEAP32[(w|0)>>2]>>>
0<(HEAP32[(h+124|0)>>2]|0)>>>0?44:43;break;case 43:b=HEAP32[(w|0)>>2]>>>0>=(HEAP32[(h+124|0)>>2]+40952|0)>>>0?44:45;break;case 44:e=HEAP32[(g+444|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],148352,41096,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=0;b=75;break;case 45:HEAP8[w+7|0]=HEAP8[HEAP32[(w|0)>>2]+7|0];HEAP16[(w+4|0)>>1]=((HEAP16[(HEAP32[(w|0)>>2]+4|0)>>1]&65535)+1|0)&65535;b=u>>>0<w>>>0?46:47;break;case 46:var D=HEAP8[u+7|0]&255,
b=48;break;case 47:D=HEAP8[w+7|0]&255;b=48;break;case 48:HEAP8[w+6|0]=D&255;w=b=w+8|0;b=b>>>0>y>>>0?49:52;break;case 49:t=b=t+1|0;b=12<(b|0)?50:51;break;case 50:t=12;b=51;break;case 51:v=(1<<t)-1|0;y=HEAP32[(h+124|0)>>2]+(v<<3)|0;b=52;break;case 52:A=u;b=256<=(q|0)?53:70;break;case 53:b=0==(HEAP16[(u+4|0)>>1]&65535|0)?54:55;break;case 54:e=HEAP32[(g+444|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],148352,40424,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>
2]=e,tempInt));e=0;b=75;break;case 55:b=(HEAP16[(u+4|0)>>1]&65535|0)>(l|0)?56:63;break;case 56:HEAP32[(h+108|0)>>2]=u;b=57;break;case 57:u=HEAP32[(u|0)>>2];b=58;break;case 58:b=(HEAP16[(u+4|0)>>1]&65535|0)>(l|0)?57:59;break;case 59:HEAP32[(h+88|0)>>2]=l;n=f+l|0;b=60;break;case 60:b=HEAP8[u+6|0];n=x=n-1|0;HEAP8[x]=b;u=HEAP32[(u|0)>>2];b=61;break;case 61:l=b=l-1|0;b=0!=(b|0)?60:62;break;case 62:b=72;break;case 63:b=(l|0)>=(HEAP16[(u+4|0)>>1]&65535|0)?64:65;break;case 64:b=66;break;case 65:throw ___assert_func(27760,
736,44824,36768),"Reached an unreachable!";case 66:f=f+(HEAP16[(u+4|0)>>1]&65535)|0;l=l-(HEAP16[(u+4|0)>>1]&65535)|0;n=f;b=67;break;case 67:b=HEAP8[u+6|0];n=x=n-1|0;HEAP8[x]=b;b=68;break;case 68:u=b=HEAP32[(u|0)>>2];b=0!=(b|0)?67:69;break;case 69:b=71;break;case 70:b=q&255;x=f;f=x+1|0;HEAP8[x]=b;l=l-1|0;b=71;break;case 71:b=20;break;case 72:HEAP32[(g+604|0)>>2]=p;HEAP16[((h|0)+64|0)>>1]=t&65535;HEAP32[((h|0)+72|0)>>2]=s;HEAP32[((h|0)+76|0)>>2]=r;HEAP32[(h+84|0)>>2]=v;HEAP32[(h+112|0)>>2]=A;HEAP32[(h+
116|0)>>2]=w;HEAP32[(h+120|0)>>2]=y;b=0<(l|0)?73:74;break;case 73:e=HEAP32[(g+444|0)>>2];b=x=l;x=0>(x|0)?-1:0;_TIFFErrorExt(HEAP32[(g+628|0)>>2],148352,39144,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,HEAP32[tempInt+8>>2]=b,HEAP32[tempInt+16>>2]=x,tempInt));e=0;b=75;break;case 74:e=1;b=75;break;case 75:return m=e,STACKTOP=a,m;default:assert(0,"bad label: "+b)}}
function _NeXTDecode(m,d,c,a){var b=0;a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var e,g,f,k,h,l,n,p,q,t,r,s,v,u;g=m;f=d;k=c;l=f;n=k;b=2;break;case 2:b=n;n=b-1|0;b=0<(b|0)?3:4;break;case 3:b=l;l=b+1|0;HEAP8[b]=-1;b=2;break;case 4:h=HEAP32[(g+604|0)>>2];n=HEAP32[(g+608|0)>>2];q=HEAP32[(g+580|0)>>2];b=0!=((k|0)%(q|0)&-1|0)?5:6;break;case 5:_TIFFErrorExt(HEAP32[(g+628|0)>>2],148024,27592,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|
0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));e=0;b=37;break;case 6:p=f;b=7;break;case 7:b=0<(k|0)?8:35;break;case 8:t=h;h=t+1|0;t=HEAP8[t]&255;n=n-1|0;b=t;b=0==(b|0)?9:64==(b|0)?12:16;break;case 9:b=(n|0)<(q|0)?10:11;break;case 10:b=36;break;case 11:__TIFFmemcpy(p,h,q);h=h+q|0;n=n-q|0;b=33;break;case 12:r=((HEAP8[h|0]&255)<<8)+(HEAP8[h+1|0]&255)|0;t=((HEAP8[h+2|0]&255)<<8)+(HEAP8[h+3|0]&255)|0;b=(n|0)<(t+4|0)?14:13;break;case 13:b=(r+t|0)>(q|0)?14:15;break;case 14:b=36;break;case 15:__TIFFmemcpy(p+
r|0,h+4|0,t);h=h+(t+4|0)|0;n=n-(t+4|0)|0;b=33;break;case 16:s=0;u=HEAP32[((g+40|0)+16|0)>>2];l=p;b=17;break;case 17:v=t>>6&3;t&=63;b=18;break;case 18:b=t;t=b-1|0;if(0<(b|0))b=19;else var w=0,b=20;break;case 19:w=s>>>0<u>>>0;b=20;break;case 20:b=w?21:27;break;case 21:b=s;s=b+1|0;b&=3;b=0==(b|0)?22:1==(b|0)?23:2==(b|0)?24:3==(b|0)?25:26;break;case 22:HEAP8[l|0]=v<<6&255;b=26;break;case 23:b=l|0;HEAP8[b]=(HEAP8[b]&255|v<<4)&255;b=26;break;case 24:b=l|0;HEAP8[b]=(HEAP8[b]&255|v<<2)&255;b=26;break;case 25:var b=
v,y=l;l=y+1|0;HEAP8[y]=(HEAP8[y]&255|b)&255;b=26;break;case 26:b=18;break;case 27:b=s>>>0>=u>>>0?28:29;break;case 28:b=32;break;case 29:b=0==(n|0)?30:31;break;case 30:b=36;break;case 31:t=h;h=t+1|0;t=HEAP8[t]&255;n=n-1|0;b=17;break;case 32:b=33;break;case 33:b=34;break;case 34:k=k-q|0;p=p+q|0;b=7;break;case 35:HEAP32[(g+604|0)>>2]=h;HEAP32[(g+608|0)>>2]=n;e=1;b=37;break;case 36:e=HEAP32[(g+444|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],148024,38672,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|
0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=0;b=37;break;case 37:return m=e,STACKTOP=a,m;default:assert(0,"bad label: "+b)}}
function __TIFFgetMode(m,d){var c=0,a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e,g;b=m;e=d;g=-1;c=HEAP8[b|0]<<24>>24;c=114==(c|0)?2:119==(c|0)|97==(c|0)?5:8;break;case 2:g=0;c=43==(HEAP8[b+1|0]<<24>>24|0)?3:4;break;case 3:g=2;c=4;break;case 4:c=9;break;case 5:g=514;c=119==(HEAP8[b|0]<<24>>24|0)?6:7;break;case 6:g|=1024;c=7;break;case 7:c=9;break;case 8:c=b;_TIFFErrorExt(0,e,27560,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>
2]=c,tempInt));c=9;break;case 9:return b=g,STACKTOP=a,b;default:assert(0,"bad label: "+c)}}
function _TIFFClientOpen(m,d,c,a,b,e,g,f,k,h){var l=0,n=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(l=1;;)switch(l){case 1:var p,q,t,r,s,v,u,w,y,A,z,x,B,C,l=n,D=n+8;q=m;t=d;r=c;s=a;v=b;u=e;w=g;y=f;A=k;z=h;HEAP8[l|0]=1;HEAP8[l+1|0]=0;l=1==(HEAP16[l>>1]&65535|0)?2:3;break;case 2:l=4;break;case 3:throw ___assert_func(38640,112,44192,32704),"Reached an unreachable!";case 4:B=__TIFFgetMode(t,147496);l=-1==(B|0)?5:6;break;case 5:l=119;break;case 6:x=(_strlen(q)+696|0)+1|0;x=
__TIFFmalloc(x);l=0==(x|0)?7:8;break;case 7:l=q;_TIFFErrorExt(r,147496,30296,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=l,tempInt));l=119;break;case 8:__TIFFmemset(x,0,696);HEAP32[(x|0)>>2]=x+696|0;_strcpy(HEAP32[(x|0)>>2],q);HEAP32[(x+8|0)>>2]=B&-1537;HEAP16[(x+448|0)>>1]=-1;l=x+456|0;HEAP32[(l|0)>>2]=0;HEAP32[(l+4|0)>>2]=0;HEAP32[(x+452|0)>>2]=-1;HEAP32[(x+444|0)>>2]=-1;HEAP32[(x+628|0)>>2]=r;l=0!=(s|0)?9:13;break;case 9:l=0!=(v|0)?10:13;break;
case 10:l=0!=(u|0)?11:13;break;case 11:l=0!=(w|0)?12:13;break;case 12:l=0!=(y|0)?14:13;break;case 13:_TIFFErrorExt(r,147496,28424,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));l=119;break;case 14:HEAP32[(x+632|0)>>2]=s;HEAP32[(x+636|0)>>2]=v;HEAP32[(x+640|0)>>2]=u;HEAP32[(x+644|0)>>2]=w;HEAP32[(x+648|0)>>2]=y;l=0!=(A|0)?15:16;break;case 15:HEAP32[(x+620|0)>>2]=A;l=17;break;case 16:HEAP32[(x+620|0)>>2]=72;l=17;
break;case 17:l=0!=(z|0)?18:19;break;case 18:HEAP32[(x+624|0)>>2]=z;l=20;break;case 19:HEAP32[(x+624|0)>>2]=60;l=20;break;case 20:__TIFFSetDefaultCompressionState(x);HEAP32[(x+12|0)>>2]=1;l=0==(B|0)?21:22;break;case 21:l=x+12|0;HEAP32[l>>2]|=2048;l=22;break;case 22:l=0==(B|0)?24:23;break;case 23:l=2==(B|0)?24:25;break;case 24:l=x+12|0;HEAP32[l>>2]|=32768;l=25;break;case 25:C=t;l=26;break;case 26:l=0!=HEAP8[C]<<24>>24?27:53;break;case 27:l=HEAP8[C]<<24>>24;l=98==(l|0)?28:108==(l|0)?31:66==(l|0)?32:
76==(l|0)?33:72==(l|0)?34:77==(l|0)?35:109==(l|0)?38:67==(l|0)?41:99==(l|0)?44:104==(l|0)?47:56==(l|0)?48:51;break;case 28:l=0!=(B&512|0)?29:30;break;case 29:l=x+12|0;HEAP32[l>>2]|=128;l=30;break;case 30:l=51;break;case 31:l=51;break;case 32:HEAP32[(x+12|0)>>2]=HEAP32[(x+12|0)>>2]&-4|1;l=51;break;case 33:HEAP32[(x+12|0)>>2]=HEAP32[(x+12|0)>>2]&-4|2;l=51;break;case 34:HEAP32[(x+12|0)>>2]=HEAP32[(x+12|0)>>2]&-4|2;l=51;break;case 35:l=0==(B|0)?36:37;break;case 36:l=x+12|0;HEAP32[l>>2]|=2048;l=37;break;
case 37:l=51;break;case 38:l=0==(B|0)?39:40;break;case 39:l=x+12|0;HEAP32[l>>2]&=-2049;l=40;break;case 40:l=51;break;case 41:l=0==(B|0)?42:43;break;case 42:l=x+12|0;HEAP32[l>>2]|=32768;l=43;break;case 43:l=51;break;case 44:l=0==(B|0)?45:46;break;case 45:l=x+12|0;HEAP32[l>>2]&=-32769;l=46;break;case 46:l=51;break;case 47:l=x+12|0;HEAP32[l>>2]|=65536;l=51;break;case 48:l=0!=(B&512|0)?49:50;break;case 49:l=x+12|0;HEAP32[l>>2]|=524288;l=50;break;case 50:l=51;break;case 51:l=52;break;case 52:C=C+1|0;l=
26;break;case 53:l=0!=(B&1024|0)?55:54;break;case 54:l=8==(FUNCTION_TABLE[HEAP32[(x+632|0)>>2]](HEAP32[(x+628|0)>>2],x+424|0,8)|0)?72:55;break;case 55:l=0==(HEAP32[(x+8|0)>>2]|0)?56:57;break;case 56:_TIFFErrorExt(HEAP32[(x+628|0)>>2],q,27072,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));l=118;break;case 57:HEAP16[(x+424|0)>>1]=(0!=(HEAP32[(x+12|0)>>2]&128|0)?19789:18761)&65535;l=0!=(HEAP32[(x+12|0)>>2]&524288|
0)?61:58;break;case 58:HEAP16[((x+424|0)+2|0)>>1]=42;HEAP32[((x+424|0)+4|0)>>2]=0;l=0!=(HEAP32[(x+12|0)>>2]&128|0)?59:60;break;case 59:_TIFFSwabShort((x+424|0)+2|0);l=60;break;case 60:HEAP16[(x+440|0)>>1]=8;l=64;break;case 61:HEAP16[((x+424|0)+2|0)>>1]=43;HEAP16[((x+424|0)+4|0)>>1]=8;HEAP16[((x+424|0)+6|0)>>1]=0;l=(x+424|0)+8|0;HEAP32[(l|0)>>2]=0;HEAP32[(l+4|0)>>2]=0;l=0!=(HEAP32[(x+12|0)>>2]&128|0)?62:63;break;case 62:_TIFFSwabShort((x+424|0)+2|0);_TIFFSwabShort((x+424|0)+4|0);l=63;break;case 63:HEAP16[(x+
440|0)>>1]=16;l=64;break;case 64:FUNCTION_TABLE[HEAP32[(x+640|0)>>2]](HEAP32[(x+628|0)>>2],0,0,0);l=(FUNCTION_TABLE[HEAP32[(x+636|0)>>2]](HEAP32[(x+628|0)>>2],x+424|0,HEAP16[(x+440|0)>>1]&65535)|0)==(HEAP16[(x+440|0)>>1]&65535|0)?66:65;break;case 65:_TIFFErrorExt(HEAP32[(x+628|0)>>2],q,26064,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));l=118;break;case 66:l=19789==(HEAP16[(x+424|0)>>1]&65535|0)?67:68;break;case 67:l=
x+12|0;HEAP32[l>>2]|=128;l=69;break;case 68:l=69;break;case 69:l=0!=(_TIFFDefaultDirectory(x)|0)?71:70;break;case 70:l=118;break;case 71:p=x+16|0;HEAP32[(p|0)>>2]=0;HEAP32[(p+4|0)>>2]=0;HEAP32[(x+32|0)>>2]=0;HEAP16[(x+36|0)>>1]=0;HEAP16[(x+38|0)>>1]=0;p=x;l=120;break;case 72:l=19789!=(HEAP16[(x+424|0)>>1]&65535|0)?73:76;break;case 73:l=18761!=(HEAP16[(x+424|0)>>1]&65535|0)?74:76;break;case 74:l=20549!=(HEAP16[(x+424|0)>>1]&65535|0)?75:76;break;case 75:var l=HEAP16[(x+424|0)>>1]&65535,F=HEAP16[(x+
424|0)>>1]&65535;_TIFFErrorExt(HEAP32[(x+628|0)>>2],q,24880,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=l,HEAP32[tempInt+8>>2]=F,tempInt));l=118;break;case 76:l=19789==(HEAP16[(x+424|0)>>1]&65535|0)?77:78;break;case 77:l=x+12|0;HEAP32[l>>2]|=128;l=79;break;case 78:l=79;break;case 79:l=0!=(HEAP32[(x+12|0)>>2]&128|0)?80:81;break;case 80:_TIFFSwabShort((x+424|0)+2|0);l=81;break;case 81:l=42!=(HEAP16[((x+424|0)+2|0)>>1]&65535|0)?82:84;break;case 82:l=
43!=(HEAP16[((x+424|0)+2|0)>>1]&65535|0)?83:84;break;case 83:l=HEAP16[((x+424|0)+2|0)>>1]&65535;F=HEAP16[((x+424|0)+2|0)>>1]&65535;_TIFFErrorExt(HEAP32[(x+628|0)>>2],q,23656,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=l,HEAP32[tempInt+8>>2]=F,tempInt));l=118;break;case 84:l=42==(HEAP16[((x+424|0)+2|0)>>1]&65535|0)?85:88;break;case 85:l=0!=(HEAP32[(x+12|0)>>2]&128|0)?86:87;break;case 86:_TIFFSwabLong((x+424|0)+4|0);l=87;break;case 87:HEAP16[(x+440|
0)>>1]=8;l=97;break;case 88:l=8==(FUNCTION_TABLE[HEAP32[(x+632|0)>>2]](HEAP32[(x+628|0)>>2],(x+424|0)+8|0,8)|0)?90:89;break;case 89:_TIFFErrorExt(HEAP32[(x+628|0)>>2],q,27072,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));l=118;break;case 90:l=0!=(HEAP32[(x+12|0)>>2]&128|0)?91:92;break;case 91:_TIFFSwabShort((x+424|0)+4|0);_TIFFSwabLong8((x+424|0)+8|0);l=92;break;case 92:l=8!=(HEAP16[((x+424|0)+4|0)>>1]&65535|0)?
93:94;break;case 93:l=HEAP16[((x+424|0)+4|0)>>1]&65535;F=HEAP16[((x+424|0)+4|0)>>1]&65535;_TIFFErrorExt(HEAP32[(x+628|0)>>2],q,22976,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=l,HEAP32[tempInt+8>>2]=F,tempInt));l=118;break;case 94:l=0!=(HEAP16[((x+424|0)+6|0)>>1]&65535|0)?95:96;break;case 95:l=HEAP16[((x+424|0)+6|0)>>1]&65535;F=HEAP16[((x+424|0)+6|0)>>1]&65535;_TIFFErrorExt(HEAP32[(x+628|0)>>2],q,41672,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,
assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=l,HEAP32[tempInt+8>>2]=F,tempInt));l=118;break;case 96:HEAP16[(x+440|0)>>1]=16;l=x+12|0;HEAP32[l>>2]|=524288;l=97;break;case 97:l=x+12|0;HEAP32[l>>2]|=512;HEAP32[(x+588|0)>>2]=0;HEAP32[(x+604|0)>>2]=0;HEAP32[(x+592|0)>>2]=0;HEAP32[(x+596|0)>>2]=0;HEAP32[(x+600|0)>>2]=0;l=HEAP8[t|0]<<24>>24;l=114==(l|0)?98:97==(l|0)?114:117;break;case 98:l=0!=(HEAP32[(x+12|0)>>2]&524288|0)?100:99;break;case 99:l=x+24|0;HEAP32[(l|0)>>2]=HEAP32[((x+424|0)+4|0)>>
2];HEAP32[(l+4|0)>>2]=0;l=101;break;case 100:var l=(x+424|0)+8|0,F=HEAP32[(l+4|0)>>2],I=x+24|0;HEAP32[(I|0)>>2]=HEAP32[(l|0)>>2];HEAP32[(I+4|0)>>2]=F;l=101;break;case 101:l=0!=(HEAP32[(x+12|0)>>2]&2048|0)?102:109;break;case 102:l=0!=(FUNCTION_TABLE[HEAP32[(x+620|0)>>2]](HEAP32[(x+628|0)>>2],x+612|0,D)|0)?103:107;break;case 103:HEAP32[(x+616|0)>>2]=HEAP32[(D|0)>>2];l=HEAP32[(x+616|0)>>2];l=(l|0)==(HEAP32[(D|0)>>2]|0)&((0>(l|0)?-1:0)|0)==(HEAP32[(D+4|0)>>2]|0)?104:105;break;case 104:l=106;break;case 105:throw ___assert_func(38640,
449,44192,41064),"Reached an unreachable!";case 106:l=108;break;case 107:l=x+12|0;HEAP32[l>>2]&=-2049;l=108;break;case 108:l=109;break;case 109:l=0!=(HEAP32[(x+12|0)>>2]&65536|0)?110:111;break;case 110:p=x;l=120;break;case 111:l=0!=(_TIFFReadDirectory(x)|0)?112:113;break;case 112:HEAP32[(x+608|0)>>2]=-1;p=x+12|0;HEAP32[p>>2]|=16;p=x;l=120;break;case 113:l=117;break;case 114:l=0!=(_TIFFDefaultDirectory(x)|0)?116:115;break;case 115:l=118;break;case 116:p=x;l=120;break;case 117:l=118;break;case 118:HEAP32[(x+
8|0)>>2]=0;_TIFFCleanup(x);l=119;break;case 119:p=0;l=120;break;case 120:return m=p,STACKTOP=n,m;default:assert(0,"bad label: "+l)}}function __tiffDummyMapProc(m,d,c){return 0}function __tiffDummyUnmapProc(m,d,c,a){m=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;HEAP32[(m|0)>>2]=c;HEAP32[(m+4|0)>>2]=a;STACKTOP=m}function _TIFFFileName(m){return HEAP32[(m|0)>>2]}function _TIFFIsTiled(m){return 0!=(HEAP32[(m+12|0)>>2]&1024|0)&1}
function _TIFFInitPackBits(m,d){HEAP32[(m+532|0)>>2]=40;HEAP32[(m+540|0)>>2]=40;HEAP32[(m+548|0)>>2]=40;HEAP32[(m+524|0)>>2]=104;HEAP32[(m+528|0)>>2]=206;HEAP32[(m+536|0)>>2]=30;HEAP32[(m+544|0)>>2]=242;HEAP32[(m+552|0)>>2]=242;return 1}
function _PackBitsDecode(m,d,c,a){var b=0;a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var e,g,f,k,h,l,n,p;g=m;f=d;k=c;h=HEAP32[(g+604|0)>>2];l=HEAP32[(g+608|0)>>2];b=2;break;case 2:if(0<(l|0))b=3;else var q=0,b=4;break;case 3:q=0<(k|0);b=4;break;case 4:b=q?5:22;break;case 5:n=h;h=n+1|0;n=HEAP8[n]<<24>>24;l=l-1|0;b=128<=(n|0)?6:7;break;case 6:n=n-256|0;b=7;break;case 7:b=0>(n|0)?8:16;break;case 8:b=-128==(n|0)?9:10;break;case 9:b=2;break;case 10:n=(-n|0)+1|0;b=(k|0)<
(n|0)?11:12;break;case 11:n=n-k|0;_TIFFWarningExt(HEAP32[(g+628|0)>>2],148008,27352,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=n,tempInt));n=k;b=12;break;case 12:k=k-n|0;p=h;h=p+1|0;p=HEAP8[p]<<24>>24;l=l-1|0;b=13;break;case 13:b=n;n=b-1|0;b=0<(b|0)?14:15;break;case 14:var b=p&255,t=f;f=t+1|0;HEAP8[t]=b;b=13;break;case 15:b=21;break;case 16:b=(k|0)<(n+1|0)?17:18;break;case 17:n=(n-k|0)+1|0;_TIFFWarningExt(HEAP32[(g+628|0)>>2],148008,27352,(tempInt=
STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=n,tempInt));n=k-1|0;b=18;break;case 18:b=(l|0)<(n+1|0)?19:20;break;case 19:_TIFFWarningExt(HEAP32[(g+628|0)>>2],148008,38424,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=22;break;case 20:var b=f,t=h,r=n+1|0;n=r;__TIFFmemcpy(b,t,r);f=f+n|0;k=k-n|0;h=h+n|0;l=l-n|0;b=21;break;case 21:b=2;break;case 22:HEAP32[(g+604|0)>>2]=h;
HEAP32[(g+608|0)>>2]=l;b=0<(k|0)?23:24;break;case 23:e=HEAP32[(g+444|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],148008,32608,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=0;b=25;break;case 24:e=1;b=25;break;case 25:return m=e,STACKTOP=a,m;default:assert(0,"bad label: "+b)}}
function _PackBitsPreEncode(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b;b=m;c=__TIFFmalloc(4);HEAP32[(b+576|0)>>2]=c;c=0!=(c|0)?3:2;break;case 2:a=0;c=7;break;case 3:c=0!=(HEAP32[(b+12|0)>>2]&1024|0)?4:5;break;case 4:c=_TIFFTileRowSize(b);HEAP32[HEAP32[(b+576|0)>>2]>>2]=c;c=6;break;case 5:c=_TIFFScanlineSize(b);HEAP32[HEAP32[(b+576|0)>>2]>>2]=c;c=6;break;case 6:a=1;c=7;break;case 7:return a;default:assert(0,"bad label: "+c)}}
function _PackBitsPostEncode(m){for(var d=0,d=1;;)switch(d){case 1:var c;c=m;d=0!=(HEAP32[(c+576|0)>>2]|0)?2:3;break;case 2:__TIFFfree(HEAP32[(c+576|0)>>2]);d=3;break;case 3:return 1;default:assert(0,"bad label: "+d)}}
function _PackBitsEncode(m,d,c,a){a=0;for(a=1;;)switch(a){case 1:var b,e,g,f,k,h,l,n,p,q,t;e=m;g=d;f=c;k=HEAP32[(e+604|0)>>2];h=HEAP32[(e+588|0)>>2]+HEAP32[(e+592|0)>>2]|0;l=t=0;a=2;break;case 2:a=0<(f|0)?3:51;break;case 3:n=g;g=n+1|0;q=HEAP8[n]&255;f=f-1|0;n=1;a=4;break;case 4:if(0<(f|0))a=5;else{var r=0;a=6}break;case 5:r=(q|0)==(HEAP8[g]&255|0);a=6;break;case 6:a=r?7:9;break;case 7:n=n+1|0;a=8;break;case 8:f=f-1|0;g=g+1|0;a=4;break;case 9:a=10;break;case 10:a=(k+2|0)>>>0>=h>>>0?11:23;break;case 11:a=
1==(t|0)?13:12;break;case 12:a=3==(t|0)?13:19;break;case 13:p=k-l|0;a=e+608|0;HEAP32[a>>2]=HEAP32[a>>2]+(l-HEAP32[(e+604|0)>>2]|0)|0;a=0!=(_TIFFFlushData1(e)|0)?15:14;break;case 14:b=-1;a=52;break;case 15:k=HEAP32[(e+604|0)>>2];a=16;break;case 16:a=p;p=a-1|0;a=0<(a|0)?17:18;break;case 17:a=l;l=a+1|0;a=HEAP8[a];var s=k;k=s+1|0;HEAP8[s]=a;a=16;break;case 18:l=HEAP32[(e+604|0)>>2];a=22;break;case 19:a=e+608|0;HEAP32[a>>2]=HEAP32[a>>2]+(k-HEAP32[(e+604|0)>>2]|0)|0;a=0!=(_TIFFFlushData1(e)|0)?21:20;break;
case 20:b=-1;a=52;break;case 21:k=HEAP32[(e+604|0)>>2];a=22;break;case 22:a=23;break;case 23:a=t;a=0==(a|0)?24:1==(a|0)?30:2==(a|0)?38:3==(a|0)?44:50;break;case 24:a=1<(n|0)?25:28;break;case 25:t=2;a=128<(n|0)?26:27;break;case 26:a=k;k=a+1|0;HEAP8[a]=-127;a=q&255;s=k;k=s+1|0;HEAP8[s]=a;n=n-128|0;a=10;break;case 27:a=(-(n-1|0)|0)&255;s=k;k=s+1|0;HEAP8[s]=a;a=q&255;s=k;k=s+1|0;HEAP8[s]=a;a=29;break;case 28:t=l=k;k=t+1|0;HEAP8[t]=0;t=q&255;a=k;k=a+1|0;HEAP8[a]=t;t=1;a=29;break;case 29:a=50;break;case 30:a=
1<(n|0)?31:34;break;case 31:t=3;a=128<(n|0)?32:33;break;case 32:a=k;k=a+1|0;HEAP8[a]=-127;a=q&255;s=k;k=s+1|0;HEAP8[s]=a;n=n-128|0;a=10;break;case 33:a=(-(n-1|0)|0)&255;s=k;k=s+1|0;HEAP8[s]=a;a=q&255;s=k;k=s+1|0;HEAP8[s]=a;a=37;break;case 34:a=l;s=HEAP8[a]+1&255;HEAP8[a]=s;a=127==(s&255|0)?35:36;break;case 35:t=0;a=36;break;case 36:a=q&255;s=k;k=s+1|0;HEAP8[s]=a;a=37;break;case 37:a=50;break;case 38:a=1<(n|0)?39:42;break;case 39:a=128<(n|0)?40:41;break;case 40:a=k;k=a+1|0;HEAP8[a]=-127;a=q&255;s=
k;k=s+1|0;HEAP8[s]=a;n=n-128|0;a=10;break;case 41:a=(-(n-1|0)|0)&255;s=k;k=s+1|0;HEAP8[s]=a;a=q&255;s=k;k=s+1|0;HEAP8[s]=a;a=43;break;case 42:t=l=k;k=t+1|0;HEAP8[t]=0;t=q&255;a=k;k=a+1|0;HEAP8[a]=t;t=1;a=43;break;case 43:a=50;break;case 44:a=1==(n|0)?45:48;break;case 45:a=255==(HEAP8[k-2|0]&255|0)?46:48;break;case 46:a=126>(HEAP8[l]&255|0)?47:48;break;case 47:t=l;a=((HEAP8[t]&255)+2|0)&255;HEAP8[t]=a;t=127==(a&255|0)?0:1;HEAP8[k-2|0]=HEAP8[k-1|0];a=49;break;case 48:t=2;a=49;break;case 49:a=10;break;
case 50:a=2;break;case 51:b=e+608|0;HEAP32[b>>2]=HEAP32[b>>2]+(k-HEAP32[(e+604|0)>>2]|0)|0;HEAP32[(e+604|0)>>2]=k;b=1;a=52;break;case 52:return b;default:assert(0,"bad label: "+a)}}
function _PackBitsEncodeChunk(m,d,c,a){for(var b=0,b=1;;)switch(b){case 1:var e,g,f,k,h,l,n;g=m;f=d;k=c;h=a;l=HEAP32[HEAP32[(g+576|0)>>2]>>2];b=2;break;case 2:b=0<(k|0)?3:8;break;case 3:n=l;b=(k|0)<(n|0)?4:5;break;case 4:n=k;b=5;break;case 5:b=0>(_PackBitsEncode(g,f,n,h)|0)?6:7;break;case 6:e=-1;b=9;break;case 7:f=f+n|0;k=k-n|0;b=2;break;case 8:e=1;b=9;break;case 9:return e;default:assert(0,"bad label: "+b)}}function _PixarLogFixupTags(m){return 1}
function _TIFFInitPixarLog(m,d){var c=0,a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e;e=m;c=32909==(d|0)?2:3;break;case 2:c=4;break;case 3:throw ___assert_func(27272,1350,44128,38336),"Reached an unreachable!";case 4:c=0!=(__TIFFMergeFields(e,8584,2)|0)?6:5;break;case 5:_TIFFErrorExt(HEAP32[(e+628|0)>>2],46688,32544,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=0;c=10;break;
case 6:c=__TIFFmalloc(172);HEAP32[(e+576|0)>>2]=c;c=0==(HEAP32[(e+576|0)>>2]|0)?7:8;break;case 7:c=9;break;case 8:b=HEAP32[(e+576|0)>>2];__TIFFmemset(b,0,172);HEAP32[((b+64|0)+44|0)>>2]=0;HEAP32[(b+132|0)>>2]=-1;HEAP32[(e+504|0)>>2]=150;HEAP32[(e+508|0)>>2]=258;HEAP32[(e+512|0)>>2]=182;HEAP32[(e+532|0)>>2]=134;HEAP32[(e+540|0)>>2]=134;HEAP32[(e+548|0)>>2]=134;HEAP32[(e+516|0)>>2]=194;HEAP32[(e+524|0)>>2]=328;HEAP32[(e+528|0)>>2]=382;HEAP32[(e+536|0)>>2]=112;HEAP32[(e+544|0)>>2]=112;HEAP32[(e+552|
0)>>2]=112;HEAP32[(e+556|0)>>2]=68;HEAP32[(e+564|0)>>2]=92;HEAP32[(b+140|0)>>2]=HEAP32[((e+668|0)+4|0)>>2];HEAP32[((e+668|0)+4|0)>>2]=230;HEAP32[(b+144|0)>>2]=HEAP32[(e+668|0)>>2];HEAP32[(e+668|0)>>2]=226;HEAP32[(b+136|0)>>2]=-1;HEAP32[(b+128|0)>>2]=0;_TIFFPredictorInit(e);_PixarLogMakeTables(b);b=1;c=10;break;case 9:_TIFFErrorExt(HEAP32[(e+628|0)>>2],46688,30200,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=
0;c=10;break;case 10:return e=b,STACKTOP=a,e;default:assert(0,"bad label: "+c)}}
function _PixarLogSetupDecode(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e,g,f;b=m;e=b+40|0;g=HEAP32[(b+576|0)>>2];d=0!=(g|0)?2:3;break;case 2:d=4;break;case 3:throw ___assert_func(27272,662,44400,22960),"Reached an unreachable!";case 4:HEAP32[(b+652|0)>>2]=376;d=1==(HEAP16[(e+86|0)>>1]&65535|0)?5:6;break;case 5:var k=HEAP16[(e+58|0)>>1]&65535,d=7;break;case 6:k=1;d=7;break;case 7:HEAP16[(g+124|0)>>1]=k&65535;f=_multiply_ms562(HEAP16[(g+124|0)>>1]&
65535,HEAP32[(e+16|0)>>2]);f=_multiply_ms562(f,HEAP32[(e+60|0)>>2]);f=_multiply_ms562(f,2);d=0==(f|0)?8:9;break;case 8:a=0;d=18;break;case 9:d=__TIFFmalloc(f+((HEAP16[(g+124|0)>>1]&65535)<<1)|0);HEAP32[(g+120|0)>>2]=d;d=0==(HEAP32[(g+120|0)>>2]|0)?10:11;break;case 10:a=0;d=18;break;case 11:d=-1==(HEAP32[(g+132|0)>>2]|0)?12:13;break;case 12:d=_PixarLogGuessDataFmt(e);HEAP32[(g+132|0)>>2]=d;d=13;break;case 13:d=-1==(HEAP32[(g+132|0)>>2]|0)?14:15;break;case 14:a=HEAP16[(e+44|0)>>1]&65535;_TIFFErrorExt(HEAP32[(b+
628|0)>>2],147880,36680,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,tempInt));a=0;d=18;break;case 15:d=0!=(_inflateInit_(g+64|0,41056,56)|0)?16:17;break;case 16:a=HEAP32[((g+64|0)+24|0)>>2];_TIFFErrorExt(HEAP32[(b+628|0)>>2],147880,40416,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,tempInt));a=0;d=18;break;case 17:a=g+128|0;HEAP32[a>>2]|=1;a=1;d=18;break;case 18:return m=a,STACKTOP=c,m;default:assert(0,
"bad label: "+d)}}
function _PixarLogPreDecode(m,d){var c=0,a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e,g;e=m;g=HEAP32[(e+576|0)>>2];c=0!=(g|0)?2:3;break;case 2:c=4;break;case 3:throw ___assert_func(27272,707,44448,22960),"Reached an unreachable!";case 4:HEAP32[(g+64|0)>>2]=HEAP32[(e+588|0)>>2];HEAP32[((g+64|0)+4|0)>>2]=HEAP32[(e+608|0)>>2];c=(HEAP32[((g+64|0)+4|0)>>2]|0)!=(HEAP32[(e+608|0)>>2]|0)?5:6;break;case 5:_TIFFErrorExt(HEAP32[(e+628|0)>>2],147928,24808,(tempInt=STACKTOP,
STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=0;c=7;break;case 6:b=0==(_inflateReset(g+64|0)|0)&1;c=7;break;case 7:return c=b,STACKTOP=a,c;default:assert(0,"bad label: "+c)}}
function _PixarLogDecode(m,d,c,a){var b=0;a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var e,g,f,k,h,l,n,p,q,t,r;g=m;f=d;k=c;h=g+40|0;l=HEAP32[(g+576|0)>>2];b=HEAP32[(l+132|0)>>2];b=5==(b|0)?2:4==(b|0)|3==(b|0)|2==(b|0)?3:0==(b|0)|1==(b|0)?4:5;break;case 2:p=(k>>>0)/4&-1;b=6;break;case 3:p=(k>>>0)/2&-1;b=6;break;case 4:p=k;b=6;break;case 5:e=HEAP16[(h+44|0)>>1]&65535;_TIFFErrorExt(HEAP32[(g+628|0)>>2],147992,25976,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|
0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=0;b=41;break;case 6:q=Math.imul(HEAP16[(l+124|0)>>1]&65535,HEAP32[(h+16|0)>>2])|0;b=0!=(l|0)?7:8;break;case 7:b=9;break;case 8:throw ___assert_func(27272,756,44472,22960),"Reached an unreachable!";case 9:HEAP32[((l+64|0)+12|0)>>2]=HEAP32[(l+120|0)>>2];HEAP32[((l+64|0)+16|0)>>2]=p<<1;b=(HEAP32[((l+64|0)+16|0)>>2]|0)!=(p<<1|0)?10:11;break;case 10:_TIFFErrorExt(HEAP32[(g+628|0)>>2],147992,24808,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+
7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));e=0;b=41;break;case 11:b=12;break;case 12:r=_inflate(l+64|0,1);b=1==(r|0)?13:14;break;case 13:b=22;break;case 14:b=-3==(r|0)?15:18;break;case 15:var b=HEAP32[(g+444|0)>>2],s=HEAP32[((l+64|0)+24|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],147992,39816,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,HEAP32[tempInt+8>>2]=s,tempInt));b=0!=(_inflateSync(l+64|0)|0)?16:17;break;case 16:e=
0;b=41;break;case 17:b=21;break;case 18:b=0!=(r|0)?19:20;break;case 19:e=HEAP32[((l+64|0)+24|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],147992,28360,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=0;b=41;break;case 20:b=21;break;case 21:b=0<HEAP32[((l+64|0)+16|0)>>2]>>>0?12:22;break;case 22:b=0!=(HEAP32[((l+64|0)+16|0)>>2]|0)?23:24;break;case 23:e=HEAP32[(g+444|0)>>2];b=HEAP32[((l+64|0)+16|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],147992,
39088,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,HEAP32[tempInt+8>>2]=b,tempInt));e=0;b=41;break;case 24:t=HEAP32[(l+120|0)>>2];b=0!=(HEAP32[(g+12|0)>>2]&128|0)?25:26;break;case 25:_TIFFSwabArrayOfShort(t,p);b=26;break;case 26:b=0!=((p|0)%(q|0)&-1|0)?27:28;break;case 27:b=q;s=p;_TIFFWarningExt(HEAP32[(g+628|0)>>2],147992,38128,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,HEAP32[tempInt+8>>
2]=s,tempInt));p=p-((p|0)%(q|0)&-1)|0;b=28;break;case 28:n=0;b=29;break;case 29:b=(n|0)<(p|0)?30:40;break;case 30:b=HEAP32[(l+132|0)>>2];b=5==(b|0)?31:4==(b|0)?32:3==(b|0)?33:2==(b|0)?34:0==(b|0)?35:1==(b|0)?36:37;break;case 31:_horizontalAccumulateF(t,q,HEAP16[(l+124|0)>>1]&65535,f,HEAP32[(l+148|0)>>2]);f=f+(q<<2)|0;b=38;break;case 32:_horizontalAccumulate16(t,q,HEAP16[(l+124|0)>>1]&65535,f,HEAP32[(l+152|0)>>2]);f=f+(q<<1)|0;b=38;break;case 33:_horizontalAccumulate12(t,q,HEAP16[(l+124|0)>>1]&65535,
f,HEAP32[(l+148|0)>>2]);f=f+(q<<1)|0;b=38;break;case 34:_horizontalAccumulate11(t,q,HEAP16[(l+124|0)>>1]&65535,f);f=f+(q<<1)|0;b=38;break;case 35:_horizontalAccumulate8(t,q,HEAP16[(l+124|0)>>1]&65535,f,HEAP32[(l+156|0)>>2]);f=f+q|0;b=38;break;case 36:_horizontalAccumulate8abgr(t,q,HEAP16[(l+124|0)>>1]&65535,f,HEAP32[(l+156|0)>>2]);f=f+q|0;b=38;break;case 37:e=HEAP16[(h+44|0)>>1]&65535;_TIFFErrorExt(HEAP32[(g+628|0)>>2],147992,37432,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|
0))|0,HEAP32[tempInt>>2]=e,tempInt));e=0;b=41;break;case 38:b=39;break;case 39:n=n+q|0;t=t+(q<<1)|0;b=29;break;case 40:e=1;b=41;break;case 41:return m=e,STACKTOP=a,m;default:assert(0,"bad label: "+b)}}
function _PixarLogSetupEncode(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e,g,f;b=m;e=b+40|0;g=HEAP32[(b+576|0)>>2];d=0!=(g|0)?2:3;break;case 2:d=4;break;case 3:throw ___assert_func(27272,864,44376,22960),"Reached an unreachable!";case 4:d=1==(HEAP16[(e+86|0)>>1]&65535|0)?5:6;break;case 5:var k=HEAP16[(e+58|0)>>1]&65535,d=7;break;case 6:k=1;d=7;break;case 7:HEAP16[(g+124|0)>>1]=k&65535;f=_multiply_ms562(HEAP16[(g+124|0)>>1]&65535,HEAP32[(e+16|0)>>
2]);f=_multiply_ms562(f,HEAP32[(e+60|0)>>2]);f=_multiply_ms562(f,2);d=0==(f|0)?8:9;break;case 8:a=0;d=18;break;case 9:d=__TIFFmalloc(f);HEAP32[(g+120|0)>>2]=d;d=0==(HEAP32[(g+120|0)>>2]|0)?10:11;break;case 10:a=0;d=18;break;case 11:d=-1==(HEAP32[(g+132|0)>>2]|0)?12:13;break;case 12:d=_PixarLogGuessDataFmt(e);HEAP32[(g+132|0)>>2]=d;d=13;break;case 13:d=-1==(HEAP32[(g+132|0)>>2]|0)?14:15;break;case 14:a=HEAP16[(e+44|0)>>1]&65535;_TIFFErrorExt(HEAP32[(b+628|0)>>2],147856,41608,(tempInt=STACKTOP,STACKTOP=
STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,tempInt));a=0;d=18;break;case 15:d=0!=(_deflateInit_(g+64|0,HEAP32[(g+136|0)>>2],41056,56)|0)?16:17;break;case 16:a=HEAP32[((g+64|0)+24|0)>>2];_TIFFErrorExt(HEAP32[(b+628|0)>>2],147856,40416,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,tempInt));a=0;d=18;break;case 17:a=g+128|0;HEAP32[a>>2]|=1;a=1;d=18;break;case 18:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _PixarLogClose(m){m=m+40|0;HEAP16[(m+44|0)>>1]=8;HEAP16[(m+46|0)>>1]=1}
function _PixarLogPostEncode(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e,g;b=m;e=HEAP32[(b+576|0)>>2];HEAP32[((e+64|0)+4|0)>>2]=0;d=2;break;case 2:d=g=_deflate(e+64|0,4);d=1==(d|0)|0==(d|0)?3:6;break;case 3:d=(HEAP32[((e+64|0)+16|0)>>2]|0)!=(HEAP32[(b+592|0)>>2]|0)?4:5;break;case 4:HEAP32[(b+608|0)>>2]=HEAP32[(b+592|0)>>2]-HEAP32[((e+64|0)+16|0)>>2]|0;_TIFFFlushData1(b);HEAP32[((e+64|0)+12|0)>>2]=HEAP32[(b+588|0)>>2];HEAP32[((e+64|0)+16|0)>>2]=HEAP32[(b+
592|0)>>2];d=5;break;case 5:d=7;break;case 6:a=HEAP32[((e+64|0)+24|0)>>2];_TIFFErrorExt(HEAP32[(b+628|0)>>2],147952,28360,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,tempInt));a=0;d=10;break;case 7:d=8;break;case 8:d=1!=(g|0)?2:9;break;case 9:a=1;d=10;break;case 10:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _PixarLogEncode(m,d,c,a){var b=0;a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var e,g,f,k,h,l,n,p,q,t;g=m;f=d;k=c;h=g+40|0;l=HEAP32[(g+576|0)>>2];b=HEAP32[(l+132|0)>>2];b=5==(b|0)?2:4==(b|0)|3==(b|0)|2==(b|0)?3:0==(b|0)|1==(b|0)?4:5;break;case 2:p=(k>>>0)/4&-1;b=6;break;case 3:p=(k>>>0)/2&-1;b=6;break;case 4:p=k;b=6;break;case 5:e=HEAP16[(h+44|0)>>1]&65535;_TIFFErrorExt(HEAP32[(g+628|0)>>2],147976,25976,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|
0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=0;b=25;break;case 6:q=Math.imul(HEAP16[(l+124|0)>>1]&65535,HEAP32[(h+16|0)>>2])|0;n=0;t=HEAP32[(l+120|0)>>2];b=7;break;case 7:b=(n|0)<(p|0)?8:15;break;case 8:b=HEAP32[(l+132|0)>>2];b=5==(b|0)?9:4==(b|0)?10:0==(b|0)?11:12;break;case 9:_horizontalDifferenceF(f,q,HEAP16[(l+124|0)>>1]&65535,t,HEAP32[(l+160|0)>>2]);f=f+(q<<2)|0;b=13;break;case 10:_horizontalDifference16(f,q,HEAP16[(l+124|0)>>1]&65535,t,HEAP32[(l+164|0)>>2]);f=f+(q<<1)|0;b=13;break;case 11:_horizontalDifference8(f,
q,HEAP16[(l+124|0)>>1]&65535,t,HEAP32[(l+168|0)>>2]);f=f+q|0;b=13;break;case 12:e=HEAP16[(h+44|0)>>1]&65535;_TIFFErrorExt(HEAP32[(g+628|0)>>2],147976,25976,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=0;b=25;break;case 13:b=14;break;case 14:n=n+q|0;t=t+(q<<1)|0;b=7;break;case 15:HEAP32[(l+64|0)>>2]=HEAP32[(l+120|0)>>2];HEAP32[((l+64|0)+4|0)>>2]=p<<1;b=((HEAP32[((l+64|0)+4|0)>>2]>>>0)/2&-1|0)!=(p|0)?16:17;break;case 16:_TIFFErrorExt(HEAP32[(g+
628|0)>>2],147976,24808,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));e=0;b=25;break;case 17:b=18;break;case 18:b=0!=(_deflate(l+64|0,0)|0)?19:20;break;case 19:e=HEAP32[((l+64|0)+24|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],147976,23632,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=0;b=25;break;case 20:b=0==(HEAP32[((l+64|0)+16|0)>>2]|0)?21:22;break;
case 21:HEAP32[(g+608|0)>>2]=HEAP32[(g+592|0)>>2];_TIFFFlushData1(g);HEAP32[((l+64|0)+12|0)>>2]=HEAP32[(g+588|0)>>2];HEAP32[((l+64|0)+16|0)>>2]=HEAP32[(g+592|0)>>2];b=22;break;case 22:b=23;break;case 23:b=0<HEAP32[((l+64|0)+4|0)>>2]>>>0?18:24;break;case 24:e=1;b=25;break;case 25:return m=e,STACKTOP=a,m;default:assert(0,"bad label: "+b)}}
function _PixarLogVGetField(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k;e=m;g=d;f=c;k=HEAP32[(e+576|0)>>2];a=g;a=65558==(a|0)?2:65549==(a|0)?3:4;break;case 2:var a=HEAP32[(k+136|0)>>2],h=f,h=(tempInt=HEAP32[h+4>>2],HEAP32[h+4>>2]=tempInt+8,HEAP32[HEAP32[h>>2]+tempInt>>2]);HEAP32[h>>2]=a;a=5;break;case 3:a=HEAP32[(k+132|0)>>2];h=f;h=(tempInt=HEAP32[h+4>>2],HEAP32[h+4>>2]=tempInt+8,HEAP32[HEAP32[h>>2]+tempInt>>2]);HEAP32[h>>2]=a;a=5;break;case 4:b=FUNCTION_TABLE[HEAP32[(k+140|0)>>2]](e,
g,f);a=6;break;case 5:b=1;a=6;break;case 6:return b;default:assert(0,"bad label: "+a)}}
function _PixarLogVSetField(m,d,c){var a=0,b=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l;g=m;f=d;k=c;h=HEAP32[(g+576|0)>>2];a=f;a=65558==(a|0)?2:65549==(a|0)?8:18;break;case 2:a=k;a=(tempInt=HEAP32[a+4>>2],HEAP32[a+4>>2]=tempInt+8,HEAP32[HEAP32[a>>2]+tempInt>>2]);HEAP32[(h+136|0)>>2]=a;a=0!=(HEAP32[(g+8|0)>>2]|0)?3:7;break;case 3:a=0!=(HEAP32[(h+128|0)>>2]&1|0)?4:7;break;case 4:a=0!=(_deflateParams(h+64|0,HEAP32[(h+136|0)>>2],0)|0)?5:6;break;case 5:e=HEAP32[((h+
64|0)+24|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],147832,28360,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=0;a=20;break;case 6:a=7;break;case 7:e=1;a=20;break;case 8:a=k;a=(tempInt=HEAP32[a+4>>2],HEAP32[a+4>>2]=tempInt+8,HEAP32[HEAP32[a>>2]+tempInt>>2]);HEAP32[(h+132|0)>>2]=a;a=HEAP32[(h+132|0)>>2];a=0==(a|0)|1==(a|0)?9:2==(a|0)?10:3==(a|0)?11:4==(a|0)?12:5==(a|0)?13:14;break;case 9:_TIFFSetField(g,258,(tempInt=STACKTOP,STACKTOP=STACKTOP+
8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=8,tempInt));_TIFFSetField(g,339,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=1,tempInt));a=14;break;case 10:_TIFFSetField(g,258,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=16,tempInt));_TIFFSetField(g,339,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=1,tempInt));a=14;break;case 11:_TIFFSetField(g,
258,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=16,tempInt));_TIFFSetField(g,339,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=2,tempInt));a=14;break;case 12:_TIFFSetField(g,258,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=16,tempInt));_TIFFSetField(g,339,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>
2]=1,tempInt));a=14;break;case 13:_TIFFSetField(g,258,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=32,tempInt));_TIFFSetField(g,339,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=3,tempInt));a=14;break;case 14:a=0!=(HEAP32[(g+12|0)>>2]&1024|0)?15:16;break;case 15:var n=_TIFFTileSize(g),a=17;break;case 16:n=-1;a=17;break;case 17:HEAP32[(g+496|0)>>2]=n;l=_TIFFScanlineSize(g);HEAP32[(g+580|0)>>2]=l;l=
1;a=19;break;case 18:l=FUNCTION_TABLE[HEAP32[(h+144|0)>>2]](g,f,k);a=19;break;case 19:e=l;a=20;break;case 20:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _PixarLogPreEncode(m,d){var c=0,a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e,g;e=m;g=HEAP32[(e+576|0)>>2];c=0!=(g|0)?2:3;break;case 2:c=4;break;case 3:throw ___assert_func(27272,903,44424,22960),"Reached an unreachable!";case 4:HEAP32[((g+64|0)+12|0)>>2]=HEAP32[(e+588|0)>>2];HEAP32[((g+64|0)+16|0)>>2]=HEAP32[(e+592|0)>>2];c=(HEAP32[((g+64|0)+16|0)>>2]|0)!=(HEAP32[(e+592|0)>>2]|0)?5:6;break;case 5:_TIFFErrorExt(HEAP32[(e+628|0)>>2],147904,24808,(tempInt=
STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=0;c=7;break;case 6:b=0==(_deflateReset(g+64|0)|0)&1;c=7;break;case 7:return c=b,STACKTOP=a,c;default:assert(0,"bad label: "+c)}}
function _PixarLogCleanup(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;c=m;a=HEAP32[(c+576|0)>>2];d=0!=(a|0)?2:3;break;case 2:d=4;break;case 3:throw ___assert_func(27272,1231,44488,27024),"Reached an unreachable!";case 4:_TIFFPredictorCleanup(c);HEAP32[((c+668|0)+4|0)>>2]=HEAP32[(a+140|0)>>2];HEAP32[(c+668|0)>>2]=HEAP32[(a+144|0)>>2];d=0!=(HEAP32[(a+160|0)>>2]|0)?5:6;break;case 5:__TIFFfree(HEAP32[(a+160|0)>>2]);d=6;break;case 6:d=0!=(HEAP32[(a+164|0)>>2]|0)?7:8;break;case 7:__TIFFfree(HEAP32[(a+
164|0)>>2]);d=8;break;case 8:d=0!=(HEAP32[(a+168|0)>>2]|0)?9:10;break;case 9:__TIFFfree(HEAP32[(a+168|0)>>2]);d=10;break;case 10:d=0!=(HEAP32[(a+148|0)>>2]|0)?11:12;break;case 11:__TIFFfree(HEAP32[(a+148|0)>>2]);d=12;break;case 12:d=0!=(HEAP32[(a+152|0)>>2]|0)?13:14;break;case 13:__TIFFfree(HEAP32[(a+152|0)>>2]);d=14;break;case 14:d=0!=(HEAP32[(a+156|0)>>2]|0)?15:16;break;case 15:__TIFFfree(HEAP32[(a+156|0)>>2]);d=16;break;case 16:d=0!=(HEAP32[(a+128|0)>>2]&1|0)?17:21;break;case 17:d=0==(HEAP32[(c+
8|0)>>2]|0)?18:19;break;case 18:_inflateEnd(a+64|0);d=20;break;case 19:_deflateEnd(a+64|0);d=20;break;case 20:d=21;break;case 21:d=0!=(HEAP32[(a+120|0)>>2]|0)?22:23;break;case 22:__TIFFfree(HEAP32[(a+120|0)>>2]);d=23;break;case 23:__TIFFfree(a);HEAP32[(c+576|0)>>2]=0;__TIFFSetDefaultCompressionState(c);return;default:assert(0,"bad label: "+d)}}
function _PixarLogMakeTables(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b,e,g,f,k,h,l,n,p,q,t,r,s,v;a=m;h=Math.log(1.004);b=1/h&-1;h=1/(b|0);k=Math.exp(1250*-h);e=k*h;l=Math.exp(1);l*=e;HEAPF32[37070]=1/h;HEAPF32[37068]=1/k;e=(2/l&-1)+1|0;r=__TIFFmalloc(e<<1);s=__TIFFmalloc(32768);v=__TIFFmalloc(512);p=__TIFFmalloc(8196);q=__TIFFmalloc(4098);t=__TIFFmalloc(2049);d=0==(r|0)?7:2;break;case 2:d=0==(s|0)?7:3;break;case 3:d=0==(v|0)?7:4;break;case 4:d=0==(p|0)?7:5;break;case 5:d=0==(q|0)?7:6;break;
case 6:d=0==(t|0)?7:20;break;case 7:d=0!=(r|0)?8:9;break;case 8:__TIFFfree(r);d=9;break;case 9:d=0!=(s|0)?10:11;break;case 10:__TIFFfree(s);d=11;break;case 11:d=0!=(v|0)?12:13;break;case 12:__TIFFfree(v);d=13;break;case 13:d=0!=(p|0)?14:15;break;case 14:__TIFFfree(p);d=15;break;case 15:d=0!=(q|0)?16:17;break;case 16:__TIFFfree(q);d=17;break;case 17:d=0!=(t|0)?18:19;break;case 18:__TIFFfree(t);d=19;break;case 19:HEAP32[(a+160|0)>>2]=0;HEAP32[(a+164|0)>>2]=0;HEAP32[(a+168|0)>>2]=0;HEAP32[(a+148|0)>>
2]=0;HEAP32[(a+152|0)>>2]=0;c=HEAP32[(a+156|0)>>2]=0;d=59;break;case 20:g=f=0;d=21;break;case 21:d=(g|0)<(b|0)?22:24;break;case 22:var d=n=(g|0)*l,u=f;f=u+1|0;HEAPF32[(p+(u<<2)|0)>>2]=d;d=23;break;case 23:g=g+1|0;d=21;break;case 24:g=b;d=25;break;case 25:d=2048>(g|0)?26:28;break;case 26:d=k;u=Math.exp(h*(g|0));d*=u;u=f;f=u+1|0;HEAPF32[(p+(u<<2)|0)>>2]=d;d=27;break;case 27:g=g+1|0;d=25;break;case 28:HEAPF32[(p+8192|0)>>2]=HEAPF32[(p+8188|0)>>2];g=0;d=29;break;case 29:d=2049>(g|0)?30:38;break;case 30:n=
65535*HEAPF32[(p+(g<<2)|0)>>2]+0.5;d=65535<n?31:32;break;case 31:var w=65535,d=33;break;case 32:w=n;w=(0<=w?Math.floor(w):Math.ceil(w))&65535;d=33;break;case 33:HEAP16[(q+(g<<1)|0)>>1]=w&65535;n=255*HEAPF32[(p+(g<<2)|0)>>2]+0.5;d=255<n?34:35;break;case 34:var y=255,d=36;break;case 35:y=n;y=(0<=y?Math.floor(y):Math.ceil(y))&255;d=36;break;case 36:HEAP8[t+g|0]=y&255;d=37;break;case 37:g=g+1|0;d=29;break;case 38:g=f=0;d=39;break;case 39:d=(g|0)<(e|0)?40:44;break;case 40:d=(g|0)*l*(g|0)*l>HEAPF32[(p+
(f<<2)|0)>>2]*HEAPF32[(p+((f+1|0)<<2)|0)>>2]?41:42;break;case 41:f=f+1|0;d=42;break;case 42:HEAP16[(r+(g<<1)|0)>>1]=f&65535;d=43;break;case 43:g=g+1|0;d=39;break;case 44:g=f=0;d=45;break;case 45:d=16384>(g|0)?46:51;break;case 46:d=47;break;case 47:d=(g|0)/16383*((g|0)/16383)>HEAPF32[(p+(f<<2)|0)>>2]*HEAPF32[(p+((f+1|0)<<2)|0)>>2]?48:49;break;case 48:f=f+1|0;d=47;break;case 49:HEAP16[(s+(g<<1)|0)>>1]=f&65535;d=50;break;case 50:g=g+1|0;d=45;break;case 51:g=f=0;d=52;break;case 52:d=256>(g|0)?53:58;break;
case 53:d=54;break;case 54:d=(g|0)/255*((g|0)/255)>HEAPF32[(p+(f<<2)|0)>>2]*HEAPF32[(p+((f+1|0)<<2)|0)>>2]?55:56;break;case 55:f=f+1|0;d=54;break;case 56:HEAP16[(v+(g<<1)|0)>>1]=f&65535;d=57;break;case 57:g=g+1|0;d=52;break;case 58:HEAPF32[37096]=(e|0)/2&-1|0;HEAP32[(a+148|0)>>2]=p;HEAP32[(a+152|0)>>2]=q;HEAP32[(a+156|0)>>2]=t;HEAP32[(a+160|0)>>2]=r;HEAP32[(a+164|0)>>2]=s;HEAP32[(a+168|0)>>2]=v;c=1;d=59;break;case 59:return c;default:assert(0,"bad label: "+d)}}
function _horizontalDifferenceF(m,d,c,a,b){for(var e=0,e=1;;)switch(e){case 1:var g,f,k,h,l,n,p,q,t,r,s,v,u,w,y,A,z;g=m;f=d;k=c;h=a;l=b;y=HEAPF32[37096];w=2047;e=(f|0)>=(k|0)?2:168;break;case 2:e=3==(k|0)?3:61;break;case 3:e=0>HEAPF32[(g|0)>>2]?4:5;break;case 4:var x=0,e=12;break;case 5:e=2>HEAPF32[(g|0)>>2]?6:7;break;case 6:var B=HEAP16[(l+((HEAPF32[(g|0)>>2]*y&-1)<<1)|0)>>1]&65535|0,e=11;break;case 7:e=24.200000762939453<HEAPF32[(g|0)>>2]?8:9;break;case 8:var C=2047,e=10;break;case 9:var D=HEAPF32[37070],
F=Math.log(HEAPF32[(g|0)>>2]*HEAPF32[37068]),C=D*F+0.5,e=10;break;case 10:B=C;e=11;break;case 11:x=B;e=12;break;case 12:var I=0<=x?Math.floor(x):Math.ceil(x);HEAP16[(h|0)>>1]=I;r=I&65535;e=0>HEAPF32[(g+4|0)>>2]?13:14;break;case 13:var G=0,e=21;break;case 14:e=2>HEAPF32[(g+4|0)>>2]?15:16;break;case 15:var H=HEAP16[(l+((HEAPF32[(g+4|0)>>2]*y&-1)<<1)|0)>>1]&65535|0,e=20;break;case 16:e=24.200000762939453<HEAPF32[(g+4|0)>>2]?17:18;break;case 17:var K=2047,e=19;break;case 18:var J=HEAPF32[37070],E=Math.log(HEAPF32[(g+
4|0)>>2]*HEAPF32[37068]),K=J*E+0.5,e=19;break;case 19:H=K;e=20;break;case 20:G=H;e=21;break;case 21:var L=0<=G?Math.floor(G):Math.ceil(G);HEAP16[(h+2|0)>>1]=L;s=L&65535;e=0>HEAPF32[(g+8|0)>>2]?22:23;break;case 22:var Q=0,e=30;break;case 23:e=2>HEAPF32[(g+8|0)>>2]?24:25;break;case 24:var N=HEAP16[(l+((HEAPF32[(g+8|0)>>2]*y&-1)<<1)|0)>>1]&65535|0,e=29;break;case 25:e=24.200000762939453<HEAPF32[(g+8|0)>>2]?26:27;break;case 26:var P=2047,e=28;break;case 27:var W=HEAPF32[37070],O=Math.log(HEAPF32[(g+8|
0)>>2]*HEAPF32[37068]),P=W*O+0.5,e=28;break;case 28:N=P;e=29;break;case 29:Q=N;e=30;break;case 30:var T=0<=Q?Math.floor(Q):Math.ceil(Q);HEAP16[(h+4|0)>>1]=T;v=T&65535;f=f-3|0;e=31;break;case 31:e=0<(f|0)?32:60;break;case 32:f=f-3|0;h=h+6|0;g=g+12|0;e=0>HEAPF32[(g|0)>>2]?33:34;break;case 33:var Y=0,e=41;break;case 34:e=2>HEAPF32[(g|0)>>2]?35:36;break;case 35:var S=HEAP16[(l+((HEAPF32[(g|0)>>2]*y&-1)<<1)|0)>>1]&65535|0,e=40;break;case 36:e=24.200000762939453<HEAPF32[(g|0)>>2]?37:38;break;case 37:var X=
2047,e=39;break;case 38:var R=HEAPF32[37070],V=Math.log(HEAPF32[(g|0)>>2]*HEAPF32[37068]),X=R*V+0.5,e=39;break;case 39:S=X;e=40;break;case 40:Y=S;e=41;break;case 41:n=Y&-1;HEAP16[(h|0)>>1]=(n-r|0)&w&65535;r=n;e=0>HEAPF32[(g+4|0)>>2]?42:43;break;case 42:var aa=0,e=50;break;case 43:e=2>HEAPF32[(g+4|0)>>2]?44:45;break;case 44:var fa=HEAP16[(l+((HEAPF32[(g+4|0)>>2]*y&-1)<<1)|0)>>1]&65535|0,e=49;break;case 45:e=24.200000762939453<HEAPF32[(g+4|0)>>2]?46:47;break;case 46:var Z=2047,e=48;break;case 47:var ka=
HEAPF32[37070],M=Math.log(HEAPF32[(g+4|0)>>2]*HEAPF32[37068]),Z=ka*M+0.5,e=48;break;case 48:fa=Z;e=49;break;case 49:aa=fa;e=50;break;case 50:p=aa&-1;HEAP16[(h+2|0)>>1]=(p-s|0)&w&65535;s=p;e=0>HEAPF32[(g+8|0)>>2]?51:52;break;case 51:var ga=0,e=59;break;case 52:e=2>HEAPF32[(g+8|0)>>2]?53:54;break;case 53:var na=HEAP16[(l+((HEAPF32[(g+8|0)>>2]*y&-1)<<1)|0)>>1]&65535|0,e=58;break;case 54:e=24.200000762939453<HEAPF32[(g+8|0)>>2]?55:56;break;case 55:var ba=2047,e=57;break;case 56:var ca=HEAPF32[37070],
oa=Math.log(HEAPF32[(g+8|0)>>2]*HEAPF32[37068]),ba=ca*oa+0.5,e=57;break;case 57:na=ba;e=58;break;case 58:ga=na;e=59;break;case 59:q=ga&-1;HEAP16[(h+4|0)>>1]=(q-v|0)&w&65535;v=q;e=31;break;case 60:e=167;break;case 61:e=4==(k|0)?62:138;break;case 62:e=0>HEAPF32[(g|0)>>2]?63:64;break;case 63:var va=0,e=71;break;case 64:e=2>HEAPF32[(g|0)>>2]?65:66;break;case 65:var pa=HEAP16[(l+((HEAPF32[(g|0)>>2]*y&-1)<<1)|0)>>1]&65535|0,e=70;break;case 66:e=24.200000762939453<HEAPF32[(g|0)>>2]?67:68;break;case 67:var la=
2047,e=69;break;case 68:var wa=HEAPF32[37070],qa=Math.log(HEAPF32[(g|0)>>2]*HEAPF32[37068]),la=wa*qa+0.5,e=69;break;case 69:pa=la;e=70;break;case 70:va=pa;e=71;break;case 71:var ea=0<=va?Math.floor(va):Math.ceil(va);HEAP16[(h|0)>>1]=ea;r=ea&65535;e=0>HEAPF32[(g+4|0)>>2]?72:73;break;case 72:var xa=0,e=80;break;case 73:e=2>HEAPF32[(g+4|0)>>2]?74:75;break;case 74:var ja=HEAP16[(l+((HEAPF32[(g+4|0)>>2]*y&-1)<<1)|0)>>1]&65535|0,e=79;break;case 75:e=24.200000762939453<HEAPF32[(g+4|0)>>2]?76:77;break;case 76:var da=
2047,e=78;break;case 77:var Ga=HEAPF32[37070],$=Math.log(HEAPF32[(g+4|0)>>2]*HEAPF32[37068]),da=Ga*$+0.5,e=78;break;case 78:ja=da;e=79;break;case 79:xa=ja;e=80;break;case 80:var ma=0<=xa?Math.floor(xa):Math.ceil(xa);HEAP16[(h+2|0)>>1]=ma;s=ma&65535;e=0>HEAPF32[(g+8|0)>>2]?81:82;break;case 81:var ra=0,e=89;break;case 82:e=2>HEAPF32[(g+8|0)>>2]?83:84;break;case 83:var Aa=HEAP16[(l+((HEAPF32[(g+8|0)>>2]*y&-1)<<1)|0)>>1]&65535|0,e=88;break;case 84:e=24.200000762939453<HEAPF32[(g+8|0)>>2]?85:86;break;
case 85:var Xa=2047,e=87;break;case 86:var Da=HEAPF32[37070],Ua=Math.log(HEAPF32[(g+8|0)>>2]*HEAPF32[37068]),Xa=Da*Ua+0.5,e=87;break;case 87:Aa=Xa;e=88;break;case 88:ra=Aa;e=89;break;case 89:var sa=0<=ra?Math.floor(ra):Math.ceil(ra);HEAP16[(h+4|0)>>1]=sa;v=sa&65535;e=0>HEAPF32[(g+12|0)>>2]?90:91;break;case 90:var ha=0,e=98;break;case 91:e=2>HEAPF32[(g+12|0)>>2]?92:93;break;case 92:var U=HEAP16[(l+((HEAPF32[(g+12|0)>>2]*y&-1)<<1)|0)>>1]&65535|0,e=97;break;case 93:e=24.200000762939453<HEAPF32[(g+12|
0)>>2]?94:95;break;case 94:var gb=2047,e=96;break;case 95:var Ka=HEAPF32[37070],Ia=Math.log(HEAPF32[(g+12|0)>>2]*HEAPF32[37068]),gb=Ka*Ia+0.5,e=96;break;case 96:U=gb;e=97;break;case 97:ha=U;e=98;break;case 98:var ia=0<=ha?Math.floor(ha):Math.ceil(ha);HEAP16[(h+6|0)>>1]=ia;u=ia&65535;f=f-4|0;e=99;break;case 99:e=0<(f|0)?100:137;break;case 100:f=f-4|0;h=h+8|0;g=g+16|0;e=0>HEAPF32[(g|0)>>2]?101:102;break;case 101:var Ba=0,e=109;break;case 102:e=2>HEAPF32[(g|0)>>2]?103:104;break;case 103:var Ra=HEAP16[(l+
((HEAPF32[(g|0)>>2]*y&-1)<<1)|0)>>1]&65535|0,e=108;break;case 104:e=24.200000762939453<HEAPF32[(g|0)>>2]?105:106;break;case 105:var Sa=2047,e=107;break;case 106:var ib=HEAPF32[37070],ua=Math.log(HEAPF32[(g|0)>>2]*HEAPF32[37068]),Sa=ib*ua+0.5,e=107;break;case 107:Ra=Sa;e=108;break;case 108:Ba=Ra;e=109;break;case 109:n=Ba&-1;HEAP16[(h|0)>>1]=(n-r|0)&w&65535;r=n;e=0>HEAPF32[(g+4|0)>>2]?110:111;break;case 110:var Va=0,e=118;break;case 111:e=2>HEAPF32[(g+4|0)>>2]?112:113;break;case 112:var eb=HEAP16[(l+
((HEAPF32[(g+4|0)>>2]*y&-1)<<1)|0)>>1]&65535|0,e=117;break;case 113:e=24.200000762939453<HEAPF32[(g+4|0)>>2]?114:115;break;case 114:var Ea=2047,e=116;break;case 115:var Ya=HEAPF32[37070],La=Math.log(HEAPF32[(g+4|0)>>2]*HEAPF32[37068]),Ea=Ya*La+0.5,e=116;break;case 116:eb=Ea;e=117;break;case 117:Va=eb;e=118;break;case 118:p=Va&-1;HEAP16[(h+2|0)>>1]=(p-s|0)&w&65535;s=p;e=0>HEAPF32[(g+8|0)>>2]?119:120;break;case 119:var Ma=0,e=127;break;case 120:e=2>HEAPF32[(g+8|0)>>2]?121:122;break;case 121:var Fa=
HEAP16[(l+((HEAPF32[(g+8|0)>>2]*y&-1)<<1)|0)>>1]&65535|0,e=126;break;case 122:e=24.200000762939453<HEAPF32[(g+8|0)>>2]?123:124;break;case 123:var Na=2047,e=125;break;case 124:var Oa=HEAPF32[37070],jb=Math.log(HEAPF32[(g+8|0)>>2]*HEAPF32[37068]),Na=Oa*jb+0.5,e=125;break;case 125:Fa=Na;e=126;break;case 126:Ma=Fa;e=127;break;case 127:q=Ma&-1;HEAP16[(h+4|0)>>1]=(q-v|0)&w&65535;v=q;e=0>HEAPF32[(g+12|0)>>2]?128:129;break;case 128:var Za=0,e=136;break;case 129:e=2>HEAPF32[(g+12|0)>>2]?130:131;break;case 130:var Ca=
HEAP16[(l+((HEAPF32[(g+12|0)>>2]*y&-1)<<1)|0)>>1]&65535|0,e=135;break;case 131:e=24.200000762939453<HEAPF32[(g+12|0)>>2]?132:133;break;case 132:var $a=2047,e=134;break;case 133:var ab=HEAPF32[37070],Ha=Math.log(HEAPF32[(g+12|0)>>2]*HEAPF32[37068]),$a=ab*Ha+0.5,e=134;break;case 134:Ca=$a;e=135;break;case 135:Za=Ca;e=136;break;case 136:t=Za&-1;HEAP16[(h+6|0)>>1]=(t-u|0)&w&65535;u=t;e=99;break;case 137:e=166;break;case 138:g=g+((f-1|0)<<2)|0;h=h+((f-1|0)<<1)|0;f=f-k|0;e=139;break;case 139:e=0<(f|0)?
140:153;break;case 140:A=k;e=141;break;case 141:A=A-1|0;e=0>HEAPF32[(g|0)>>2]?142:143;break;case 142:var Wa=0,e=150;break;case 143:e=2>HEAPF32[(g|0)>>2]?144:145;break;case 144:var bb=HEAP16[(l+((HEAPF32[(g|0)>>2]*y&-1)<<1)|0)>>1]&65535|0,e=149;break;case 145:e=24.200000762939453<HEAPF32[(g|0)>>2]?146:147;break;case 146:var Pa=2047,e=148;break;case 147:var Ja=HEAPF32[37070],cb=Math.log(HEAPF32[(g|0)>>2]*HEAPF32[37068]),Pa=Ja*cb+0.5,e=148;break;case 148:bb=Pa;e=149;break;case 149:Wa=bb;e=150;break;
case 150:var Qa=0<=Wa?Math.floor(Wa):Math.ceil(Wa);HEAP16[(h|0)>>1]=Qa;var fb=h+(k<<1)|0;HEAP16[fb>>1]=((HEAP16[fb>>1]&65535)-(HEAP16[(h|0)>>1]&65535)|0)&65535;var hb=h+(k<<1)|0;HEAP16[hb>>1]=HEAP16[hb>>1]&65535&w&65535;h=h-2|0;g=g-4|0;e=151;break;case 151:e=0<(A|0)?141:152;break;case 152:f=f-k|0;e=139;break;case 153:z=k;e=154;break;case 154:z=z-1|0;e=0>HEAPF32[(g|0)>>2]?155:156;break;case 155:var ya=0,e=163;break;case 156:e=2>HEAPF32[(g|0)>>2]?157:158;break;case 157:var db=HEAP16[(l+((HEAPF32[(g|
0)>>2]*y&-1)<<1)|0)>>1]&65535|0,e=162;break;case 158:e=24.200000762939453<HEAPF32[(g|0)>>2]?159:160;break;case 159:var Ta=2047,e=161;break;case 160:var kb=HEAPF32[37070],lb=Math.log(HEAPF32[(g|0)>>2]*HEAPF32[37068]),Ta=kb*lb+0.5,e=161;break;case 161:db=Ta;e=162;break;case 162:ya=db;e=163;break;case 163:var mb=0<=ya?Math.floor(ya):Math.ceil(ya);HEAP16[(h|0)>>1]=mb;h=h-2|0;g=g-4|0;e=164;break;case 164:e=0<(z|0)?154:165;break;case 165:e=166;break;case 166:e=167;break;case 167:e=168;break;case 168:return;
default:assert(0,"bad label: "+e)}}function _multiply_ms562(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e;a=m;b=d;e=Math.imul(a,b)|0;c=0!=(a|0)?2:4;break;case 2:c=((e|0)/(a|0)&-1|0)!=(b|0)?3:4;break;case 3:e=0;c=4;break;case 4:return e;default:assert(0,"bad label: "+c)}}
function _horizontalDifference16(m,d,c,a,b){for(var e=0,e=1;;)switch(e){case 1:var g,f,k,h,l,n,p,q,t,r,s,v;g=m;f=d;k=c;h=a;l=b;r=2047;e=(f|0)>=(k|0)?2:24;break;case 2:e=3==(k|0)?3:7;break;case 3:n=HEAP16[(l+((HEAP16[(g|0)>>1]&65535)>>2<<1)|0)>>1];HEAP16[(h|0)>>1]=n;n&=65535;p=HEAP16[(l+((HEAP16[(g+2|0)>>1]&65535)>>2<<1)|0)>>1];HEAP16[(h+2|0)>>1]=p;p&=65535;q=HEAP16[(l+((HEAP16[(g+4|0)>>1]&65535)>>2<<1)|0)>>1];HEAP16[(h+4|0)>>1]=q;q&=65535;f=f-3|0;e=4;break;case 4:e=0<(f|0)?5:6;break;case 5:f=f-3|
0;h=h+6|0;g=g+6|0;e=HEAP16[(l+((HEAP16[(g|0)>>1]&65535)>>2<<1)|0)>>1]&65535;HEAP16[(h|0)>>1]=(e-n|0)&r&65535;n=e;e=HEAP16[(l+((HEAP16[(g+2|0)>>1]&65535)>>2<<1)|0)>>1]&65535;HEAP16[(h+2|0)>>1]=(e-p|0)&r&65535;p=e;e=HEAP16[(l+((HEAP16[(g+4|0)>>1]&65535)>>2<<1)|0)>>1]&65535;HEAP16[(h+4|0)>>1]=(e-q|0)&r&65535;q=e;e=4;break;case 6:e=23;break;case 7:e=4==(k|0)?8:12;break;case 8:n=HEAP16[(l+((HEAP16[(g|0)>>1]&65535)>>2<<1)|0)>>1];HEAP16[(h|0)>>1]=n;n&=65535;p=HEAP16[(l+((HEAP16[(g+2|0)>>1]&65535)>>2<<1)|
0)>>1];HEAP16[(h+2|0)>>1]=p;p&=65535;t=HEAP16[(l+((HEAP16[(g+4|0)>>1]&65535)>>2<<1)|0)>>1];HEAP16[(h+4|0)>>1]=t;q=t&65535;t=HEAP16[(l+((HEAP16[(g+6|0)>>1]&65535)>>2<<1)|0)>>1];HEAP16[(h+6|0)>>1]=t;t&=65535;f=f-4|0;e=9;break;case 9:e=0<(f|0)?10:11;break;case 10:f=f-4|0;h=h+8|0;g=g+8|0;e=HEAP16[(l+((HEAP16[(g|0)>>1]&65535)>>2<<1)|0)>>1]&65535;HEAP16[(h|0)>>1]=(e-n|0)&r&65535;n=e;e=HEAP16[(l+((HEAP16[(g+2|0)>>1]&65535)>>2<<1)|0)>>1]&65535;HEAP16[(h+2|0)>>1]=(e-p|0)&r&65535;p=e;e=HEAP16[(l+((HEAP16[(g+
4|0)>>1]&65535)>>2<<1)|0)>>1]&65535;HEAP16[(h+4|0)>>1]=(e-q|0)&r&65535;q=e;e=HEAP16[(l+((HEAP16[(g+6|0)>>1]&65535)>>2<<1)|0)>>1]&65535;HEAP16[(h+6|0)>>1]=(e-t|0)&r&65535;t=e;e=9;break;case 11:e=22;break;case 12:g=g+((f-1|0)<<1)|0;h=h+((f-1|0)<<1)|0;f=f-k|0;e=13;break;case 13:e=0<(f|0)?14:18;break;case 14:s=k;e=15;break;case 15:s=s-1|0;HEAP16[(h|0)>>1]=HEAP16[(l+((HEAP16[(g|0)>>1]&65535)>>2<<1)|0)>>1];e=h+(k<<1)|0;HEAP16[e>>1]=((HEAP16[e>>1]&65535)-(HEAP16[(h|0)>>1]&65535)|0)&65535;e=h+(k<<1)|0;HEAP16[e>>
1]=HEAP16[e>>1]&65535&r&65535;h=h-2|0;g=g-2|0;e=16;break;case 16:e=0<(s|0)?15:17;break;case 17:f=f-k|0;e=13;break;case 18:v=k;e=19;break;case 19:v=v-1|0;HEAP16[(h|0)>>1]=HEAP16[(l+((HEAP16[(g|0)>>1]&65535)>>2<<1)|0)>>1];h=h-2|0;g=g-2|0;e=20;break;case 20:e=0<(v|0)?19:21;break;case 21:e=22;break;case 22:e=23;break;case 23:e=24;break;case 24:return;default:assert(0,"bad label: "+e)}}
function _horizontalDifference8(m,d,c,a,b){for(var e=0,e=1;;)switch(e){case 1:var g,f,k,h,l,n,p,q,t,r,s,v;g=m;f=d;k=c;h=a;l=b;r=2047;e=(f|0)>=(k|0)?2:24;break;case 2:e=3==(k|0)?3:7;break;case 3:n=HEAP16[(l+((HEAP8[g|0]&255)<<1)|0)>>1];HEAP16[(h|0)>>1]=n;n&=65535;p=HEAP16[(l+((HEAP8[g+1|0]&255)<<1)|0)>>1];HEAP16[(h+2|0)>>1]=p;p&=65535;q=HEAP16[(l+((HEAP8[g+2|0]&255)<<1)|0)>>1];HEAP16[(h+4|0)>>1]=q;q&=65535;f=f-3|0;e=4;break;case 4:e=0<(f|0)?5:6;break;case 5:f=f-3|0;e=HEAP16[(l+((HEAP8[g+3|0]&255)<<
1)|0)>>1]&65535;HEAP16[(h+6|0)>>1]=(e-n|0)&r&65535;n=e;e=HEAP16[(l+((HEAP8[g+4|0]&255)<<1)|0)>>1]&65535;HEAP16[(h+8|0)>>1]=(e-p|0)&r&65535;p=e;e=HEAP16[(l+((HEAP8[g+5|0]&255)<<1)|0)>>1]&65535;HEAP16[(h+10|0)>>1]=(e-q|0)&r&65535;q=e;h=h+6|0;g=g+3|0;e=4;break;case 6:e=23;break;case 7:e=4==(k|0)?8:12;break;case 8:n=HEAP16[(l+((HEAP8[g|0]&255)<<1)|0)>>1];HEAP16[(h|0)>>1]=n;n&=65535;p=HEAP16[(l+((HEAP8[g+1|0]&255)<<1)|0)>>1];HEAP16[(h+2|0)>>1]=p;p&=65535;t=HEAP16[(l+((HEAP8[g+2|0]&255)<<1)|0)>>1];HEAP16[(h+
4|0)>>1]=t;q=t&65535;t=HEAP16[(l+((HEAP8[g+3|0]&255)<<1)|0)>>1];HEAP16[(h+6|0)>>1]=t;t&=65535;f=f-4|0;e=9;break;case 9:e=0<(f|0)?10:11;break;case 10:f=f-4|0;e=HEAP16[(l+((HEAP8[g+4|0]&255)<<1)|0)>>1]&65535;HEAP16[(h+8|0)>>1]=(e-n|0)&r&65535;n=e;e=HEAP16[(l+((HEAP8[g+5|0]&255)<<1)|0)>>1]&65535;HEAP16[(h+10|0)>>1]=(e-p|0)&r&65535;p=e;e=HEAP16[(l+((HEAP8[g+6|0]&255)<<1)|0)>>1]&65535;HEAP16[(h+12|0)>>1]=(e-q|0)&r&65535;q=e;e=HEAP16[(l+((HEAP8[g+7|0]&255)<<1)|0)>>1]&65535;HEAP16[(h+14|0)>>1]=(e-t|0)&r&
65535;t=e;h=h+8|0;g=g+4|0;e=9;break;case 11:e=22;break;case 12:h=h+(((f+k|0)-1|0)<<1)|0;g=g+((f+k|0)-1|0)|0;f=f-k|0;e=13;break;case 13:e=0<(f|0)?14:18;break;case 14:s=k;e=15;break;case 15:s=s-1|0;HEAP16[(h|0)>>1]=HEAP16[(l+((HEAP8[g|0]&255)<<1)|0)>>1];e=h+(k<<1)|0;HEAP16[e>>1]=((HEAP16[e>>1]&65535)-(HEAP16[(h|0)>>1]&65535)|0)&65535;e=h+(k<<1)|0;HEAP16[e>>1]=HEAP16[e>>1]&65535&r&65535;h=h-2|0;g=g-1|0;e=16;break;case 16:e=0<(s|0)?15:17;break;case 17:f=f-k|0;e=13;break;case 18:v=k;e=19;break;case 19:v=
v-1|0;HEAP16[(h|0)>>1]=HEAP16[(l+((HEAP8[g|0]&255)<<1)|0)>>1];h=h-2|0;g=g-1|0;e=20;break;case 20:e=0<(v|0)?19:21;break;case 21:e=22;break;case 22:e=23;break;case 23:e=24;break;case 24:return;default:assert(0,"bad label: "+e)}}
function _PixarLogGuessDataFmt(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,d=m;c=-1;a=HEAP16[(d+46|0)>>1]&65535;d=HEAP16[(d+44|0)>>1]&65535;d=32==(d|0)?2:16==(d|0)?5:12==(d|0)?9:11==(d|0)?13:8==(d|0)?17:21;break;case 2:d=3==(a|0)?3:4;break;case 3:c=5;d=4;break;case 4:d=21;break;case 5:d=4==(a|0)?7:6;break;case 6:d=1==(a|0)?7:8;break;case 7:c=4;d=8;break;case 8:d=21;break;case 9:d=4==(a|0)?11:10;break;case 10:d=2==(a|0)?11:12;break;case 11:c=3;d=12;break;case 12:d=21;break;case 13:d=4==(a|0)?15:
14;break;case 14:d=1==(a|0)?15:16;break;case 15:c=2;d=16;break;case 16:d=21;break;case 17:d=4==(a|0)?19:18;break;case 18:d=1==(a|0)?19:20;break;case 19:c=0;d=20;break;case 20:d=21;break;case 21:return c;default:assert(0,"bad label: "+d)}}
function _horizontalAccumulateF(m,d,c,a,b){for(var e=0,e=1;;)switch(e){case 1:var g,f,k,h,l,n,p,q,t,r,s,v,u,w,y;g=m;f=d;k=c;h=a;l=b;e=(f|0)>=(k|0)?2:24;break;case 2:r=2047;e=3==(k|0)?3:7;break;case 3:n=p=HEAP16[(g|0)>>1]&65535&r;e=HEAPF32[(l+(p<<2)|0)>>2];p=q=HEAP16[(g+2|0)>>1]&65535&r;s=HEAPF32[(l+(q<<2)|0)>>2];q=v=HEAP16[(g+4|0)>>1]&65535&r;v=HEAPF32[(l+(v<<2)|0)>>2];HEAPF32[(h|0)>>2]=e;HEAPF32[(h+4|0)>>2]=s;HEAPF32[(h+8|0)>>2]=v;f=f-3|0;e=4;break;case 4:e=0<(f|0)?5:6;break;case 5:g=g+6|0;h=h+12|
0;f=f-3|0;n=e=n+(HEAP16[(g|0)>>1]&65535)|0;e=HEAPF32[(l+((e&r)<<2)|0)>>2];p=s=p+(HEAP16[(g+2|0)>>1]&65535)|0;s=HEAPF32[(l+((s&r)<<2)|0)>>2];q=v=q+(HEAP16[(g+4|0)>>1]&65535)|0;v=HEAPF32[(l+((v&r)<<2)|0)>>2];HEAPF32[(h|0)>>2]=e;HEAPF32[(h+4|0)>>2]=s;HEAPF32[(h+8|0)>>2]=v;e=4;break;case 6:e=23;break;case 7:e=4==(k|0)?8:12;break;case 8:n=p=HEAP16[(g|0)>>1]&65535&r;e=HEAPF32[(l+(p<<2)|0)>>2];p=t=HEAP16[(g+2|0)>>1]&65535&r;s=HEAPF32[(l+(t<<2)|0)>>2];q=t=HEAP16[(g+4|0)>>1]&65535&r;v=HEAPF32[(l+(t<<2)|0)>>
2];t=u=HEAP16[(g+6|0)>>1]&65535&r;u=HEAPF32[(l+(u<<2)|0)>>2];HEAPF32[(h|0)>>2]=e;HEAPF32[(h+4|0)>>2]=s;HEAPF32[(h+8|0)>>2]=v;HEAPF32[(h+12|0)>>2]=u;f=f-4|0;e=9;break;case 9:e=0<(f|0)?10:11;break;case 10:g=g+8|0;h=h+16|0;f=f-4|0;n=e=n+(HEAP16[(g|0)>>1]&65535)|0;e=HEAPF32[(l+((e&r)<<2)|0)>>2];p=s=p+(HEAP16[(g+2|0)>>1]&65535)|0;s=HEAPF32[(l+((s&r)<<2)|0)>>2];q=v=q+(HEAP16[(g+4|0)>>1]&65535)|0;v=HEAPF32[(l+((v&r)<<2)|0)>>2];t=u=t+(HEAP16[(g+6|0)>>1]&65535)|0;u=HEAPF32[(l+((u&r)<<2)|0)>>2];HEAPF32[(h|
0)>>2]=e;HEAPF32[(h+4|0)>>2]=s;HEAPF32[(h+8|0)>>2]=v;HEAPF32[(h+12|0)>>2]=u;e=9;break;case 11:e=22;break;case 12:w=k;e=13;break;case 13:w=w-1|0;HEAPF32[h>>2]=HEAPF32[(l+((HEAP16[g>>1]&65535&r)<<2)|0)>>2];g=g+2|0;h=h+4|0;e=14;break;case 14:e=0<(w|0)?13:15;break;case 15:f=f-k|0;e=16;break;case 16:e=0<(f|0)?17:21;break;case 17:y=k;e=18;break;case 18:y=y-1|0;e=g+(k<<1)|0;HEAP16[e>>1]=((HEAP16[e>>1]&65535)+(HEAP16[g>>1]&65535)|0)&65535;HEAPF32[h>>2]=HEAPF32[(l+((HEAP16[g>>1]&65535&r)<<2)|0)>>2];g=g+2|
0;h=h+4|0;e=19;break;case 19:e=0<(y|0)?18:20;break;case 20:f=f-k|0;e=16;break;case 21:e=22;break;case 22:e=23;break;case 23:e=24;break;case 24:return;default:assert(0,"bad label: "+e)}}
function _horizontalAccumulate16(m,d,c,a,b){for(var e=0,e=1;;)switch(e){case 1:var g,f,k,h,l,n,p,q,t,r,s,v;g=m;f=d;k=c;h=a;l=b;e=(f|0)>=(k|0)?2:24;break;case 2:r=2047;e=3==(k|0)?3:7;break;case 3:n=p=HEAP16[(g|0)>>1]&65535&r;HEAP16[(h|0)>>1]=HEAP16[(l+(p<<1)|0)>>1];p=q=HEAP16[(g+2|0)>>1]&65535&r;HEAP16[(h+2|0)>>1]=HEAP16[(l+(q<<1)|0)>>1];q=e=HEAP16[(g+4|0)>>1]&65535&r;HEAP16[(h+4|0)>>1]=HEAP16[(l+(e<<1)|0)>>1];f=f-3|0;e=4;break;case 4:e=0<(f|0)?5:6;break;case 5:g=g+6|0;h=h+6|0;f=f-3|0;n=e=n+(HEAP16[(g|
0)>>1]&65535)|0;HEAP16[(h|0)>>1]=HEAP16[(l+((e&r)<<1)|0)>>1];p=e=p+(HEAP16[(g+2|0)>>1]&65535)|0;HEAP16[(h+2|0)>>1]=HEAP16[(l+((e&r)<<1)|0)>>1];q=e=q+(HEAP16[(g+4|0)>>1]&65535)|0;HEAP16[(h+4|0)>>1]=HEAP16[(l+((e&r)<<1)|0)>>1];e=4;break;case 6:e=23;break;case 7:e=4==(k|0)?8:12;break;case 8:n=p=HEAP16[(g|0)>>1]&65535&r;HEAP16[(h|0)>>1]=HEAP16[(l+(p<<1)|0)>>1];p=t=HEAP16[(g+2|0)>>1]&65535&r;HEAP16[(h+2|0)>>1]=HEAP16[(l+(t<<1)|0)>>1];q=t=HEAP16[(g+4|0)>>1]&65535&r;HEAP16[(h+4|0)>>1]=HEAP16[(l+(t<<1)|0)>>
1];t=e=HEAP16[(g+6|0)>>1]&65535&r;HEAP16[(h+6|0)>>1]=HEAP16[(l+(e<<1)|0)>>1];f=f-4|0;e=9;break;case 9:e=0<(f|0)?10:11;break;case 10:g=g+8|0;h=h+8|0;f=f-4|0;n=e=n+(HEAP16[(g|0)>>1]&65535)|0;HEAP16[(h|0)>>1]=HEAP16[(l+((e&r)<<1)|0)>>1];p=e=p+(HEAP16[(g+2|0)>>1]&65535)|0;HEAP16[(h+2|0)>>1]=HEAP16[(l+((e&r)<<1)|0)>>1];q=e=q+(HEAP16[(g+4|0)>>1]&65535)|0;HEAP16[(h+4|0)>>1]=HEAP16[(l+((e&r)<<1)|0)>>1];t=e=t+(HEAP16[(g+6|0)>>1]&65535)|0;HEAP16[(h+6|0)>>1]=HEAP16[(l+((e&r)<<1)|0)>>1];e=9;break;case 11:e=22;
break;case 12:s=k;e=13;break;case 13:s=s-1|0;HEAP16[h>>1]=HEAP16[(l+((HEAP16[g>>1]&65535&r)<<1)|0)>>1];g=g+2|0;h=h+2|0;e=14;break;case 14:e=0<(s|0)?13:15;break;case 15:f=f-k|0;e=16;break;case 16:e=0<(f|0)?17:21;break;case 17:v=k;e=18;break;case 18:v=v-1|0;e=g+(k<<1)|0;HEAP16[e>>1]=((HEAP16[e>>1]&65535)+(HEAP16[g>>1]&65535)|0)&65535;HEAP16[h>>1]=HEAP16[(l+((HEAP16[g>>1]&65535&r)<<1)|0)>>1];g=g+2|0;h=h+2|0;e=19;break;case 19:e=0<(v|0)?18:20;break;case 20:f=f-k|0;e=16;break;case 21:e=22;break;case 22:e=
23;break;case 23:e=24;break;case 24:return;default:assert(0,"bad label: "+e)}}
function _horizontalAccumulate12(m,d,c,a,b){for(var e=0,e=1;;)switch(e){case 1:var g,f,k,h,l,n,p,q,t,r,s,v,u,w,y,A;g=m;f=d;k=c;h=a;l=b;e=(f|0)>=(k|0)?2:72;break;case 2:r=2047;e=3==(k|0)?3:25;break;case 3:n=p=HEAP16[(g|0)>>1]&65535&r;s=2048*HEAPF32[(l+(p<<2)|0)>>2];p=q=HEAP16[(g+2|0)>>1]&65535&r;v=2048*HEAPF32[(l+(q<<2)|0)>>2];q=u=HEAP16[(g+4|0)>>1]&65535&r;u=2048*HEAPF32[(l+(u<<2)|0)>>2];e=3071>s?4:5;break;case 4:var z=s,z=(0<=z?Math.floor(z):Math.ceil(z))&65535,e=6;break;case 5:z=3071;e=6;break;
case 6:HEAP16[(h|0)>>1]=z&65535;e=3071>v?7:8;break;case 7:var x=v,x=(0<=x?Math.floor(x):Math.ceil(x))&65535,e=9;break;case 8:x=3071;e=9;break;case 9:HEAP16[(h+2|0)>>1]=x&65535;e=3071>u?10:11;break;case 10:var B=u,B=(0<=B?Math.floor(B):Math.ceil(B))&65535,e=12;break;case 11:B=3071;e=12;break;case 12:HEAP16[(h+4|0)>>1]=B&65535;f=f-3|0;e=13;break;case 13:e=0<(f|0)?14:24;break;case 14:g=g+6|0;h=h+6|0;f=f-3|0;n=s=n+(HEAP16[(g|0)>>1]&65535)|0;s=2048*HEAPF32[(l+((s&r)<<2)|0)>>2];p=v=p+(HEAP16[(g+2|0)>>1]&
65535)|0;v=2048*HEAPF32[(l+((v&r)<<2)|0)>>2];q=u=q+(HEAP16[(g+4|0)>>1]&65535)|0;u=2048*HEAPF32[(l+((u&r)<<2)|0)>>2];e=3071>s?15:16;break;case 15:var C=s,C=(0<=C?Math.floor(C):Math.ceil(C))&65535,e=17;break;case 16:C=3071;e=17;break;case 17:HEAP16[(h|0)>>1]=C&65535;e=3071>v?18:19;break;case 18:var D=v,D=(0<=D?Math.floor(D):Math.ceil(D))&65535,e=20;break;case 19:D=3071;e=20;break;case 20:HEAP16[(h+2|0)>>1]=D&65535;e=3071>u?21:22;break;case 21:var F=u,F=(0<=F?Math.floor(F):Math.ceil(F))&65535,e=23;break;
case 22:F=3071;e=23;break;case 23:HEAP16[(h+4|0)>>1]=F&65535;e=13;break;case 24:e=71;break;case 25:e=4==(k|0)?26:54;break;case 26:n=p=HEAP16[(g|0)>>1]&65535&r;s=2048*HEAPF32[(l+(p<<2)|0)>>2];p=t=HEAP16[(g+2|0)>>1]&65535&r;v=2048*HEAPF32[(l+(t<<2)|0)>>2];q=t=HEAP16[(g+4|0)>>1]&65535&r;u=2048*HEAPF32[(l+(t<<2)|0)>>2];t=w=HEAP16[(g+6|0)>>1]&65535&r;w=2048*HEAPF32[(l+(w<<2)|0)>>2];e=3071>s?27:28;break;case 27:var I=s,I=(0<=I?Math.floor(I):Math.ceil(I))&65535,e=29;break;case 28:I=3071;e=29;break;case 29:HEAP16[(h|
0)>>1]=I&65535;e=3071>v?30:31;break;case 30:var G=v,G=(0<=G?Math.floor(G):Math.ceil(G))&65535,e=32;break;case 31:G=3071;e=32;break;case 32:HEAP16[(h+2|0)>>1]=G&65535;e=3071>u?33:34;break;case 33:var H=u,H=(0<=H?Math.floor(H):Math.ceil(H))&65535,e=35;break;case 34:H=3071;e=35;break;case 35:HEAP16[(h+4|0)>>1]=H&65535;e=3071>w?36:37;break;case 36:var K=w,K=(0<=K?Math.floor(K):Math.ceil(K))&65535,e=38;break;case 37:K=3071;e=38;break;case 38:HEAP16[(h+6|0)>>1]=K&65535;f=f-4|0;e=39;break;case 39:e=0<(f|
0)?40:53;break;case 40:g=g+8|0;h=h+8|0;f=f-4|0;n=s=n+(HEAP16[(g|0)>>1]&65535)|0;s=2048*HEAPF32[(l+((s&r)<<2)|0)>>2];p=v=p+(HEAP16[(g+2|0)>>1]&65535)|0;v=2048*HEAPF32[(l+((v&r)<<2)|0)>>2];q=w=q+(HEAP16[(g+4|0)>>1]&65535)|0;u=2048*HEAPF32[(l+((w&r)<<2)|0)>>2];t=w=t+(HEAP16[(g+6|0)>>1]&65535)|0;w=2048*HEAPF32[(l+((w&r)<<2)|0)>>2];e=3071>s?41:42;break;case 41:var J=s,J=(0<=J?Math.floor(J):Math.ceil(J))&65535,e=43;break;case 42:J=3071;e=43;break;case 43:HEAP16[(h|0)>>1]=J&65535;e=3071>v?44:45;break;case 44:var E=
v,E=(0<=E?Math.floor(E):Math.ceil(E))&65535,e=46;break;case 45:E=3071;e=46;break;case 46:HEAP16[(h+2|0)>>1]=E&65535;e=3071>u?47:48;break;case 47:var L=u,L=(0<=L?Math.floor(L):Math.ceil(L))&65535,e=49;break;case 48:L=3071;e=49;break;case 49:HEAP16[(h+4|0)>>1]=L&65535;e=3071>w?50:51;break;case 50:var Q=w,Q=(0<=Q?Math.floor(Q):Math.ceil(Q))&65535,e=52;break;case 51:Q=3071;e=52;break;case 52:HEAP16[(h+6|0)>>1]=Q&65535;e=39;break;case 53:e=70;break;case 54:y=k;e=55;break;case 55:y=y-1|0;s=2048*HEAPF32[(l+
((HEAP16[g>>1]&65535&r)<<2)|0)>>2];e=3071>s?56:57;break;case 56:var N=s,N=(0<=N?Math.floor(N):Math.ceil(N))&65535,e=58;break;case 57:N=3071;e=58;break;case 58:HEAP16[h>>1]=N&65535;g=g+2|0;h=h+2|0;e=59;break;case 59:e=0<(y|0)?55:60;break;case 60:f=f-k|0;e=61;break;case 61:e=0<(f|0)?62:69;break;case 62:A=k;e=63;break;case 63:A=A-1|0;s=g+(k<<1)|0;HEAP16[s>>1]=((HEAP16[s>>1]&65535)+(HEAP16[g>>1]&65535)|0)&65535;s=2048*HEAPF32[(l+((HEAP16[(g+(k<<1)|0)>>1]&65535&r)<<2)|0)>>2];e=3071>s?64:65;break;case 64:var P=
s,P=(0<=P?Math.floor(P):Math.ceil(P))&65535,e=66;break;case 65:P=3071;e=66;break;case 66:HEAP16[h>>1]=P&65535;g=g+2|0;h=h+2|0;e=67;break;case 67:e=0<(A|0)?63:68;break;case 68:f=f-k|0;e=61;break;case 69:e=70;break;case 70:e=71;break;case 71:e=72;break;case 72:return;default:assert(0,"bad label: "+e)}}
function _horizontalAccumulate11(m,d,c,a){for(var b=0,b=1;;)switch(b){case 1:var e,g,f,k,h,l,n,p,q,t,r;e=m;g=d;f=c;k=a;b=(g|0)>=(f|0)?2:24;break;case 2:q=2047;b=3==(f|0)?3:7;break;case 3:h=l=HEAP16[(e|0)>>1]&65535;HEAP16[(k|0)>>1]=l&65535;l=n=HEAP16[(e+2|0)>>1]&65535;HEAP16[(k+2|0)>>1]=n&65535;n=b=HEAP16[(e+4|0)>>1]&65535;HEAP16[(k+4|0)>>1]=b&65535;g=g-3|0;b=4;break;case 4:b=0<(g|0)?5:6;break;case 5:e=e+6|0;k=k+6|0;g=g-3|0;h=b=h+(HEAP16[(e|0)>>1]&65535)|0;HEAP16[(k|0)>>1]=b&q&65535;l=b=l+(HEAP16[(e+
2|0)>>1]&65535)|0;HEAP16[(k+2|0)>>1]=b&q&65535;n=b=n+(HEAP16[(e+4|0)>>1]&65535)|0;HEAP16[(k+4|0)>>1]=b&q&65535;b=4;break;case 6:b=23;break;case 7:b=4==(f|0)?8:12;break;case 8:h=l=HEAP16[(e|0)>>1]&65535;HEAP16[(k|0)>>1]=l&65535;l=p=HEAP16[(e+2|0)>>1]&65535;HEAP16[(k+2|0)>>1]=p&65535;n=p=HEAP16[(e+4|0)>>1]&65535;HEAP16[(k+4|0)>>1]=p&65535;p=b=HEAP16[(e+6|0)>>1]&65535;HEAP16[(k+6|0)>>1]=b&65535;g=g-4|0;b=9;break;case 9:b=0<(g|0)?10:11;break;case 10:e=e+8|0;k=k+8|0;g=g-4|0;h=b=h+(HEAP16[(e|0)>>1]&65535)|
0;HEAP16[(k|0)>>1]=b&q&65535;l=b=l+(HEAP16[(e+2|0)>>1]&65535)|0;HEAP16[(k+2|0)>>1]=b&q&65535;n=b=n+(HEAP16[(e+4|0)>>1]&65535)|0;HEAP16[(k+4|0)>>1]=b&q&65535;p=b=p+(HEAP16[(e+6|0)>>1]&65535)|0;HEAP16[(k+6|0)>>1]=b&q&65535;b=9;break;case 11:b=22;break;case 12:t=f;b=13;break;case 13:t=t-1|0;HEAP16[k>>1]=HEAP16[e>>1]&65535&q&65535;e=e+2|0;k=k+2|0;b=14;break;case 14:b=0<(t|0)?13:15;break;case 15:g=g-f|0;b=16;break;case 16:b=0<(g|0)?17:21;break;case 17:r=f;b=18;break;case 18:r=r-1|0;b=e+(f<<1)|0;HEAP16[b>>
1]=((HEAP16[b>>1]&65535)+(HEAP16[e>>1]&65535)|0)&65535;HEAP16[k>>1]=HEAP16[e>>1]&65535&q&65535;e=e+2|0;k=k+2|0;b=19;break;case 19:b=0<(r|0)?18:20;break;case 20:g=g-f|0;b=16;break;case 21:b=22;break;case 22:b=23;break;case 23:b=24;break;case 24:return;default:assert(0,"bad label: "+b)}}
function _horizontalAccumulate8(m,d,c,a,b){for(var e=0,e=1;;)switch(e){case 1:var g,f,k,h,l,n,p,q,t,r,s,v;g=m;f=d;k=c;h=a;l=b;e=(f|0)>=(k|0)?2:24;break;case 2:r=2047;e=3==(k|0)?3:7;break;case 3:n=p=HEAP16[(g|0)>>1]&65535&r;HEAP8[h|0]=HEAP8[l+p|0];p=q=HEAP16[(g+2|0)>>1]&65535&r;HEAP8[h+1|0]=HEAP8[l+q|0];q=e=HEAP16[(g+4|0)>>1]&65535&r;HEAP8[h+2|0]=HEAP8[l+e|0];f=f-3|0;e=4;break;case 4:e=0<(f|0)?5:6;break;case 5:f=f-3|0;g=g+6|0;h=h+3|0;n=e=n+(HEAP16[(g|0)>>1]&65535)|0;HEAP8[h|0]=HEAP8[l+(e&r)|0];p=e=
p+(HEAP16[(g+2|0)>>1]&65535)|0;HEAP8[h+1|0]=HEAP8[l+(e&r)|0];q=e=q+(HEAP16[(g+4|0)>>1]&65535)|0;HEAP8[h+2|0]=HEAP8[l+(e&r)|0];e=4;break;case 6:e=23;break;case 7:e=4==(k|0)?8:12;break;case 8:n=p=HEAP16[(g|0)>>1]&65535&r;HEAP8[h|0]=HEAP8[l+p|0];p=t=HEAP16[(g+2|0)>>1]&65535&r;HEAP8[h+1|0]=HEAP8[l+t|0];q=t=HEAP16[(g+4|0)>>1]&65535&r;HEAP8[h+2|0]=HEAP8[l+t|0];t=e=HEAP16[(g+6|0)>>1]&65535&r;HEAP8[h+3|0]=HEAP8[l+e|0];f=f-4|0;e=9;break;case 9:e=0<(f|0)?10:11;break;case 10:f=f-4|0;g=g+8|0;h=h+4|0;n=e=n+(HEAP16[(g|
0)>>1]&65535)|0;HEAP8[h|0]=HEAP8[l+(e&r)|0];p=e=p+(HEAP16[(g+2|0)>>1]&65535)|0;HEAP8[h+1|0]=HEAP8[l+(e&r)|0];q=e=q+(HEAP16[(g+4|0)>>1]&65535)|0;HEAP8[h+2|0]=HEAP8[l+(e&r)|0];t=e=t+(HEAP16[(g+6|0)>>1]&65535)|0;HEAP8[h+3|0]=HEAP8[l+(e&r)|0];e=9;break;case 11:e=22;break;case 12:s=k;e=13;break;case 13:s=s-1|0;HEAP8[h]=HEAP8[l+(HEAP16[g>>1]&65535&r)|0];g=g+2|0;h=h+1|0;e=14;break;case 14:e=0<(s|0)?13:15;break;case 15:f=f-k|0;e=16;break;case 16:e=0<(f|0)?17:21;break;case 17:v=k;e=18;break;case 18:v=v-1|
0;e=g+(k<<1)|0;HEAP16[e>>1]=((HEAP16[e>>1]&65535)+(HEAP16[g>>1]&65535)|0)&65535;HEAP8[h]=HEAP8[l+(HEAP16[g>>1]&65535&r)|0];g=g+2|0;h=h+1|0;e=19;break;case 19:e=0<(v|0)?18:20;break;case 20:f=f-k|0;e=16;break;case 21:e=22;break;case 22:e=23;break;case 23:e=24;break;case 24:return;default:assert(0,"bad label: "+e)}}
function _horizontalAccumulate8abgr(m,d,c,a,b){for(var e=0,e=1;;)switch(e){case 1:var g,f,k,h,l,n,p,q,t,r,s,v,u,w,y;g=m;f=d;k=c;h=a;l=b;e=(f|0)>=(k|0)?2:24;break;case 2:r=2047;e=3==(k|0)?3:7;break;case 3:HEAP8[h|0]=0;q=p=HEAP16[(g+4|0)>>1]&65535&r;e=HEAP8[l+p|0];p=n=HEAP16[(g+2|0)>>1]&65535&r;v=HEAP8[l+n|0];n=s=HEAP16[(g|0)>>1]&65535&r;u=HEAP8[l+s|0];HEAP8[h+1|0]=e;HEAP8[h+2|0]=v;HEAP8[h+3|0]=u;f=f-3|0;e=4;break;case 4:e=0<(f|0)?5:6;break;case 5:f=f-3|0;g=g+6|0;h=h+4|0;HEAP8[h|0]=0;q=e=q+(HEAP16[(g+
4|0)>>1]&65535)|0;e=HEAP8[l+(e&r)|0];p=s=p+(HEAP16[(g+2|0)>>1]&65535)|0;v=HEAP8[l+(s&r)|0];n=s=n+(HEAP16[(g|0)>>1]&65535)|0;u=HEAP8[l+(s&r)|0];HEAP8[h+1|0]=e;HEAP8[h+2|0]=v;HEAP8[h+3|0]=u;e=4;break;case 6:e=23;break;case 7:e=4==(k|0)?8:12;break;case 8:t=q=HEAP16[(g+6|0)>>1]&65535&r;s=HEAP8[l+q|0];q=p=HEAP16[(g+4|0)>>1]&65535&r;e=HEAP8[l+p|0];p=n=HEAP16[(g+2|0)>>1]&65535&r;v=HEAP8[l+n|0];n=u=HEAP16[(g|0)>>1]&65535&r;u=HEAP8[l+u|0];HEAP8[h|0]=s;HEAP8[h+1|0]=e;HEAP8[h+2|0]=v;HEAP8[h+3|0]=u;f=f-4|0;e=
9;break;case 9:e=0<(f|0)?10:11;break;case 10:f=f-4|0;g=g+8|0;h=h+4|0;t=e=t+(HEAP16[(g+6|0)>>1]&65535)|0;s=HEAP8[l+(e&r)|0];q=e=q+(HEAP16[(g+4|0)>>1]&65535)|0;e=HEAP8[l+(e&r)|0];p=v=p+(HEAP16[(g+2|0)>>1]&65535)|0;v=HEAP8[l+(v&r)|0];n=u=n+(HEAP16[(g|0)>>1]&65535)|0;u=HEAP8[l+(u&r)|0];HEAP8[h|0]=s;HEAP8[h+1|0]=e;HEAP8[h+2|0]=v;HEAP8[h+3|0]=u;e=9;break;case 11:e=22;break;case 12:w=k;e=13;break;case 13:w=w-1|0;HEAP8[h]=HEAP8[l+(HEAP16[g>>1]&65535&r)|0];g=g+2|0;h=h+1|0;e=14;break;case 14:e=0<(w|0)?13:15;
break;case 15:f=f-k|0;e=16;break;case 16:e=0<(f|0)?17:21;break;case 17:y=k;e=18;break;case 18:y=y-1|0;e=g+(k<<1)|0;HEAP16[e>>1]=((HEAP16[e>>1]&65535)+(HEAP16[g>>1]&65535)|0)&65535;HEAP8[h]=HEAP8[l+(HEAP16[g>>1]&65535&r)|0];g=g+2|0;h=h+1|0;e=19;break;case 19:e=0<(y|0)?18:20;break;case 20:f=f-k|0;e=16;break;case 21:e=22;break;case 22:e=23;break;case 23:e=24;break;case 24:return;default:assert(0,"bad label: "+e)}}
function _PredictorPrintDir(m,d,c){var a=0,b=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k;e=m;g=d;f=c;k=HEAP32[(e+576|0)>>2];a=0!=(HEAP32[((e+40|0)+8|0)>>2]&4|0)?2:7;break;case 2:_fprintf(g,34240,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=HEAP32[(k|0)>>2];a=1==(a|0)?3:2==(a|0)?4:3==(a|0)?5:6;break;case 3:_fprintf(g,33728,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=
STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=6;break;case 4:_fprintf(g,33224,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=6;break;case 5:_fprintf(g,32920,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));a=6;break;case 6:var a=HEAP32[(k|0)>>2],h=HEAP32[(k|0)>>2];_fprintf(g,32480,(tempInt=
STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,HEAP32[tempInt+8>>2]=h,tempInt));a=7;break;case 7:a=0!=(HEAP32[(k+52|0)>>2]|0)?8:9;break;case 8:FUNCTION_TABLE[HEAP32[(k+52|0)>>2]](e,g,f);a=9;break;case 9:STACKTOP=b;return;default:assert(0,"bad label: "+a)}}
function _TIFFPredictorInit(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e;b=m;e=HEAP32[(b+576|0)>>2];d=0!=(e|0)?2:3;break;case 2:d=4;break;case 3:throw ___assert_func(26888,705,44048,38048),"Reached an unreachable!";case 4:d=0!=(__TIFFMergeFields(b,8544,1)|0)?6:5;break;case 5:_TIFFErrorExt(HEAP32[(b+628|0)>>2],44048,32432,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));
a=0;d=7;break;case 6:HEAP32[(e+44|0)>>2]=HEAP32[((b+668|0)+4|0)>>2];HEAP32[((b+668|0)+4|0)>>2]=402;HEAP32[(e+48|0)>>2]=HEAP32[(b+668|0)>>2];HEAP32[(b+668|0)>>2]=272;HEAP32[(e+52|0)>>2]=HEAP32[((b+668|0)+8|0)>>2];HEAP32[((b+668|0)+8|0)>>2]=184;HEAP32[(e+56|0)>>2]=HEAP32[(b+508|0)>>2];HEAP32[(b+508|0)>>2]=158;HEAP32[(e+60|0)>>2]=HEAP32[(b+516|0)>>2];HEAP32[(b+516|0)>>2]=74;HEAP32[(e|0)>>2]=1;HEAP32[(e+24|0)>>2]=0;HEAP32[(e+40|0)>>2]=0;a=1;d=7;break;case 7:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+
d)}}
function _PredictorVGetField(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k;e=m;g=d;f=c;k=HEAP32[(e+576|0)>>2];a=0!=(k|0)?2:3;break;case 2:a=4;break;case 3:throw ___assert_func(26888,668,44256,28344),"Reached an unreachable!";case 4:a=0!=(HEAP32[(k+44|0)>>2]|0)?5:6;break;case 5:a=7;break;case 6:throw ___assert_func(26888,669,44256,31928),"Reached an unreachable!";case 7:a=317==(g|0)?8:9;break;case 8:var a=HEAP32[(k|0)>>2]&65535,h=f,h=(tempInt=HEAP32[h+4>>2],HEAP32[h+4>>2]=tempInt+8,HEAP32[HEAP32[h>>2]+
tempInt>>2]);HEAP16[h>>1]=a;a=10;break;case 9:b=FUNCTION_TABLE[HEAP32[(k+44|0)>>2]](e,g,f);a=11;break;case 10:b=1;a=11;break;case 11:return b;default:assert(0,"bad label: "+a)}}
function _PredictorVSetField(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k;e=m;g=d;f=c;k=HEAP32[(e+576|0)>>2];a=0!=(k|0)?2:3;break;case 2:a=4;break;case 3:throw ___assert_func(26888,648,44232,28344),"Reached an unreachable!";case 4:a=0!=(HEAP32[(k+48|0)>>2]|0)?5:6;break;case 5:a=7;break;case 6:throw ___assert_func(26888,649,44232,32128),"Reached an unreachable!";case 7:a=317==(g|0)?8:9;break;case 8:a=f;a=(tempInt=HEAP32[a+4>>2],HEAP32[a+4>>2]=tempInt+8,HEAP32[HEAP32[a>>2]+tempInt>>2])&65535;
HEAP32[(k|0)>>2]=a;a=(e+40|0)+8|0;HEAP32[a>>2]|=4;a=10;break;case 9:b=FUNCTION_TABLE[HEAP32[(k+48|0)>>2]](e,g,f);a=11;break;case 10:b=e+12|0;HEAP32[b>>2]|=8;b=1;a=11;break;case 11:return b;default:assert(0,"bad label: "+a)}}
function _PredictorSetupDecode(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b,e;a=m;b=HEAP32[(a+576|0)>>2];e=a+40|0;d=0!=(FUNCTION_TABLE[HEAP32[(b+56|0)>>2]](a)|0)?2:3;break;case 2:d=0!=(_PredictorSetup(a)|0)?4:3;break;case 3:c=0;d=27;break;case 4:d=2==(HEAP32[(b|0)>>2]|0)?5:19;break;case 5:d=HEAP16[(e+44|0)>>1]&65535;d=8==(d|0)?6:16==(d|0)?7:32==(d|0)?8:9;break;case 6:HEAP32[(b+40|0)>>2]=32;d=9;break;case 7:HEAP32[(b+40|0)>>2]=246;d=9;break;case 8:HEAP32[(b+40|0)>>2]=208;d=9;break;case 9:d=198!=
(HEAP32[(a+532|0)>>2]|0)?10:11;break;case 10:HEAP32[(b+28|0)>>2]=HEAP32[(a+532|0)>>2];HEAP32[(a+532|0)>>2]=198;HEAP32[(b+32|0)>>2]=HEAP32[(a+540|0)>>2];HEAP32[(a+540|0)>>2]=110;HEAP32[(b+36|0)>>2]=HEAP32[(a+548|0)>>2];HEAP32[(a+548|0)>>2]=110;d=11;break;case 11:d=0!=(HEAP32[(a+12|0)>>2]&128|0)?12:18;break;case 12:d=246==(HEAP32[(b+40|0)>>2]|0)?13:14;break;case 13:HEAP32[(b+40|0)>>2]=400;HEAP32[(a+652|0)>>2]=376;d=17;break;case 14:d=208==(HEAP32[(b+40|0)>>2]|0)?15:16;break;case 15:HEAP32[(b+40|0)>>
2]=264;HEAP32[(a+652|0)>>2]=376;d=16;break;case 16:d=17;break;case 17:d=18;break;case 18:d=26;break;case 19:d=3==(HEAP32[(b|0)>>2]|0)?20:25;break;case 20:HEAP32[(b+40|0)>>2]=102;d=198!=(HEAP32[(a+532|0)>>2]|0)?21:22;break;case 21:HEAP32[(b+28|0)>>2]=HEAP32[(a+532|0)>>2];HEAP32[(a+532|0)>>2]=198;HEAP32[(b+32|0)>>2]=HEAP32[(a+540|0)>>2];HEAP32[(a+540|0)>>2]=110;HEAP32[(b+36|0)>>2]=HEAP32[(a+548|0)>>2];HEAP32[(a+548|0)>>2]=110;d=22;break;case 22:d=0!=(HEAP32[(a+12|0)>>2]&128|0)?23:24;break;case 23:HEAP32[(a+
652|0)>>2]=376;d=24;break;case 24:d=25;break;case 25:d=26;break;case 26:c=1;d=27;break;case 27:return c;default:assert(0,"bad label: "+d)}}
function _PredictorSetupEncode(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b,e;a=m;b=HEAP32[(a+576|0)>>2];e=a+40|0;d=0!=(FUNCTION_TABLE[HEAP32[(b+60|0)>>2]](a)|0)?2:3;break;case 2:d=0!=(_PredictorSetup(a)|0)?4:3;break;case 3:c=0;d=18;break;case 4:d=2==(HEAP32[(b|0)>>2]|0)?5:12;break;case 5:d=HEAP16[(e+44|0)>>1]&65535;d=8==(d|0)?6:16==(d|0)?7:32==(d|0)?8:9;break;case 6:HEAP32[(b+24|0)>>2]=122;d=9;break;case 7:HEAP32[(b+24|0)>>2]=174;d=9;break;case 8:HEAP32[(b+24|0)>>2]=260;d=9;break;case 9:d=294!=
(HEAP32[(a+536|0)>>2]|0)?10:11;break;case 10:HEAP32[(b+12|0)>>2]=HEAP32[(a+536|0)>>2];HEAP32[(a+536|0)>>2]=294;HEAP32[(b+16|0)>>2]=HEAP32[(a+544|0)>>2];HEAP32[(a+544|0)>>2]=38;HEAP32[(b+20|0)>>2]=HEAP32[(a+552|0)>>2];HEAP32[(a+552|0)>>2]=38;d=11;break;case 11:d=17;break;case 12:d=3==(HEAP32[(b|0)>>2]|0)?13:16;break;case 13:HEAP32[(b+24|0)>>2]=18;d=294!=(HEAP32[(a+536|0)>>2]|0)?14:15;break;case 14:HEAP32[(b+12|0)>>2]=HEAP32[(a+536|0)>>2];HEAP32[(a+536|0)>>2]=294;HEAP32[(b+16|0)>>2]=HEAP32[(a+544|0)>>
2];HEAP32[(a+544|0)>>2]=38;HEAP32[(b+20|0)>>2]=HEAP32[(a+552|0)>>2];HEAP32[(a+552|0)>>2]=38;d=15;break;case 15:d=16;break;case 16:d=17;break;case 17:c=1;d=18;break;case 18:return c;default:assert(0,"bad label: "+d)}}
function _PredictorSetup(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e,g;b=m;e=HEAP32[(b+576|0)>>2];g=b+40|0;d=HEAP32[(e|0)>>2];d=1==(d|0)?2:2==(d|0)?3:3==(d|0)?8:11;break;case 2:a=1;d=21;break;case 3:d=8!=(HEAP16[(g+44|0)>>1]&65535|0)?4:7;break;case 4:d=16!=(HEAP16[(g+44|0)>>1]&65535|0)?5:7;break;case 5:d=32!=(HEAP16[(g+44|0)>>1]&65535|0)?6:7;break;case 6:a=HEAP16[(g+44|0)>>1]&65535;_TIFFErrorExt(HEAP32[(b+628|0)>>2],147792,39016,(tempInt=STACKTOP,
STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,tempInt));a=0;d=21;break;case 7:d=12;break;case 8:d=3!=(HEAP16[(g+46|0)>>1]&65535|0)?9:10;break;case 9:a=HEAP16[(g+46|0)>>1]&65535;_TIFFErrorExt(HEAP32[(b+628|0)>>2],147792,38064,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,tempInt));a=0;d=21;break;case 10:d=12;break;case 11:a=HEAP32[(e|0)>>2];_TIFFErrorExt(HEAP32[(b+628|0)>>2],147792,37392,(tempInt=STACKTOP,STACKTOP=
STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,tempInt));a=0;d=21;break;case 12:d=1==(HEAP16[(g+86|0)>>1]&65535|0)?13:14;break;case 13:var f=HEAP16[(g+58|0)>>1]&65535,d=15;break;case 14:f=1;d=15;break;case 15:HEAP32[(e+4|0)>>2]=f;d=0!=(HEAP32[(b+12|0)>>2]&1024|0)?16:17;break;case 16:d=_TIFFTileRowSize(b);HEAP32[(e+8|0)>>2]=d;d=18;break;case 17:d=_TIFFScanlineSize(b);HEAP32[(e+8|0)>>2]=d;d=18;break;case 18:d=0==(HEAP32[(e+8|0)>>2]|0)?19:20;break;case 19:a=0;d=21;break;case 20:a=
1;d=21;break;case 21:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _TIFFPredictorCleanup(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;c=m;a=HEAP32[(c+576|0)>>2];d=0!=(a|0)?2:3;break;case 2:d=4;break;case 3:throw ___assert_func(26888,746,44072,38048),"Reached an unreachable!";case 4:return HEAP32[((c+668|0)+4|0)>>2]=HEAP32[(a+44|0)>>2],HEAP32[(c+668|0)>>2]=HEAP32[(a+48|0)>>2],HEAP32[((c+668|0)+8|0)>>2]=HEAP32[(a+52|0)>>2],HEAP32[(c+508|0)>>2]=HEAP32[(a+56|0)>>2],HEAP32[(c+516|0)>>2]=HEAP32[(a+60|0)>>2],1;default:assert(0,"bad label: "+d)}}
function _horDiff8(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k,h,l,n,p,q,t;b=m;e=d;g=c;b=HEAP32[(HEAP32[(b+576|0)>>2]+4|0)>>2];a=0==((g|0)%(b|0)&-1|0)?2:3;break;case 2:a=4;break;case 3:throw ___assert_func(26888,461,42992,39800),"Reached an unreachable!";case 4:a=(g|0)>(b|0)?5:32;break;case 5:g=g-b|0;a=3==(b|0)?6:10;break;case 6:f=HEAP8[e|0]<<24>>24;k=HEAP8[e+1|0]<<24>>24;h=HEAP8[e+2|0]<<24>>24;a=7;break;case 7:a=HEAP8[e+3|0]<<24>>24;HEAP8[e+3|0]=(a-f|0)&255;f=a;a=HEAP8[e+4|0]<<24>>24;
HEAP8[e+4|0]=(a-k|0)&255;k=a;a=HEAP8[e+5|0]<<24>>24;HEAP8[e+5|0]=(a-h|0)&255;h=a;e=e+3|0;a=8;break;case 8:g=a=g-3|0;a=0<(a|0)?7:9;break;case 9:a=31;break;case 10:a=4==(b|0)?11:15;break;case 11:l=HEAP8[e|0]<<24>>24;n=HEAP8[e+1|0]<<24>>24;p=HEAP8[e+2|0]<<24>>24;q=HEAP8[e+3|0]<<24>>24;a=12;break;case 12:a=HEAP8[e+4|0]<<24>>24;HEAP8[e+4|0]=(a-l|0)&255;l=a;a=HEAP8[e+5|0]<<24>>24;HEAP8[e+5|0]=(a-n|0)&255;n=a;a=HEAP8[e+6|0]<<24>>24;HEAP8[e+6|0]=(a-p|0)&255;p=a;a=HEAP8[e+7|0]<<24>>24;HEAP8[e+7|0]=(a-q|0)&
255;q=a;e=e+4|0;a=13;break;case 13:g=a=g-4|0;a=0<(a|0)?12:14;break;case 14:a=30;break;case 15:e=e+(g-1|0)|0;a=16;break;case 16:a=b;a=4==(a|0)?22:3==(a|0)?23:2==(a|0)?24:1==(a|0)?25:0==(a|0)?26:17;break;case 17:t=b-4|0;a=18;break;case 18:a=0<(t|0)?19:21;break;case 19:a=e+b|0;HEAP8[a]=((HEAP8[a]<<24>>24)-(HEAP8[e|0]<<24>>24)|0)&255;e=e-1|0;a=20;break;case 20:t=t-1|0;a=18;break;case 21:a=22;break;case 22:a=e+b|0;HEAP8[a]=((HEAP8[a]<<24>>24)-(HEAP8[e|0]<<24>>24)|0)&255;e=e-1|0;a=23;break;case 23:a=e+
b|0;HEAP8[a]=((HEAP8[a]<<24>>24)-(HEAP8[e|0]<<24>>24)|0)&255;e=e-1|0;a=24;break;case 24:a=e+b|0;HEAP8[a]=((HEAP8[a]<<24>>24)-(HEAP8[e|0]<<24>>24)|0)&255;e=e-1|0;a=25;break;case 25:a=e+b|0;HEAP8[a]=((HEAP8[a]<<24>>24)-(HEAP8[e|0]<<24>>24)|0)&255;e=e-1|0;a=26;break;case 26:a=27;break;case 27:a=28;break;case 28:g=a=g-b|0;a=0<(a|0)?16:29;break;case 29:a=30;break;case 30:a=31;break;case 31:a=32;break;case 32:return;default:assert(0,"bad label: "+a)}}
function _horDiff16(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f;b=m;e=d;a=c;b=HEAP32[(HEAP32[(b+576|0)>>2]+4|0)>>2];g=(a|0)/2&-1;a=0==((a|0)%(b<<1|0)&-1|0)?2:3;break;case 2:a=4;break;case 3:throw ___assert_func(26888,509,43024,40392),"Reached an unreachable!";case 4:a=(g|0)>(b|0)?5:20;break;case 5:g=g-b|0;e=e+((g-1|0)<<1)|0;a=6;break;case 6:a=b;a=4==(a|0)?12:3==(a|0)?13:2==(a|0)?14:1==(a|0)?15:0==(a|0)?16:7;break;case 7:f=b-4|0;a=8;break;case 8:a=0<(f|0)?9:11;break;case 9:a=e+(b<<1)|0;HEAP16[a>>
1]=((HEAP16[a>>1]<<16>>16)-(HEAP16[(e|0)>>1]<<16>>16)|0)&65535;e=e-2|0;a=10;break;case 10:f=f-1|0;a=8;break;case 11:a=12;break;case 12:a=e+(b<<1)|0;HEAP16[a>>1]=((HEAP16[a>>1]<<16>>16)-(HEAP16[(e|0)>>1]<<16>>16)|0)&65535;e=e-2|0;a=13;break;case 13:a=e+(b<<1)|0;HEAP16[a>>1]=((HEAP16[a>>1]<<16>>16)-(HEAP16[(e|0)>>1]<<16>>16)|0)&65535;e=e-2|0;a=14;break;case 14:a=e+(b<<1)|0;HEAP16[a>>1]=((HEAP16[a>>1]<<16>>16)-(HEAP16[(e|0)>>1]<<16>>16)|0)&65535;e=e-2|0;a=15;break;case 15:a=e+(b<<1)|0;HEAP16[a>>1]=((HEAP16[a>>
1]<<16>>16)-(HEAP16[(e|0)>>1]<<16>>16)|0)&65535;e=e-2|0;a=16;break;case 16:a=17;break;case 17:g=g-b|0;a=18;break;case 18:a=0<(g|0)?6:19;break;case 19:a=20;break;case 20:return;default:assert(0,"bad label: "+a)}}
function _horDiff32(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f;b=m;e=d;a=c;b=HEAP32[(HEAP32[(b+576|0)>>2]+4|0)>>2];g=(a|0)/4&-1;a=0==((a|0)%(b<<2|0)&-1|0)?2:3;break;case 2:a=4;break;case 3:throw ___assert_func(26888,529,43008,41032),"Reached an unreachable!";case 4:a=(g|0)>(b|0)?5:20;break;case 5:g=g-b|0;e=e+((g-1|0)<<2)|0;a=6;break;case 6:a=b;a=4==(a|0)?12:3==(a|0)?13:2==(a|0)?14:1==(a|0)?15:0==(a|0)?16:7;break;case 7:f=b-4|0;a=8;break;case 8:a=0<(f|0)?9:11;break;case 9:a=e+(b<<2)|0;HEAP32[a>>
2]=HEAP32[a>>2]-HEAP32[(e|0)>>2]|0;e=e-4|0;a=10;break;case 10:f=f-1|0;a=8;break;case 11:a=12;break;case 12:a=e+(b<<2)|0;HEAP32[a>>2]=HEAP32[a>>2]-HEAP32[(e|0)>>2]|0;e=e-4|0;a=13;break;case 13:a=e+(b<<2)|0;HEAP32[a>>2]=HEAP32[a>>2]-HEAP32[(e|0)>>2]|0;e=e-4|0;a=14;break;case 14:a=e+(b<<2)|0;HEAP32[a>>2]=HEAP32[a>>2]-HEAP32[(e|0)>>2]|0;e=e-4|0;a=15;break;case 15:a=e+(b<<2)|0;HEAP32[a>>2]=HEAP32[a>>2]-HEAP32[(e|0)>>2]|0;e=e-4|0;a=16;break;case 16:a=17;break;case 17:g=g-b|0;a=18;break;case 18:a=0<(g|0)?
6:19;break;case 19:a=20;break;case 20:return;default:assert(0,"bad label: "+a)}}
function _PredictorEncodeRow(m,d,c,a){for(var b=0,b=1;;)switch(b){case 1:var e,g,f,k,h;e=m;g=d;f=c;k=a;h=HEAP32[(e+576|0)>>2];b=0!=(h|0)?2:3;break;case 2:b=4;break;case 3:throw ___assert_func(26888,584,44304,28344),"Reached an unreachable!";case 4:b=0!=(HEAP32[(h+24|0)>>2]|0)?5:6;break;case 5:b=7;break;case 6:throw ___assert_func(26888,585,44304,27E3),"Reached an unreachable!";case 7:b=0!=(HEAP32[(h+12|0)>>2]|0)?8:9;break;case 8:b=10;break;case 9:throw ___assert_func(26888,586,44304,41584),"Reached an unreachable!";
case 10:return FUNCTION_TABLE[HEAP32[(h+24|0)>>2]](e,g,f),FUNCTION_TABLE[HEAP32[(h+12|0)>>2]](e,g,f,k);default:assert(0,"bad label: "+b)}}
function _PredictorEncodeTile(m,d,c,a){var b=0,e=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h,l,n,p,q,t,r;f=m;k=d;h=c;l=a;n=HEAP32[(f+576|0)>>2];q=h;b=0!=(n|0)?2:3;break;case 2:b=4;break;case 3:throw ___assert_func(26888,603,44280,28344),"Reached an unreachable!";case 4:b=0!=(HEAP32[(n+24|0)>>2]|0)?5:6;break;case 5:b=7;break;case 6:throw ___assert_func(26888,604,44280,27E3),"Reached an unreachable!";case 7:b=0!=(HEAP32[(n+20|0)>>2]|0)?8:9;break;case 8:b=10;
break;case 9:throw ___assert_func(26888,605,44280,25952),"Reached an unreachable!";case 10:p=__TIFFmalloc(h);b=0==(p|0)?11:12;break;case 11:g=h;_TIFFErrorExt(HEAP32[(f+628|0)>>2],147808,24760,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=g,tempInt));g=0;b=22;break;case 12:t=p;r=k;b=h;assert(0===b%1);_memcpy(t,r,b)|0;r=p;t=HEAP32[(n+8|0)>>2];b=0<(t|0)?13:14;break;case 13:b=15;break;case 14:throw ___assert_func(26888,623,44280,23616),"Reached an unreachable!";
case 15:b=0==((h|0)%(t|0)&-1|0)?16:17;break;case 16:b=18;break;case 17:throw ___assert_func(26888,624,44280,22936),"Reached an unreachable!";case 18:b=19;break;case 19:b=0<(q|0)?20:21;break;case 20:FUNCTION_TABLE[HEAP32[(n+24|0)>>2]](f,r,t);q=q-t|0;r=r+t|0;b=19;break;case 21:g=FUNCTION_TABLE[HEAP32[(n+20|0)>>2]](f,p,h,l);__TIFFfree(p);b=22;break;case 22:return m=g,STACKTOP=e,m;default:assert(0,"bad label: "+b)}}
function _fpDiff(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k,h,l,n,p,q;b=m;e=d;g=c;f=HEAP32[(HEAP32[(b+576|0)>>2]+4|0)>>2];b=(HEAP16[((b+40|0)+44|0)>>1]&65535|0)/8&-1;k=(g>>>0)/(b>>>0)&-1;l=e;n=__TIFFmalloc(g);var a=g,t=Math.imul(b,f)|0,a=0==((a>>>0)%(t>>>0)&-1|0)?2:3;break;case 2:a=4;break;case 3:throw ___assert_func(26888,554,43080,30120),"Reached an unreachable!";case 4:a=0!=(n|0)?6:5;break;case 5:a=29;break;case 6:__TIFFmemcpy(n,e,g);h=0;a=7;break;case 7:a=(h|0)<(k|0)?8:14;break;case 8:p=
0;a=9;break;case 9:a=p>>>0<b>>>0?10:12;break;case 10:a=Math.imul(b,h)|0;a=HEAP8[n+(a+p|0)|0];t=Math.imul((b-p|0)-1|0,k)|0;HEAP8[l+(t+h|0)|0]=a;a=11;break;case 11:p=p+1|0;a=9;break;case 12:a=13;break;case 13:h=h+1|0;a=7;break;case 14:__TIFFfree(n);l=e;l=l+((g-f|0)-1|0)|0;h=g;a=15;break;case 15:a=(h|0)>(f|0)?16:29;break;case 16:a=f;a=4==(a|0)?22:3==(a|0)?23:2==(a|0)?24:1==(a|0)?25:0==(a|0)?26:17;break;case 17:q=f-4|0;a=18;break;case 18:a=0<(q|0)?19:21;break;case 19:a=l+f|0;HEAP8[a]=((HEAP8[a]&255)-
(HEAP8[l|0]&255)|0)&255;l=l-1|0;a=20;break;case 20:q=q-1|0;a=18;break;case 21:a=22;break;case 22:a=l+f|0;HEAP8[a]=((HEAP8[a]&255)-(HEAP8[l|0]&255)|0)&255;l=l-1|0;a=23;break;case 23:a=l+f|0;HEAP8[a]=((HEAP8[a]&255)-(HEAP8[l|0]&255)|0)&255;l=l-1|0;a=24;break;case 24:a=l+f|0;HEAP8[a]=((HEAP8[a]&255)-(HEAP8[l|0]&255)|0)&255;l=l-1|0;a=25;break;case 25:a=l+f|0;HEAP8[a]=((HEAP8[a]&255)-(HEAP8[l|0]&255)|0)&255;l=l-1|0;a=26;break;case 26:a=27;break;case 27:a=28;break;case 28:h=h-f|0;a=15;break;case 29:return;
default:assert(0,"bad label: "+a)}}
function _horAcc8(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k,h,l,n,p,q,t;b=m;e=d;g=c;b=HEAP32[(HEAP32[(b+576|0)>>2]+4|0)>>2];a=0==((g|0)%(b|0)&-1|0)?2:3;break;case 2:a=4;break;case 3:throw ___assert_func(26888,248,43040,39800),"Reached an unreachable!";case 4:a=(g|0)>(b|0)?5:32;break;case 5:a=3==(b|0)?6:10;break;case 6:f=HEAP8[e|0]<<24>>24;k=HEAP8[e+1|0]<<24>>24;h=HEAP8[e+2|0]<<24>>24;g=g-3|0;e=e+3|0;a=7;break;case 7:a=0<(g|0)?8:9;break;case 8:f=a=f+(HEAP8[e|0]<<24>>24)|0;HEAP8[e|0]=
a&255;k=a=k+(HEAP8[e+1|0]<<24>>24)|0;HEAP8[e+1|0]=a&255;h=a=h+(HEAP8[e+2|0]<<24>>24)|0;HEAP8[e+2|0]=a&255;g=g-3|0;e=e+3|0;a=7;break;case 9:a=31;break;case 10:a=4==(b|0)?11:15;break;case 11:l=HEAP8[e|0]<<24>>24;n=HEAP8[e+1|0]<<24>>24;p=HEAP8[e+2|0]<<24>>24;q=HEAP8[e+3|0]<<24>>24;g=g-4|0;e=e+4|0;a=12;break;case 12:a=0<(g|0)?13:14;break;case 13:l=a=l+(HEAP8[e|0]<<24>>24)|0;HEAP8[e|0]=a&255;n=a=n+(HEAP8[e+1|0]<<24>>24)|0;HEAP8[e+1|0]=a&255;p=a=p+(HEAP8[e+2|0]<<24>>24)|0;HEAP8[e+2|0]=a&255;q=a=q+(HEAP8[e+
3|0]<<24>>24)|0;HEAP8[e+3|0]=a&255;g=g-4|0;e=e+4|0;a=12;break;case 14:a=30;break;case 15:g=g-b|0;a=16;break;case 16:a=b;a=4==(a|0)?22:3==(a|0)?23:2==(a|0)?24:1==(a|0)?25:0==(a|0)?26:17;break;case 17:t=b-4|0;a=18;break;case 18:a=0<(t|0)?19:21;break;case 19:HEAP8[e+b|0]=((HEAP8[e+b|0]<<24>>24)+(HEAP8[e]<<24>>24)|0)&255;e=e+1|0;a=20;break;case 20:t=t-1|0;a=18;break;case 21:a=22;break;case 22:HEAP8[e+b|0]=((HEAP8[e+b|0]<<24>>24)+(HEAP8[e]<<24>>24)|0)&255;e=e+1|0;a=23;break;case 23:HEAP8[e+b|0]=((HEAP8[e+
b|0]<<24>>24)+(HEAP8[e]<<24>>24)|0)&255;e=e+1|0;a=24;break;case 24:HEAP8[e+b|0]=((HEAP8[e+b|0]<<24>>24)+(HEAP8[e]<<24>>24)|0)&255;e=e+1|0;a=25;break;case 25:HEAP8[e+b|0]=((HEAP8[e+b|0]<<24>>24)+(HEAP8[e]<<24>>24)|0)&255;e=e+1|0;a=26;break;case 26:a=27;break;case 27:g=g-b|0;a=28;break;case 28:a=0<(g|0)?16:29;break;case 29:a=30;break;case 30:a=31;break;case 31:a=32;break;case 32:return;default:assert(0,"bad label: "+a)}}
function _horAcc16(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f;b=m;e=d;a=c;b=HEAP32[(HEAP32[(b+576|0)>>2]+4|0)>>2];g=(a|0)/2&-1;a=0==((a|0)%(b<<1|0)&-1|0)?2:3;break;case 2:a=4;break;case 3:throw ___assert_func(26888,318,43064,40392),"Reached an unreachable!";case 4:a=(g|0)>(b|0)?5:20;break;case 5:g=g-b|0;a=6;break;case 6:a=b;a=4==(a|0)?12:3==(a|0)?13:2==(a|0)?14:1==(a|0)?15:0==(a|0)?16:7;break;case 7:f=b-4|0;a=8;break;case 8:a=0<(f|0)?9:11;break;case 9:a=e+(b<<1)|0;HEAP16[a>>1]=((HEAP16[a>>
1]&65535)+(HEAP16[(e|0)>>1]&65535)|0)&65535;e=e+2|0;a=10;break;case 10:f=f-1|0;a=8;break;case 11:a=12;break;case 12:a=e+(b<<1)|0;HEAP16[a>>1]=((HEAP16[a>>1]&65535)+(HEAP16[(e|0)>>1]&65535)|0)&65535;e=e+2|0;a=13;break;case 13:a=e+(b<<1)|0;HEAP16[a>>1]=((HEAP16[a>>1]&65535)+(HEAP16[(e|0)>>1]&65535)|0)&65535;e=e+2|0;a=14;break;case 14:a=e+(b<<1)|0;HEAP16[a>>1]=((HEAP16[a>>1]&65535)+(HEAP16[(e|0)>>1]&65535)|0)&65535;e=e+2|0;a=15;break;case 15:a=e+(b<<1)|0;HEAP16[a>>1]=((HEAP16[a>>1]&65535)+(HEAP16[(e|
0)>>1]&65535)|0)&65535;e=e+2|0;a=16;break;case 16:a=17;break;case 17:g=g-b|0;a=18;break;case 18:a=0<(g|0)?6:19;break;case 19:a=20;break;case 20:return;default:assert(0,"bad label: "+a)}}
function _horAcc32(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f;b=m;e=d;a=c;b=HEAP32[(HEAP32[(b+576|0)>>2]+4|0)>>2];g=(a|0)/4&-1;a=0==((a|0)%(b<<2|0)&-1|0)?2:3;break;case 2:a=4;break;case 3:throw ___assert_func(26888,355,43048,41032),"Reached an unreachable!";case 4:a=(g|0)>(b|0)?5:20;break;case 5:g=g-b|0;a=6;break;case 6:a=b;a=4==(a|0)?12:3==(a|0)?13:2==(a|0)?14:1==(a|0)?15:0==(a|0)?16:7;break;case 7:f=b-4|0;a=8;break;case 8:a=0<(f|0)?9:11;break;case 9:a=e+(b<<2)|0;HEAP32[a>>2]=HEAP32[a>>
2]+HEAP32[(e|0)>>2]|0;e=e+4|0;a=10;break;case 10:f=f-1|0;a=8;break;case 11:a=12;break;case 12:a=e+(b<<2)|0;HEAP32[a>>2]=HEAP32[a>>2]+HEAP32[(e|0)>>2]|0;e=e+4|0;a=13;break;case 13:a=e+(b<<2)|0;HEAP32[a>>2]=HEAP32[a>>2]+HEAP32[(e|0)>>2]|0;e=e+4|0;a=14;break;case 14:a=e+(b<<2)|0;HEAP32[a>>2]=HEAP32[a>>2]+HEAP32[(e|0)>>2]|0;e=e+4|0;a=15;break;case 15:a=e+(b<<2)|0;HEAP32[a>>2]=HEAP32[a>>2]+HEAP32[(e|0)>>2]|0;e=e+4|0;a=16;break;case 16:a=17;break;case 17:g=g-b|0;a=18;break;case 18:a=0<(g|0)?6:19;break;
case 19:a=20;break;case 20:return;default:assert(0,"bad label: "+a)}}
function _PredictorDecodeRow(m,d,c,a){for(var b=0,b=1;;)switch(b){case 1:var e,g,f,k,h,l;g=m;f=d;k=c;h=a;l=HEAP32[(g+576|0)>>2];b=0!=(l|0)?2:3;break;case 2:b=4;break;case 3:throw ___assert_func(26888,413,44352,28344),"Reached an unreachable!";case 4:b=0!=(HEAP32[(l+28|0)>>2]|0)?5:6;break;case 5:b=7;break;case 6:throw ___assert_func(26888,414,44352,34744),"Reached an unreachable!";case 7:b=0!=(HEAP32[(l+40|0)>>2]|0)?8:9;break;case 8:b=10;break;case 9:throw ___assert_func(26888,415,44352,35288),"Reached an unreachable!";
case 10:b=0!=(FUNCTION_TABLE[HEAP32[(l+28|0)>>2]](g,f,k,h)|0)?11:12;break;case 11:FUNCTION_TABLE[HEAP32[(l+40|0)>>2]](g,f,k);e=1;b=13;break;case 12:e=0;b=13;break;case 13:return e;default:assert(0,"bad label: "+b)}}
function _PredictorDecodeTile(m,d,c,a){for(var b=0,b=1;;)switch(b){case 1:var e,g,f,k,h,l,n;g=m;f=d;k=c;h=a;l=HEAP32[(g+576|0)>>2];b=0!=(l|0)?2:3;break;case 2:b=4;break;case 3:throw ___assert_func(26888,436,44328,28344),"Reached an unreachable!";case 4:b=0!=(HEAP32[(l+36|0)>>2]|0)?5:6;break;case 5:b=7;break;case 6:throw ___assert_func(26888,437,44328,36656),"Reached an unreachable!";case 7:b=0!=(FUNCTION_TABLE[HEAP32[(l+36|0)>>2]](g,f,k,h)|0)?8:21;break;case 8:n=HEAP32[(l+8|0)>>2];b=0<(n|0)?9:10;
break;case 9:b=11;break;case 10:throw ___assert_func(26888,441,44328,23616),"Reached an unreachable!";case 11:b=0==((k|0)%(n|0)&-1|0)?12:13;break;case 12:b=14;break;case 13:throw ___assert_func(26888,442,44328,35936),"Reached an unreachable!";case 14:b=0!=(HEAP32[(l+40|0)>>2]|0)?15:16;break;case 15:b=17;break;case 16:throw ___assert_func(26888,443,44328,35288),"Reached an unreachable!";case 17:b=18;break;case 18:b=0<(k|0)?19:20;break;case 19:FUNCTION_TABLE[HEAP32[(l+40|0)>>2]](g,f,n);k=k-n|0;f=f+
n|0;b=18;break;case 20:e=1;b=22;break;case 21:e=0;b=22;break;case 22:return e;default:assert(0,"bad label: "+b)}}
function _swabHorAcc16(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f;b=m;e=d;a=c;b=HEAP32[(HEAP32[(b+576|0)>>2]+4|0)>>2];g=(a|0)/2&-1;a=0==((a|0)%(b<<1|0)&-1|0)?2:3;break;case 2:a=4;break;case 3:throw ___assert_func(26888,299,42968,40392),"Reached an unreachable!";case 4:a=(g|0)>(b|0)?5:20;break;case 5:_TIFFSwabArrayOfShort(e,g);g=g-b|0;a=6;break;case 6:a=b;a=4==(a|0)?12:3==(a|0)?13:2==(a|0)?14:1==(a|0)?15:0==(a|0)?16:7;break;case 7:f=b-4|0;a=8;break;case 8:a=0<(f|0)?9:11;break;case 9:a=e+
(b<<1)|0;HEAP16[a>>1]=((HEAP16[a>>1]&65535)+(HEAP16[(e|0)>>1]&65535)|0)&65535;e=e+2|0;a=10;break;case 10:f=f-1|0;a=8;break;case 11:a=12;break;case 12:a=e+(b<<1)|0;HEAP16[a>>1]=((HEAP16[a>>1]&65535)+(HEAP16[(e|0)>>1]&65535)|0)&65535;e=e+2|0;a=13;break;case 13:a=e+(b<<1)|0;HEAP16[a>>1]=((HEAP16[a>>1]&65535)+(HEAP16[(e|0)>>1]&65535)|0)&65535;e=e+2|0;a=14;break;case 14:a=e+(b<<1)|0;HEAP16[a>>1]=((HEAP16[a>>1]&65535)+(HEAP16[(e|0)>>1]&65535)|0)&65535;e=e+2|0;a=15;break;case 15:a=e+(b<<1)|0;HEAP16[a>>1]=
((HEAP16[a>>1]&65535)+(HEAP16[(e|0)>>1]&65535)|0)&65535;e=e+2|0;a=16;break;case 16:a=17;break;case 17:g=g-b|0;a=18;break;case 18:a=0<(g|0)?6:19;break;case 19:a=20;break;case 20:return;default:assert(0,"bad label: "+a)}}
function _swabHorAcc32(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f;b=m;e=d;a=c;b=HEAP32[(HEAP32[(b+576|0)>>2]+4|0)>>2];g=(a|0)/4&-1;a=0==((a|0)%(b<<2|0)&-1|0)?2:3;break;case 2:a=4;break;case 3:throw ___assert_func(26888,336,42952,41032),"Reached an unreachable!";case 4:a=(g|0)>(b|0)?5:20;break;case 5:_TIFFSwabArrayOfLong(e,g);g=g-b|0;a=6;break;case 6:a=b;a=4==(a|0)?12:3==(a|0)?13:2==(a|0)?14:1==(a|0)?15:0==(a|0)?16:7;break;case 7:f=b-4|0;a=8;break;case 8:a=0<(f|0)?9:11;break;case 9:a=e+
(b<<2)|0;HEAP32[a>>2]=HEAP32[a>>2]+HEAP32[(e|0)>>2]|0;e=e+4|0;a=10;break;case 10:f=f-1|0;a=8;break;case 11:a=12;break;case 12:a=e+(b<<2)|0;HEAP32[a>>2]=HEAP32[a>>2]+HEAP32[(e|0)>>2]|0;e=e+4|0;a=13;break;case 13:a=e+(b<<2)|0;HEAP32[a>>2]=HEAP32[a>>2]+HEAP32[(e|0)>>2]|0;e=e+4|0;a=14;break;case 14:a=e+(b<<2)|0;HEAP32[a>>2]=HEAP32[a>>2]+HEAP32[(e|0)>>2]|0;e=e+4|0;a=15;break;case 15:a=e+(b<<2)|0;HEAP32[a>>2]=HEAP32[a>>2]+HEAP32[(e|0)>>2]|0;e=e+4|0;a=16;break;case 16:a=17;break;case 17:g=g-b|0;a=18;break;
case 18:a=0<(g|0)?6:19;break;case 19:a=20;break;case 20:return;default:assert(0,"bad label: "+a)}}
function _TIFFCheckRead(m,d){var c=0,a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e,g;e=m;g=d;c=1==(HEAP32[(e+8|0)>>2]|0)?2:3;break;case 2:_TIFFErrorExt(HEAP32[(e+628|0)>>2],HEAP32[(e|0)>>2],36576,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=0;c=6;break;case 3:c=0!=(g^0!=(HEAP32[(e+12|0)>>2]&1024|0)&1|0)?4:5;break;case 4:_TIFFErrorExt(HEAP32[(e+628|0)>>2],HEAP32[(e|0)>>2],
0!=(g|0)?35848:35200,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=0;c=6;break;case 5:b=1;c=6;break;case 6:return c=b,STACKTOP=a,c;default:assert(0,"bad label: "+c)}}
function _TIFFReadEncodedStrip(m,d,c,a){var b=0,e=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h,l,n,p,q,t,r;f=m;k=d;h=c;l=a;n=f+40|0;b=0!=(_TIFFCheckRead(f,0)|0)?3:2;break;case 2:g=-1;b=19;break;case 3:b=k>>>0>=HEAP32[(n+128|0)>>2]>>>0?4:5;break;case 4:g=k;b=HEAP32[(n+128|0)>>2];_TIFFErrorExt(HEAP32[(f+628|0)>>2],46256,25280,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=g,HEAP32[tempInt+8>>2]=b,tempInt));g=-1;
b=19;break;case 5:p=HEAP32[(n+60|0)>>2];b=p>>>0>HEAP32[(n+20|0)>>2]>>>0?6:7;break;case 6:p=HEAP32[(n+20|0)>>2];b=7;break;case 7:q=(((HEAP32[(n+20|0)>>2]+p|0)-1|0)>>>0)/(p>>>0)&-1;t=(k>>>0)%(q>>>0)&-1;q=(k>>>0)/(q>>>0)&65535;b=HEAP32[(n+20|0)>>2];t=Math.imul(t,p)|0;t=b-t|0;b=t>>>0>p>>>0?8:9;break;case 8:t=p;b=9;break;case 9:r=_TIFFVStripSize(f,t);b=0==(r|0)?10:11;break;case 10:g=-1;b=19;break;case 11:b=-1!=(l|0)?12:14;break;case 12:b=(l|0)<(r|0)?13:14;break;case 13:r=l;b=14;break;case 14:b=0!=(_TIFFFillStrip(f,
k)|0)?16:15;break;case 15:g=-1;b=19;break;case 16:b=0>=(FUNCTION_TABLE[HEAP32[(f+540|0)>>2]](f,h,r,q)|0)?17:18;break;case 17:g=-1;b=19;break;case 18:FUNCTION_TABLE[HEAP32[(f+652|0)>>2]](f,h,r);g=r;b=19;break;case 19:return m=g,STACKTOP=e,m;default:assert(0,"bad label: "+b)}}
function _TIFFFillStrip(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e,g,f,k=a,h;e=m;g=d;f=e+40|0;c=0!=(__TIFFFillStriles(e)|0)?2:3;break;case 2:c=0!=(HEAP32[((e+40|0)+136|0)>>2]|0)?4:3;break;case 3:b=0;c=37;break;case 4:c=0==(HEAP32[(e+12|0)>>2]&131072|0)?5:36;break;case 5:var c=HEAP32[(f+136|0)>>2]+(g<<3)|0,l=HEAP32[(c+4|0)>>2];HEAP32[(k|0)>>2]=HEAP32[(c|0)>>2];HEAP32[(k+4|0)>>2]=l;c=HEAP32[(k+4|0)>>2];c=0>=c>>>0&(0>c>>>0|0>=
HEAP32[(k|0)>>2]>>>0)?6:7;break;case 6:b=HEAP32[(k|0)>>2];c=HEAP32[(k+4|0)>>2];l=g;_TIFFErrorExt(HEAP32[(e+628|0)>>2],46744,28136,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,HEAP32[tempInt+8>>2]=c,HEAP32[tempInt+16>>2]=l,tempInt));b=0;c=37;break;case 7:c=0!=(HEAP32[(e+12|0)>>2]&2048|0)?8:17;break;case 8:c=0!=(HEAP32[(e+12|0)>>2]&HEAP16[(f+54|0)>>1]&65535|0)?10:9;break;case 9:c=0!=(HEAP32[(e+12|0)>>2]&256|0)?10:17;break;case 10:c=0!=(HEAP32[(e+
12|0)>>2]&512|0)?11:13;break;case 11:c=0!=(HEAP32[(e+588|0)>>2]|0)?12:13;break;case 12:__TIFFfree(HEAP32[(e+588|0)>>2]);HEAP32[(e+588|0)>>2]=0;HEAP32[(e+592|0)>>2]=0;c=13;break;case 13:c=e+12|0;HEAP32[c>>2]&=-513;var c=HEAP32[(k+4|0)>>2],l=HEAP32[(e+616|0)>>2],n=0>(l|0)?-1:0,c=c>>>0>n>>>0|c>>>0==n>>>0&HEAP32[(k|0)>>2]>>>0>l>>>0?15:14;break;case 14:var l=HEAP32[(f+132|0)>>2]+(g<<3)|0,c=HEAP32[(l|0)>>2],l=HEAP32[(l+4|0)>>2],n=HEAP32[(e+616|0)>>2],n=_i64Subtract(n,0>(n|0)?-1:0,HEAP32[(k|0)>>2],HEAP32[(k+
4|0)>>2]),p=tempRet0,c=l>>>0>p>>>0|l>>>0==p>>>0&c>>>0>n>>>0?15:16;break;case 15:b=HEAP32[(e+628|0)>>2];var c=g,l=HEAP32[(e+616|0)>>2],n=HEAP32[(f+132|0)>>2]+(g<<3)|0,l=_i64Subtract(l,0>(l|0)?-1:0,HEAP32[(n|0)>>2],HEAP32[(n+4|0)>>2]),n=tempRet0,p=HEAP32[(k|0)>>2],q=HEAP32[(k+4|0)>>2];_TIFFErrorExt(b,46744,26792,(tempInt=STACKTOP,STACKTOP=STACKTOP+40|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=c,HEAP32[tempInt+8>>2]=l,HEAP32[tempInt+16>>2]=n,HEAP32[tempInt+24>>2]=p,HEAP32[tempInt+32>>
2]=q,tempInt));HEAP32[(e+452|0)>>2]=-1;b=0;c=37;break;case 16:HEAP32[(e+592|0)>>2]=HEAP32[(k|0)>>2];HEAP32[(e+588|0)>>2]=HEAP32[(e+612|0)>>2]+HEAP32[(HEAP32[(f+132|0)>>2]+(g<<3)|0)>>2]|0;HEAP32[(e+596|0)>>2]=0;HEAP32[(e+600|0)>>2]=HEAP32[(k|0)>>2];c=e+12|0;HEAP32[c>>2]|=8388608;c=35;break;case 17:c=h=HEAP32[(k|0)>>2];c=(c|0)!=(HEAP32[(k|0)>>2]|0)|((0>(c|0)?-1:0)|0)!=(HEAP32[(k+4|0)>>2]|0)?18:19;break;case 18:_TIFFErrorExt(HEAP32[(e+628|0)>>2],46744,29896,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=
STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=0;c=37;break;case 19:c=(h|0)>(HEAP32[(e+592|0)>>2]|0)?20:25;break;case 20:HEAP32[(e+452|0)>>2]=-1;c=0==(HEAP32[(e+12|0)>>2]&512|0)?21:22;break;case 21:b=g;_TIFFErrorExt(HEAP32[(e+628|0)>>2],46744,25776,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,tempInt));b=0;c=37;break;case 22:c=0!=(_TIFFReadBufferSetup(e,0,h)|0)?24:23;break;case 23:b=0;c=37;break;case 24:c=
25;break;case 25:c=0!=(HEAP32[(e+12|0)>>2]&8388608|0)?26:29;break;case 26:HEAP32[(e+452|0)>>2]=-1;c=0!=(_TIFFReadBufferSetup(e,0,h)|0)?28:27;break;case 27:b=0;c=37;break;case 28:c=29;break;case 29:c=(_TIFFReadRawStrip1(e,g,HEAP32[(e+588|0)>>2],h,46744)|0)!=(h|0)?30:31;break;case 30:b=0;c=37;break;case 31:HEAP32[(e+596|0)>>2]=0;HEAP32[(e+600|0)>>2]=h;c=0!=(HEAP32[(e+12|0)>>2]&HEAP16[(f+54|0)>>1]&65535|0)?34:32;break;case 32:c=0==(HEAP32[(e+12|0)>>2]&256|0)?33:34;break;case 33:_TIFFReverseBits(HEAP32[(e+
588|0)>>2],h);c=34;break;case 34:c=35;break;case 35:c=36;break;case 36:b=_TIFFStartStrip(e,g);c=37;break;case 37:return e=b,STACKTOP=a,e;default:assert(0,"bad label: "+c)}}
function _fpAcc(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k,h,l,n,p,q;b=m;e=d;g=c;f=HEAP32[(HEAP32[(b+576|0)>>2]+4|0)>>2];b=(HEAP16[((b+40|0)+44|0)>>1]&65535|0)/8&-1;k=(g>>>0)/(b>>>0)&-1;h=g;l=e;n=__TIFFmalloc(g);var a=g,t=Math.imul(b,f)|0,a=0==((a>>>0)%(t>>>0)&-1|0)?2:3;break;case 2:a=4;break;case 3:throw ___assert_func(26888,379,43088,30120),"Reached an unreachable!";case 4:a=0!=(n|0)?6:5;break;case 5:a=29;break;case 6:a=7;break;case 7:a=(h|0)>(f|0)?8:20;break;case 8:a=f;a=4==(a|0)?
14:3==(a|0)?15:2==(a|0)?16:1==(a|0)?17:0==(a|0)?18:9;break;case 9:p=f-4|0;a=10;break;case 10:a=0<(p|0)?11:13;break;case 11:a=l+f|0;HEAP8[a]=((HEAP8[a]&255)+(HEAP8[l|0]&255)|0)&255;l=l+1|0;a=12;break;case 12:p=p-1|0;a=10;break;case 13:a=14;break;case 14:a=l+f|0;HEAP8[a]=((HEAP8[a]&255)+(HEAP8[l|0]&255)|0)&255;l=l+1|0;a=15;break;case 15:a=l+f|0;HEAP8[a]=((HEAP8[a]&255)+(HEAP8[l|0]&255)|0)&255;l=l+1|0;a=16;break;case 16:a=l+f|0;HEAP8[a]=((HEAP8[a]&255)+(HEAP8[l|0]&255)|0)&255;l=l+1|0;a=17;break;case 17:a=
l+f|0;HEAP8[a]=((HEAP8[a]&255)+(HEAP8[l|0]&255)|0)&255;l=l+1|0;a=18;break;case 18:a=19;break;case 19:h=h-f|0;a=7;break;case 20:__TIFFmemcpy(n,e,g);l=e;h=0;a=21;break;case 21:a=(h|0)<(k|0)?22:28;break;case 22:q=0;a=23;break;case 23:a=q>>>0<b>>>0?24:26;break;case 24:a=Math.imul((b-q|0)-1|0,k)|0;a=HEAP8[n+(a+h|0)|0];t=Math.imul(b,h)|0;HEAP8[l+(t+q|0)|0]=a;a=25;break;case 25:q=q+1|0;a=23;break;case 26:a=27;break;case 27:h=h+1|0;a=21;break;case 28:__TIFFfree(n);a=29;break;case 29:return;default:assert(0,
"bad label: "+a)}}
function _TIFFStartStrip(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e,g;b=m;e=d;g=b+40|0;c=0!=(__TIFFFillStriles(b)|0)?2:3;break;case 2:c=0!=(HEAP32[((b+40|0)+136|0)>>2]|0)?4:3;break;case 3:a=0;c=12;break;case 4:c=0==(HEAP32[(b+12|0)>>2]&32|0)?5:8;break;case 5:c=0!=(FUNCTION_TABLE[HEAP32[(b+508|0)>>2]](b)|0)?7:6;break;case 6:a=0;c=12;break;case 7:c=b+12|0;HEAP32[c>>2]|=32;c=8;break;case 8:HEAP32[(b+452|0)>>2]=e;c=Math.imul((e>>>0)%(HEAP32[(g+124|0)>>2]>>>0)&-1,HEAP32[(g+60|0)>>2])|0;HEAP32[(b+
444|0)>>2]=c;c=b+12|0;HEAP32[c>>2]&=-1048577;c=0!=(HEAP32[(b+12|0)>>2]&131072|0)?9:10;break;case 9:HEAP32[(b+604|0)>>2]=0;HEAP32[(b+608|0)>>2]=0;c=11;break;case 10:HEAP32[(b+604|0)>>2]=HEAP32[(b+588|0)>>2];HEAP32[(b+608|0)>>2]=HEAP32[(HEAP32[(g+136|0)>>2]+(e<<3)|0)>>2];c=11;break;case 11:a=FUNCTION_TABLE[HEAP32[(b+512|0)>>2]](b,(e>>>0)/(HEAP32[(g+124|0)>>2]>>>0)&65535);c=12;break;case 12:return a;default:assert(0,"bad label: "+c)}}
function _TIFFReadTile(m,d,c,a,b,e){for(var g=0,g=1;;)switch(g){case 1:var f,k,h,l,n,p,q;k=m;h=d;l=c;n=a;p=b;q=e;g=0!=(_TIFFCheckRead(k,1)|0)?2:3;break;case 2:g=0!=(_TIFFCheckTile(k,l,n,p,q)|0)?4:3;break;case 3:f=-1;g=5;break;case 4:g=k;f=_TIFFComputeTile(k,l,n,p,q);f=_TIFFReadEncodedTile(g,f,h,-1);g=5;break;case 5:return f;default:assert(0,"bad label: "+g)}}
function _TIFFReadEncodedTile(m,d,c,a){var b=0,e=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h,l,n,p;f=m;k=d;h=c;l=a;n=f+40|0;p=HEAP32[(f+496|0)>>2];b=0!=(_TIFFCheckRead(f,1)|0)?3:2;break;case 2:g=-1;b=14;break;case 3:b=k>>>0>=HEAP32[(n+128|0)>>2]>>>0?4:5;break;case 4:b=k;g=HEAP32[(n+128|0)>>2];_TIFFErrorExt(HEAP32[(f+628|0)>>2],46232,24616,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,HEAP32[tempInt+8>>2]=
g,tempInt));g=-1;b=14;break;case 5:b=-1==(l|0)?6:7;break;case 6:l=p;b=10;break;case 7:b=(l|0)>(p|0)?8:9;break;case 8:l=p;b=9;break;case 9:b=10;break;case 10:b=0!=(_TIFFFillTile(f,k)|0)?11:13;break;case 11:b=0!=(FUNCTION_TABLE[HEAP32[(f+548|0)>>2]](f,h,l,(k>>>0)/(HEAP32[(n+124|0)>>2]>>>0)&65535)|0)?12:13;break;case 12:FUNCTION_TABLE[HEAP32[(f+652|0)>>2]](f,h,l);g=l;b=14;break;case 13:g=-1;b=14;break;case 14:return m=g,STACKTOP=e,m;default:assert(0,"bad label: "+b)}}
function _TIFFReadRawStrip1(m,d,c,a,b){var e=0,g=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var f,k,h,l,n,p,q,t,r,s,v;k=m;h=d;l=c;n=a;p=b;q=k+40|0;e=0!=(__TIFFFillStriles(k)|0)?3:2;break;case 2:f=-1;e=25;break;case 3:e=0==(HEAP32[(k+12|0)>>2]&131072|0)?4:5;break;case 4:e=6;break;case 5:throw ___assert_func(41544,372,43896,40968),"Reached an unreachable!";case 6:e=0!=(HEAP32[(k+12|0)>>2]&2048|0)?12:7;break;case 7:var e=HEAP32[(q+132|0)>>2]+(h<<3)|0,e=FUNCTION_TABLE[HEAP32[(k+
640|0)>>2]](HEAP32[(k+628|0)>>2],HEAP32[(e|0)>>2],HEAP32[(e+4|0)>>2],0),u=HEAP32[(q+132|0)>>2]+(h<<3)|0,e=(e|0)==(HEAP32[(u|0)>>2]|0)&(tempRet0|0)==(HEAP32[(u+4|0)>>2]|0)?9:8;break;case 8:f=HEAP32[(k+444|0)>>2];e=h;_TIFFErrorExt(HEAP32[(k+628|0)>>2],p,33144,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=f,HEAP32[tempInt+8>>2]=e,tempInt));f=-1;e=25;break;case 9:t=FUNCTION_TABLE[HEAP32[(k+632|0)>>2]](HEAP32[(k+628|0)>>2],l,n);e=(t|0)!=(n|0)?10:11;break;
case 10:f=HEAP32[(k+444|0)>>2];var e=u=t,u=0>(u|0)?-1:0,w=n,y=w,w=0>(w|0)?-1:0;_TIFFErrorExt(HEAP32[(k+628|0)>>2],p,32808,(tempInt=STACKTOP,STACKTOP=STACKTOP+40|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=f,HEAP32[tempInt+8>>2]=e,HEAP32[tempInt+16>>2]=u,HEAP32[tempInt+24>>2]=y,HEAP32[tempInt+32>>2]=w,tempInt));f=-1;e=25;break;case 11:e=24;break;case 12:r=HEAP32[(HEAP32[(q+132|0)>>2]+(h<<3)|0)>>2];s=r+n|0;e=r;u=HEAP32[(q+132|0)>>2]+(h<<3)|0;e=(e|0)!=(HEAP32[(u|0)>>2]|0)|((0>(e|0)?-1:
0)|0)!=(HEAP32[(u+4|0)>>2]|0)?14:13;break;case 13:e=(r|0)>(HEAP32[(k+616|0)>>2]|0)?14:15;break;case 14:v=0;e=21;break;case 15:e=(s|0)<(r|0)?18:16;break;case 16:e=(s|0)<(n|0)?18:17;break;case 17:e=(s|0)>(HEAP32[(k+616|0)>>2]|0)?18:19;break;case 18:v=HEAP32[(k+616|0)>>2]-r|0;e=20;break;case 19:v=n;e=20;break;case 20:e=21;break;case 21:e=(v|0)!=(n|0)?22:23;break;case 22:f=HEAP32[(k+444|0)>>2];var e=h,u=y=v,y=0>(y|0)?-1:0,A=n,w=A,A=0>(A|0)?-1:0;_TIFFErrorExt(HEAP32[(k+628|0)>>2],p,32360,(tempInt=STACKTOP,
STACKTOP=STACKTOP+48|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=f,HEAP32[tempInt+8>>2]=e,HEAP32[tempInt+16>>2]=u,HEAP32[tempInt+24>>2]=y,HEAP32[tempInt+32>>2]=w,HEAP32[tempInt+40>>2]=A,tempInt));f=-1;e=25;break;case 23:__TIFFmemcpy(l,HEAP32[(k+612|0)>>2]+r|0,n);e=24;break;case 24:f=n;e=25;break;case 25:return m=f,STACKTOP=g,m;default:assert(0,"bad label: "+e)}}
function _TIFFReadBufferSetup(m,d,c){var a=0,b=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k;g=m;f=d;k=c;a=0==(HEAP32[(g+12|0)>>2]&131072|0)?2:3;break;case 2:a=4;break;case 3:throw ___assert_func(41544,918,44024,40968),"Reached an unreachable!";case 4:a=g+12|0;HEAP32[a>>2]&=-8388609;a=0!=(HEAP32[(g+588|0)>>2]|0)?5:8;break;case 5:a=0!=(HEAP32[(g+12|0)>>2]&512|0)?6:7;break;case 6:__TIFFfree(HEAP32[(g+588|0)>>2]);a=7;break;case 7:HEAP32[(g+588|0)>>2]=0;HEAP32[(g+
592|0)>>2]=0;a=8;break;case 8:a=0!=(f|0)?9:10;break;case 9:HEAP32[(g+592|0)>>2]=k;HEAP32[(g+588|0)>>2]=f;a=g+12|0;HEAP32[a>>2]&=-513;a=13;break;case 10:a=k;a=_i64Add(a,0>(a|0)?-1:0,1023,0);a=___udivdi3(a,tempRet0,1024,0);a=___muldi3(a,tempRet0,1024,0);HEAP32[(g+592|0)>>2]=a;a=0==(HEAP32[(g+592|0)>>2]|0)?11:12;break;case 11:HEAP32[(g+592|0)>>2]=-1;a=12;break;case 12:a=__TIFFmalloc(HEAP32[(g+592|0)>>2]);HEAP32[(g+588|0)>>2]=a;a=g+12|0;HEAP32[a>>2]|=512;a=13;break;case 13:a=0==(HEAP32[(g+588|0)>>2]|
0)?14:15;break;case 14:e=HEAP32[(g+444|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],46336,40288,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=HEAP32[(g+592|0)>>2]=0;a=16;break;case 15:e=1;a=16;break;case 16:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}function __TIFFNoPostDecode(m,d,c){}
function _TIFFFillTile(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e,g,f,k=a,h;e=m;g=d;f=e+40|0;c=0!=(__TIFFFillStriles(e)|0)?2:3;break;case 2:c=0!=(HEAP32[((e+40|0)+136|0)>>2]|0)?4:3;break;case 3:b=0;c=37;break;case 4:c=0==(HEAP32[(e+12|0)>>2]&131072|0)?5:36;break;case 5:var c=HEAP32[(f+136|0)>>2]+(g<<3)|0,l=HEAP32[(c+4|0)>>2];HEAP32[(k|0)>>2]=HEAP32[(c|0)>>2];HEAP32[(k+4|0)>>2]=l;c=HEAP32[(k+4|0)>>2];c=0>=c>>>0&(0>c>>>0|0>=
HEAP32[(k|0)>>2]>>>0)?6:7;break;case 6:b=HEAP32[(k|0)>>2];c=HEAP32[(k+4|0)>>2];l=g;_TIFFErrorExt(HEAP32[(e+628|0)>>2],46728,23520,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,HEAP32[tempInt+8>>2]=c,HEAP32[tempInt+16>>2]=l,tempInt));b=0;c=37;break;case 7:c=0!=(HEAP32[(e+12|0)>>2]&2048|0)?8:17;break;case 8:c=0!=(HEAP32[(e+12|0)>>2]&HEAP16[(f+54|0)>>1]&65535|0)?10:9;break;case 9:c=0!=(HEAP32[(e+12|0)>>2]&256|0)?10:17;break;case 10:c=0!=(HEAP32[(e+
12|0)>>2]&512|0)?11:13;break;case 11:c=0!=(HEAP32[(e+588|0)>>2]|0)?12:13;break;case 12:__TIFFfree(HEAP32[(e+588|0)>>2]);HEAP32[(e+588|0)>>2]=0;HEAP32[(e+592|0)>>2]=0;c=13;break;case 13:c=e+12|0;HEAP32[c>>2]&=-513;var c=HEAP32[(k+4|0)>>2],l=HEAP32[(e+616|0)>>2],n=0>(l|0)?-1:0,c=c>>>0>n>>>0|c>>>0==n>>>0&HEAP32[(k|0)>>2]>>>0>l>>>0?15:14;break;case 14:var l=HEAP32[(f+132|0)>>2]+(g<<3)|0,c=HEAP32[(l|0)>>2],l=HEAP32[(l+4|0)>>2],n=HEAP32[(e+616|0)>>2],n=_i64Subtract(n,0>(n|0)?-1:0,HEAP32[(k|0)>>2],HEAP32[(k+
4|0)>>2]),p=tempRet0,c=l>>>0>p>>>0|l>>>0==p>>>0&c>>>0>n>>>0?15:16;break;case 15:HEAP32[(e+492|0)>>2]=-1;b=0;c=37;break;case 16:HEAP32[(e+592|0)>>2]=HEAP32[(k|0)>>2];HEAP32[(e+588|0)>>2]=HEAP32[(e+612|0)>>2]+HEAP32[(HEAP32[(f+132|0)>>2]+(g<<3)|0)>>2]|0;HEAP32[(e+596|0)>>2]=0;HEAP32[(e+600|0)>>2]=HEAP32[(k|0)>>2];c=e+12|0;HEAP32[c>>2]|=8388608;c=35;break;case 17:c=h=HEAP32[(k|0)>>2];c=(c|0)!=(HEAP32[(k|0)>>2]|0)|((0>(c|0)?-1:0)|0)!=(HEAP32[(k+4|0)>>2]|0)?18:19;break;case 18:_TIFFErrorExt(HEAP32[(e+
628|0)>>2],46728,29896,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=0;c=37;break;case 19:c=(h|0)>(HEAP32[(e+592|0)>>2]|0)?20:25;break;case 20:HEAP32[(e+492|0)>>2]=-1;c=0==(HEAP32[(e+12|0)>>2]&512|0)?21:22;break;case 21:b=g;_TIFFErrorExt(HEAP32[(e+628|0)>>2],46728,22824,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,tempInt));b=0;c=37;break;case 22:c=0!=(_TIFFReadBufferSetup(e,
0,h)|0)?24:23;break;case 23:b=0;c=37;break;case 24:c=25;break;case 25:c=0!=(HEAP32[(e+12|0)>>2]&8388608|0)?26:29;break;case 26:HEAP32[(e+492|0)>>2]=-1;c=0!=(_TIFFReadBufferSetup(e,0,h)|0)?28:27;break;case 27:b=0;c=37;break;case 28:c=29;break;case 29:c=(_TIFFReadRawTile1(e,g,HEAP32[(e+588|0)>>2],h,46728)|0)!=(h|0)?30:31;break;case 30:b=0;c=37;break;case 31:HEAP32[(e+596|0)>>2]=0;HEAP32[(e+600|0)>>2]=h;c=0!=(HEAP32[(e+12|0)>>2]&HEAP16[(f+54|0)>>1]&65535|0)?34:32;break;case 32:c=0==(HEAP32[(e+12|0)>>
2]&256|0)?33:34;break;case 33:_TIFFReverseBits(HEAP32[(e+588|0)>>2],HEAP32[(e+600|0)>>2]);c=34;break;case 34:c=35;break;case 35:c=36;break;case 36:b=_TIFFStartTile(e,g);c=37;break;case 37:return e=b,STACKTOP=a,e;default:assert(0,"bad label: "+c)}}
function _TIFFStartTile(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e,g;b=m;e=d;g=b+40|0;c=0!=(__TIFFFillStriles(b)|0)?2:3;break;case 2:c=0!=(HEAP32[((b+40|0)+136|0)>>2]|0)?4:3;break;case 3:a=0;c=18;break;case 4:c=0==(HEAP32[(b+12|0)>>2]&32|0)?5:8;break;case 5:c=0!=(FUNCTION_TABLE[HEAP32[(b+508|0)>>2]](b)|0)?7:6;break;case 6:a=0;c=18;break;case 7:c=b+12|0;HEAP32[c>>2]|=32;c=8;break;case 8:var f=HEAP32[(b+492|0)>>2]=e,c=HEAP32[(g+16|0)>>2]>>>0<(-1-(HEAP32[(g+28|0)>>2]-1|0)|0)>>>0?9:10;break;case 9:var k=
((HEAP32[(g+16|0)>>2]+(HEAP32[(g+28|0)>>2]-1|0)|0)>>>0)/(HEAP32[(g+28|0)>>2]>>>0)&-1,c=11;break;case 10:k=0;c=11;break;case 11:var h=Math.imul((f>>>0)%(k>>>0)&-1,HEAP32[(g+32|0)>>2])|0;HEAP32[(b+444|0)>>2]=h;h=e;c=HEAP32[(g+20|0)>>2]>>>0<(-1-(HEAP32[(g+32|0)>>2]-1|0)|0)>>>0?12:13;break;case 12:var l=((HEAP32[(g+20|0)>>2]+(HEAP32[(g+32|0)>>2]-1|0)|0)>>>0)/(HEAP32[(g+32|0)>>2]>>>0)&-1,c=14;break;case 13:l=0;c=14;break;case 14:c=Math.imul((h>>>0)%(l>>>0)&-1,HEAP32[(g+28|0)>>2])|0;HEAP32[(b+488|0)>>2]=
c;c=b+12|0;HEAP32[c>>2]&=-1048577;c=0!=(HEAP32[(b+12|0)>>2]&131072|0)?15:16;break;case 15:HEAP32[(b+604|0)>>2]=0;HEAP32[(b+608|0)>>2]=0;c=17;break;case 16:HEAP32[(b+604|0)>>2]=HEAP32[(b+588|0)>>2];HEAP32[(b+608|0)>>2]=HEAP32[(HEAP32[(g+136|0)>>2]+(e<<3)|0)>>2];c=17;break;case 17:a=FUNCTION_TABLE[HEAP32[(b+512|0)>>2]](b,(e>>>0)/(HEAP32[(g+124|0)>>2]>>>0)&65535);c=18;break;case 18:return a;default:assert(0,"bad label: "+c)}}
function _TIFFComputeStrip(m,d,c){var a=0,b=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h;g=m;f=d;k=c;h=g+40|0;f=(f>>>0)/(HEAP32[(h+60|0)>>2]>>>0)&-1;a=2==(HEAP16[(h+86|0)>>1]&65535|0)?2:5;break;case 2:a=(k&65535|0)>=(HEAP16[(h+58|0)>>1]&65535|0)?3:4;break;case 3:e=k&65535;a=HEAP16[(h+58|0)>>1]&65535;_TIFFErrorExt(HEAP32[(g+628|0)>>2],147472,24576,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,HEAP32[tempInt+
8>>2]=a,tempInt));e=0;a=6;break;case 4:a=Math.imul(k&65535,HEAP32[(h+124|0)>>2])|0;f=f+a|0;a=5;break;case 5:e=f;a=6;break;case 6:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFReadRawTile1(m,d,c,a,b){var e=0,g=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var f,k,h,l,n,p,q,t,r,s,v;k=m;h=d;l=c;n=a;p=b;q=k+40|0;e=0!=(__TIFFFillStriles(k)|0)?3:2;break;case 2:f=-1;e=25;break;case 3:e=0==(HEAP32[(k+12|0)>>2]&131072|0)?4:5;break;case 4:e=6;break;case 5:throw ___assert_func(41544,684,43872,40968),"Reached an unreachable!";case 6:e=0!=(HEAP32[(k+12|0)>>2]&2048|0)?12:7;break;case 7:var e=HEAP32[(q+132|0)>>2]+(h<<3)|0,e=FUNCTION_TABLE[HEAP32[(k+
640|0)>>2]](HEAP32[(k+628|0)>>2],HEAP32[(e|0)>>2],HEAP32[(e+4|0)>>2],0),u=HEAP32[(q+132|0)>>2]+(h<<3)|0,e=(e|0)==(HEAP32[(u|0)>>2]|0)&(tempRet0|0)==(HEAP32[(u+4|0)>>2]|0)?9:8;break;case 8:f=HEAP32[(k+444|0)>>2];e=HEAP32[(k+488|0)>>2];u=h;_TIFFErrorExt(HEAP32[(k+628|0)>>2],p,34672,(tempInt=STACKTOP,STACKTOP=STACKTOP+24|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=f,HEAP32[tempInt+8>>2]=e,HEAP32[tempInt+16>>2]=u,tempInt));f=-1;e=25;break;case 9:t=FUNCTION_TABLE[HEAP32[(k+632|0)>>2]](HEAP32[(k+
628|0)>>2],l,n);e=(t|0)!=(n|0)?10:11;break;case 10:f=HEAP32[(k+444|0)>>2];var e=HEAP32[(k+488|0)>>2],w=t,u=w,w=0>(w|0)?-1:0,y=n,A=y,y=0>(y|0)?-1:0;_TIFFErrorExt(HEAP32[(k+628|0)>>2],p,34144,(tempInt=STACKTOP,STACKTOP=STACKTOP+48|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=f,HEAP32[tempInt+8>>2]=e,HEAP32[tempInt+16>>2]=u,HEAP32[tempInt+24>>2]=w,HEAP32[tempInt+32>>2]=A,HEAP32[tempInt+40>>2]=y,tempInt));f=-1;e=25;break;case 11:e=24;break;case 12:r=HEAP32[(HEAP32[(q+132|0)>>2]+(h<<3)|0)>>
2];s=r+n|0;e=r;u=HEAP32[(q+132|0)>>2]+(h<<3)|0;e=(e|0)!=(HEAP32[(u|0)>>2]|0)|((0>(e|0)?-1:0)|0)!=(HEAP32[(u+4|0)>>2]|0)?14:13;break;case 13:e=(r|0)>(HEAP32[(k+616|0)>>2]|0)?14:15;break;case 14:v=0;e=21;break;case 15:e=(s|0)<(r|0)?18:16;break;case 16:e=(s|0)<(n|0)?18:17;break;case 17:e=(s|0)>(HEAP32[(k+616|0)>>2]|0)?18:19;break;case 18:v=HEAP32[(k+616|0)>>2]-r|0;e=20;break;case 19:v=n;e=20;break;case 20:e=21;break;case 21:e=(v|0)!=(n|0)?22:23;break;case 22:f=HEAP32[(k+444|0)>>2];var e=HEAP32[(k+488|
0)>>2],u=h,w=A=v,A=0>(A|0)?-1:0,z=n,y=z,z=0>(z|0)?-1:0;_TIFFErrorExt(HEAP32[(k+628|0)>>2],p,33656,(tempInt=STACKTOP,STACKTOP=STACKTOP+56|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=f,HEAP32[tempInt+8>>2]=e,HEAP32[tempInt+16>>2]=u,HEAP32[tempInt+24>>2]=w,HEAP32[tempInt+32>>2]=A,HEAP32[tempInt+40>>2]=y,HEAP32[tempInt+48>>2]=z,tempInt));f=-1;e=25;break;case 23:__TIFFmemcpy(l,HEAP32[(k+612|0)>>2]+r|0,n);e=24;break;case 24:f=n;e=25;break;case 25:return m=f,STACKTOP=g,m;default:assert(0,"bad label: "+
e)}}function __TIFFSwab16BitData(m,d,c){m=0;for(m=1;;)switch(m){case 1:var a,b;a=d;b=c;m=0==(b&1|0)?2:3;break;case 2:m=4;break;case 3:throw ___assert_func(41544,1048,43184,39704),"Reached an unreachable!";case 4:_TIFFSwabArrayOfShort(a,(b|0)/2&-1);return;default:assert(0,"bad label: "+m)}}
function __TIFFSwab24BitData(m,d,c){m=0;for(m=1;;)switch(m){case 1:var a,b;a=d;b=c;m=0==((b|0)%3&-1|0)?2:3;break;case 2:m=4;break;case 3:throw ___assert_func(41544,1056,43160,38896),"Reached an unreachable!";case 4:_TIFFSwabArrayOfTriples(a,(b|0)/3&-1);return;default:assert(0,"bad label: "+m)}}
function __TIFFSwab32BitData(m,d,c){m=0;for(m=1;;)switch(m){case 1:var a,b;a=d;b=c;m=0==(b&3|0)?2:3;break;case 2:m=4;break;case 3:throw ___assert_func(41544,1064,43136,38E3),"Reached an unreachable!";case 4:_TIFFSwabArrayOfLong(a,(b|0)/4&-1);return;default:assert(0,"bad label: "+m)}}
function __TIFFSwab64BitData(m,d,c){m=0;for(m=1;;)switch(m){case 1:var a,b;a=d;b=c;m=0==(b&7|0)?2:3;break;case 2:m=4;break;case 3:throw ___assert_func(41544,1072,43112,37336),"Reached an unreachable!";case 4:_TIFFSwabArrayOfDouble(a,(b|0)/8&-1);return;default:assert(0,"bad label: "+m)}}function _TIFFSwabShort(m){var d;d=HEAP8[m+1|0];HEAP8[m+1|0]=HEAP8[m|0];HEAP8[m|0]=d}
function _TIFFSwabLong(m){var d;d=HEAP8[m+3|0];HEAP8[m+3|0]=HEAP8[m|0];HEAP8[m|0]=d;d=HEAP8[m+2|0];HEAP8[m+2|0]=HEAP8[m+1|0];HEAP8[m+1|0]=d}function _TIFFSwabLong8(m){var d;d=HEAP8[m+7|0];HEAP8[m+7|0]=HEAP8[m|0];HEAP8[m|0]=d;d=HEAP8[m+6|0];HEAP8[m+6|0]=HEAP8[m+1|0];HEAP8[m+1|0]=d;d=HEAP8[m+5|0];HEAP8[m+5|0]=HEAP8[m+2|0];HEAP8[m+2|0]=d;d=HEAP8[m+4|0];HEAP8[m+4|0]=HEAP8[m+3|0];HEAP8[m+3|0]=d}
function _TIFFSwabArrayOfShort(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e;a=m;b=d;c=2;break;case 2:c=b;b=c-1|0;c=0<(c|0)?3:4;break;case 3:c=a;e=HEAP8[c+1|0];HEAP8[c+1|0]=HEAP8[c|0];HEAP8[c|0]=e;a=a+2|0;c=2;break;case 4:return;default:assert(0,"bad label: "+c)}}
function _TIFFSwabArrayOfTriples(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e;a=m;b=d;c=2;break;case 2:c=b;b=c-1|0;c=0<(c|0)?3:4;break;case 3:c=a;e=HEAP8[c+2|0];HEAP8[c+2|0]=HEAP8[c|0];HEAP8[c|0]=e;a=a+3|0;c=2;break;case 4:return;default:assert(0,"bad label: "+c)}}
function _TIFFNumberOfStrips(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b;c=m;a=c+40|0;d=-1==(HEAP32[(a+60|0)>>2]|0)?2:3;break;case 2:var e=1,d=7;break;case 3:d=HEAP32[(a+20|0)>>2]>>>0<(-1-(HEAP32[(a+60|0)>>2]-1|0)|0)>>>0?4:5;break;case 4:var g=((HEAP32[(a+20|0)>>2]+(HEAP32[(a+60|0)>>2]-1|0)|0)>>>0)/(HEAP32[(a+60|0)>>2]>>>0)&-1,d=6;break;case 5:g=0;d=6;break;case 6:e=g;d=7;break;case 7:b=e;d=2==(HEAP16[(a+86|0)>>1]&65535|0)?8:9;break;case 8:b=__TIFFMultiply32(c,b,HEAP16[(a+58|0)>>1]&65535,36552);
d=9;break;case 9:return b;default:assert(0,"bad label: "+d)}}
function _TIFFVStripSize64(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+32|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b=a,e,g,f,k=a+8,h,l,n,p=a+16,q=a+24;e=m;g=d;f=e+40|0;c=-1==(g|0)?2:3;break;case 2:g=HEAP32[(f+20|0)>>2];c=3;break;case 3:c=1==(HEAP16[(f+86|0)>>1]&65535|0)?4:25;break;case 4:c=6==(HEAP16[(f+50|0)>>1]&65535|0)?5:25;break;case 5:c=0!=(HEAP32[(e+12|0)>>2]&16384|0)?25:6;break;case 6:c=3!=(HEAP16[(f+58|0)>>1]&65535|0)?7:8;break;case 7:_TIFFErrorExt(HEAP32[(e+628|
0)>>2],46072,31888,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));HEAP32[(b|0)>>2]=0;HEAP32[(b+4|0)>>2]=0;c=26;break;case 8:var c=k|0,t=(k|0)+2|0;_TIFFGetFieldDefaulted(e,530,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=c,HEAP32[tempInt+8>>2]=t,tempInt));c=1!=(HEAP16[(k|0)>>1]&65535|0)?9:11;break;case 9:c=2!=(HEAP16[(k|0)>>1]&65535|0)?10:11;break;case 10:c=4!=
(HEAP16[(k|0)>>1]&65535|0)?14:11;break;case 11:c=1!=(HEAP16[(k+2|0)>>1]&65535|0)?12:15;break;case 12:c=2!=(HEAP16[(k+2|0)>>1]&65535|0)?13:15;break;case 13:c=4!=(HEAP16[(k+2|0)>>1]&65535|0)?14:15;break;case 14:c=HEAP16[(k|0)>>1]&65535;t=HEAP16[(k+2|0)>>1]&65535;_TIFFErrorExt(HEAP32[(e+628|0)>>2],46072,29776,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=c,HEAP32[tempInt+8>>2]=t,tempInt));HEAP32[(b|0)>>2]=0;HEAP32[(b+4|0)>>2]=0;c=26;break;case 15:h=
((Math.imul(HEAP16[(k|0)>>1]&65535,HEAP16[(k+2|0)>>1]&65535)|0)+2|0)&65535;c=HEAP32[(f+16|0)>>2]>>>0<(-1-((HEAP16[(k|0)>>1]&65535)-1|0)|0)>>>0?16:17;break;case 16:var r=((HEAP32[(f+16|0)>>2]+((HEAP16[(k|0)>>1]&65535)-1|0)|0)>>>0)/((HEAP16[(k|0)>>1]&65535)>>>0)&-1,c=18;break;case 17:r=0;c=18;break;case 18:l=r;c=g>>>0<(-1-((HEAP16[(k+2|0)>>1]&65535)-1|0)|0)>>>0?19:20;break;case 19:var s=((g+((HEAP16[(k+2|0)>>1]&65535)-1|0)|0)>>>0)/((HEAP16[(k+2|0)>>1]&65535)>>>0)&-1,c=21;break;case 20:s=0;c=21;break;
case 21:n=s;c=__TIFFMultiply64(e,l,0,h&65535,0,46072);t=tempRet0;HEAP32[(p|0)>>2]=c;HEAP32[(p+4|0)>>2]=t;c=0!=(__TIFFMultiply64(e,HEAP32[(p|0)>>2],HEAP32[(p+4|0)>>2],HEAP16[(f+44|0)>>1]&65535,0,46072)&7|0)|0!=(tempRet0&0|0)?22:23;break;case 22:var v=__TIFFMultiply64(e,HEAP32[(p|0)>>2],HEAP32[(p+4|0)>>2],HEAP16[(f+44|0)>>1]&65535,0,46072),u=tempRet0,u=_i64Add(v>>>3|u<<29,u>>>3|0,1,0),v=tempRet0,c=24;break;case 23:u=__TIFFMultiply64(e,HEAP32[(p|0)>>2],HEAP32[(p+4|0)>>2],HEAP16[(f+44|0)>>1]&65535,0,
46072);v=tempRet0;u=u>>>3|v<<29;v=v>>>3|0;c=24;break;case 24:HEAP32[(q|0)>>2]=u;HEAP32[(q+4|0)>>2]=v;c=__TIFFMultiply64(e,HEAP32[(q|0)>>2],HEAP32[(q+4|0)>>2],n,0,46072);t=tempRet0;HEAP32[(b|0)>>2]=c;HEAP32[(b+4|0)>>2]=t;c=26;break;case 25:var c=e,t=g,w=_TIFFScanlineSize64(e),c=__TIFFMultiply64(c,t,0,w,tempRet0,46072),t=tempRet0;HEAP32[(b|0)>>2]=c;HEAP32[(b+4|0)>>2]=t;c=26;break;case 26:return e=HEAP32[(b|0)>>2],b=HEAP32[(b+4|0)>>2],STACKTOP=a,tempRet0=b,e;default:assert(0,"bad label: "+c)}}
function _TIFFScanlineSize64(m){var d=0,c=STACKTOP;STACKTOP=STACKTOP+48|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a=c,b,e,g=c+8,f=c+16,k,h=c+24,l=c+32,n=c+40;b=m;e=b+40|0;d=1==(HEAP16[(e+86|0)>>1]&65535|0)?2:20;break;case 2:d=6==(HEAP16[(e+50|0)>>1]&65535|0)?3:18;break;case 3:d=3==(HEAP16[(e+58|0)>>1]&65535|0)?4:18;break;case 4:d=0!=(HEAP32[(b+12|0)>>2]&16384|0)?18:5;break;case 5:d=3!=(HEAP16[(e+58|0)>>1]&65535|0)?6:7;break;case 6:_TIFFErrorExt(HEAP32[(b+628|0)>>2],46184,
31888,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));HEAP32[(a|0)>>2]=0;HEAP32[(a+4|0)>>2]=0;d=22;break;case 7:var d=f|0,p=(f|0)+2|0;_TIFFGetFieldDefaulted(b,530,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=d,HEAP32[tempInt+8>>2]=p,tempInt));d=1!=(HEAP16[(f|0)>>1]&65535|0)?8:10;break;case 8:d=2!=(HEAP16[(f|0)>>1]&65535|0)?9:10;break;case 9:d=4!=(HEAP16[(f|0)>>
1]&65535|0)?13:10;break;case 10:d=1!=(HEAP16[(f+2|0)>>1]&65535|0)?11:14;break;case 11:d=2!=(HEAP16[(f+2|0)>>1]&65535|0)?12:14;break;case 12:d=4!=(HEAP16[(f+2|0)>>1]&65535|0)?13:14;break;case 13:_TIFFErrorExt(HEAP32[(b+628|0)>>2],46184,25744,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));HEAP32[(a|0)>>2]=0;HEAP32[(a+4|0)>>2]=0;d=22;break;case 14:k=((Math.imul(HEAP16[(f|0)>>1]&65535,HEAP16[(f+2|0)>>1]&65535)|0)+2|
0)&65535;d=HEAP32[(e+16|0)>>2]>>>0<(-1-((HEAP16[(f|0)>>1]&65535)-1|0)|0)>>>0?15:16;break;case 15:var q=((HEAP32[(e+16|0)>>2]+((HEAP16[(f|0)>>1]&65535)-1|0)|0)>>>0)/((HEAP16[(f|0)>>1]&65535)>>>0)&-1,d=17;break;case 16:q=0;d=17;break;case 17:d=q;d=__TIFFMultiply64(b,d,0,k&65535,0,46184);p=tempRet0;HEAP32[(h|0)>>2]=d;HEAP32[(h+4|0)>>2]=p;d=__TIFFMultiply64(b,HEAP32[(h|0)>>2],HEAP32[(h+4|0)>>2],HEAP16[(e+44|0)>>1]&65535,0,46184);d=_i64Add(d,tempRet0,7,0);d=___udivdi3(d,tempRet0,8,0);p=tempRet0;HEAP32[(l|
0)>>2]=d;HEAP32[(l+4|0)>>2]=p;d=___udivdi3(HEAP32[(l|0)>>2],HEAP32[(l+4|0)>>2],HEAP16[(f+2|0)>>1]&65535,0);p=tempRet0;HEAP32[(g|0)>>2]=d;HEAP32[(g+4|0)>>2]=p;d=19;break;case 18:d=__TIFFMultiply64(b,HEAP32[(e+16|0)>>2],0,HEAP16[(e+58|0)>>1]&65535,0,46184);p=tempRet0;HEAP32[(n|0)>>2]=d;HEAP32[(n+4|0)>>2]=p;d=__TIFFMultiply64(b,HEAP32[(n|0)>>2],HEAP32[(n+4|0)>>2],HEAP16[(e+44|0)>>1]&65535,0,46184);d=_i64Add(d,tempRet0,7,0);d=___udivdi3(d,tempRet0,8,0);p=tempRet0;HEAP32[(g|0)>>2]=d;HEAP32[(g+4|0)>>2]=
p;d=19;break;case 19:d=21;break;case 20:d=__TIFFMultiply64(b,HEAP32[(e+16|0)>>2],0,HEAP16[(e+44|0)>>1]&65535,0,46184);d=_i64Add(d,tempRet0,7,0);d=___udivdi3(d,tempRet0,8,0);p=tempRet0;HEAP32[(g|0)>>2]=d;HEAP32[(g+4|0)>>2]=p;d=21;break;case 21:d=HEAP32[(g+4|0)>>2];HEAP32[(a|0)>>2]=HEAP32[(g|0)>>2];HEAP32[(a+4|0)>>2]=d;d=22;break;case 22:return m=HEAP32[(a|0)>>2],a=HEAP32[(a+4|0)>>2],STACKTOP=c,tempRet0=a,m;default:assert(0,"bad label: "+d)}}
function _TIFFVStripSize(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,c=a,e;b=m;e=_TIFFVStripSize64(b,d);var g=tempRet0;HEAP32[(c|0)>>2]=e;HEAP32[(c+4|0)>>2]=g;g=e=HEAP32[(c|0)>>2];c=(g|0)!=(HEAP32[(c|0)>>2]|0)|((0>(g|0)?-1:0)|0)!=(HEAP32[(c+4|0)>>2]|0)?2:3;break;case 2:_TIFFErrorExt(HEAP32[(b+628|0)>>2],46056,28096,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>
2]=0,tempInt));e=0;c=3;break;case 3:return b=e,STACKTOP=a,b;default:assert(0,"bad label: "+c)}}function _TIFFStripSize64(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b;c=m;a=c+40|0;b=HEAP32[(a+60|0)>>2];d=b>>>0>HEAP32[(a+20|0)>>2]>>>0?2:3;break;case 2:b=HEAP32[(a+20|0)>>2];d=3;break;case 3:return _TIFFVStripSize64(c,b);default:assert(0,"bad label: "+d)}}
function _TIFFStripSize(m){var d=0,c=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,d=c,b;a=m;b=_TIFFStripSize64(a);var e=tempRet0;HEAP32[(d|0)>>2]=b;HEAP32[(d+4|0)>>2]=e;e=b=HEAP32[(d|0)>>2];d=(e|0)!=(HEAP32[(d|0)>>2]|0)|((0>(e|0)?-1:0)|0)!=(HEAP32[(d+4|0)>>2]|0)?2:3;break;case 2:_TIFFErrorExt(HEAP32[(a+628|0)>>2],46144,28096,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>
2]=0,tempInt));b=0;d=3;break;case 3:return m=b,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function __TIFFDefaultStripSize(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e,g=a,f=a+8;b=m;e=d;c=1>(e|0)?2:10;break;case 2:var c=_TIFFScanlineSize64(b),k=tempRet0;HEAP32[(g|0)>>2]=c;HEAP32[(g+4|0)>>2]=k;c=0==(HEAP32[(g|0)>>2]|0)&0==(HEAP32[(g+4|0)>>2]|0)?3:4;break;case 3:HEAP32[(g|0)>>2]=1;HEAP32[(g+4|0)>>2]=0;c=4;break;case 4:c=___udivdi3(8192,0,HEAP32[(g|0)>>2],HEAP32[(g+4|0)>>2]);k=tempRet0;HEAP32[(f|0)>>2]=c;HEAP32[(f+4|
0)>>2]=k;c=0==(HEAP32[(f|0)>>2]|0)&0==(HEAP32[(f+4|0)>>2]|0)?5:6;break;case 5:HEAP32[(f|0)>>2]=1;HEAP32[(f+4|0)>>2]=0;c=9;break;case 6:c=HEAP32[(f+4|0)>>2];c=0<c>>>0|0==c>>>0&4294967295<HEAP32[(f|0)>>2]>>>0?7:8;break;case 7:HEAP32[(f|0)>>2]=-1;HEAP32[(f+4|0)>>2]=0;c=8;break;case 8:c=9;break;case 9:e=HEAP32[(f|0)>>2];c=10;break;case 10:return b=e,STACKTOP=a,b;default:assert(0,"bad label: "+c)}}
function _TIFFScanlineSize(m){var d=0,c=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,d=c,b;a=m;b=_TIFFScanlineSize64(a);var e=tempRet0;HEAP32[(d|0)>>2]=b;HEAP32[(d+4|0)>>2]=e;e=b=HEAP32[(d|0)>>2];d=(e|0)!=(HEAP32[(d|0)>>2]|0)|((0>(e|0)?-1:0)|0)!=(HEAP32[(d+4|0)>>2]|0)?2:3;break;case 2:_TIFFErrorExt(HEAP32[(a+628|0)>>2],46160,24544,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>
2]=0,tempInt));b=0;d=3;break;case 3:return m=b,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}function _TIFFGetBitRevTable(m){return 0!=(m|0)?147512:46376}function _TIFFSwabArrayOfLong(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e;a=m;b=d;c=2;break;case 2:c=b;b=c-1|0;c=0<(c|0)?3:4;break;case 3:c=a;e=HEAP8[c+3|0];HEAP8[c+3|0]=HEAP8[c|0];HEAP8[c|0]=e;e=HEAP8[c+2|0];HEAP8[c+2|0]=HEAP8[c+1|0];HEAP8[c+1|0]=e;a=a+4|0;c=2;break;case 4:return;default:assert(0,"bad label: "+c)}}
function _TIFFSwabArrayOfLong8(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e;a=m;b=d;c=2;break;case 2:c=b;b=c-1|0;c=0<(c|0)?3:4;break;case 3:c=a;e=HEAP8[c+7|0];HEAP8[c+7|0]=HEAP8[c|0];HEAP8[c|0]=e;e=HEAP8[c+6|0];HEAP8[c+6|0]=HEAP8[c+1|0];HEAP8[c+1|0]=e;e=HEAP8[c+5|0];HEAP8[c+5|0]=HEAP8[c+2|0];HEAP8[c+2|0]=e;e=HEAP8[c+4|0];HEAP8[c+4|0]=HEAP8[c+3|0];HEAP8[c+3|0]=e;a=a+8|0;c=2;break;case 4:return;default:assert(0,"bad label: "+c)}}
function _TIFFSwabArrayOfFloat(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e;a=m;b=d;c=2;break;case 2:c=b;b=c-1|0;c=0<(c|0)?3:4;break;case 3:c=a;e=HEAP8[c+3|0];HEAP8[c+3|0]=HEAP8[c|0];HEAP8[c|0]=e;e=HEAP8[c+2|0];HEAP8[c+2|0]=HEAP8[c+1|0];HEAP8[c+1|0]=e;a=a+4|0;c=2;break;case 4:return;default:assert(0,"bad label: "+c)}}
function _TIFFSwabArrayOfDouble(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e;a=m;b=d;c=2;break;case 2:c=b;b=c-1|0;c=0<(c|0)?3:4;break;case 3:c=a;e=HEAP8[c+7|0];HEAP8[c+7|0]=HEAP8[c|0];HEAP8[c|0]=e;e=HEAP8[c+6|0];HEAP8[c+6|0]=HEAP8[c+1|0];HEAP8[c+1|0]=e;e=HEAP8[c+5|0];HEAP8[c+5|0]=HEAP8[c+2|0];HEAP8[c+2|0]=e;e=HEAP8[c+4|0];HEAP8[c+4|0]=HEAP8[c+3|0];HEAP8[c+3|0]=e;a=a+8|0;c=2;break;case 4:return;default:assert(0,"bad label: "+c)}}
function _TIFFReverseBits(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b;a=m;b=d;c=2;break;case 2:c=8<(b|0)?3:5;break;case 3:HEAP8[a|0]=HEAP8[147512+(HEAP8[a|0]&255)|0];HEAP8[a+1|0]=HEAP8[147512+(HEAP8[a+1|0]&255)|0];HEAP8[a+2|0]=HEAP8[147512+(HEAP8[a+2|0]&255)|0];HEAP8[a+3|0]=HEAP8[147512+(HEAP8[a+3|0]&255)|0];HEAP8[a+4|0]=HEAP8[147512+(HEAP8[a+4|0]&255)|0];HEAP8[a+5|0]=HEAP8[147512+(HEAP8[a+5|0]&255)|0];HEAP8[a+6|0]=HEAP8[147512+(HEAP8[a+6|0]&255)|0];HEAP8[a+7|0]=HEAP8[147512+(HEAP8[a+7|0]&255)|
0];a=a+8|0;c=4;break;case 4:b=b-8|0;c=2;break;case 5:c=6;break;case 6:c=b;b=c-1|0;c=0<(c|0)?7:8;break;case 7:HEAP8[a]=HEAP8[147512+(HEAP8[a]&255)|0];a=a+1|0;c=6;break;case 8:return;default:assert(0,"bad label: "+c)}}function _TIFFInitThunderScan(m,d){HEAP32[(m+508|0)>>2]=128;HEAP32[(m+532|0)>>2]=34;HEAP32[(m+540|0)>>2]=34;return 1}
function _ThunderSetupDecode(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b;b=m;d=4!=(HEAP16[((b+40|0)+44|0)>>1]&65535|0)?2:3;break;case 2:d=HEAP16[((b+40|0)+44|0)>>1]&65535;_TIFFErrorExt(HEAP32[(b+628|0)>>2],45560,28008,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=d,tempInt));a=0;d=4;break;case 3:a=1;d=4;break;case 4:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _ThunderDecodeRow(m,d,c,a){var b=0;a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var e,g,f,k;g=m;f=d;k=c;b=0!=((k|0)%(HEAP32[(g+580|0)>>2]|0)&-1|0)?2:3;break;case 2:_TIFFErrorExt(HEAP32[(g+628|0)>>2],45600,24128,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));e=0;b=9;break;case 3:b=4;break;case 4:b=0<(k|0)?5:8;break;case 5:b=0!=(_ThunderDecode(g,f,HEAP32[((g+40|0)+16|0)>>2])|
0)?7:6;break;case 6:e=0;b=9;break;case 7:k=k-HEAP32[(g+580|0)>>2]|0;f=f+HEAP32[(g+580|0)>>2]|0;b=4;break;case 8:e=1;b=9;break;case 9:return m=e,STACKTOP=a,m;default:assert(0,"bad label: "+b)}}
function _TIFFComputeTile(m,d,c,a,b){for(var e=0,e=1;;)switch(e){case 1:var g,f,k,h,l,n,p,q,t,r,s,v;g=m;f=d;k=c;h=a;l=b;g=g+40|0;n=HEAP32[(g+28|0)>>2];p=HEAP32[(g+32|0)>>2];q=HEAP32[(g+36|0)>>2];t=1;e=1==(HEAP32[(g+24|0)>>2]|0)?2:3;break;case 2:h=0;e=3;break;case 3:e=-1==(n|0)?4:5;break;case 4:n=HEAP32[(g+16|0)>>2];e=5;break;case 5:e=-1==(p|0)?6:7;break;case 6:p=HEAP32[(g+20|0)>>2];e=7;break;case 7:e=-1==(q|0)?8:9;break;case 8:q=HEAP32[(g+24|0)>>2];e=9;break;case 9:e=0!=(n|0)?10:25;break;case 10:e=
0!=(p|0)?11:25;break;case 11:e=0!=(q|0)?12:25;break;case 12:e=HEAP32[(g+16|0)>>2]>>>0<(-1-(n-1|0)|0)>>>0?13:14;break;case 13:var u=((HEAP32[(g+16|0)>>2]+(n-1|0)|0)>>>0)/(n>>>0)&-1,e=15;break;case 14:u=0;e=15;break;case 15:r=u;e=HEAP32[(g+20|0)>>2]>>>0<(-1-(p-1|0)|0)>>>0?16:17;break;case 16:var w=((HEAP32[(g+20|0)>>2]+(p-1|0)|0)>>>0)/(p>>>0)&-1,e=18;break;case 17:w=0;e=18;break;case 18:s=w;e=HEAP32[(g+24|0)>>2]>>>0<(-1-(q-1|0)|0)>>>0?19:20;break;case 19:var y=((HEAP32[(g+24|0)>>2]+(q-1|0)|0)>>>0)/
(q>>>0)&-1,e=21;break;case 20:y=0;e=21;break;case 21:v=y;e=2==(HEAP16[(g+86|0)>>1]&65535|0)?22:23;break;case 22:e=Math.imul(r,s)|0;e=Math.imul(e,v)|0;e=Math.imul(e,l&65535)|0;t=Math.imul(r,s)|0;t=Math.imul(t,(h>>>0)/(q>>>0)&-1)|0;e=e+t|0;t=Math.imul(r,(k>>>0)/(p>>>0)&-1)|0;t=(e+t|0)+((f>>>0)/(n>>>0)&-1)|0;e=24;break;case 23:e=Math.imul(r,s)|0;e=Math.imul(e,(h>>>0)/(q>>>0)&-1)|0;t=Math.imul(r,(k>>>0)/(p>>>0)&-1)|0;t=(e+t|0)+((f>>>0)/(n>>>0)&-1)|0;e=24;break;case 24:e=25;break;case 25:return t;default:assert(0,
"bad label: "+e)}}
function _ThunderDecode(m,d,c){var a=0,b=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h,l,n,p,q,t;g=m;f=d;k=c;h=HEAP32[(g+604|0)>>2];l=HEAP32[(g+608|0)>>2];p=n=0;a=2;break;case 2:if(0<(l|0))a=3;else var r=0,a=4;break;case 3:r=(p|0)<(k|0);a=4;break;case 4:a=r?5:62;break;case 5:q=h;h=q+1|0;q=HEAP8[q]&255;l=l-1|0;a=q&192;a=0==(a|0)?6:64==(a|0)?18:128==(a|0)?40:192==(a|0)?55:61;break;case 6:a=0!=(p&1|0)?7:8;break;case 7:a=f|0;HEAP8[a]=(HEAP8[a]&255|n)&255;n=f;f=
n+1|0;n=HEAP8[n]&255;p=p+1|0;q=q-1|0;a=9;break;case 8:n|=n<<4;a=9;break;case 9:p=p+q|0;a=(p|0)<(k|0)?10:15;break;case 10:a=11;break;case 11:a=0<(q|0)?12:14;break;case 12:var a=n&255,s=f;f=s+1|0;HEAP8[s]=a;a=13;break;case 13:q=q-2|0;a=11;break;case 14:a=15;break;case 15:a=-1==(q|0)?16:17;break;case 16:f=a=f-1|0;HEAP8[a]&=240;a=17;break;case 17:n&=15;a=61;break;case 18:t=a=q>>4&3;a=2!=(a|0)?19:25;break;case 19:n=(n+HEAP32[(1696+(t<<2)|0)>>2]|0)&15;a=(p|0)<(k|0)?20:24;break;case 20:a=p;p=a+1|0;a=0!=
(a&1|0)?21:22;break;case 21:a=n;s=f;f=s+1|0;HEAP8[s]=(HEAP8[s]&255|a)&255;a=23;break;case 22:HEAP8[f|0]=n<<4&255;a=23;break;case 23:a=24;break;case 24:a=25;break;case 25:t=a=q>>2&3;a=2!=(a|0)?26:32;break;case 26:n=(n+HEAP32[(1696+(t<<2)|0)>>2]|0)&15;a=(p|0)<(k|0)?27:31;break;case 27:a=p;p=a+1|0;a=0!=(a&1|0)?28:29;break;case 28:a=n;s=f;f=s+1|0;HEAP8[s]=(HEAP8[s]&255|a)&255;a=30;break;case 29:HEAP8[f|0]=n<<4&255;a=30;break;case 30:a=31;break;case 31:a=32;break;case 32:t=a=q&3;a=2!=(a|0)?33:39;break;
case 33:n=(n+HEAP32[(1696+(t<<2)|0)>>2]|0)&15;a=(p|0)<(k|0)?34:38;break;case 34:a=p;p=a+1|0;a=0!=(a&1|0)?35:36;break;case 35:a=n;s=f;f=s+1|0;HEAP8[s]=(HEAP8[s]&255|a)&255;a=37;break;case 36:HEAP8[f|0]=n<<4&255;a=37;break;case 37:a=38;break;case 38:a=39;break;case 39:a=61;break;case 40:t=a=q>>3&7;a=4!=(a|0)?41:47;break;case 41:n=(n+HEAP32[(7168+(t<<2)|0)>>2]|0)&15;a=(p|0)<(k|0)?42:46;break;case 42:a=p;p=a+1|0;a=0!=(a&1|0)?43:44;break;case 43:a=n;s=f;f=s+1|0;HEAP8[s]=(HEAP8[s]&255|a)&255;a=45;break;
case 44:HEAP8[f|0]=n<<4&255;a=45;break;case 45:a=46;break;case 46:a=47;break;case 47:t=a=q&7;a=4!=(a|0)?48:54;break;case 48:n=(n+HEAP32[(7168+(t<<2)|0)>>2]|0)&15;a=(p|0)<(k|0)?49:53;break;case 49:a=p;p=a+1|0;a=0!=(a&1|0)?50:51;break;case 50:a=n;s=f;f=s+1|0;HEAP8[s]=(HEAP8[s]&255|a)&255;a=52;break;case 51:HEAP8[f|0]=n<<4&255;a=52;break;case 52:a=53;break;case 53:a=54;break;case 54:a=61;break;case 55:n=q&15;a=(p|0)<(k|0)?56:60;break;case 56:a=p;p=a+1|0;a=0!=(a&1|0)?57:58;break;case 57:a=n;s=f;f=s+1|
0;HEAP8[s]=(HEAP8[s]&255|a)&255;a=59;break;case 58:HEAP8[f|0]=n<<4&255;a=59;break;case 59:a=60;break;case 60:a=61;break;case 61:a=2;break;case 62:HEAP32[(g+604|0)>>2]=h;HEAP32[(g+608|0)>>2]=l;a=(p|0)!=(k|0)?63:64;break;case 63:e=(p|0)<(k|0)?31824:29720;var a=HEAP32[(g+444|0)>>2],v=p,s=v,v=0>(v|0)?-1:0,u=k,w=u,u=0>(u|0)?-1:0;_TIFFErrorExt(HEAP32[(g+628|0)>>2],45584,36360,(tempInt=STACKTOP,STACKTOP=STACKTOP+48|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,HEAP32[tempInt+8>>2]=a,HEAP32[tempInt+
16>>2]=s,HEAP32[tempInt+24>>2]=v,HEAP32[tempInt+32>>2]=w,HEAP32[tempInt+40>>2]=u,tempInt));e=0;a=65;break;case 64:e=1;a=65;break;case 65:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFCheckTile(m,d,c,a,b){var e=0,g=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(e=1;;)switch(e){case 1:var f,k,h,l,n,p,q;k=m;h=d;l=c;n=a;p=b;q=k+40|0;e=h>>>0>=HEAP32[(q+16|0)>>2]>>>0?2:3;break;case 2:e=h;f=HEAP32[(q+16|0)>>2]-1|0;_TIFFErrorExt(HEAP32[(k+628|0)>>2],HEAP32[(k|0)>>2],23968,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,HEAP32[tempInt+8>>2]=f,tempInt));f=0;e=11;break;case 3:e=l>>>0>=HEAP32[(q+20|0)>>2]>>>0?4:5;break;case 4:e=
l;f=HEAP32[(q+20|0)>>2]-1|0;_TIFFErrorExt(HEAP32[(k+628|0)>>2],HEAP32[(k|0)>>2],36224,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,HEAP32[tempInt+8>>2]=f,tempInt));f=0;e=11;break;case 5:e=n>>>0>=HEAP32[(q+24|0)>>2]>>>0?6:7;break;case 6:e=n;f=HEAP32[(q+24|0)>>2]-1|0;_TIFFErrorExt(HEAP32[(k+628|0)>>2],HEAP32[(k|0)>>2],31784,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,HEAP32[tempInt+8>>2]=f,tempInt));
f=0;e=11;break;case 7:e=2==(HEAP16[(q+86|0)>>1]&65535|0)?8:10;break;case 8:e=(p&65535|0)>=(HEAP16[(q+58|0)>>1]&65535|0)?9:10;break;case 9:e=p&65535;f=(HEAP16[(q+58|0)>>1]&65535)-1|0;_TIFFErrorExt(HEAP32[(k+628|0)>>2],HEAP32[(k|0)>>2],29648,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,HEAP32[tempInt+8>>2]=f,tempInt));f=0;e=11;break;case 10:f=1;e=11;break;case 11:return m=f,STACKTOP=g,m;default:assert(0,"bad label: "+e)}}
function __TIFFDefaultTileSize(m,d,c){m=0;for(m=1;;)switch(m){case 1:var a,b;a=d;b=c;m=1>(HEAP32[a>>2]|0)?2:3;break;case 2:HEAP32[a>>2]=256;m=3;break;case 3:m=1>(HEAP32[b>>2]|0)?4:5;break;case 4:HEAP32[b>>2]=256;m=5;break;case 5:m=0!=(HEAP32[a>>2]&15|0)?6:10;break;case 6:m=4294967280>HEAP32[a>>2]>>>0?7:8;break;case 7:var e=((HEAP32[a>>2]+15|0)>>>0)/16&-1;m=9;break;case 8:e=0;m=9;break;case 9:HEAP32[a>>2]=e<<4;m=10;break;case 10:m=0!=(HEAP32[b>>2]&15|0)?11:15;break;case 11:m=4294967280>HEAP32[b>>2]>>>
0?12:13;break;case 12:var g=((HEAP32[b>>2]+15|0)>>>0)/16&-1;m=14;break;case 13:g=0;m=14;break;case 14:HEAP32[b>>2]=g<<4;m=15;break;case 15:return;default:assert(0,"bad label: "+m)}}
function _TIFFNumberOfTiles(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b,e,g,f;c=m;a=c+40|0;b=HEAP32[(a+28|0)>>2];e=HEAP32[(a+32|0)>>2];g=HEAP32[(a+36|0)>>2];d=-1==(b|0)?2:3;break;case 2:b=HEAP32[(a+16|0)>>2];d=3;break;case 3:d=-1==(e|0)?4:5;break;case 4:e=HEAP32[(a+20|0)>>2];d=5;break;case 5:d=-1==(g|0)?6:7;break;case 6:g=HEAP32[(a+24|0)>>2];d=7;break;case 7:d=0==(b|0)?10:8;break;case 8:d=0==(e|0)?10:9;break;case 9:d=0==(g|0)?10:11;break;case 10:var k=0,d=21;break;case 11:var h=c,l=c,d=HEAP32[(a+
16|0)>>2]>>>0<(-1-(b-1|0)|0)>>>0?12:13;break;case 12:var n=((HEAP32[(a+16|0)>>2]+(b-1|0)|0)>>>0)/(b>>>0)&-1,d=14;break;case 13:n=0;d=14;break;case 14:d=HEAP32[(a+20|0)>>2]>>>0<(-1-(e-1|0)|0)>>>0?15:16;break;case 15:var p=((HEAP32[(a+20|0)>>2]+(e-1|0)|0)>>>0)/(e>>>0)&-1,d=17;break;case 16:p=0;d=17;break;case 17:var q=__TIFFMultiply32(l,n,p,27928),d=HEAP32[(a+24|0)>>2]>>>0<(-1-(g-1|0)|0)>>>0?18:19;break;case 18:var t=((HEAP32[(a+24|0)>>2]+(g-1|0)|0)>>>0)/(g>>>0)&-1,d=20;break;case 19:t=0;d=20;break;
case 20:k=__TIFFMultiply32(h,q,t,27928);d=21;break;case 21:f=k;d=2==(HEAP16[(a+86|0)>>1]&65535|0)?22:23;break;case 22:f=__TIFFMultiply32(c,f,HEAP16[(a+58|0)>>1]&65535,27928);d=23;break;case 23:return f;default:assert(0,"bad label: "+d)}}
function _TIFFTileRowSize64(m){var d=0,c=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a=c,b,e,g=c+8;b=m;e=b+40|0;d=0==(HEAP32[(e+32|0)>>2]|0)?3:2;break;case 2:d=0==(HEAP32[(e+28|0)>>2]|0)?3:4;break;case 3:HEAP32[(a|0)>>2]=0;HEAP32[(a+4|0)>>2]=0;d=10;break;case 4:var d=__TIFFMultiply64(b,HEAP16[(e+44|0)>>1]&65535,0,HEAP32[(e+28|0)>>2],0,26720),f=tempRet0;HEAP32[(g|0)>>2]=d;HEAP32[(g+4|0)>>2]=f;d=1==(HEAP16[(e+86|0)>>1]&65535|0)?5:6;break;case 5:d=
__TIFFMultiply64(b,HEAP32[(g|0)>>2],HEAP32[(g+4|0)>>2],HEAP16[(e+58|0)>>1]&65535,0,26720);f=tempRet0;HEAP32[(g|0)>>2]=d;HEAP32[(g+4|0)>>2]=f;d=6;break;case 6:d=0!=(HEAP32[(g|0)>>2]&7|0)|0!=(HEAP32[(g+4|0)>>2]&0|0)?7:8;break;case 7:var k=HEAP32[(g+4|0)>>2],h=_i64Add(HEAP32[(g|0)>>2]>>>3|k<<29,k>>>3|0,1,0),k=tempRet0,d=9;break;case 8:k=HEAP32[(g+4|0)>>2];h=HEAP32[(g|0)>>2]>>>3|k<<29;k=k>>>3|0;d=9;break;case 9:HEAP32[(a|0)>>2]=h;HEAP32[(a+4|0)>>2]=k;d=10;break;case 10:return m=HEAP32[(a|0)>>2],a=HEAP32[(a+
4|0)>>2],STACKTOP=c,tempRet0=a,m;default:assert(0,"bad label: "+d)}}
function _TIFFTileRowSize(m){var d=0,c=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,d=c,b;a=m;b=_TIFFTileRowSize64(a);var e=tempRet0;HEAP32[(d|0)>>2]=b;HEAP32[(d+4|0)>>2]=e;e=b=HEAP32[(d|0)>>2];d=(e|0)!=(HEAP32[(d|0)>>2]|0)|((0>(e|0)?-1:0)|0)!=(HEAP32[(d+4|0)>>2]|0)?2:3;break;case 2:_TIFFErrorExt(HEAP32[(a+628|0)>>2],46128,25640,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>
2]=0,tempInt));b=0;d=3;break;case 3:return m=b,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _TIFFVTileSize64(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+32|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b=a,e,g,f,k=a+8,h,l,n,p=a+16,q=a+24;e=m;g=d;f=e+40|0;c=0==(HEAP32[(f+32|0)>>2]|0)?4:2;break;case 2:c=0==(HEAP32[(f+28|0)>>2]|0)?4:3;break;case 3:c=0==(HEAP32[(f+36|0)>>2]|0)?4:5;break;case 4:HEAP32[(b|0)>>2]=0;HEAP32[(b+4|0)>>2]=0;c=27;break;case 5:c=1==(HEAP16[(f+86|0)>>1]&65535|0)?6:26;break;case 6:c=6==(HEAP16[(f+50|0)>>1]&65535|0)?7:26;break;case 7:c=3==
(HEAP16[(f+58|0)>>1]&65535|0)?8:26;break;case 8:c=0!=(HEAP32[(e+12|0)>>2]&16384|0)?26:9;break;case 9:var c=k|0,t=(k|0)+2|0;_TIFFGetFieldDefaulted(e,530,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=c,HEAP32[tempInt+8>>2]=t,tempInt));c=1!=(HEAP16[(k|0)>>1]&65535|0)?10:12;break;case 10:c=2!=(HEAP16[(k|0)>>1]&65535|0)?11:12;break;case 11:c=4!=(HEAP16[(k|0)>>1]&65535|0)?15:12;break;case 12:c=1!=(HEAP16[(k+2|0)>>1]&65535|0)?13:16;break;case 13:c=2!=(HEAP16[(k+
2|0)>>1]&65535|0)?14:16;break;case 14:c=4!=(HEAP16[(k+2|0)>>1]&65535|0)?15:16;break;case 15:c=HEAP16[(k|0)>>1]&65535;t=HEAP16[(k+2|0)>>1]&65535;_TIFFErrorExt(HEAP32[(e+628|0)>>2],46040,24440,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=c,HEAP32[tempInt+8>>2]=t,tempInt));HEAP32[(b|0)>>2]=0;HEAP32[(b+4|0)>>2]=0;c=27;break;case 16:h=((Math.imul(HEAP16[(k|0)>>1]&65535,HEAP16[(k+2|0)>>1]&65535)|0)+2|0)&65535;c=HEAP32[(f+28|0)>>2]>>>0<(-1-((HEAP16[(k|
0)>>1]&65535)-1|0)|0)>>>0?17:18;break;case 17:var r=((HEAP32[(f+28|0)>>2]+((HEAP16[(k|0)>>1]&65535)-1|0)|0)>>>0)/((HEAP16[(k|0)>>1]&65535)>>>0)&-1,c=19;break;case 18:r=0;c=19;break;case 19:l=r;c=g>>>0<(-1-((HEAP16[(k+2|0)>>1]&65535)-1|0)|0)>>>0?20:21;break;case 20:var s=((g+((HEAP16[(k+2|0)>>1]&65535)-1|0)|0)>>>0)/((HEAP16[(k+2|0)>>1]&65535)>>>0)&-1,c=22;break;case 21:s=0;c=22;break;case 22:n=s;c=__TIFFMultiply64(e,l,0,h&65535,0,46040);t=tempRet0;HEAP32[(p|0)>>2]=c;HEAP32[(p+4|0)>>2]=t;c=0!=(__TIFFMultiply64(e,
HEAP32[(p|0)>>2],HEAP32[(p+4|0)>>2],HEAP16[(f+44|0)>>1]&65535,0,46040)&7|0)|0!=(tempRet0&0|0)?23:24;break;case 23:var v=__TIFFMultiply64(e,HEAP32[(p|0)>>2],HEAP32[(p+4|0)>>2],HEAP16[(f+44|0)>>1]&65535,0,46040),u=tempRet0,u=_i64Add(v>>>3|u<<29,u>>>3|0,1,0),v=tempRet0,c=25;break;case 24:u=__TIFFMultiply64(e,HEAP32[(p|0)>>2],HEAP32[(p+4|0)>>2],HEAP16[(f+44|0)>>1]&65535,0,46040);v=tempRet0;u=u>>>3|v<<29;v=v>>>3|0;c=25;break;case 25:HEAP32[(q|0)>>2]=u;HEAP32[(q+4|0)>>2]=v;c=__TIFFMultiply64(e,HEAP32[(q|
0)>>2],HEAP32[(q+4|0)>>2],n,0,46040);t=tempRet0;HEAP32[(b|0)>>2]=c;HEAP32[(b+4|0)>>2]=t;c=27;break;case 26:var c=e,t=g,w=_TIFFTileRowSize64(e),c=__TIFFMultiply64(c,t,0,w,tempRet0,46040),t=tempRet0;HEAP32[(b|0)>>2]=c;HEAP32[(b+4|0)>>2]=t;c=27;break;case 27:return e=HEAP32[(b|0)>>2],b=HEAP32[(b+4|0)>>2],STACKTOP=a,tempRet0=b,e;default:assert(0,"bad label: "+c)}}function _TIFFTileSize64(m){return _TIFFVTileSize64(m,HEAP32[((m+40|0)+32|0)>>2])}
function _TIFFTileSize(m){var d=0,c=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,d=c,b;a=m;b=_TIFFTileSize64(a);var e=tempRet0;HEAP32[(d|0)>>2]=b;HEAP32[(d+4|0)>>2]=e;e=b=HEAP32[(d|0)>>2];d=(e|0)!=(HEAP32[(d|0)>>2]|0)|((0>(e|0)?-1:0)|0)!=(HEAP32[(d+4|0)>>2]|0)?2:3;break;case 2:_TIFFErrorExt(HEAP32[(a+628|0)>>2],46112,25640,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=
0,tempInt));b=0;d=3;break;case 3:return m=b,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _TIFFWarningExt(m,d,c,a){var b=0,e=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h=e;g=m;f=d;k=c;b=h|0;HEAP32[b>>2]=a;HEAP32[b+4>>2]=0;b=0!=(HEAP32[11272]|0)?2:3;break;case 2:FUNCTION_TABLE[HEAP32[11272]](f,k,h|0);b=3;break;case 3:b=0!=(HEAP32[37382]|0)?4:5;break;case 4:FUNCTION_TABLE[HEAP32[37382]](g,f,k,h|0);b=5;break;case 5:STACKTOP=e;return;default:assert(0,"bad label: "+b)}}function _ZIPFixupTags(m){return 1}
function _TIFFFlushData1(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;a=m;d=0<(HEAP32[(a+608|0)>>2]|0)?2:12;break;case 2:d=0!=(HEAP32[(a+12|0)>>2]&1048576|0)?3:12;break;case 3:d=0!=(HEAP32[(a+12|0)>>2]&HEAP16[((a+40|0)+54|0)>>1]&65535|0)?6:4;break;case 4:d=0==(HEAP32[(a+12|0)>>2]&256|0)?5:6;break;case 5:_TIFFReverseBits(HEAP32[(a+588|0)>>2],HEAP32[(a+608|0)>>2]);d=6;break;case 6:var b=a,d=0!=(HEAP32[(a+12|0)>>2]&1024|0)?7:8;break;case 7:var e=HEAP32[(a+492|0)>>2],d=9;break;case 8:e=HEAP32[(a+452|
0)>>2];d=9;break;case 9:d=0!=(_TIFFAppendToStrip(b,e,HEAP32[(a+588|0)>>2],HEAP32[(a+608|0)>>2])|0)?11:10;break;case 10:c=0;d=13;break;case 11:HEAP32[(a+608|0)>>2]=0;HEAP32[(a+604|0)>>2]=HEAP32[(a+588|0)>>2];d=12;break;case 12:c=1;d=13;break;case 13:return c;default:assert(0,"bad label: "+d)}}
function _ZIPVGetField(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k;e=m;g=d;f=c;k=HEAP32[(e+576|0)>>2];a=65557==(g|0)?2:3;break;case 2:var a=HEAP32[(k+120|0)>>2],h=f,h=(tempInt=HEAP32[h+4>>2],HEAP32[h+4>>2]=tempInt+8,HEAP32[HEAP32[h>>2]+tempInt>>2]);HEAP32[h>>2]=a;a=4;break;case 3:b=FUNCTION_TABLE[HEAP32[(k+128|0)>>2]](e,g,f);a=5;break;case 4:b=1;a=5;break;case 5:return b;default:assert(0,"bad label: "+a)}}
function _ZIPVSetField(m,d,c){var a=0,b=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h;g=m;f=d;k=c;h=HEAP32[(g+576|0)>>2];a=65557==(f|0)?2:7;break;case 2:a=k;a=(tempInt=HEAP32[a+4>>2],HEAP32[a+4>>2]=tempInt+8,HEAP32[HEAP32[a>>2]+tempInt>>2]);HEAP32[(h+120|0)>>2]=a;a=0!=(HEAP32[(h+124|0)>>2]&2|0)?3:6;break;case 3:a=0!=(_deflateParams(h+64|0,HEAP32[(h+120|0)>>2],0)|0)?4:5;break;case 4:e=HEAP32[((h+64|0)+24|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],45432,22792,
(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=0;a=8;break;case 5:a=6;break;case 6:e=1;a=8;break;case 7:e=FUNCTION_TABLE[HEAP32[(h+132|0)>>2]](g,f,k);a=8;break;case 8:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _TIFFAppendToStrip(m,d,c,a){var b=0,e=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g,f,k,h,l,n,p=e,q=e+8;f=m;k=d;h=c;l=a;n=f+40|0;HEAP32[(q|0)>>2]=-1;HEAP32[(q+4|0)>>2]=-1;b=HEAP32[(n+132|0)>>2]+(k<<3)|0;b=0==(HEAP32[(b|0)>>2]|0)&0==(HEAP32[(b+4|0)>>2]|0)?3:2;break;case 2:b=f+456|0;b=0==(HEAP32[(b|0)>>2]|0)&0==(HEAP32[(b+4|0)>>2]|0)?3:14;break;case 3:b=0<HEAP32[(n+128|0)>>2]>>>0?4:5;break;case 4:b=6;break;case 5:throw ___assert_func(39672,
668,44208,38856),"Reached an unreachable!";case 6:b=HEAP32[(n+136|0)>>2]+(k<<3)|0;b=0!=(HEAP32[(b|0)>>2]|0)|0!=(HEAP32[(b+4|0)>>2]|0)?7:12;break;case 7:b=HEAP32[(n+132|0)>>2]+(k<<3)|0;b=0!=(HEAP32[(b|0)>>2]|0)|0!=(HEAP32[(b+4|0)>>2]|0)?8:12;break;case 8:var b=HEAP32[(n+136|0)>>2]+(k<<3)|0,t=HEAP32[(b+4|0)>>2],r=l,s=0>(r|0)?-1:0,b=t>>>0>=s>>>0&(t>>>0>s>>>0|HEAP32[(b|0)>>2]>>>0>=r>>>0)?9:12;break;case 9:b=HEAP32[(n+132|0)>>2]+(k<<3)|0;b=FUNCTION_TABLE[HEAP32[(f+640|0)>>2]](HEAP32[(f+628|0)>>2],HEAP32[(b|
0)>>2],HEAP32[(b+4|0)>>2],0);t=HEAP32[(n+132|0)>>2]+(k<<3)|0;b=(b|0)==(HEAP32[(t|0)>>2]|0)&(tempRet0|0)==(HEAP32[(t+4|0)>>2]|0)?11:10;break;case 10:g=HEAP32[(f+444|0)>>2];_TIFFErrorExt(HEAP32[(f+628|0)>>2],147768,37936,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=g,tempInt));g=0;b=24;break;case 11:b=13;break;case 12:b=FUNCTION_TABLE[HEAP32[(f+640|0)>>2]](HEAP32[(f+628|0)>>2],0,0,2);t=tempRet0;r=HEAP32[(n+132|0)>>2]+(k<<3)|0;HEAP32[(r|0)>>2]=b;HEAP32[(r+
4|0)>>2]=t;b=f+12|0;HEAP32[b>>2]|=2097152;b=13;break;case 13:b=HEAP32[(n+132|0)>>2]+(k<<3)|0;t=HEAP32[(b+4|0)>>2];r=f+456|0;HEAP32[(r|0)>>2]=HEAP32[(b|0)>>2];HEAP32[(r+4|0)>>2]=t;b=HEAP32[(n+136|0)>>2]+(k<<3)|0;t=HEAP32[(b+4|0)>>2];HEAP32[(q|0)>>2]=HEAP32[(b|0)>>2];HEAP32[(q+4|0)>>2]=t;b=HEAP32[(n+136|0)>>2]+(k<<3)|0;HEAP32[(b|0)>>2]=0;HEAP32[(b+4|0)>>2]=0;b=14;break;case 14:b=f+456|0;t=l;b=_i64Add(HEAP32[(b|0)>>2],HEAP32[(b+4|0)>>2],t,0>(t|0)?-1:0);t=tempRet0;HEAP32[(p|0)>>2]=b;HEAP32[(p+4|0)>>2]=
t;b=0!=(HEAP32[(f+12|0)>>2]&524288|0)?16:15;break;case 15:HEAP32[(p|0)>>2]=HEAP32[(p|0)>>2];HEAP32[(p+4|0)>>2]=0;b=16;break;case 16:b=HEAP32[(p+4|0)>>2];t=f+456|0;r=HEAP32[(t+4|0)>>2];b=b>>>0<r>>>0|b>>>0==r>>>0&HEAP32[(p|0)>>2]>>>0<HEAP32[(t|0)>>2]>>>0?18:17;break;case 17:b=HEAP32[(p+4|0)>>2];t=l;r=0>(t|0)?-1:0;b=b>>>0<r>>>0|b>>>0==r>>>0&HEAP32[(p|0)>>2]>>>0<t>>>0?18:19;break;case 18:_TIFFErrorExt(HEAP32[(f+628|0)>>2],147768,37256,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,
assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));g=0;b=24;break;case 19:b=(FUNCTION_TABLE[HEAP32[(f+636|0)>>2]](HEAP32[(f+628|0)>>2],h,l)|0)==(l|0)?21:20;break;case 20:g=HEAP32[(f+444|0)>>2];_TIFFErrorExt(HEAP32[(f+628|0)>>2],147768,36480,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=g,tempInt));g=0;b=24;break;case 21:b=HEAP32[(p+4|0)>>2];t=f+456|0;HEAP32[(t|0)>>2]=HEAP32[(p|0)>>2];HEAP32[(t+4|0)>>2]=b;t=l;b=HEAP32[(n+136|0)>>2]+
(k<<3)|0;t=_i64Add(HEAP32[(b|0)>>2],HEAP32[(b+4|0)>>2],t,0>(t|0)?-1:0);r=tempRet0;HEAP32[(b|0)>>2]=t;HEAP32[(b+4|0)>>2]=r;b=HEAP32[(n+136|0)>>2]+(k<<3)|0;b=(HEAP32[(b|0)>>2]|0)!=(HEAP32[(q|0)>>2]|0)|(HEAP32[(b+4|0)>>2]|0)!=(HEAP32[(q+4|0)>>2]|0)?22:23;break;case 22:b=f+12|0;HEAP32[b>>2]|=2097152;b=23;break;case 23:g=1;b=24;break;case 24:return m=g,STACKTOP=e,m;default:assert(0,"bad label: "+b)}}
function _TIFFInitZIP(m,d){var c=0,a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e,g;e=m;g=d;c=32946==(g|0)?3:2;break;case 2:c=8==(g|0)?3:4;break;case 3:c=5;break;case 4:throw ___assert_func(23504,399,44096,35736),"Reached an unreachable!";case 5:c=0!=(__TIFFMergeFields(e,8,1)|0)?7:6;break;case 6:_TIFFErrorExt(HEAP32[(e+628|0)>>2],46656,31608,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=
0,tempInt));b=0;c=11;break;case 7:c=__TIFFmalloc(136);HEAP32[(e+576|0)>>2]=c;c=0==(HEAP32[(e+576|0)>>2]|0)?8:9;break;case 8:c=10;break;case 9:b=HEAP32[(e+576|0)>>2];HEAP32[((b+64|0)+32|0)>>2]=0;HEAP32[((b+64|0)+36|0)>>2]=0;HEAP32[((b+64|0)+40|0)>>2]=0;HEAP32[((b+64|0)+44|0)>>2]=0;HEAP32[(b+128|0)>>2]=HEAP32[((e+668|0)+4|0)>>2];HEAP32[((e+668|0)+4|0)>>2]=394;HEAP32[(b+132|0)>>2]=HEAP32[(e+668|0)>>2];HEAP32[(e+668|0)>>2]=334;HEAP32[(b+120|0)>>2]=-1;HEAP32[(b+124|0)>>2]=0;HEAP32[(e+504|0)>>2]=160;HEAP32[(e+
508|0)>>2]=364;HEAP32[(e+512|0)>>2]=362;HEAP32[(e+532|0)>>2]=248;HEAP32[(e+540|0)>>2]=248;HEAP32[(e+548|0)>>2]=248;HEAP32[(e+516|0)>>2]=64;HEAP32[(e+524|0)>>2]=24;HEAP32[(e+528|0)>>2]=388;HEAP32[(e+536|0)>>2]=186;HEAP32[(e+544|0)>>2]=186;HEAP32[(e+552|0)>>2]=186;HEAP32[(e+564|0)>>2]=280;_TIFFPredictorInit(e);b=1;c=11;break;case 10:_TIFFErrorExt(HEAP32[(e+628|0)>>2],46656,29528,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=
0,tempInt));b=0;c=11;break;case 11:return e=b,STACKTOP=a,e;default:assert(0,"bad label: "+c)}}
function _ZIPSetupDecode(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e;b=m;e=HEAP32[(b+576|0)>>2];d=0!=(e|0)?2:3;break;case 2:d=4;break;case 3:throw ___assert_func(23504,100,43248,26704),"Reached an unreachable!";case 4:d=0!=(HEAP32[(e+124|0)>>2]&2|0)?5:6;break;case 5:_deflateEnd(e+64|0);HEAP32[(e+124|0)>>2]=0;d=6;break;case 6:d=0!=(_inflateInit_(e+64|0,41520,56)|0)?7:8;break;case 7:d=HEAP32[((e+64|0)+24|0)>>2];_TIFFErrorExt(HEAP32[(b+628|0)>>2],45464,
40952,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=d,tempInt));a=0;d=9;break;case 8:d=e+124|0;HEAP32[d>>2]|=1;a=1;d=9;break;case 9:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _ZIPPreDecode(m,d){var c=0,a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e,g;e=m;g=HEAP32[(e+576|0)>>2];c=0!=(g|0)?2:3;break;case 2:c=4;break;case 3:throw ___assert_func(23504,127,43280,26704),"Reached an unreachable!";case 4:c=0==(HEAP32[(g+124|0)>>2]&1|0)?5:6;break;case 5:FUNCTION_TABLE[HEAP32[(e+508|0)>>2]](e);c=6;break;case 6:HEAP32[(g+64|0)>>2]=HEAP32[(e+588|0)>>2];HEAP32[((g+64|0)+4|0)>>2]=HEAP32[(e+608|0)>>2];c=(HEAP32[((g+64|0)+4|0)>>2]|0)!=(HEAP32[(e+
608|0)>>2]|0)?7:8;break;case 7:_TIFFErrorExt(HEAP32[(e+628|0)>>2],45496,24400,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=0;c=9;break;case 8:b=0==(_inflateReset(g+64|0)|0)&1;c=9;break;case 9:return c=b,STACKTOP=a,c;default:assert(0,"bad label: "+c)}}
function _ZIPPostEncode(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e,g;b=m;e=HEAP32[(b+576|0)>>2];HEAP32[((e+64|0)+4|0)>>2]=0;d=2;break;case 2:d=g=_deflate(e+64|0,4);d=1==(d|0)|0==(d|0)?3:6;break;case 3:d=(HEAP32[((e+64|0)+16|0)>>2]|0)!=(HEAP32[(b+592|0)>>2]|0)?4:5;break;case 4:HEAP32[(b+608|0)>>2]=HEAP32[(b+592|0)>>2]-HEAP32[((e+64|0)+16|0)>>2]|0;_TIFFFlushData1(b);HEAP32[((e+64|0)+12|0)>>2]=HEAP32[(b+588|0)>>2];HEAP32[((e+64|0)+16|0)>>2]=HEAP32[(b+
592|0)>>2];d=5;break;case 5:d=7;break;case 6:a=HEAP32[((e+64|0)+24|0)>>2];_TIFFErrorExt(HEAP32[(b+628|0)>>2],45512,22792,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,tempInt));a=0;d=10;break;case 7:d=8;break;case 8:d=1!=(g|0)?2:9;break;case 9:a=1;d=10;break;case 10:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _TIFFFdOpen(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e;b=m;e=_TIFFClientOpen(d,c,b,80,356,142,378,278,52,220);a=0!=(e|0)?2:3;break;case 2:HEAP32[(e+4|0)>>2]=b;a=3;break;case 3:return e;default:assert(0,"bad label: "+a)}}function __tiffReadProc(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f;e=m;g=d;f=a=c;a=(f|0)!=(a|0)?2:3;break;case 2:b=___errno_location();HEAP32[b>>2]=22;b=-1;a=4;break;case 3:b=_read(e,g,f);a=4;break;case 4:return b;default:assert(0,"bad label: "+a)}}
function __tiffWriteProc(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f;e=m;g=d;f=a=c;a=(f|0)!=(a|0)?2:3;break;case 2:b=___errno_location();HEAP32[b>>2]=22;b=-1;a=4;break;case 3:b=_write(e,g,f);a=4;break;case 4:return b;default:assert(0,"bad label: "+a)}}
function __tiffSeekProc(m,d,c,a){var b=0,e=STACKTOP;STACKTOP=STACKTOP+16|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var g=e,f,b=e+8,k,h;f=m;HEAP32[(b|0)>>2]=d;HEAP32[(b+4|0)>>2]=c;k=a;var l=h=HEAP32[(b|0)>>2],b=(l|0)!=(HEAP32[(b|0)>>2]|0)|((0>(l|0)?-1:0)|0)!=(HEAP32[(b+4|0)>>2]|0)?2:3;break;case 2:b=___errno_location();HEAP32[b>>2]=22;HEAP32[(g|0)>>2]=-1;HEAP32[(g+4|0)>>2]=-1;b=4;break;case 3:b=_lseek(f,h,k);l=0>(b|0)?-1:0;HEAP32[(g|0)>>2]=b;HEAP32[(g+4|0)>>2]=l;b=4;break;case 4:return m=
HEAP32[(g|0)>>2],g=HEAP32[(g+4|0)>>2],STACKTOP=e,tempRet0=g,m;default:assert(0,"bad label: "+b)}}function __tiffCloseProc(m){return _close(m)}
function __tiffSizeProc(m){var d=0,c=STACKTOP;STACKTOP=STACKTOP+80|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a=c,b=c+8,d=0>(_fstat(m,b)|0)?2:3;break;case 2:HEAP32[(a|0)>>2]=0;HEAP32[(a+4|0)>>2]=0;d=4;break;case 3:var d=HEAP32[(b+28|0)>>2],e=0>(d|0)?-1:0;HEAP32[(a|0)>>2]=d;HEAP32[(a+4|0)>>2]=e;d=4;break;case 4:return m=HEAP32[(a|0)>>2],a=HEAP32[(a+4|0)>>2],STACKTOP=c,tempRet0=a,m;default:assert(0,"bad label: "+d)}}
function __tiffMapProc(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,a=b,h;g=m;f=d;k=c;h=__tiffSizeProc(g);var l=tempRet0;HEAP32[(a|0)>>2]=h;HEAP32[(a+4|0)>>2]=l;l=h=HEAP32[(a|0)>>2];a=(l|0)==(HEAP32[(a|0)>>2]|0)&((0>(l|0)?-1:0)|0)==(HEAP32[(a+4|0)>>2]|0)?2:5;break;case 2:a=_mmap(0,h,1,1,g,0);HEAP32[f>>2]=a;a=-1!=(HEAP32[f>>2]|0)?3:4;break;case 3:e=h;a=0>(e|0)?-1:0;l=k;HEAP32[(l|0)>>2]=e;HEAP32[(l+4|0)>>2]=a;e=1;a=6;break;
case 4:a=5;break;case 5:e=0;a=6;break;case 6:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}function __tiffUnmapProc(m,d,c,a){m=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;HEAP32[(m|0)>>2]=c;HEAP32[(m+4|0)>>2]=a;_munmap(d,HEAP32[(m|0)>>2]);STACKTOP=m}
function _ZIPDecode(m,d,c,a){var b=0;a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var e,g,f,k,h,l;g=m;f=d;k=c;h=HEAP32[(g+576|0)>>2];b=0!=(h|0)?2:3;break;case 2:b=4;break;case 3:throw ___assert_func(23504,153,43312,26704),"Reached an unreachable!";case 4:b=1==(HEAP32[(h+124|0)>>2]|0)?5:6;break;case 5:b=7;break;case 6:throw ___assert_func(23504,154,43312,40216),"Reached an unreachable!";case 7:HEAP32[(h+64|0)>>2]=HEAP32[(g+604|0)>>2];HEAP32[((h+64|0)+4|0)>>2]=HEAP32[(g+
608|0)>>2];HEAP32[((h+64|0)+12|0)>>2]=f;HEAP32[((h+64|0)+16|0)>>2]=k;b=(HEAP32[((h+64|0)+16|0)>>2]|0)!=(k|0)?8:9;break;case 8:_TIFFErrorExt(HEAP32[(g+628|0)>>2],45544,24400,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));e=0;b=23;break;case 9:b=10;break;case 10:l=_inflate(h+64|0,1);b=1==(l|0)?11:12;break;case 11:b=20;break;case 12:b=-3==(l|0)?13:16;break;case 13:var b=HEAP32[(g+444|0)>>2],n=HEAP32[((h+64|0)+24|0)>>
2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],45544,39632,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=b,HEAP32[tempInt+8>>2]=n,tempInt));b=0!=(_inflateSync(h+64|0)|0)?14:15;break;case 14:e=0;b=23;break;case 15:b=19;break;case 16:b=0!=(l|0)?17:18;break;case 17:e=HEAP32[((h+64|0)+24|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],45544,22792,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=0;b=23;break;
case 18:b=19;break;case 19:b=0<HEAP32[((h+64|0)+16|0)>>2]>>>0?10:20;break;case 20:b=0!=(HEAP32[((h+64|0)+16|0)>>2]|0)?21:22;break;case 21:e=HEAP32[(g+444|0)>>2];b=HEAP32[((h+64|0)+16|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],45544,38800,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,HEAP32[tempInt+8>>2]=b,tempInt));e=0;b=23;break;case 22:HEAP32[(g+604|0)>>2]=HEAP32[(h+64|0)>>2];HEAP32[(g+608|0)>>2]=HEAP32[((h+64|0)+4|0)>>2];e=1;b=23;break;case 23:return m=
e,STACKTOP=a,m;default:assert(0,"bad label: "+b)}}
function _ZIPSetupEncode(m){var d=0,c=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e;b=m;e=HEAP32[(b+576|0)>>2];d=0!=(e|0)?2:3;break;case 2:d=4;break;case 3:throw ___assert_func(23504,207,43232,26704),"Reached an unreachable!";case 4:d=0!=(HEAP32[(e+124|0)>>2]&1|0)?5:6;break;case 5:_inflateEnd(e+64|0);HEAP32[(e+124|0)>>2]=0;d=6;break;case 6:d=0!=(_deflateInit_(e+64|0,HEAP32[(e+120|0)>>2],41520,56)|0)?7:8;break;case 7:d=HEAP32[((e+64|0)+24|0)>>2];_TIFFErrorExt(HEAP32[(b+
628|0)>>2],45448,40952,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=d,tempInt));a=0;d=9;break;case 8:d=e+124|0;HEAP32[d>>2]|=2;a=1;d=9;break;case 9:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}
function _ZIPPreEncode(m,d){var c=0,a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e,g;e=m;g=HEAP32[(e+576|0)>>2];c=0!=(g|0)?2:3;break;case 2:c=4;break;case 3:throw ___assert_func(23504,232,43264,26704),"Reached an unreachable!";case 4:c=2!=(HEAP32[(g+124|0)>>2]|0)?5:6;break;case 5:FUNCTION_TABLE[HEAP32[(e+516|0)>>2]](e);c=6;break;case 6:HEAP32[((g+64|0)+12|0)>>2]=HEAP32[(e+588|0)>>2];HEAP32[((g+64|0)+16|0)>>2]=HEAP32[(e+592|0)>>2];c=(HEAP32[((g+64|0)+16|0)>>2]|0)!=
(HEAP32[(e+592|0)>>2]|0)?7:8;break;case 7:_TIFFErrorExt(HEAP32[(e+628|0)>>2],45480,24400,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));b=0;c=9;break;case 8:b=0==(_deflateReset(g+64|0)|0)&1;c=9;break;case 9:return c=b,STACKTOP=a,c;default:assert(0,"bad label: "+c)}}
function _ZIPEncode(m,d,c,a){var b=0;a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(b=1;;)switch(b){case 1:var e,g,f,k,h;g=m;f=d;k=c;h=HEAP32[(g+576|0)>>2];b=0!=(h|0)?2:3;break;case 2:b=4;break;case 3:throw ___assert_func(23504,259,43296,26704),"Reached an unreachable!";case 4:b=2==(HEAP32[(h+124|0)>>2]|0)?5:6;break;case 5:b=7;break;case 6:throw ___assert_func(23504,260,43296,25608),"Reached an unreachable!";case 7:HEAP32[(h+64|0)>>2]=f;HEAP32[((h+64|0)+4|0)>>2]=k;b=(HEAP32[((h+64|0)+4|0)>>2]|
0)!=(k|0)?8:9;break;case 8:_TIFFErrorExt(HEAP32[(g+628|0)>>2],45528,24400,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));e=0;b=17;break;case 9:b=10;break;case 10:b=0!=(_deflate(h+64|0,0)|0)?11:12;break;case 11:e=HEAP32[((h+64|0)+24|0)>>2];_TIFFErrorExt(HEAP32[(g+628|0)>>2],45528,23464,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=e,tempInt));e=0;b=17;break;case 12:b=
0==(HEAP32[((h+64|0)+16|0)>>2]|0)?13:14;break;case 13:HEAP32[(g+608|0)>>2]=HEAP32[(g+592|0)>>2];_TIFFFlushData1(g);HEAP32[((h+64|0)+12|0)>>2]=HEAP32[(g+588|0)>>2];HEAP32[((h+64|0)+16|0)>>2]=HEAP32[(g+592|0)>>2];b=14;break;case 14:b=15;break;case 15:b=0<HEAP32[((h+64|0)+4|0)>>2]>>>0?10:16;break;case 16:e=1;b=17;break;case 17:return m=e,STACKTOP=a,m;default:assert(0,"bad label: "+b)}}
function _ZIPCleanup(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;c=m;a=HEAP32[(c+576|0)>>2];d=0!=(a|0)?2:3;break;case 2:d=4;break;case 3:throw ___assert_func(23504,329,43328,27904),"Reached an unreachable!";case 4:_TIFFPredictorCleanup(c);HEAP32[((c+668|0)+4|0)>>2]=HEAP32[(a+128|0)>>2];HEAP32[(c+668|0)>>2]=HEAP32[(a+132|0)>>2];d=0!=(HEAP32[(a+124|0)>>2]&2|0)?5:6;break;case 5:_deflateEnd(a+64|0);HEAP32[(a+124|0)>>2]=0;d=9;break;case 6:d=0!=(HEAP32[(a+124|0)>>2]&1|0)?7:8;break;case 7:_inflateEnd(a+
64|0);HEAP32[(a+124|0)>>2]=0;d=8;break;case 8:d=9;break;case 9:__TIFFfree(a);HEAP32[(c+576|0)>>2]=0;__TIFFSetDefaultCompressionState(c);return;default:assert(0,"bad label: "+d)}}
function _TIFFOpen(m,d){var c=0,a=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e,g,f,k,h;e=m;g=d;f=__TIFFgetMode(g,46360);c=-1==(f|0)?2:3;break;case 2:b=0;c=12;break;case 3:k=_open(e,f,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=438,tempInt));c=0>(k|0)?4:9;break;case 4:c=___errno_location();c=0<(HEAP32[c>>2]|0)?5:7;break;case 5:c=___errno_location();c=0!=(_strerror(HEAP32[c>>2])|0)?6:7;break;case 6:var c=e,l=___errno_location(),
l=_strerror(HEAP32[l>>2]);_TIFFErrorExt(0,46360,23440,(tempInt=STACKTOP,STACKTOP=STACKTOP+16|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=c,HEAP32[tempInt+8>>2]=l,tempInt));c=8;break;case 7:c=e;_TIFFErrorExt(0,46360,35680,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=c,tempInt));c=8;break;case 8:b=0;c=12;break;case 9:h=_TIFFFdOpen(k,e,g);c=0!=(h|0)?11:10;break;case 10:_close(k);c=11;break;case 11:b=h;c=12;break;case 12:return STACKTOP=
a,b;default:assert(0,"bad label: "+c)}}function __TIFFmalloc(m){return _malloc(m)}function __TIFFfree(m){_free(m)}function __TIFFrealloc(m,d){return _realloc(m,d)}function __TIFFmemset(m,d,c){_memset(m,d&255,c)}function __TIFFmemcpy(m,d,c){assert(0===c%1);_memcpy(m,d,c)|0}function __TIFFmemcmp(m,d,c){return _memcmp(m,d,c)}
function _unixWarningHandler(m,d,c){var a=0,b=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f;e=m;g=d;f=c;a=0!=(e|0)?2:3;break;case 2:a=e;_fprintf(HEAP32[_stderr>>2],31528,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,tempInt));a=3;break;case 3:_fprintf(HEAP32[_stderr>>2],27832,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));_vfprintf(HEAP32[_stderr>>
2],g,f);_fprintf(HEAP32[_stderr>>2],29496,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=0,tempInt));STACKTOP=b;return;default:assert(0,"bad label: "+a)}}
function _unixErrorHandler(m,d,c){var a=0,b=STACKTOP;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f;e=m;g=d;f=c;a=0!=(e|0)?2:3;break;case 2:a=e;_fprintf(HEAP32[_stderr>>2],31528,(tempInt=STACKTOP,STACKTOP=STACKTOP+8|0,assert((STACKTOP|0)<(STACK_MAX|0))|0,HEAP32[tempInt>>2]=a,tempInt));a=3;break;case 3:_vfprintf(HEAP32[_stderr>>2],g,f);_fprintf(HEAP32[_stderr>>2],29496,(tempInt=STACKTOP,STACKTOP=STACKTOP+1|0,STACKTOP=STACKTOP+7>>3<<3,assert((STACKTOP|0)<(STACK_MAX|0))|0,
HEAP32[tempInt>>2]=0,tempInt));STACKTOP=b;return;default:assert(0,"bad label: "+a)}}function _deflateInit_(m,d,c,a){return _deflateInit2_(m,d,8,15,8,0,c,a)}
function _deflateInit2_(m,d,c,a,b,e,g,f){for(var k=0,k=1;;)switch(k){case 1:var h,l,n,p,q,t,r,s,v,u,w,y;l=m;n=d;p=c;q=a;t=b;r=e;s=g;v=f;w=1;k=0==(s|0)?4:2;break;case 2:k=(HEAP8[s|0]<<24>>24|0)!=(HEAP8[14184]<<24>>24|0)?4:3;break;case 3:k=56!=(v|0)?4:5;break;case 4:h=-6;k=38;break;case 5:k=0==(l|0)?6:7;break;case 6:h=-2;k=38;break;case 7:HEAP32[(l+24|0)>>2]=0;k=0==(HEAP32[(l+32|0)>>2]|0)?8:9;break;case 8:HEAP32[(l+32|0)>>2]=374;HEAP32[(l+40|0)>>2]=0;k=9;break;case 9:k=0==(HEAP32[(l+36|0)>>2]|0)?10:
11;break;case 10:HEAP32[(l+36|0)>>2]=332;k=11;break;case 11:k=-1==(n|0)?12:13;break;case 12:n=6;k=13;break;case 13:k=0>(q|0)?14:15;break;case 14:w=0;q=-q|0;k=18;break;case 15:k=15<(q|0)?16:17;break;case 16:w=2;q=q-16|0;k=17;break;case 17:k=18;break;case 18:k=1>(t|0)?27:19;break;case 19:k=9<(t|0)?27:20;break;case 20:k=8!=(p|0)?27:21;break;case 21:k=8>(q|0)?27:22;break;case 22:k=15<(q|0)?27:23;break;case 23:k=0>(n|0)?27:24;break;case 24:k=9<(n|0)?27:25;break;case 25:k=0>(r|0)?27:26;break;case 26:k=
4<(r|0)?27:28;break;case 27:h=-2;k=38;break;case 28:k=8==(q|0)?29:30;break;case 29:q=9;k=30;break;case 30:u=FUNCTION_TABLE[HEAP32[(l+32|0)>>2]](HEAP32[(l+40|0)>>2],1,5828);k=0==(u|0)?31:32;break;case 31:h=-4;k=38;break;case 32:HEAP32[(l+28|0)>>2]=u;HEAP32[(u|0)>>2]=l;HEAP32[(u+24|0)>>2]=w;HEAP32[(u+28|0)>>2]=0;HEAP32[(u+48|0)>>2]=q;HEAP32[(u+44|0)>>2]=1<<HEAP32[(u+48|0)>>2];HEAP32[(u+52|0)>>2]=HEAP32[(u+44|0)>>2]-1|0;HEAP32[(u+80|0)>>2]=t+7|0;HEAP32[(u+76|0)>>2]=1<<HEAP32[(u+80|0)>>2];HEAP32[(u+84|
0)>>2]=HEAP32[(u+76|0)>>2]-1|0;HEAP32[(u+88|0)>>2]=(((HEAP32[(u+80|0)>>2]+3|0)-1|0)>>>0)/3&-1;k=FUNCTION_TABLE[HEAP32[(l+32|0)>>2]](HEAP32[(l+40|0)>>2],HEAP32[(u+44|0)>>2],2);HEAP32[(u+56|0)>>2]=k;k=FUNCTION_TABLE[HEAP32[(l+32|0)>>2]](HEAP32[(l+40|0)>>2],HEAP32[(u+44|0)>>2],2);HEAP32[(u+64|0)>>2]=k;k=FUNCTION_TABLE[HEAP32[(l+32|0)>>2]](HEAP32[(l+40|0)>>2],HEAP32[(u+76|0)>>2],2);HEAP32[(u+68|0)>>2]=k;HEAP32[(u+5824|0)>>2]=0;HEAP32[(u+5788|0)>>2]=1<<(t+6|0);y=FUNCTION_TABLE[HEAP32[(l+32|0)>>2]](HEAP32[(l+
40|0)>>2],HEAP32[(u+5788|0)>>2],4);HEAP32[(u+8|0)>>2]=y;HEAP32[(u+12|0)>>2]=HEAP32[(u+5788|0)>>2]<<2;k=0==(HEAP32[(u+56|0)>>2]|0)?36:33;break;case 33:k=0==(HEAP32[(u+64|0)>>2]|0)?36:34;break;case 34:k=0==(HEAP32[(u+68|0)>>2]|0)?36:35;break;case 35:k=0==(HEAP32[(u+8|0)>>2]|0)?36:37;break;case 36:HEAP32[(u+4|0)>>2]=666;HEAP32[(l+24|0)>>2]=HEAP32[82];_deflateEnd(l);h=-4;k=38;break;case 37:HEAP32[(u+5796|0)>>2]=y+(((HEAP32[(u+5788|0)>>2]>>>0)/2&-1)<<1)|0;HEAP32[(u+5784|0)>>2]=HEAP32[(u+8|0)>>2]+(3*HEAP32[(u+
5788|0)>>2]&-1)|0;HEAP32[(u+132|0)>>2]=n;HEAP32[(u+136|0)>>2]=r;HEAP8[u+36|0]=p&255;h=_deflateReset(l);k=38;break;case 38:return h;default:assert(0,"bad label: "+k)}}
function _deflateEnd(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b;a=m;d=0==(a|0)?3:2;break;case 2:d=0==(HEAP32[(a+28|0)>>2]|0)?3:4;break;case 3:c=-2;d=21;break;case 4:b=HEAP32[(HEAP32[(a+28|0)>>2]+4|0)>>2];d=42!=(b|0)?5:12;break;case 5:d=69!=(b|0)?6:12;break;case 6:d=73!=(b|0)?7:12;break;case 7:d=91!=(b|0)?8:12;break;case 8:d=103!=(b|0)?9:12;break;case 9:d=113!=(b|0)?10:12;break;case 10:d=666!=(b|0)?11:12;break;case 11:c=-2;d=21;break;case 12:d=0!=(HEAP32[(HEAP32[(a+28|0)>>2]+8|0)>>2]|0)?13:14;
break;case 13:FUNCTION_TABLE[HEAP32[(a+36|0)>>2]](HEAP32[(a+40|0)>>2],HEAP32[(HEAP32[(a+28|0)>>2]+8|0)>>2]);d=14;break;case 14:d=0!=(HEAP32[(HEAP32[(a+28|0)>>2]+68|0)>>2]|0)?15:16;break;case 15:FUNCTION_TABLE[HEAP32[(a+36|0)>>2]](HEAP32[(a+40|0)>>2],HEAP32[(HEAP32[(a+28|0)>>2]+68|0)>>2]);d=16;break;case 16:d=0!=(HEAP32[(HEAP32[(a+28|0)>>2]+64|0)>>2]|0)?17:18;break;case 17:FUNCTION_TABLE[HEAP32[(a+36|0)>>2]](HEAP32[(a+40|0)>>2],HEAP32[(HEAP32[(a+28|0)>>2]+64|0)>>2]);d=18;break;case 18:d=0!=(HEAP32[(HEAP32[(a+
28|0)>>2]+56|0)>>2]|0)?19:20;break;case 19:FUNCTION_TABLE[HEAP32[(a+36|0)>>2]](HEAP32[(a+40|0)>>2],HEAP32[(HEAP32[(a+28|0)>>2]+56|0)>>2]);d=20;break;case 20:FUNCTION_TABLE[HEAP32[(a+36|0)>>2]](HEAP32[(a+40|0)>>2],HEAP32[(a+28|0)>>2]);HEAP32[(a+28|0)>>2]=0;c=113==(b|0)?-3:0;d=21;break;case 21:return c;default:assert(0,"bad label: "+d)}}
function _deflateReset(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;c=m;a=_deflateResetKeep(c);d=0==(a|0)?2:3;break;case 2:_lm_init(HEAP32[(c+28|0)>>2]);d=3;break;case 3:return a;default:assert(0,"bad label: "+d)}}
function _fill_window(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b,e,g,f,k,h,l;c=m;f=HEAP32[(c+44|0)>>2];d=2;break;case 2:g=(HEAP32[(c+60|0)>>2]-HEAP32[(c+116|0)>>2]|0)-HEAP32[(c+108|0)>>2]|0;d=HEAP32[(c+108|0)>>2]>>>0>=(f+(HEAP32[(c+44|0)>>2]-262|0)|0)>>>0?3:16;break;case 3:a=HEAP32[(c+56|0)>>2];e=HEAP32[(c+56|0)>>2]+f|0;d=f;assert(0===d%1);_memcpy(a,e,d)|0;a=c+112|0;HEAP32[a>>2]=HEAP32[a>>2]-f|0;a=c+108|0;HEAP32[a>>2]=HEAP32[a>>2]-f|0;a=c+92|0;HEAP32[a>>2]=HEAP32[a>>2]-f|0;a=HEAP32[(c+76|0)>>
2];e=HEAP32[(c+68|0)>>2]+(a<<1)|0;d=4;break;case 4:e=b=e-2|0;b=HEAP16[b>>1]&65535;d=b>>>0>=f>>>0?5:6;break;case 5:var n=b-f|0,d=7;break;case 6:n=0;d=7;break;case 7:HEAP16[e>>1]=n&65535;d=8;break;case 8:a=d=a-1|0;d=0!=(d|0)?4:9;break;case 9:a=f;e=HEAP32[(c+64|0)>>2]+(a<<1)|0;d=10;break;case 10:e=b=e-2|0;b=HEAP16[b>>1]&65535;d=b>>>0>=f>>>0?11:12;break;case 11:var p=b-f|0,d=13;break;case 12:p=0;d=13;break;case 13:HEAP16[e>>1]=p&65535;d=14;break;case 14:a=d=a-1|0;d=0!=(d|0)?10:15;break;case 15:g=g+f|
0;d=16;break;case 16:d=0==(HEAP32[(HEAP32[(c|0)>>2]+4|0)>>2]|0)?17:18;break;case 17:d=29;break;case 18:a=_read_buf(HEAP32[(c|0)>>2],(HEAP32[(c+56|0)>>2]+HEAP32[(c+108|0)>>2]|0)+HEAP32[(c+116|0)>>2]|0,g);d=c+116|0;HEAP32[d>>2]=HEAP32[d>>2]+a|0;d=3<=(HEAP32[(c+116|0)>>2]+HEAP32[(c+5812|0)>>2]|0)>>>0?19:25;break;case 19:k=HEAP32[(c+108|0)>>2]-HEAP32[(c+5812|0)>>2]|0;HEAP32[(c+72|0)>>2]=HEAP8[HEAP32[(c+56|0)>>2]+k|0]&255;HEAP32[(c+72|0)>>2]=(HEAP32[(c+72|0)>>2]<<HEAP32[(c+88|0)>>2]^HEAP8[HEAP32[(c+56|
0)>>2]+(k+1|0)|0]&255)&HEAP32[(c+84|0)>>2];d=20;break;case 20:d=0!=(HEAP32[(c+5812|0)>>2]|0)?21:24;break;case 21:HEAP32[(c+72|0)>>2]=(HEAP32[(c+72|0)>>2]<<HEAP32[(c+88|0)>>2]^HEAP8[HEAP32[(c+56|0)>>2]+((k+3|0)-1|0)|0]&255)&HEAP32[(c+84|0)>>2];HEAP16[(HEAP32[(c+64|0)>>2]+((k&HEAP32[(c+52|0)>>2])<<1)|0)>>1]=HEAP16[(HEAP32[(c+68|0)>>2]+(HEAP32[(c+72|0)>>2]<<1)|0)>>1];HEAP16[(HEAP32[(c+68|0)>>2]+(HEAP32[(c+72|0)>>2]<<1)|0)>>1]=k&65535;k=k+1|0;d=c+5812|0;HEAP32[d>>2]=HEAP32[d>>2]-1|0;d=3>(HEAP32[(c+116|
0)>>2]+HEAP32[(c+5812|0)>>2]|0)>>>0?22:23;break;case 22:d=24;break;case 23:d=20;break;case 24:d=25;break;case 25:d=26;break;case 26:if(262>HEAP32[(c+116|0)>>2]>>>0)d=27;else var q=0,d=28;break;case 27:q=0!=(HEAP32[(HEAP32[(c|0)>>2]+4|0)>>2]|0);d=28;break;case 28:d=q?2:29;break;case 29:d=HEAP32[(c+5824|0)>>2]>>>0<HEAP32[(c+60|0)>>2]>>>0?30:40;break;case 30:h=HEAP32[(c+108|0)>>2]+HEAP32[(c+116|0)>>2]|0;d=HEAP32[(c+5824|0)>>2]>>>0<h>>>0?31:34;break;case 31:l=HEAP32[(c+60|0)>>2]-h|0;d=258<l>>>0?32:33;
break;case 32:l=258;d=33;break;case 33:_memset(HEAP32[(c+56|0)>>2]+h|0,0,l);HEAP32[(c+5824|0)>>2]=h+l|0;d=39;break;case 34:d=HEAP32[(c+5824|0)>>2]>>>0<(h+258|0)>>>0?35:38;break;case 35:l=(h+258|0)-HEAP32[(c+5824|0)>>2]|0;d=l>>>0>(HEAP32[(c+60|0)>>2]-HEAP32[(c+5824|0)>>2]|0)>>>0?36:37;break;case 36:l=HEAP32[(c+60|0)>>2]-HEAP32[(c+5824|0)>>2]|0;d=37;break;case 37:_memset(HEAP32[(c+56|0)>>2]+HEAP32[(c+5824|0)>>2]|0,0,l);d=c+5824|0;HEAP32[d>>2]=HEAP32[d>>2]+l|0;d=38;break;case 38:d=39;break;case 39:d=
40;break;case 40:return;default:assert(0,"bad label: "+d)}}
function _deflateResetKeep(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b;a=m;d=0==(a|0)?5:2;break;case 2:d=0==(HEAP32[(a+28|0)>>2]|0)?5:3;break;case 3:d=0==(HEAP32[(a+32|0)>>2]|0)?5:4;break;case 4:d=0==(HEAP32[(a+36|0)>>2]|0)?5:6;break;case 5:c=-2;d=12;break;case 6:HEAP32[(a+20|0)>>2]=0;HEAP32[(a+8|0)>>2]=0;HEAP32[(a+24|0)>>2]=0;HEAP32[(a+44|0)>>2]=2;b=HEAP32[(a+28|0)>>2];HEAP32[(b+20|0)>>2]=0;HEAP32[(b+16|0)>>2]=HEAP32[(b+8|0)>>2];d=0>(HEAP32[(b+24|0)>>2]|0)?7:8;break;case 7:HEAP32[(b+24|0)>>2]=
-HEAP32[(b+24|0)>>2]|0;d=8;break;case 8:HEAP32[(b+4|0)>>2]=0!=(HEAP32[(b+24|0)>>2]|0)?42:113;d=2==(HEAP32[(b+24|0)>>2]|0)?9:10;break;case 9:var e=_crc32(0,0,0),d=11;break;case 10:e=_adler32(0,0,0);d=11;break;case 11:HEAP32[(a+48|0)>>2]=e;HEAP32[(b+40|0)>>2]=0;__tr_init(b);c=0;d=12;break;case 12:return c;default:assert(0,"bad label: "+d)}}
function _lm_init(m){HEAP32[(m+60|0)>>2]=HEAP32[(m+44|0)>>2]<<1;HEAP16[(HEAP32[(m+68|0)>>2]+((HEAP32[(m+76|0)>>2]-1|0)<<1)|0)>>1]=0;_memset(HEAP32[(m+68|0)>>2],0,(HEAP32[(m+76|0)>>2]-1|0)<<1);HEAP32[(m+128|0)>>2]=HEAP16[((22384+(12*HEAP32[(m+132|0)>>2]&-1)|0)+2|0)>>1]&65535;HEAP32[(m+140|0)>>2]=HEAP16[(22384+(12*HEAP32[(m+132|0)>>2]&-1)|0)>>1]&65535;HEAP32[(m+144|0)>>2]=HEAP16[((22384+(12*HEAP32[(m+132|0)>>2]&-1)|0)+4|0)>>1]&65535;HEAP32[(m+124|0)>>2]=HEAP16[((22384+(12*HEAP32[(m+132|0)>>2]&-1)|0)+
6|0)>>1]&65535;HEAP32[(m+108|0)>>2]=0;HEAP32[(m+92|0)>>2]=0;HEAP32[(m+116|0)>>2]=0;HEAP32[(m+5812|0)>>2]=0;HEAP32[(m+120|0)>>2]=2;HEAP32[(m+96|0)>>2]=2;HEAP32[(m+104|0)>>2]=0;HEAP32[(m+72|0)>>2]=0}
function _deflateParams(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k,h,l;e=m;g=d;f=c;l=0;a=0==(e|0)?3:2;break;case 2:a=0==(HEAP32[(e+28|0)>>2]|0)?3:4;break;case 3:b=-2;a=21;break;case 4:k=HEAP32[(e+28|0)>>2];a=-1==(g|0)?5:6;break;case 5:a=g=6;break;case 6:a=0>(g|0)?10:7;break;case 7:a=9<(g|0)?10:8;break;case 8:a=0>(f|0)?10:9;break;case 9:a=4<(f|0)?10:11;break;case 10:b=-2;a=21;break;case 11:h=HEAP32[((22384+(12*HEAP32[(k+132|0)>>2]&-1)|0)+8|0)>>2];a=(f|0)!=(HEAP32[(k+136|0)>>2]|0)?13:12;
break;case 12:a=(h|0)!=(HEAP32[((22384+(12*g&-1)|0)+8|0)>>2]|0)?13:18;break;case 13:a=0!=(HEAP32[(e+8|0)>>2]|0)?14:18;break;case 14:l=_deflate(e,5);a=-5==(l|0)?15:17;break;case 15:a=0==(HEAP32[(k+20|0)>>2]|0)?16:17;break;case 16:l=0;a=17;break;case 17:a=18;break;case 18:a=(HEAP32[(k+132|0)>>2]|0)!=(g|0)?19:20;break;case 19:HEAP32[(k+132|0)>>2]=g;HEAP32[(k+128|0)>>2]=HEAP16[((22384+(12*g&-1)|0)+2|0)>>1]&65535;HEAP32[(k+140|0)>>2]=HEAP16[(22384+(12*g&-1)|0)>>1]&65535;HEAP32[(k+144|0)>>2]=HEAP16[((22384+
(12*g&-1)|0)+4|0)>>1]&65535;HEAP32[(k+124|0)>>2]=HEAP16[((22384+(12*g&-1)|0)+6|0)>>1]&65535;a=20;break;case 20:HEAP32[(k+136|0)>>2]=f;b=l;a=21;break;case 21:return b;default:assert(0,"bad label: "+a)}}
function _deflate(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e,g,f,k,h,l,n,p,q,t,r;b=m;e=d;c=0==(b|0)?5:2;break;case 2:c=0==(HEAP32[(b+28|0)>>2]|0)?5:3;break;case 3:c=5<(e|0)?5:4;break;case 4:c=0>(e|0)?5:6;break;case 5:a=-2;c=173;break;case 6:f=HEAP32[(b+28|0)>>2];c=0==(HEAP32[(b+12|0)>>2]|0)?11:7;break;case 7:c=0==(HEAP32[(b|0)>>2]|0)?8:9;break;case 8:c=0!=(HEAP32[(b+4|0)>>2]|0)?11:9;break;case 9:c=666==(HEAP32[(f+4|0)>>2]|0)?10:12;break;case 10:c=4!=(e|0)?11:12;break;case 11:HEAP32[(b+24|0)>>
2]=HEAP32[80];a=-2;c=173;break;case 12:c=0==(HEAP32[(b+16|0)>>2]|0)?13:14;break;case 13:HEAP32[(b+24|0)>>2]=HEAP32[83];a=-5;c=173;break;case 14:HEAP32[(f|0)>>2]=b;g=HEAP32[(f+40|0)>>2];HEAP32[(f+40|0)>>2]=e;c=42==(HEAP32[(f+4|0)>>2]|0)?15:50;break;case 15:c=2==(HEAP32[(f+24|0)>>2]|0)?16:34;break;case 16:var s=_crc32(0,0,0);HEAP32[(b+48|0)>>2]=s;var v=f+20|0,u=HEAP32[v>>2];HEAP32[v>>2]=u+1|0;HEAP8[HEAP32[(f+8|0)>>2]+u|0]=31;var w=f+20|0,y=HEAP32[w>>2];HEAP32[w>>2]=y+1|0;HEAP8[HEAP32[(f+8|0)>>2]+y|
0]=-117;var A=f+20|0,z=HEAP32[A>>2];HEAP32[A>>2]=z+1|0;HEAP8[HEAP32[(f+8|0)>>2]+z|0]=8;c=0==(HEAP32[(f+28|0)>>2]|0)?17:23;break;case 17:var x=f+20|0,B=HEAP32[x>>2];HEAP32[x>>2]=B+1|0;HEAP8[HEAP32[(f+8|0)>>2]+B|0]=0;var C=f+20|0,D=HEAP32[C>>2];HEAP32[C>>2]=D+1|0;HEAP8[HEAP32[(f+8|0)>>2]+D|0]=0;var F=f+20|0,I=HEAP32[F>>2];HEAP32[F>>2]=I+1|0;HEAP8[HEAP32[(f+8|0)>>2]+I|0]=0;var G=f+20|0,H=HEAP32[G>>2];HEAP32[G>>2]=H+1|0;HEAP8[HEAP32[(f+8|0)>>2]+H|0]=0;var K=f+20|0,J=HEAP32[K>>2];HEAP32[K>>2]=J+1|0;HEAP8[HEAP32[(f+
8|0)>>2]+J|0]=0;c=9==(HEAP32[(f+132|0)>>2]|0)?18:19;break;case 18:var E=2,c=22;break;case 19:if(2<=(HEAP32[(f+136|0)>>2]|0))var L=1,c=21;else c=20;break;case 20:L=2>(HEAP32[(f+132|0)>>2]|0);c=21;break;case 21:E=L?4:0;c=22;break;case 22:var Q=E&255,N=f+20|0,P=HEAP32[N>>2];HEAP32[N>>2]=P+1|0;HEAP8[HEAP32[(f+8|0)>>2]+P|0]=Q;var W=f+20|0,O=HEAP32[W>>2];HEAP32[W>>2]=O+1|0;HEAP8[HEAP32[(f+8|0)>>2]+O|0]=3;HEAP32[(f+4|0)>>2]=113;c=33;break;case 23:var T=(((((0!=(HEAP32[(HEAP32[(f+28|0)>>2]|0)>>2]|0)?1:0)+
(0!=(HEAP32[(HEAP32[(f+28|0)>>2]+44|0)>>2]|0)?2:0)|0)+(0==(HEAP32[(HEAP32[(f+28|0)>>2]+16|0)>>2]|0)?0:4)|0)+(0==(HEAP32[(HEAP32[(f+28|0)>>2]+28|0)>>2]|0)?0:8)|0)+(0==(HEAP32[(HEAP32[(f+28|0)>>2]+36|0)>>2]|0)?0:16)|0)&255,Y=f+20|0,S=HEAP32[Y>>2];HEAP32[Y>>2]=S+1|0;HEAP8[HEAP32[(f+8|0)>>2]+S|0]=T;var X=HEAP32[(HEAP32[(f+28|0)>>2]+4|0)>>2]&255,R=f+20|0,V=HEAP32[R>>2];HEAP32[R>>2]=V+1|0;HEAP8[HEAP32[(f+8|0)>>2]+V|0]=X;var aa=HEAP32[(HEAP32[(f+28|0)>>2]+4|0)>>2]>>>8&255,fa=f+20|0,Z=HEAP32[fa>>2];HEAP32[fa>>
2]=Z+1|0;HEAP8[HEAP32[(f+8|0)>>2]+Z|0]=aa;var ka=HEAP32[(HEAP32[(f+28|0)>>2]+4|0)>>2]>>>16&255,M=f+20|0,ga=HEAP32[M>>2];HEAP32[M>>2]=ga+1|0;HEAP8[HEAP32[(f+8|0)>>2]+ga|0]=ka;var na=HEAP32[(HEAP32[(f+28|0)>>2]+4|0)>>2]>>>24&255,ba=f+20|0,ca=HEAP32[ba>>2];HEAP32[ba>>2]=ca+1|0;HEAP8[HEAP32[(f+8|0)>>2]+ca|0]=na;c=9==(HEAP32[(f+132|0)>>2]|0)?24:25;break;case 24:var oa=2,c=28;break;case 25:if(2<=(HEAP32[(f+136|0)>>2]|0))var va=1,c=27;else c=26;break;case 26:va=2>(HEAP32[(f+132|0)>>2]|0);c=27;break;case 27:oa=
va?4:0;c=28;break;case 28:var pa=oa&255,la=f+20|0,wa=HEAP32[la>>2];HEAP32[la>>2]=wa+1|0;HEAP8[HEAP32[(f+8|0)>>2]+wa|0]=pa;var qa=HEAP32[(HEAP32[(f+28|0)>>2]+12|0)>>2]&255,ea=f+20|0,xa=HEAP32[ea>>2];HEAP32[ea>>2]=xa+1|0;HEAP8[HEAP32[(f+8|0)>>2]+xa|0]=qa;c=0!=(HEAP32[(HEAP32[(f+28|0)>>2]+16|0)>>2]|0)?29:30;break;case 29:var ja=HEAP32[(HEAP32[(f+28|0)>>2]+20|0)>>2]&255,da=f+20|0,Ga=HEAP32[da>>2];HEAP32[da>>2]=Ga+1|0;HEAP8[HEAP32[(f+8|0)>>2]+Ga|0]=ja;var $=HEAP32[(HEAP32[(f+28|0)>>2]+20|0)>>2]>>>8&255,
ma=f+20|0,ra=HEAP32[ma>>2];HEAP32[ma>>2]=ra+1|0;HEAP8[HEAP32[(f+8|0)>>2]+ra|0]=$;c=30;break;case 30:c=0!=(HEAP32[(HEAP32[(f+28|0)>>2]+44|0)>>2]|0)?31:32;break;case 31:var Aa=_crc32(HEAP32[(b+48|0)>>2],HEAP32[(f+8|0)>>2],HEAP32[(f+20|0)>>2]);HEAP32[(b+48|0)>>2]=Aa;c=32;break;case 32:HEAP32[(f+32|0)>>2]=0;HEAP32[(f+4|0)>>2]=69;c=33;break;case 33:c=49;break;case 34:k=(((HEAP32[(f+48|0)>>2]-8|0)<<4)+8|0)<<8;c=2<=(HEAP32[(f+136|0)>>2]|0)?36:35;break;case 35:c=2>(HEAP32[(f+132|0)>>2]|0)?36:37;break;case 36:h=
0;c=44;break;case 37:c=6>(HEAP32[(f+132|0)>>2]|0)?38:39;break;case 38:h=1;c=43;break;case 39:c=6==(HEAP32[(f+132|0)>>2]|0)?40:41;break;case 40:h=2;c=42;break;case 41:h=3;c=42;break;case 42:c=43;break;case 43:c=44;break;case 44:k|=h<<6;c=0!=(HEAP32[(f+108|0)>>2]|0)?45:46;break;case 45:k|=32;c=46;break;case 46:k=k+(31-((k>>>0)%31&-1)|0)|0;HEAP32[(f+4|0)>>2]=113;_putShortMSB(f,k);c=0!=(HEAP32[(f+108|0)>>2]|0)?47:48;break;case 47:_putShortMSB(f,HEAP32[(b+48|0)>>2]>>>16);_putShortMSB(f,HEAP32[(b+48|0)>>
2]&65535);c=48;break;case 48:var Xa=_adler32(0,0,0);HEAP32[(b+48|0)>>2]=Xa;c=49;break;case 49:c=50;break;case 50:c=69==(HEAP32[(f+4|0)>>2]|0)?51:70;break;case 51:c=0!=(HEAP32[(HEAP32[(f+28|0)>>2]+16|0)>>2]|0)?52:68;break;case 52:l=HEAP32[(f+20|0)>>2];c=53;break;case 53:c=HEAP32[(f+32|0)>>2]>>>0<(HEAP32[(HEAP32[(f+28|0)>>2]+20|0)>>2]&65535)>>>0?54:62;break;case 54:c=(HEAP32[(f+20|0)>>2]|0)==(HEAP32[(f+12|0)>>2]|0)?55:61;break;case 55:c=0!=(HEAP32[(HEAP32[(f+28|0)>>2]+44|0)>>2]|0)?56:58;break;case 56:c=
HEAP32[(f+20|0)>>2]>>>0>l>>>0?57:58;break;case 57:var Da=_crc32(HEAP32[(b+48|0)>>2],HEAP32[(f+8|0)>>2]+l|0,HEAP32[(f+20|0)>>2]-l|0);HEAP32[(b+48|0)>>2]=Da;c=58;break;case 58:_flush_pending(b);l=HEAP32[(f+20|0)>>2];c=(HEAP32[(f+20|0)>>2]|0)==(HEAP32[(f+12|0)>>2]|0)?59:60;break;case 59:c=62;break;case 60:c=61;break;case 61:var Ua=HEAP8[HEAP32[(HEAP32[(f+28|0)>>2]+16|0)>>2]+HEAP32[(f+32|0)>>2]|0],sa=f+20|0,ha=HEAP32[sa>>2];HEAP32[sa>>2]=ha+1|0;HEAP8[HEAP32[(f+8|0)>>2]+ha|0]=Ua;var U=f+32|0;HEAP32[U>>
2]=HEAP32[U>>2]+1|0;c=53;break;case 62:c=0!=(HEAP32[(HEAP32[(f+28|0)>>2]+44|0)>>2]|0)?63:65;break;case 63:c=HEAP32[(f+20|0)>>2]>>>0>l>>>0?64:65;break;case 64:var gb=_crc32(HEAP32[(b+48|0)>>2],HEAP32[(f+8|0)>>2]+l|0,HEAP32[(f+20|0)>>2]-l|0);HEAP32[(b+48|0)>>2]=gb;c=65;break;case 65:c=(HEAP32[(f+32|0)>>2]|0)==(HEAP32[(HEAP32[(f+28|0)>>2]+20|0)>>2]|0)?66:67;break;case 66:HEAP32[(f+32|0)>>2]=0;HEAP32[(f+4|0)>>2]=73;c=67;break;case 67:c=69;break;case 68:HEAP32[(f+4|0)>>2]=73;c=69;break;case 69:c=70;break;
case 70:c=73==(HEAP32[(f+4|0)>>2]|0)?71:90;break;case 71:c=0!=(HEAP32[(HEAP32[(f+28|0)>>2]+28|0)>>2]|0)?72:88;break;case 72:n=HEAP32[(f+20|0)>>2];c=73;break;case 73:c=(HEAP32[(f+20|0)>>2]|0)==(HEAP32[(f+12|0)>>2]|0)?74:80;break;case 74:c=0!=(HEAP32[(HEAP32[(f+28|0)>>2]+44|0)>>2]|0)?75:77;break;case 75:c=HEAP32[(f+20|0)>>2]>>>0>n>>>0?76:77;break;case 76:var Ka=_crc32(HEAP32[(b+48|0)>>2],HEAP32[(f+8|0)>>2]+n|0,HEAP32[(f+20|0)>>2]-n|0);HEAP32[(b+48|0)>>2]=Ka;c=77;break;case 77:_flush_pending(b);n=HEAP32[(f+
20|0)>>2];c=(HEAP32[(f+20|0)>>2]|0)==(HEAP32[(f+12|0)>>2]|0)?78:79;break;case 78:p=1;c=82;break;case 79:c=80;break;case 80:var Ia=f+32|0,ia=HEAP32[Ia>>2];HEAP32[Ia>>2]=ia+1|0;p=HEAP8[HEAP32[(HEAP32[(f+28|0)>>2]+28|0)>>2]+ia|0]&255;var Ba=p&255,Ra=f+20|0,Sa=HEAP32[Ra>>2];HEAP32[Ra>>2]=Sa+1|0;HEAP8[HEAP32[(f+8|0)>>2]+Sa|0]=Ba;c=81;break;case 81:c=0!=(p|0)?73:82;break;case 82:c=0!=(HEAP32[(HEAP32[(f+28|0)>>2]+44|0)>>2]|0)?83:85;break;case 83:c=HEAP32[(f+20|0)>>2]>>>0>n>>>0?84:85;break;case 84:var ib=
_crc32(HEAP32[(b+48|0)>>2],HEAP32[(f+8|0)>>2]+n|0,HEAP32[(f+20|0)>>2]-n|0);HEAP32[(b+48|0)>>2]=ib;c=85;break;case 85:c=0==(p|0)?86:87;break;case 86:HEAP32[(f+32|0)>>2]=0;HEAP32[(f+4|0)>>2]=91;c=87;break;case 87:c=89;break;case 88:HEAP32[(f+4|0)>>2]=91;c=89;break;case 89:c=90;break;case 90:c=91==(HEAP32[(f+4|0)>>2]|0)?91:110;break;case 91:c=0!=(HEAP32[(HEAP32[(f+28|0)>>2]+36|0)>>2]|0)?92:108;break;case 92:q=HEAP32[(f+20|0)>>2];c=93;break;case 93:c=(HEAP32[(f+20|0)>>2]|0)==(HEAP32[(f+12|0)>>2]|0)?94:
100;break;case 94:c=0!=(HEAP32[(HEAP32[(f+28|0)>>2]+44|0)>>2]|0)?95:97;break;case 95:c=HEAP32[(f+20|0)>>2]>>>0>q>>>0?96:97;break;case 96:var ua=_crc32(HEAP32[(b+48|0)>>2],HEAP32[(f+8|0)>>2]+q|0,HEAP32[(f+20|0)>>2]-q|0);HEAP32[(b+48|0)>>2]=ua;c=97;break;case 97:_flush_pending(b);q=HEAP32[(f+20|0)>>2];c=(HEAP32[(f+20|0)>>2]|0)==(HEAP32[(f+12|0)>>2]|0)?98:99;break;case 98:t=1;c=102;break;case 99:c=100;break;case 100:var Va=f+32|0,eb=HEAP32[Va>>2];HEAP32[Va>>2]=eb+1|0;t=HEAP8[HEAP32[(HEAP32[(f+28|0)>>
2]+36|0)>>2]+eb|0]&255;var Ea=t&255,Ya=f+20|0,La=HEAP32[Ya>>2];HEAP32[Ya>>2]=La+1|0;HEAP8[HEAP32[(f+8|0)>>2]+La|0]=Ea;c=101;break;case 101:c=0!=(t|0)?93:102;break;case 102:c=0!=(HEAP32[(HEAP32[(f+28|0)>>2]+44|0)>>2]|0)?103:105;break;case 103:c=HEAP32[(f+20|0)>>2]>>>0>q>>>0?104:105;break;case 104:var Ma=_crc32(HEAP32[(b+48|0)>>2],HEAP32[(f+8|0)>>2]+q|0,HEAP32[(f+20|0)>>2]-q|0);HEAP32[(b+48|0)>>2]=Ma;c=105;break;case 105:c=0==(t|0)?106:107;break;case 106:HEAP32[(f+4|0)>>2]=103;c=107;break;case 107:c=
109;break;case 108:HEAP32[(f+4|0)>>2]=103;c=109;break;case 109:c=110;break;case 110:c=103==(HEAP32[(f+4|0)>>2]|0)?111:119;break;case 111:c=0!=(HEAP32[(HEAP32[(f+28|0)>>2]+44|0)>>2]|0)?112:117;break;case 112:c=(HEAP32[(f+20|0)>>2]+2|0)>>>0>HEAP32[(f+12|0)>>2]>>>0?113:114;break;case 113:_flush_pending(b);c=114;break;case 114:c=(HEAP32[(f+20|0)>>2]+2|0)>>>0<=HEAP32[(f+12|0)>>2]>>>0?115:116;break;case 115:var Fa=HEAP32[(b+48|0)>>2]&255,Na=f+20|0,Oa=HEAP32[Na>>2];HEAP32[Na>>2]=Oa+1|0;HEAP8[HEAP32[(f+8|
0)>>2]+Oa|0]=Fa;var jb=HEAP32[(b+48|0)>>2]>>>8&255,Za=f+20|0,Ca=HEAP32[Za>>2];HEAP32[Za>>2]=Ca+1|0;HEAP8[HEAP32[(f+8|0)>>2]+Ca|0]=jb;var $a=_crc32(0,0,0);HEAP32[(b+48|0)>>2]=$a;HEAP32[(f+4|0)>>2]=113;c=116;break;case 116:c=118;break;case 117:HEAP32[(f+4|0)>>2]=113;c=118;break;case 118:c=119;break;case 119:c=0!=(HEAP32[(f+20|0)>>2]|0)?120:123;break;case 120:_flush_pending(b);c=0==(HEAP32[(b+16|0)>>2]|0)?121:122;break;case 121:HEAP32[(f+40|0)>>2]=-1;a=0;c=173;break;case 122:c=128;break;case 123:c=0==
(HEAP32[(b+4|0)>>2]|0)?124:127;break;case 124:c=((e<<1)-(4<(e|0)?9:0)|0)<=((g<<1)-(4<(g|0)?9:0)|0)?125:127;break;case 125:c=4!=(e|0)?126:127;break;case 126:HEAP32[(b+24|0)>>2]=HEAP32[83];a=-5;c=173;break;case 127:c=128;break;case 128:c=666==(HEAP32[(f+4|0)>>2]|0)?129:131;break;case 129:c=0!=(HEAP32[(b+4|0)>>2]|0)?130:131;break;case 130:HEAP32[(b+24|0)>>2]=HEAP32[83];a=-5;c=173;break;case 131:c=0!=(HEAP32[(b+4|0)>>2]|0)?135:132;break;case 132:c=0!=(HEAP32[(f+116|0)>>2]|0)?135:133;break;case 133:c=
0!=(e|0)?134:163;break;case 134:c=666!=(HEAP32[(f+4|0)>>2]|0)?135:163;break;case 135:c=2==(HEAP32[(f+136|0)>>2]|0)?136:137;break;case 136:var ab=_deflate_huff(f,e),c=141;break;case 137:c=3==(HEAP32[(f+136|0)>>2]|0)?138:139;break;case 138:var Ha=_deflate_rle(f,e),c=140;break;case 139:Ha=FUNCTION_TABLE[HEAP32[((22384+(12*HEAP32[(f+132|0)>>2]&-1)|0)+8|0)>>2]](f,e);c=140;break;case 140:ab=Ha;c=141;break;case 141:r=ab;c=2==(r|0)?143:142;break;case 142:c=3==(r|0)?143:144;break;case 143:HEAP32[(f+4|0)>>
2]=666;c=144;break;case 144:c=0==(r|0)?146:145;break;case 145:c=2==(r|0)?146:149;break;case 146:c=0==(HEAP32[(b+16|0)>>2]|0)?147:148;break;case 147:HEAP32[(f+40|0)>>2]=-1;c=148;break;case 148:a=0;c=173;break;case 149:c=1==(r|0)?150:162;break;case 150:c=1==(e|0)?151:152;break;case 151:__tr_align(f);c=159;break;case 152:c=5!=(e|0)?153:158;break;case 153:__tr_stored_block(f,0,0,0);c=3==(e|0)?154:157;break;case 154:HEAP16[(HEAP32[(f+68|0)>>2]+((HEAP32[(f+76|0)>>2]-1|0)<<1)|0)>>1]=0;_memset(HEAP32[(f+
68|0)>>2],0,(HEAP32[(f+76|0)>>2]-1|0)<<1);c=0==(HEAP32[(f+116|0)>>2]|0)?155:156;break;case 155:HEAP32[(f+108|0)>>2]=0;HEAP32[(f+92|0)>>2]=0;HEAP32[(f+5812|0)>>2]=0;c=156;break;case 156:c=157;break;case 157:c=158;break;case 158:c=159;break;case 159:_flush_pending(b);c=0==(HEAP32[(b+16|0)>>2]|0)?160:161;break;case 160:HEAP32[(f+40|0)>>2]=-1;a=0;c=173;break;case 161:c=162;break;case 162:c=163;break;case 163:c=4!=(e|0)?164:165;break;case 164:a=0;c=173;break;case 165:c=0>=(HEAP32[(f+24|0)>>2]|0)?166:167;
break;case 166:a=1;c=173;break;case 167:c=2==(HEAP32[(f+24|0)>>2]|0)?168:169;break;case 168:var Wa=HEAP32[(b+48|0)>>2]&255,bb=f+20|0,Pa=HEAP32[bb>>2];HEAP32[bb>>2]=Pa+1|0;HEAP8[HEAP32[(f+8|0)>>2]+Pa|0]=Wa;var Ja=HEAP32[(b+48|0)>>2]>>>8&255,cb=f+20|0,Qa=HEAP32[cb>>2];HEAP32[cb>>2]=Qa+1|0;HEAP8[HEAP32[(f+8|0)>>2]+Qa|0]=Ja;var fb=HEAP32[(b+48|0)>>2]>>>16&255,hb=f+20|0,ya=HEAP32[hb>>2];HEAP32[hb>>2]=ya+1|0;HEAP8[HEAP32[(f+8|0)>>2]+ya|0]=fb;var db=HEAP32[(b+48|0)>>2]>>>24&255,Ta=f+20|0,kb=HEAP32[Ta>>2];
HEAP32[Ta>>2]=kb+1|0;HEAP8[HEAP32[(f+8|0)>>2]+kb|0]=db;var lb=HEAP32[(b+8|0)>>2]&255,mb=f+20|0,ta=HEAP32[mb>>2];HEAP32[mb>>2]=ta+1|0;HEAP8[HEAP32[(f+8|0)>>2]+ta|0]=lb;var nb=HEAP32[(b+8|0)>>2]>>>8&255,pb=f+20|0,rb=HEAP32[pb>>2];HEAP32[pb>>2]=rb+1|0;HEAP8[HEAP32[(f+8|0)>>2]+rb|0]=nb;var qb=HEAP32[(b+8|0)>>2]>>>16&255,sb=f+20|0,vb=HEAP32[sb>>2];HEAP32[sb>>2]=vb+1|0;HEAP8[HEAP32[(f+8|0)>>2]+vb|0]=qb;var wb=HEAP32[(b+8|0)>>2]>>>24&255,xb=f+20|0,Db=HEAP32[xb>>2];HEAP32[xb>>2]=Db+1|0;HEAP8[HEAP32[(f+8|
0)>>2]+Db|0]=wb;c=170;break;case 169:_putShortMSB(f,HEAP32[(b+48|0)>>2]>>>16);_putShortMSB(f,HEAP32[(b+48|0)>>2]&65535);c=170;break;case 170:_flush_pending(b);c=0<(HEAP32[(f+24|0)>>2]|0)?171:172;break;case 171:HEAP32[(f+24|0)>>2]=-HEAP32[(f+24|0)>>2]|0;c=172;break;case 172:a=0!=(HEAP32[(f+20|0)>>2]|0)?0:1;c=173;break;case 173:return a;default:assert(0,"bad label: "+c)}}
function _putShortMSB(m,d){var c=m+20|0,a=HEAP32[c>>2];HEAP32[c>>2]=a+1|0;HEAP8[HEAP32[(m+8|0)>>2]+a|0]=d>>>8&255;c=m+20|0;a=HEAP32[c>>2];HEAP32[c>>2]=a+1|0;HEAP8[HEAP32[(m+8|0)>>2]+a|0]=d&255}
function _flush_pending(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b;c=m;b=HEAP32[(c+28|0)>>2];__tr_flush_bits(b);a=HEAP32[(b+20|0)>>2];d=a>>>0>HEAP32[(c+16|0)>>2]>>>0?2:3;break;case 2:a=HEAP32[(c+16|0)>>2];d=3;break;case 3:d=0==(a|0)?4:5;break;case 4:d=7;break;case 5:var d=HEAP32[(c+12|0)>>2],e=HEAP32[(b+16|0)>>2],g=a;assert(0===g%1);_memcpy(d,e,g)|0;d=c+12|0;HEAP32[d>>2]=HEAP32[d>>2]+a|0;d=b+16|0;HEAP32[d>>2]=HEAP32[d>>2]+a|0;d=c+20|0;HEAP32[d>>2]=HEAP32[d>>2]+a|0;d=c+16|0;HEAP32[d>>2]=HEAP32[d>>
2]-a|0;d=b+20|0;HEAP32[d>>2]=HEAP32[d>>2]-a|0;d=0==(HEAP32[(b+20|0)>>2]|0)?6:7;break;case 6:HEAP32[(b+16|0)>>2]=HEAP32[(b+8|0)>>2];d=7;break;case 7:return;default:assert(0,"bad label: "+d)}}
function _deflate_huff(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e;b=m;e=d;c=2;break;case 2:c=0==(HEAP32[(b+116|0)>>2]|0)?3:8;break;case 3:_fill_window(b);c=0==(HEAP32[(b+116|0)>>2]|0)?4:7;break;case 4:c=0==(e|0)?5:6;break;case 5:a=0;c=31;break;case 6:c=16;break;case 7:c=8;break;case 8:HEAP32[(b+96|0)>>2]=0;c=HEAP8[HEAP32[(b+56|0)>>2]+HEAP32[(b+108|0)>>2]|0];HEAP16[(HEAP32[(b+5796|0)>>2]+(HEAP32[(b+5792|0)>>2]<<1)|0)>>1]=0;var g=c,f=b+5792|0,k=HEAP32[f>>2];HEAP32[f>>2]=k+1|0;HEAP8[HEAP32[(b+
5784|0)>>2]+k|0]=g;c=(b+148|0)+((c&255)<<2)|0;HEAP16[c>>1]=HEAP16[c>>1]+1&65535;c=(HEAP32[(b+5792|0)>>2]|0)==(HEAP32[(b+5788|0)>>2]-1|0)&1;g=b+116|0;HEAP32[g>>2]=HEAP32[g>>2]-1|0;g=b+108|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;c=0!=(c|0)?9:15;break;case 9:var h=b,c=0<=(HEAP32[(b+92|0)>>2]|0)?10:11;break;case 10:var l=HEAP32[(b+56|0)>>2]+HEAP32[(b+92|0)>>2]|0,c=12;break;case 11:l=0;c=12;break;case 12:__tr_flush_block(h,l,HEAP32[(b+108|0)>>2]-HEAP32[(b+92|0)>>2]|0,0);HEAP32[(b+92|0)>>2]=HEAP32[(b+108|0)>>2];
_flush_pending(HEAP32[(b|0)>>2]);c=0==(HEAP32[(HEAP32[(b|0)>>2]+16|0)>>2]|0)?13:14;break;case 13:a=0;c=31;break;case 14:c=15;break;case 15:c=2;break;case 16:HEAP32[(b+5812|0)>>2]=0;c=4==(e|0)?17:23;break;case 17:var n=b,c=0<=(HEAP32[(b+92|0)>>2]|0)?18:19;break;case 18:var p=HEAP32[(b+56|0)>>2]+HEAP32[(b+92|0)>>2]|0,c=20;break;case 19:p=0;c=20;break;case 20:__tr_flush_block(n,p,HEAP32[(b+108|0)>>2]-HEAP32[(b+92|0)>>2]|0,1);HEAP32[(b+92|0)>>2]=HEAP32[(b+108|0)>>2];_flush_pending(HEAP32[(b|0)>>2]);c=
0==(HEAP32[(HEAP32[(b|0)>>2]+16|0)>>2]|0)?21:22;break;case 21:a=2;c=31;break;case 22:a=3;c=31;break;case 23:c=0!=(HEAP32[(b+5792|0)>>2]|0)?24:30;break;case 24:var q=b,c=0<=(HEAP32[(b+92|0)>>2]|0)?25:26;break;case 25:var t=HEAP32[(b+56|0)>>2]+HEAP32[(b+92|0)>>2]|0,c=27;break;case 26:t=0;c=27;break;case 27:__tr_flush_block(q,t,HEAP32[(b+108|0)>>2]-HEAP32[(b+92|0)>>2]|0,0);HEAP32[(b+92|0)>>2]=HEAP32[(b+108|0)>>2];_flush_pending(HEAP32[(b|0)>>2]);c=0==(HEAP32[(HEAP32[(b|0)>>2]+16|0)>>2]|0)?28:29;break;
case 28:a=0;c=31;break;case 29:c=30;break;case 30:a=1;c=31;break;case 31:return a;default:assert(0,"bad label: "+c)}}
function _deflate_rle(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e,g,f,k,h,l;b=m;e=d;c=2;break;case 2:c=258>=HEAP32[(b+116|0)>>2]>>>0?3:9;break;case 3:_fill_window(b);c=258>=HEAP32[(b+116|0)>>2]>>>0?4:6;break;case 4:c=0==(e|0)?5:6;break;case 5:a=0;c=59;break;case 6:c=0==(HEAP32[(b+116|0)>>2]|0)?7:8;break;case 7:c=44;break;case 8:c=9;break;case 9:HEAP32[(b+96|0)>>2]=0;c=3<=HEAP32[(b+116|0)>>2]>>>0?10:30;break;case 10:c=0<HEAP32[(b+108|0)>>2]>>>0?11:30;break;case 11:k=(HEAP32[(b+56|0)>>2]+HEAP32[(b+
108|0)>>2]|0)-1|0;var c=f=HEAP8[k]&255,n=k+1|0;k=n;c=(c|0)==(HEAP8[n]&255|0)?12:29;break;case 12:c=f;k=n=k+1|0;c=(c|0)==(HEAP8[n]&255|0)?13:29;break;case 13:c=f;k=n=k+1|0;c=(c|0)==(HEAP8[n]&255|0)?14:29;break;case 14:h=(HEAP32[(b+56|0)>>2]+HEAP32[(b+108|0)>>2]|0)+258|0;c=15;break;case 15:c=16;break;case 16:c=f;k=n=k+1|0;if((c|0)==(HEAP8[n]&255|0))c=17;else var p=0,c=25;break;case 17:c=f;k=n=k+1|0;(c|0)==(HEAP8[n]&255|0)?c=18:(p=0,c=25);break;case 18:c=f;k=n=k+1|0;(c|0)==(HEAP8[n]&255|0)?c=19:(p=0,
c=25);break;case 19:c=f;k=n=k+1|0;(c|0)==(HEAP8[n]&255|0)?c=20:(p=0,c=25);break;case 20:c=f;k=n=k+1|0;(c|0)==(HEAP8[n]&255|0)?c=21:(p=0,c=25);break;case 21:c=f;k=n=k+1|0;(c|0)==(HEAP8[n]&255|0)?c=22:(p=0,c=25);break;case 22:c=f;k=n=k+1|0;(c|0)==(HEAP8[n]&255|0)?c=23:(p=0,c=25);break;case 23:c=f;k=n=k+1|0;(c|0)==(HEAP8[n]&255|0)?c=24:(p=0,c=25);break;case 24:p=k>>>0<h>>>0;c=25;break;case 25:c=p?15:26;break;case 26:HEAP32[(b+96|0)>>2]=258-(h-k|0)|0;c=HEAP32[(b+96|0)>>2]>>>0>HEAP32[(b+116|0)>>2]>>>0?
27:28;break;case 27:HEAP32[(b+96|0)>>2]=HEAP32[(b+116|0)>>2];c=28;break;case 28:c=29;break;case 29:c=30;break;case 30:c=3<=HEAP32[(b+96|0)>>2]>>>0?31:35;break;case 31:c=(HEAP32[(b+96|0)>>2]-3|0)&255;l=1;HEAP16[(HEAP32[(b+5796|0)>>2]+(HEAP32[(b+5792|0)>>2]<<1)|0)>>1]=l;var n=c,q=b+5792|0,t=HEAP32[q>>2];HEAP32[q>>2]=t+1|0;HEAP8[HEAP32[(b+5784|0)>>2]+t|0]=n;l=l-1&65535;c=(b+148|0)+((((HEAP8[42184+(c&255)|0]&255)+256|0)+1|0)<<2)|0;HEAP16[c>>1]=HEAP16[c>>1]+1&65535;c=256>(l&65535|0)?32:33;break;case 32:var r=
HEAP8[42440+(l&65535)|0]&255,c=34;break;case 33:r=HEAP8[42440+(((l&65535)>>7)+256|0)|0]&255;c=34;break;case 34:g=(b+2440|0)+(r<<2)|0;HEAP16[g>>1]=HEAP16[g>>1]+1&65535;g=(HEAP32[(b+5792|0)>>2]|0)==(HEAP32[(b+5788|0)>>2]-1|0)&1;c=b+116|0;HEAP32[c>>2]=HEAP32[c>>2]-HEAP32[(b+96|0)>>2]|0;c=b+108|0;HEAP32[c>>2]=HEAP32[c>>2]+HEAP32[(b+96|0)>>2]|0;HEAP32[(b+96|0)>>2]=0;c=36;break;case 35:g=HEAP8[HEAP32[(b+56|0)>>2]+HEAP32[(b+108|0)>>2]|0];HEAP16[(HEAP32[(b+5796|0)>>2]+(HEAP32[(b+5792|0)>>2]<<1)|0)>>1]=0;
c=g;n=b+5792|0;q=HEAP32[n>>2];HEAP32[n>>2]=q+1|0;HEAP8[HEAP32[(b+5784|0)>>2]+q|0]=c;g=(b+148|0)+((g&255)<<2)|0;HEAP16[g>>1]=HEAP16[g>>1]+1&65535;g=(HEAP32[(b+5792|0)>>2]|0)==(HEAP32[(b+5788|0)>>2]-1|0)&1;c=b+116|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;c=b+108|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;c=36;break;case 36:c=0!=(g|0)?37:43;break;case 37:var s=b,c=0<=(HEAP32[(b+92|0)>>2]|0)?38:39;break;case 38:var v=HEAP32[(b+56|0)>>2]+HEAP32[(b+92|0)>>2]|0,c=40;break;case 39:v=0;c=40;break;case 40:__tr_flush_block(s,v,
HEAP32[(b+108|0)>>2]-HEAP32[(b+92|0)>>2]|0,0);HEAP32[(b+92|0)>>2]=HEAP32[(b+108|0)>>2];_flush_pending(HEAP32[(b|0)>>2]);c=0==(HEAP32[(HEAP32[(b|0)>>2]+16|0)>>2]|0)?41:42;break;case 41:a=0;c=59;break;case 42:c=43;break;case 43:c=2;break;case 44:HEAP32[(b+5812|0)>>2]=0;c=4==(e|0)?45:51;break;case 45:var u=b,c=0<=(HEAP32[(b+92|0)>>2]|0)?46:47;break;case 46:var w=HEAP32[(b+56|0)>>2]+HEAP32[(b+92|0)>>2]|0,c=48;break;case 47:w=0;c=48;break;case 48:__tr_flush_block(u,w,HEAP32[(b+108|0)>>2]-HEAP32[(b+92|
0)>>2]|0,1);HEAP32[(b+92|0)>>2]=HEAP32[(b+108|0)>>2];_flush_pending(HEAP32[(b|0)>>2]);c=0==(HEAP32[(HEAP32[(b|0)>>2]+16|0)>>2]|0)?49:50;break;case 49:a=2;c=59;break;case 50:a=3;c=59;break;case 51:c=0!=(HEAP32[(b+5792|0)>>2]|0)?52:58;break;case 52:var y=b,c=0<=(HEAP32[(b+92|0)>>2]|0)?53:54;break;case 53:var A=HEAP32[(b+56|0)>>2]+HEAP32[(b+92|0)>>2]|0,c=55;break;case 54:A=0;c=55;break;case 55:__tr_flush_block(y,A,HEAP32[(b+108|0)>>2]-HEAP32[(b+92|0)>>2]|0,0);HEAP32[(b+92|0)>>2]=HEAP32[(b+108|0)>>2];
_flush_pending(HEAP32[(b|0)>>2]);c=0==(HEAP32[(HEAP32[(b|0)>>2]+16|0)>>2]|0)?56:57;break;case 56:a=0;c=59;break;case 57:c=58;break;case 58:a=1;c=59;break;case 59:return a;default:assert(0,"bad label: "+c)}}
function _read_buf(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k;e=m;g=d;f=c;k=HEAP32[(e+4|0)>>2];a=k>>>0>f>>>0?2:3;break;case 2:k=f;a=3;break;case 3:a=0==(k|0)?4:5;break;case 4:b=0;a=11;break;case 5:a=e+4|0;HEAP32[a>>2]=HEAP32[a>>2]-k|0;var a=g,h=HEAP32[(e|0)>>2],l=k;assert(0===l%1);_memcpy(a,h,l)|0;a=1==(HEAP32[(HEAP32[(e+28|0)>>2]+24|0)>>2]|0)?6:7;break;case 6:a=_adler32(HEAP32[(e+48|0)>>2],g,k);HEAP32[(e+48|0)>>2]=a;a=10;break;case 7:a=2==(HEAP32[(HEAP32[(e+28|0)>>2]+24|0)>>2]|0)?8:
9;break;case 8:a=_crc32(HEAP32[(e+48|0)>>2],g,k);HEAP32[(e+48|0)>>2]=a;a=9;break;case 9:a=10;break;case 10:b=e|0;HEAP32[b>>2]=HEAP32[b>>2]+k|0;b=e+8|0;HEAP32[b>>2]=HEAP32[b>>2]+k|0;b=k;a=11;break;case 11:return b;default:assert(0,"bad label: "+a)}}
function _deflate_stored(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e,g,f;b=m;e=d;g=65535;c=g>>>0>(HEAP32[(b+12|0)>>2]-5|0)>>>0?2:3;break;case 2:g=HEAP32[(b+12|0)>>2]-5|0;c=3;break;case 3:c=4;break;case 4:c=1>=HEAP32[(b+116|0)>>2]>>>0?5:11;break;case 5:_fill_window(b);c=0==(HEAP32[(b+116|0)>>2]|0)?6:8;break;case 6:c=0==(e|0)?7:8;break;case 7:a=0;c=42;break;case 8:c=0==(HEAP32[(b+116|0)>>2]|0)?9:10;break;case 9:c=27;break;case 10:c=11;break;case 11:c=b+108|0;HEAP32[c>>2]=HEAP32[c>>2]+HEAP32[(b+
116|0)>>2]|0;HEAP32[(b+116|0)>>2]=0;f=HEAP32[(b+92|0)>>2]+g|0;c=0==(HEAP32[(b+108|0)>>2]|0)?13:12;break;case 12:c=HEAP32[(b+108|0)>>2]>>>0>=f>>>0?13:19;break;case 13:HEAP32[(b+116|0)>>2]=HEAP32[(b+108|0)>>2]-f|0;HEAP32[(b+108|0)>>2]=f;var k=b,c=0<=(HEAP32[(b+92|0)>>2]|0)?14:15;break;case 14:var h=HEAP32[(b+56|0)>>2]+HEAP32[(b+92|0)>>2]|0,c=16;break;case 15:h=0;c=16;break;case 16:__tr_flush_block(k,h,HEAP32[(b+108|0)>>2]-HEAP32[(b+92|0)>>2]|0,0);HEAP32[(b+92|0)>>2]=HEAP32[(b+108|0)>>2];_flush_pending(HEAP32[(b|
0)>>2]);c=0==(HEAP32[(HEAP32[(b|0)>>2]+16|0)>>2]|0)?17:18;break;case 17:a=0;c=42;break;case 18:c=19;break;case 19:c=(HEAP32[(b+108|0)>>2]-HEAP32[(b+92|0)>>2]|0)>>>0>=(HEAP32[(b+44|0)>>2]-262|0)>>>0?20:26;break;case 20:var l=b,c=0<=(HEAP32[(b+92|0)>>2]|0)?21:22;break;case 21:var n=HEAP32[(b+56|0)>>2]+HEAP32[(b+92|0)>>2]|0,c=23;break;case 22:n=0;c=23;break;case 23:__tr_flush_block(l,n,HEAP32[(b+108|0)>>2]-HEAP32[(b+92|0)>>2]|0,0);HEAP32[(b+92|0)>>2]=HEAP32[(b+108|0)>>2];_flush_pending(HEAP32[(b|0)>>
2]);c=0==(HEAP32[(HEAP32[(b|0)>>2]+16|0)>>2]|0)?24:25;break;case 24:a=0;c=42;break;case 25:c=26;break;case 26:c=4;break;case 27:HEAP32[(b+5812|0)>>2]=0;c=4==(e|0)?28:34;break;case 28:var p=b,c=0<=(HEAP32[(b+92|0)>>2]|0)?29:30;break;case 29:var q=HEAP32[(b+56|0)>>2]+HEAP32[(b+92|0)>>2]|0,c=31;break;case 30:q=0;c=31;break;case 31:__tr_flush_block(p,q,HEAP32[(b+108|0)>>2]-HEAP32[(b+92|0)>>2]|0,1);HEAP32[(b+92|0)>>2]=HEAP32[(b+108|0)>>2];_flush_pending(HEAP32[(b|0)>>2]);c=0==(HEAP32[(HEAP32[(b|0)>>2]+
16|0)>>2]|0)?32:33;break;case 32:a=2;c=42;break;case 33:a=3;c=42;break;case 34:c=(HEAP32[(b+108|0)>>2]|0)>(HEAP32[(b+92|0)>>2]|0)?35:41;break;case 35:var t=b,c=0<=(HEAP32[(b+92|0)>>2]|0)?36:37;break;case 36:var r=HEAP32[(b+56|0)>>2]+HEAP32[(b+92|0)>>2]|0,c=38;break;case 37:r=0;c=38;break;case 38:__tr_flush_block(t,r,HEAP32[(b+108|0)>>2]-HEAP32[(b+92|0)>>2]|0,0);HEAP32[(b+92|0)>>2]=HEAP32[(b+108|0)>>2];_flush_pending(HEAP32[(b|0)>>2]);c=0==(HEAP32[(HEAP32[(b|0)>>2]+16|0)>>2]|0)?39:40;break;case 39:a=
0;c=42;break;case 40:c=41;break;case 41:a=1;c=42;break;case 42:return a;default:assert(0,"bad label: "+c)}}
function _deflate_fast(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e,g,f,k;b=m;e=d;c=2;break;case 2:c=262>HEAP32[(b+116|0)>>2]>>>0?3:9;break;case 3:_fill_window(b);c=262>HEAP32[(b+116|0)>>2]>>>0?4:6;break;case 4:c=0==(e|0)?5:6;break;case 5:a=0;c=53;break;case 6:c=0==(HEAP32[(b+116|0)>>2]|0)?7:8;break;case 7:c=35;break;case 8:c=9;break;case 9:g=0;c=3<=HEAP32[(b+116|0)>>2]>>>0?10:11;break;case 10:HEAP32[(b+72|0)>>2]=(HEAP32[(b+72|0)>>2]<<HEAP32[(b+88|0)>>2]^HEAP8[HEAP32[(b+56|0)>>2]+(HEAP32[(b+
108|0)>>2]+2|0)|0]&255)&HEAP32[(b+84|0)>>2];g=HEAP16[(HEAP32[(b+68|0)>>2]+(HEAP32[(b+72|0)>>2]<<1)|0)>>1];HEAP16[(HEAP32[(b+64|0)>>2]+((HEAP32[(b+108|0)>>2]&HEAP32[(b+52|0)>>2])<<1)|0)>>1]=g;g&=65535;HEAP16[(HEAP32[(b+68|0)>>2]+(HEAP32[(b+72|0)>>2]<<1)|0)>>1]=HEAP32[(b+108|0)>>2]&65535;c=11;break;case 11:c=0!=(g|0)?12:14;break;case 12:c=(HEAP32[(b+108|0)>>2]-g|0)>>>0<=(HEAP32[(b+44|0)>>2]-262|0)>>>0?13:14;break;case 13:c=_longest_match(b,g);HEAP32[(b+96|0)>>2]=c;c=14;break;case 14:c=3<=HEAP32[(b+
96|0)>>2]>>>0?15:26;break;case 15:c=(HEAP32[(b+96|0)>>2]-3|0)&255;k=(HEAP32[(b+108|0)>>2]-HEAP32[(b+112|0)>>2]|0)&65535;HEAP16[(HEAP32[(b+5796|0)>>2]+(HEAP32[(b+5792|0)>>2]<<1)|0)>>1]=k;var h=c,l=b+5792|0,n=HEAP32[l>>2];HEAP32[l>>2]=n+1|0;HEAP8[HEAP32[(b+5784|0)>>2]+n|0]=h;k=k-1&65535;c=(b+148|0)+((((HEAP8[42184+(c&255)|0]&255)+256|0)+1|0)<<2)|0;HEAP16[c>>1]=HEAP16[c>>1]+1&65535;c=256>(k&65535|0)?16:17;break;case 16:var p=HEAP8[42440+(k&65535)|0]&255,c=18;break;case 17:p=HEAP8[42440+(((k&65535)>>
7)+256|0)|0]&255;c=18;break;case 18:f=(b+2440|0)+(p<<2)|0;HEAP16[f>>1]=HEAP16[f>>1]+1&65535;f=(HEAP32[(b+5792|0)>>2]|0)==(HEAP32[(b+5788|0)>>2]-1|0)&1;c=b+116|0;HEAP32[c>>2]=HEAP32[c>>2]-HEAP32[(b+96|0)>>2]|0;c=HEAP32[(b+96|0)>>2]>>>0<=HEAP32[(b+128|0)>>2]>>>0?19:24;break;case 19:c=3<=HEAP32[(b+116|0)>>2]>>>0?20:24;break;case 20:c=b+96|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;c=21;break;case 21:g=b+108|0;HEAP32[g>>2]=HEAP32[g>>2]+1|0;HEAP32[(b+72|0)>>2]=(HEAP32[(b+72|0)>>2]<<HEAP32[(b+88|0)>>2]^HEAP8[HEAP32[(b+
56|0)>>2]+(HEAP32[(b+108|0)>>2]+2|0)|0]&255)&HEAP32[(b+84|0)>>2];g=HEAP16[(HEAP32[(b+68|0)>>2]+(HEAP32[(b+72|0)>>2]<<1)|0)>>1];HEAP16[(HEAP32[(b+64|0)>>2]+((HEAP32[(b+108|0)>>2]&HEAP32[(b+52|0)>>2])<<1)|0)>>1]=g;g&=65535;HEAP16[(HEAP32[(b+68|0)>>2]+(HEAP32[(b+72|0)>>2]<<1)|0)>>1]=HEAP32[(b+108|0)>>2]&65535;c=22;break;case 22:c=b+96|0;h=HEAP32[c>>2]-1|0;HEAP32[c>>2]=h;c=0!=(h|0)?21:23;break;case 23:c=b+108|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;c=25;break;case 24:c=b+108|0;HEAP32[c>>2]=HEAP32[c>>2]+HEAP32[(b+
96|0)>>2]|0;HEAP32[(b+96|0)>>2]=0;HEAP32[(b+72|0)>>2]=HEAP8[HEAP32[(b+56|0)>>2]+HEAP32[(b+108|0)>>2]|0]&255;HEAP32[(b+72|0)>>2]=(HEAP32[(b+72|0)>>2]<<HEAP32[(b+88|0)>>2]^HEAP8[HEAP32[(b+56|0)>>2]+(HEAP32[(b+108|0)>>2]+1|0)|0]&255)&HEAP32[(b+84|0)>>2];c=25;break;case 25:c=27;break;case 26:f=HEAP8[HEAP32[(b+56|0)>>2]+HEAP32[(b+108|0)>>2]|0];HEAP16[(HEAP32[(b+5796|0)>>2]+(HEAP32[(b+5792|0)>>2]<<1)|0)>>1]=0;c=f;h=b+5792|0;l=HEAP32[h>>2];HEAP32[h>>2]=l+1|0;HEAP8[HEAP32[(b+5784|0)>>2]+l|0]=c;f=(b+148|0)+
((f&255)<<2)|0;HEAP16[f>>1]=HEAP16[f>>1]+1&65535;f=(HEAP32[(b+5792|0)>>2]|0)==(HEAP32[(b+5788|0)>>2]-1|0)&1;c=b+116|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;c=b+108|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;c=27;break;case 27:c=0!=(f|0)?28:34;break;case 28:var q=b,c=0<=(HEAP32[(b+92|0)>>2]|0)?29:30;break;case 29:var t=HEAP32[(b+56|0)>>2]+HEAP32[(b+92|0)>>2]|0,c=31;break;case 30:t=0;c=31;break;case 31:__tr_flush_block(q,t,HEAP32[(b+108|0)>>2]-HEAP32[(b+92|0)>>2]|0,0);HEAP32[(b+92|0)>>2]=HEAP32[(b+108|0)>>2];_flush_pending(HEAP32[(b|
0)>>2]);c=0==(HEAP32[(HEAP32[(b|0)>>2]+16|0)>>2]|0)?32:33;break;case 32:a=0;c=53;break;case 33:c=34;break;case 34:c=2;break;case 35:c=2>HEAP32[(b+108|0)>>2]>>>0?36:37;break;case 36:var r=HEAP32[(b+108|0)>>2],c=38;break;case 37:r=2;c=38;break;case 38:HEAP32[(b+5812|0)>>2]=r;c=4==(e|0)?39:45;break;case 39:var s=b,c=0<=(HEAP32[(b+92|0)>>2]|0)?40:41;break;case 40:var v=HEAP32[(b+56|0)>>2]+HEAP32[(b+92|0)>>2]|0,c=42;break;case 41:v=0;c=42;break;case 42:__tr_flush_block(s,v,HEAP32[(b+108|0)>>2]-HEAP32[(b+
92|0)>>2]|0,1);HEAP32[(b+92|0)>>2]=HEAP32[(b+108|0)>>2];_flush_pending(HEAP32[(b|0)>>2]);c=0==(HEAP32[(HEAP32[(b|0)>>2]+16|0)>>2]|0)?43:44;break;case 43:a=2;c=53;break;case 44:a=3;c=53;break;case 45:c=0!=(HEAP32[(b+5792|0)>>2]|0)?46:52;break;case 46:var u=b,c=0<=(HEAP32[(b+92|0)>>2]|0)?47:48;break;case 47:var w=HEAP32[(b+56|0)>>2]+HEAP32[(b+92|0)>>2]|0,c=49;break;case 48:w=0;c=49;break;case 49:__tr_flush_block(u,w,HEAP32[(b+108|0)>>2]-HEAP32[(b+92|0)>>2]|0,0);HEAP32[(b+92|0)>>2]=HEAP32[(b+108|0)>>
2];_flush_pending(HEAP32[(b|0)>>2]);c=0==(HEAP32[(HEAP32[(b|0)>>2]+16|0)>>2]|0)?50:51;break;case 50:a=0;c=53;break;case 51:c=52;break;case 52:a=1;c=53;break;case 53:return a;default:assert(0,"bad label: "+c)}}
function _deflate_slow(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e,g,f,k,h;b=m;e=d;c=2;break;case 2:c=262>HEAP32[(b+116|0)>>2]>>>0?3:9;break;case 3:_fill_window(b);c=262>HEAP32[(b+116|0)>>2]>>>0?4:6;break;case 4:c=0==(e|0)?5:6;break;case 5:a=0;c=70;break;case 6:c=0==(HEAP32[(b+116|0)>>2]|0)?7:8;break;case 7:c=50;break;case 8:c=9;break;case 9:g=0;c=3<=HEAP32[(b+116|0)>>2]>>>0?10:11;break;case 10:HEAP32[(b+72|0)>>2]=(HEAP32[(b+72|0)>>2]<<HEAP32[(b+88|0)>>2]^HEAP8[HEAP32[(b+56|0)>>2]+(HEAP32[(b+
108|0)>>2]+2|0)|0]&255)&HEAP32[(b+84|0)>>2];g=HEAP16[(HEAP32[(b+68|0)>>2]+(HEAP32[(b+72|0)>>2]<<1)|0)>>1];HEAP16[(HEAP32[(b+64|0)>>2]+((HEAP32[(b+108|0)>>2]&HEAP32[(b+52|0)>>2])<<1)|0)>>1]=g;g&=65535;HEAP16[(HEAP32[(b+68|0)>>2]+(HEAP32[(b+72|0)>>2]<<1)|0)>>1]=HEAP32[(b+108|0)>>2]&65535;c=11;break;case 11:HEAP32[(b+120|0)>>2]=HEAP32[(b+96|0)>>2];HEAP32[(b+100|0)>>2]=HEAP32[(b+112|0)>>2];HEAP32[(b+96|0)>>2]=2;c=0!=(g|0)?12:20;break;case 12:c=HEAP32[(b+120|0)>>2]>>>0<HEAP32[(b+128|0)>>2]>>>0?13:20;break;
case 13:c=(HEAP32[(b+108|0)>>2]-g|0)>>>0<=(HEAP32[(b+44|0)>>2]-262|0)>>>0?14:20;break;case 14:c=_longest_match(b,g);HEAP32[(b+96|0)>>2]=c;c=5>=HEAP32[(b+96|0)>>2]>>>0?15:19;break;case 15:c=1==(HEAP32[(b+136|0)>>2]|0)?18:16;break;case 16:c=3==(HEAP32[(b+96|0)>>2]|0)?17:19;break;case 17:c=4096<(HEAP32[(b+108|0)>>2]-HEAP32[(b+112|0)>>2]|0)>>>0?18:19;break;case 18:HEAP32[(b+96|0)>>2]=2;c=19;break;case 19:c=20;break;case 20:c=3<=HEAP32[(b+120|0)>>2]>>>0?21:38;break;case 21:c=HEAP32[(b+96|0)>>2]>>>0<=HEAP32[(b+
120|0)>>2]>>>0?22:38;break;case 22:k=(HEAP32[(b+108|0)>>2]+HEAP32[(b+116|0)>>2]|0)-3|0;c=(HEAP32[(b+120|0)>>2]-3|0)&255;h=((HEAP32[(b+108|0)>>2]-1|0)-HEAP32[(b+100|0)>>2]|0)&65535;HEAP16[(HEAP32[(b+5796|0)>>2]+(HEAP32[(b+5792|0)>>2]<<1)|0)>>1]=h;var l=c,n=b+5792|0,p=HEAP32[n>>2];HEAP32[n>>2]=p+1|0;HEAP8[HEAP32[(b+5784|0)>>2]+p|0]=l;h=h-1&65535;c=(b+148|0)+((((HEAP8[42184+(c&255)|0]&255)+256|0)+1|0)<<2)|0;HEAP16[c>>1]=HEAP16[c>>1]+1&65535;c=256>(h&65535|0)?23:24;break;case 23:var q=HEAP8[42440+(h&
65535)|0]&255,c=25;break;case 24:q=HEAP8[42440+(((h&65535)>>7)+256|0)|0]&255;c=25;break;case 25:f=(b+2440|0)+(q<<2)|0;HEAP16[f>>1]=HEAP16[f>>1]+1&65535;f=(HEAP32[(b+5792|0)>>2]|0)==(HEAP32[(b+5788|0)>>2]-1|0)&1;c=b+116|0;HEAP32[c>>2]=HEAP32[c>>2]-(HEAP32[(b+120|0)>>2]-1|0)|0;c=b+120|0;HEAP32[c>>2]=HEAP32[c>>2]-2|0;c=26;break;case 26:c=b+108|0;l=HEAP32[c>>2]+1|0;HEAP32[c>>2]=l;c=l>>>0<=k>>>0?27:28;break;case 27:HEAP32[(b+72|0)>>2]=(HEAP32[(b+72|0)>>2]<<HEAP32[(b+88|0)>>2]^HEAP8[HEAP32[(b+56|0)>>2]+
(HEAP32[(b+108|0)>>2]+2|0)|0]&255)&HEAP32[(b+84|0)>>2];g=HEAP16[(HEAP32[(b+68|0)>>2]+(HEAP32[(b+72|0)>>2]<<1)|0)>>1];HEAP16[(HEAP32[(b+64|0)>>2]+((HEAP32[(b+108|0)>>2]&HEAP32[(b+52|0)>>2])<<1)|0)>>1]=g;g&=65535;HEAP16[(HEAP32[(b+68|0)>>2]+(HEAP32[(b+72|0)>>2]<<1)|0)>>1]=HEAP32[(b+108|0)>>2]&65535;c=28;break;case 28:c=29;break;case 29:c=b+120|0;l=HEAP32[c>>2]-1|0;HEAP32[c>>2]=l;c=0!=(l|0)?26:30;break;case 30:HEAP32[(b+104|0)>>2]=0;HEAP32[(b+96|0)>>2]=2;c=b+108|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;c=0!=
(f|0)?31:37;break;case 31:var t=b,c=0<=(HEAP32[(b+92|0)>>2]|0)?32:33;break;case 32:var r=HEAP32[(b+56|0)>>2]+HEAP32[(b+92|0)>>2]|0,c=34;break;case 33:r=0;c=34;break;case 34:__tr_flush_block(t,r,HEAP32[(b+108|0)>>2]-HEAP32[(b+92|0)>>2]|0,0);HEAP32[(b+92|0)>>2]=HEAP32[(b+108|0)>>2];_flush_pending(HEAP32[(b|0)>>2]);c=0==(HEAP32[(HEAP32[(b|0)>>2]+16|0)>>2]|0)?35:36;break;case 35:a=0;c=70;break;case 36:c=37;break;case 37:c=49;break;case 38:c=0!=(HEAP32[(b+104|0)>>2]|0)?39:47;break;case 39:f=HEAP8[HEAP32[(b+
56|0)>>2]+(HEAP32[(b+108|0)>>2]-1|0)|0];HEAP16[(HEAP32[(b+5796|0)>>2]+(HEAP32[(b+5792|0)>>2]<<1)|0)>>1]=0;c=f;l=b+5792|0;n=HEAP32[l>>2];HEAP32[l>>2]=n+1|0;HEAP8[HEAP32[(b+5784|0)>>2]+n|0]=c;f=(b+148|0)+((f&255)<<2)|0;HEAP16[f>>1]=HEAP16[f>>1]+1&65535;f=(HEAP32[(b+5792|0)>>2]|0)==(HEAP32[(b+5788|0)>>2]-1|0)&1;c=0!=(f|0)?40:44;break;case 40:var s=b,c=0<=(HEAP32[(b+92|0)>>2]|0)?41:42;break;case 41:var v=HEAP32[(b+56|0)>>2]+HEAP32[(b+92|0)>>2]|0,c=43;break;case 42:v=0;c=43;break;case 43:__tr_flush_block(s,
v,HEAP32[(b+108|0)>>2]-HEAP32[(b+92|0)>>2]|0,0);HEAP32[(b+92|0)>>2]=HEAP32[(b+108|0)>>2];_flush_pending(HEAP32[(b|0)>>2]);c=44;break;case 44:c=b+108|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;c=b+116|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;c=0==(HEAP32[(HEAP32[(b|0)>>2]+16|0)>>2]|0)?45:46;break;case 45:a=0;c=70;break;case 46:c=48;break;case 47:HEAP32[(b+104|0)>>2]=1;c=b+108|0;HEAP32[c>>2]=HEAP32[c>>2]+1|0;c=b+116|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;c=48;break;case 48:c=49;break;case 49:c=2;break;case 50:c=0!=(HEAP32[(b+
104|0)>>2]|0)?51:52;break;case 51:f=HEAP8[HEAP32[(b+56|0)>>2]+(HEAP32[(b+108|0)>>2]-1|0)|0];HEAP16[(HEAP32[(b+5796|0)>>2]+(HEAP32[(b+5792|0)>>2]<<1)|0)>>1]=0;c=f;l=b+5792|0;n=HEAP32[l>>2];HEAP32[l>>2]=n+1|0;HEAP8[HEAP32[(b+5784|0)>>2]+n|0]=c;f=(b+148|0)+((f&255)<<2)|0;HEAP16[f>>1]=HEAP16[f>>1]+1&65535;f=(HEAP32[(b+5792|0)>>2]|0)==(HEAP32[(b+5788|0)>>2]-1|0)&1;HEAP32[(b+104|0)>>2]=0;c=52;break;case 52:c=2>HEAP32[(b+108|0)>>2]>>>0?53:54;break;case 53:var u=HEAP32[(b+108|0)>>2],c=55;break;case 54:u=
2;c=55;break;case 55:HEAP32[(b+5812|0)>>2]=u;c=4==(e|0)?56:62;break;case 56:var w=b,c=0<=(HEAP32[(b+92|0)>>2]|0)?57:58;break;case 57:var y=HEAP32[(b+56|0)>>2]+HEAP32[(b+92|0)>>2]|0,c=59;break;case 58:y=0;c=59;break;case 59:__tr_flush_block(w,y,HEAP32[(b+108|0)>>2]-HEAP32[(b+92|0)>>2]|0,1);HEAP32[(b+92|0)>>2]=HEAP32[(b+108|0)>>2];_flush_pending(HEAP32[(b|0)>>2]);c=0==(HEAP32[(HEAP32[(b|0)>>2]+16|0)>>2]|0)?60:61;break;case 60:a=2;c=70;break;case 61:a=3;c=70;break;case 62:c=0!=(HEAP32[(b+5792|0)>>2]|
0)?63:69;break;case 63:var A=b,c=0<=(HEAP32[(b+92|0)>>2]|0)?64:65;break;case 64:var z=HEAP32[(b+56|0)>>2]+HEAP32[(b+92|0)>>2]|0,c=66;break;case 65:z=0;c=66;break;case 66:__tr_flush_block(A,z,HEAP32[(b+108|0)>>2]-HEAP32[(b+92|0)>>2]|0,0);HEAP32[(b+92|0)>>2]=HEAP32[(b+108|0)>>2];_flush_pending(HEAP32[(b|0)>>2]);c=0==(HEAP32[(HEAP32[(b|0)>>2]+16|0)>>2]|0)?67:68;break;case 67:a=0;c=70;break;case 68:c=69;break;case 69:a=1;c=70;break;case 70:return a;default:assert(0,"bad label: "+c)}}
function _longest_match(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e,g,f,k,h,l,n,p,q,t,r,s,v;b=m;e=d;g=HEAP32[(b+124|0)>>2];f=HEAP32[(b+56|0)>>2]+HEAP32[(b+108|0)>>2]|0;l=HEAP32[(b+120|0)>>2];n=HEAP32[(b+144|0)>>2];c=HEAP32[(b+108|0)>>2]>>>0>(HEAP32[(b+44|0)>>2]-262|0)>>>0?2:3;break;case 2:var u=HEAP32[(b+108|0)>>2]-(HEAP32[(b+44|0)>>2]-262|0)|0,c=4;break;case 3:u=0;c=4;break;case 4:p=u;q=HEAP32[(b+64|0)>>2];t=HEAP32[(b+52|0)>>2];r=(HEAP32[(b+56|0)>>2]+HEAP32[(b+108|0)>>2]|0)+258|0;s=HEAP8[f+
(l-1|0)|0];v=HEAP8[f+l|0];c=HEAP32[(b+120|0)>>2]>>>0>=HEAP32[(b+140|0)>>2]>>>0?5:6;break;case 5:g>>>=2;c=6;break;case 6:c=n>>>0>HEAP32[(b+116|0)>>2]>>>0?7:8;break;case 7:n=HEAP32[(b+116|0)>>2];c=8;break;case 8:c=9;break;case 9:k=HEAP32[(b+56|0)>>2]+e|0;c=(HEAP8[k+l|0]&255|0)!=(v&255|0)?13:10;break;case 10:c=(HEAP8[k+(l-1|0)|0]&255|0)!=(s&255|0)?13:11;break;case 11:c=(HEAP8[k]&255|0)!=(HEAP8[f]&255|0)?13:12;break;case 12:k=c=k+1|0;c=(HEAP8[c]&255|0)!=(HEAP8[f+1|0]&255|0)?13:14;break;case 13:c=31;break;
case 14:f=f+2|0;k=k+1|0;c=15;break;case 15:c=16;break;case 16:f=c=f+1|0;var c=HEAP8[c]&255,w=k+1|0;k=w;if((c|0)==(HEAP8[w]&255|0))c=17;else var y=0,c=25;break;case 17:f=c=f+1|0;c=HEAP8[c]&255;k=w=k+1|0;(c|0)==(HEAP8[w]&255|0)?c=18:(y=0,c=25);break;case 18:f=c=f+1|0;c=HEAP8[c]&255;k=w=k+1|0;(c|0)==(HEAP8[w]&255|0)?c=19:(y=0,c=25);break;case 19:f=c=f+1|0;c=HEAP8[c]&255;k=w=k+1|0;(c|0)==(HEAP8[w]&255|0)?c=20:(y=0,c=25);break;case 20:f=c=f+1|0;c=HEAP8[c]&255;k=w=k+1|0;(c|0)==(HEAP8[w]&255|0)?c=21:(y=
0,c=25);break;case 21:f=c=f+1|0;c=HEAP8[c]&255;k=w=k+1|0;(c|0)==(HEAP8[w]&255|0)?c=22:(y=0,c=25);break;case 22:f=c=f+1|0;c=HEAP8[c]&255;k=w=k+1|0;(c|0)==(HEAP8[w]&255|0)?c=23:(y=0,c=25);break;case 23:f=c=f+1|0;c=HEAP8[c]&255;k=w=k+1|0;(c|0)==(HEAP8[w]&255|0)?c=24:(y=0,c=25);break;case 24:y=f>>>0<r>>>0;c=25;break;case 25:c=y?15:26;break;case 26:h=258-(r-f|0)|0;f=r-258|0;c=(h|0)>(l|0)?27:30;break;case 27:HEAP32[(b+112|0)>>2]=e;l=h;c=(h|0)>=(n|0)?28:29;break;case 28:c=34;break;case 29:s=HEAP8[f+(l-1|
0)|0];v=HEAP8[f+l|0];c=30;break;case 30:c=31;break;case 31:e=c=HEAP16[(q+((e&t)<<1)|0)>>1]&65535;if(c>>>0>p>>>0)c=32;else var A=0,c=33;break;case 32:g=A=g-1|0;A=0!=(A|0);c=33;break;case 33:c=A?9:34;break;case 34:c=l>>>0<=HEAP32[(b+116|0)>>2]>>>0?35:36;break;case 35:a=l;c=37;break;case 36:a=HEAP32[(b+116|0)>>2];c=37;break;case 37:return a;default:assert(0,"bad label: "+c)}}
function _inflateResetKeep(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b;a=m;d=0==(a|0)?3:2;break;case 2:d=0==(HEAP32[(a+28|0)>>2]|0)?3:4;break;case 3:c=-2;d=7;break;case 4:b=HEAP32[(a+28|0)>>2];HEAP32[(b+28|0)>>2]=0;HEAP32[(a+20|0)>>2]=0;HEAP32[(a+8|0)>>2]=0;HEAP32[(a+24|0)>>2]=0;d=0!=(HEAP32[(b+8|0)>>2]|0)?5:6;break;case 5:HEAP32[(a+48|0)>>2]=HEAP32[(b+8|0)>>2]&1;d=6;break;case 6:HEAP32[(b|0)>>2]=0;HEAP32[(b+4|0)>>2]=0;HEAP32[(b+12|0)>>2]=0;HEAP32[(b+20|0)>>2]=32768;HEAP32[(b+32|0)>>2]=0;HEAP32[(b+
56|0)>>2]=0;HEAP32[(b+60|0)>>2]=0;d=b+1328|0;HEAP32[(b+108|0)>>2]=d;HEAP32[(b+80|0)>>2]=d;HEAP32[(b+76|0)>>2]=d;HEAP32[(b+7104|0)>>2]=1;HEAP32[(b+7108|0)>>2]=-1;c=0;d=7;break;case 7:return c;default:assert(0,"bad label: "+d)}}
function _inflateReset(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;a=m;d=0==(a|0)?3:2;break;case 2:d=0==(HEAP32[(a+28|0)>>2]|0)?3:4;break;case 3:c=-2;d=5;break;case 4:d=HEAP32[(a+28|0)>>2];HEAP32[(d+40|0)>>2]=0;HEAP32[(d+44|0)>>2]=0;HEAP32[(d+48|0)>>2]=0;c=_inflateResetKeep(a);d=5;break;case 5:return c;default:assert(0,"bad label: "+d)}}
function _inflateReset2(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e,g,f;b=m;e=d;c=0==(b|0)?3:2;break;case 2:c=0==(HEAP32[(b+28|0)>>2]|0)?3:4;break;case 3:a=-2;c=17;break;case 4:f=HEAP32[(b+28|0)>>2];c=0>(e|0)?5:6;break;case 5:g=0;e=-e|0;c=9;break;case 6:g=(e>>4)+1|0;c=48>(e|0)?7:8;break;case 7:e&=15;c=8;break;case 8:c=9;break;case 9:c=0!=(e|0)?10:13;break;case 10:c=8>(e|0)?12:11;break;case 11:c=15<(e|0)?12:13;break;case 12:a=-2;c=17;break;case 13:c=0!=(HEAP32[(f+52|0)>>2]|0)?14:16;break;case 14:c=
(HEAP32[(f+36|0)>>2]|0)!=(e|0)?15:16;break;case 15:FUNCTION_TABLE[HEAP32[(b+36|0)>>2]](HEAP32[(b+40|0)>>2],HEAP32[(f+52|0)>>2]);HEAP32[(f+52|0)>>2]=0;c=16;break;case 16:HEAP32[(f+8|0)>>2]=g;HEAP32[(f+36|0)>>2]=e;a=_inflateReset(b);c=17;break;case 17:return a;default:assert(0,"bad label: "+c)}}
function _inflateInit2_(m,d,c,a){for(var b=0,b=1;;)switch(b){case 1:var e,g,f,k,h,l,n;g=m;f=d;k=c;h=a;b=0==(k|0)?4:2;break;case 2:b=(HEAP8[k|0]<<24>>24|0)!=(HEAP8[34016]<<24>>24|0)?4:3;break;case 3:b=56!=(h|0)?4:5;break;case 4:e=-6;b=16;break;case 5:b=0==(g|0)?6:7;break;case 6:e=-2;b=16;break;case 7:HEAP32[(g+24|0)>>2]=0;b=0==(HEAP32[(g+32|0)>>2]|0)?8:9;break;case 8:HEAP32[(g+32|0)>>2]=374;HEAP32[(g+40|0)>>2]=0;b=9;break;case 9:b=0==(HEAP32[(g+36|0)>>2]|0)?10:11;break;case 10:HEAP32[(g+36|0)>>2]=
332;b=11;break;case 11:n=FUNCTION_TABLE[HEAP32[(g+32|0)>>2]](HEAP32[(g+40|0)>>2],1,7116);b=0==(n|0)?12:13;break;case 12:e=-4;b=16;break;case 13:HEAP32[(g+28|0)>>2]=n;HEAP32[(n+52|0)>>2]=0;l=_inflateReset2(g,f);b=0!=(l|0)?14:15;break;case 14:FUNCTION_TABLE[HEAP32[(g+36|0)>>2]](HEAP32[(g+40|0)>>2],n);HEAP32[(g+28|0)>>2]=0;b=15;break;case 15:e=l;b=16;break;case 16:return e;default:assert(0,"bad label: "+b)}}function _inflateInit_(m,d,c){return _inflateInit2_(m,15,d,c)}
function _inflate(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+24|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e,g,f,k,h,l,n,p,q,t,r,s,v,u=a,w=a+8,y,A,z=a+16;e=m;g=d;c=0==(e|0)?6:2;break;case 2:c=0==(HEAP32[(e+28|0)>>2]|0)?6:3;break;case 3:c=0==(HEAP32[(e+12|0)>>2]|0)?6:4;break;case 4:c=0==(HEAP32[(e|0)>>2]|0)?5:7;break;case 5:c=0!=(HEAP32[(e+4|0)>>2]|0)?6:7;break;case 6:b=-2;c=589;break;case 7:f=HEAP32[(e+28|0)>>2];c=11==(HEAP32[(f|0)>>2]|0)?8:9;break;case 8:HEAP32[(f|0)>>
2]=12;c=9;break;case 9:c=10;break;case 10:h=HEAP32[(e+12|0)>>2];n=HEAP32[(e+16|0)>>2];k=HEAP32[(e|0)>>2];l=HEAP32[(e+4|0)>>2];p=HEAP32[(f+56|0)>>2];q=HEAP32[(f+60|0)>>2];c=11;break;case 11:t=l;r=n;A=0;c=12;break;case 12:var x=HEAP32[(f|0)>>2],c=0==(x|0)?13:1==(x|0)?48:2==(x|0)?70:3==(x|0)?88:4==(x|0)?106:5==(x|0)?129:6==(x|0)?146:7==(x|0)?167:8==(x|0)?188:9==(x|0)?206:10==(x|0)?218:11==(x|0)?223:12==(x|0)?227:13==(x|0)?254:14==(x|0)?272:15==(x|0)?273:16==(x|0)?282:17==(x|0)?301:18==(x|0)?321:19==
(x|0)?400:20==(x|0)?401:21==(x|0)?440:22==(x|0)?454:23==(x|0)?479:24==(x|0)?493:25==(x|0)?515:26==(x|0)?518:27==(x|0)?542:28==(x|0)?559:29==(x|0)?560:30==(x|0)?561:31==(x|0)?562:563;break;case 13:c=0==(HEAP32[(f+8|0)>>2]|0)?14:15;break;case 14:HEAP32[(f|0)>>2]=12;c=564;break;case 15:c=16;break;case 16:c=17;break;case 17:c=16>q>>>0?18:23;break;case 18:c=19;break;case 19:c=0==(l|0)?20:21;break;case 20:c=565;break;case 21:l=l-1|0;var B=k;k=B+1|0;p=p+((HEAP8[B]&255)<<q)|0;q=q+8|0;c=22;break;case 22:c=
17;break;case 23:c=24;break;case 24:c=0!=(HEAP32[(f+8|0)>>2]&2|0)?25:31;break;case 25:c=35615==(p|0)?26:31;break;case 26:var C=_crc32(0,0,0);HEAP32[(f+24|0)>>2]=C;c=27;break;case 27:HEAP8[z|0]=p&255;HEAP8[z+1|0]=p>>>8&255;var D=_crc32(HEAP32[(f+24|0)>>2],z|0,2);HEAP32[(f+24|0)>>2]=D;c=28;break;case 28:c=29;break;case 29:q=p=0;c=30;break;case 30:HEAP32[(f|0)>>2]=1;c=564;break;case 31:HEAP32[(f+16|0)>>2]=0;c=0!=(HEAP32[(f+32|0)>>2]|0)?32:33;break;case 32:HEAP32[(HEAP32[(f+32|0)>>2]+48|0)>>2]=-1;c=33;
break;case 33:c=0!=(HEAP32[(f+8|0)>>2]&1|0)?34:35;break;case 34:c=0!=(((((p&255)<<8)+(p>>>8)|0)>>>0)%31&-1|0)?35:36;break;case 35:HEAP32[(e+24|0)>>2]=40768;HEAP32[(f|0)>>2]=29;c=564;break;case 36:c=8!=(p&15|0)?37:38;break;case 37:HEAP32[(e+24|0)>>2]=33928;HEAP32[(f|0)>>2]=29;c=564;break;case 38:c=39;break;case 39:p>>>=4;q=q-4|0;c=40;break;case 40:y=(p&15)+8|0;c=0==(HEAP32[(f+36|0)>>2]|0)?41:42;break;case 41:HEAP32[(f+36|0)>>2]=y;c=45;break;case 42:c=y>>>0>HEAP32[(f+36|0)>>2]>>>0?43:44;break;case 43:HEAP32[(e+
24|0)>>2]=31008;HEAP32[(f|0)>>2]=29;c=564;break;case 44:c=45;break;case 45:HEAP32[(f+20|0)>>2]=1<<y;var F=_adler32(0,0,0);HEAP32[(f+24|0)>>2]=F;HEAP32[(e+48|0)>>2]=F;HEAP32[(f|0)>>2]=0!=(p&512|0)?9:11;c=46;break;case 46:q=p=0;c=47;break;case 47:c=564;break;case 48:c=49;break;case 49:c=50;break;case 50:c=16>q>>>0?51:56;break;case 51:c=52;break;case 52:c=0==(l|0)?53:54;break;case 53:c=565;break;case 54:l=l-1|0;var I=k;k=I+1|0;p=p+((HEAP8[I]&255)<<q)|0;q=q+8|0;c=55;break;case 55:c=50;break;case 56:c=
57;break;case 57:HEAP32[(f+16|0)>>2]=p;c=8!=(HEAP32[(f+16|0)>>2]&255|0)?58:59;break;case 58:HEAP32[(e+24|0)>>2]=33928;HEAP32[(f|0)>>2]=29;c=564;break;case 59:c=0!=(HEAP32[(f+16|0)>>2]&57344|0)?60:61;break;case 60:HEAP32[(e+24|0)>>2]=29104;HEAP32[(f|0)>>2]=29;c=564;break;case 61:c=0!=(HEAP32[(f+32|0)>>2]|0)?62:63;break;case 62:HEAP32[(HEAP32[(f+32|0)>>2]|0)>>2]=p>>>8&1;c=63;break;case 63:c=0!=(HEAP32[(f+16|0)>>2]&512|0)?64:67;break;case 64:c=65;break;case 65:HEAP8[z|0]=p&255;HEAP8[z+1|0]=p>>>8&255;
var G=_crc32(HEAP32[(f+24|0)>>2],z|0,2);HEAP32[(f+24|0)>>2]=G;c=66;break;case 66:c=67;break;case 67:c=68;break;case 68:q=p=0;c=69;break;case 69:HEAP32[(f|0)>>2]=2;c=70;break;case 70:c=71;break;case 71:c=72;break;case 72:c=32>q>>>0?73:78;break;case 73:c=74;break;case 74:c=0==(l|0)?75:76;break;case 75:c=565;break;case 76:l=l-1|0;var H=k;k=H+1|0;p=p+((HEAP8[H]&255)<<q)|0;q=q+8|0;c=77;break;case 77:c=72;break;case 78:c=79;break;case 79:c=0!=(HEAP32[(f+32|0)>>2]|0)?80:81;break;case 80:HEAP32[(HEAP32[(f+
32|0)>>2]+4|0)>>2]=p;c=81;break;case 81:c=0!=(HEAP32[(f+16|0)>>2]&512|0)?82:85;break;case 82:c=83;break;case 83:HEAP8[z|0]=p&255;HEAP8[z+1|0]=p>>>8&255;HEAP8[z+2|0]=p>>>16&255;HEAP8[z+3|0]=p>>>24&255;var K=_crc32(HEAP32[(f+24|0)>>2],z|0,4);HEAP32[(f+24|0)>>2]=K;c=84;break;case 84:c=85;break;case 85:c=86;break;case 86:q=p=0;c=87;break;case 87:HEAP32[(f|0)>>2]=3;c=88;break;case 88:c=89;break;case 89:c=90;break;case 90:c=16>q>>>0?91:96;break;case 91:c=92;break;case 92:c=0==(l|0)?93:94;break;case 93:c=
565;break;case 94:l=l-1|0;var J=k;k=J+1|0;p=p+((HEAP8[J]&255)<<q)|0;q=q+8|0;c=95;break;case 95:c=90;break;case 96:c=97;break;case 97:c=0!=(HEAP32[(f+32|0)>>2]|0)?98:99;break;case 98:HEAP32[(HEAP32[(f+32|0)>>2]+8|0)>>2]=p&255;HEAP32[(HEAP32[(f+32|0)>>2]+12|0)>>2]=p>>>8;c=99;break;case 99:c=0!=(HEAP32[(f+16|0)>>2]&512|0)?100:103;break;case 100:c=101;break;case 101:HEAP8[z|0]=p&255;HEAP8[z+1|0]=p>>>8&255;var E=_crc32(HEAP32[(f+24|0)>>2],z|0,2);HEAP32[(f+24|0)>>2]=E;c=102;break;case 102:c=103;break;case 103:c=
104;break;case 104:q=p=0;c=105;break;case 105:HEAP32[(f|0)>>2]=4;c=106;break;case 106:c=0!=(HEAP32[(f+16|0)>>2]&1024|0)?107:125;break;case 107:c=108;break;case 108:c=109;break;case 109:c=16>q>>>0?110:115;break;case 110:c=111;break;case 111:c=0==(l|0)?112:113;break;case 112:c=565;break;case 113:l=l-1|0;var L=k;k=L+1|0;p=p+((HEAP8[L]&255)<<q)|0;q=q+8|0;c=114;break;case 114:c=109;break;case 115:c=116;break;case 116:HEAP32[(f+64|0)>>2]=p;c=0!=(HEAP32[(f+32|0)>>2]|0)?117:118;break;case 117:HEAP32[(HEAP32[(f+
32|0)>>2]+20|0)>>2]=p;c=118;break;case 118:c=0!=(HEAP32[(f+16|0)>>2]&512|0)?119:122;break;case 119:c=120;break;case 120:HEAP8[z|0]=p&255;HEAP8[z+1|0]=p>>>8&255;var Q=_crc32(HEAP32[(f+24|0)>>2],z|0,2);HEAP32[(f+24|0)>>2]=Q;c=121;break;case 121:c=122;break;case 122:c=123;break;case 123:q=p=0;c=124;break;case 124:c=128;break;case 125:c=0!=(HEAP32[(f+32|0)>>2]|0)?126:127;break;case 126:HEAP32[(HEAP32[(f+32|0)>>2]+16|0)>>2]=0;c=127;break;case 127:c=128;break;case 128:HEAP32[(f|0)>>2]=5;c=129;break;case 129:c=
0!=(HEAP32[(f+16|0)>>2]&1024|0)?130:145;break;case 130:s=HEAP32[(f+64|0)>>2];c=s>>>0>l>>>0?131:132;break;case 131:s=l;c=132;break;case 132:c=0!=(s|0)?133:142;break;case 133:c=0!=(HEAP32[(f+32|0)>>2]|0)?134:139;break;case 134:c=0!=(HEAP32[(HEAP32[(f+32|0)>>2]+16|0)>>2]|0)?135:139;break;case 135:y=HEAP32[(HEAP32[(f+32|0)>>2]+20|0)>>2]-HEAP32[(f+64|0)>>2]|0;var N=HEAP32[(HEAP32[(f+32|0)>>2]+16|0)>>2]+y|0,P=k,c=(y+s|0)>>>0>HEAP32[(HEAP32[(f+32|0)>>2]+24|0)>>2]>>>0?136:137;break;case 136:var W=HEAP32[(HEAP32[(f+
32|0)>>2]+24|0)>>2]-y|0,c=138;break;case 137:W=s;c=138;break;case 138:assert(0===W%1);_memcpy(N,P,W)|0;c=139;break;case 139:c=0!=(HEAP32[(f+16|0)>>2]&512|0)?140:141;break;case 140:var O=_crc32(HEAP32[(f+24|0)>>2],k,s);HEAP32[(f+24|0)>>2]=O;c=141;break;case 141:l=l-s|0;k=k+s|0;var T=f+64|0;HEAP32[T>>2]=HEAP32[T>>2]-s|0;c=142;break;case 142:c=0!=(HEAP32[(f+64|0)>>2]|0)?143:144;break;case 143:c=565;break;case 144:c=145;break;case 145:HEAP32[(f+64|0)>>2]=0;HEAP32[(f|0)>>2]=6;c=146;break;case 146:c=0!=
(HEAP32[(f+16|0)>>2]&2048|0)?147:163;break;case 147:c=0==(l|0)?148:149;break;case 148:c=565;break;case 149:s=0;c=150;break;case 150:var Y=s;s=Y+1|0;y=HEAP8[k+Y|0]&255;c=0!=(HEAP32[(f+32|0)>>2]|0)?151:154;break;case 151:c=0!=(HEAP32[(HEAP32[(f+32|0)>>2]+28|0)>>2]|0)?152:154;break;case 152:c=HEAP32[(f+64|0)>>2]>>>0<HEAP32[(HEAP32[(f+32|0)>>2]+32|0)>>2]>>>0?153:154;break;case 153:var S=y&255,X=f+64|0,R=HEAP32[X>>2];HEAP32[X>>2]=R+1|0;HEAP8[HEAP32[(HEAP32[(f+32|0)>>2]+28|0)>>2]+R|0]=S;c=154;break;case 154:c=
155;break;case 155:if(0!=(y|0))c=156;else var V=0,c=157;break;case 156:V=s>>>0<l>>>0;c=157;break;case 157:c=V?150:158;break;case 158:c=0!=(HEAP32[(f+16|0)>>2]&512|0)?159:160;break;case 159:var aa=_crc32(HEAP32[(f+24|0)>>2],k,s);HEAP32[(f+24|0)>>2]=aa;c=160;break;case 160:l=l-s|0;k=k+s|0;c=0!=(y|0)?161:162;break;case 161:c=565;break;case 162:c=166;break;case 163:c=0!=(HEAP32[(f+32|0)>>2]|0)?164:165;break;case 164:HEAP32[(HEAP32[(f+32|0)>>2]+28|0)>>2]=0;c=165;break;case 165:c=166;break;case 166:HEAP32[(f+
64|0)>>2]=0;HEAP32[(f|0)>>2]=7;c=167;break;case 167:c=0!=(HEAP32[(f+16|0)>>2]&4096|0)?168:184;break;case 168:c=0==(l|0)?169:170;break;case 169:c=565;break;case 170:s=0;c=171;break;case 171:var fa=s;s=fa+1|0;y=HEAP8[k+fa|0]&255;c=0!=(HEAP32[(f+32|0)>>2]|0)?172:175;break;case 172:c=0!=(HEAP32[(HEAP32[(f+32|0)>>2]+36|0)>>2]|0)?173:175;break;case 173:c=HEAP32[(f+64|0)>>2]>>>0<HEAP32[(HEAP32[(f+32|0)>>2]+40|0)>>2]>>>0?174:175;break;case 174:var Z=y&255,ka=f+64|0,M=HEAP32[ka>>2];HEAP32[ka>>2]=M+1|0;HEAP8[HEAP32[(HEAP32[(f+
32|0)>>2]+36|0)>>2]+M|0]=Z;c=175;break;case 175:c=176;break;case 176:if(0!=(y|0))c=177;else var ga=0,c=178;break;case 177:ga=s>>>0<l>>>0;c=178;break;case 178:c=ga?171:179;break;case 179:c=0!=(HEAP32[(f+16|0)>>2]&512|0)?180:181;break;case 180:var na=_crc32(HEAP32[(f+24|0)>>2],k,s);HEAP32[(f+24|0)>>2]=na;c=181;break;case 181:l=l-s|0;k=k+s|0;c=0!=(y|0)?182:183;break;case 182:c=565;break;case 183:c=187;break;case 184:c=0!=(HEAP32[(f+32|0)>>2]|0)?185:186;break;case 185:HEAP32[(HEAP32[(f+32|0)>>2]+36|0)>>
2]=0;c=186;break;case 186:c=187;break;case 187:HEAP32[(f|0)>>2]=8;c=188;break;case 188:c=0!=(HEAP32[(f+16|0)>>2]&512|0)?189:203;break;case 189:c=190;break;case 190:c=191;break;case 191:c=16>q>>>0?192:197;break;case 192:c=193;break;case 193:c=0==(l|0)?194:195;break;case 194:c=565;break;case 195:l=l-1|0;var ba=k;k=ba+1|0;p=p+((HEAP8[ba]&255)<<q)|0;q=q+8|0;c=196;break;case 196:c=191;break;case 197:c=198;break;case 198:c=(p|0)!=(HEAP32[(f+24|0)>>2]&65535|0)?199:200;break;case 199:HEAP32[(e+24|0)>>2]=
27512;HEAP32[(f|0)>>2]=29;c=564;break;case 200:c=201;break;case 201:q=p=0;c=202;break;case 202:c=203;break;case 203:c=0!=(HEAP32[(f+32|0)>>2]|0)?204:205;break;case 204:HEAP32[(HEAP32[(f+32|0)>>2]+44|0)>>2]=HEAP32[(f+16|0)>>2]>>9&1;HEAP32[(HEAP32[(f+32|0)>>2]+48|0)>>2]=1;c=205;break;case 205:var ca=_crc32(0,0,0);HEAP32[(f+24|0)>>2]=ca;HEAP32[(e+48|0)>>2]=ca;HEAP32[(f|0)>>2]=11;c=564;break;case 206:c=207;break;case 207:c=208;break;case 208:c=32>q>>>0?209:214;break;case 209:c=210;break;case 210:c=0==
(l|0)?211:212;break;case 211:c=565;break;case 212:l=l-1|0;var oa=k;k=oa+1|0;p=p+((HEAP8[oa]&255)<<q)|0;q=q+8|0;c=213;break;case 213:c=208;break;case 214:c=215;break;case 215:var va=(((p>>>24&255)+(p>>>8&65280)|0)+((p&65280)<<8)|0)+((p&255)<<24)|0;HEAP32[(f+24|0)>>2]=va;HEAP32[(e+48|0)>>2]=va;c=216;break;case 216:q=p=0;c=217;break;case 217:HEAP32[(f|0)>>2]=10;c=218;break;case 218:c=0==(HEAP32[(f+12|0)>>2]|0)?219:222;break;case 219:c=220;break;case 220:HEAP32[(e+12|0)>>2]=h;HEAP32[(e+16|0)>>2]=n;HEAP32[(e|
0)>>2]=k;HEAP32[(e+4|0)>>2]=l;HEAP32[(f+56|0)>>2]=p;HEAP32[(f+60|0)>>2]=q;c=221;break;case 221:b=2;c=589;break;case 222:var pa=_adler32(0,0,0);HEAP32[(f+24|0)>>2]=pa;HEAP32[(e+48|0)>>2]=pa;HEAP32[(f|0)>>2]=11;c=223;break;case 223:c=5==(g|0)?225:224;break;case 224:c=6==(g|0)?225:226;break;case 225:c=565;break;case 226:c=227;break;case 227:c=0!=(HEAP32[(f+4|0)>>2]|0)?228:231;break;case 228:c=229;break;case 229:p>>>=(q&7)>>>0;q=q-(q&7)|0;c=230;break;case 230:HEAP32[(f|0)>>2]=26;c=564;break;case 231:c=
232;break;case 232:c=233;break;case 233:c=3>q>>>0?234:239;break;case 234:c=235;break;case 235:c=0==(l|0)?236:237;break;case 236:c=565;break;case 237:l=l-1|0;var la=k;k=la+1|0;p=p+((HEAP8[la]&255)<<q)|0;q=q+8|0;c=238;break;case 238:c=233;break;case 239:c=240;break;case 240:HEAP32[(f+4|0)>>2]=p&1;c=241;break;case 241:p>>>=1;q=q-1|0;c=242;break;case 242:var wa=p&3,c=0==(wa|0)?243:1==(wa|0)?244:2==(wa|0)?249:3==(wa|0)?250:251;break;case 243:HEAP32[(f|0)>>2]=13;c=251;break;case 244:_fixedtables(f);HEAP32[(f|
0)>>2]=19;c=6==(g|0)?245:248;break;case 245:c=246;break;case 246:p>>>=2;q=q-2|0;c=247;break;case 247:c=565;break;case 248:c=251;break;case 249:HEAP32[(f|0)>>2]=16;c=251;break;case 250:HEAP32[(e+24|0)>>2]=26328;HEAP32[(f|0)>>2]=29;c=251;break;case 251:c=252;break;case 252:p>>>=2;q=q-2|0;c=253;break;case 253:c=564;break;case 254:c=255;break;case 255:p>>>=(q&7)>>>0;q=q-(q&7)|0;c=256;break;case 256:c=257;break;case 257:c=258;break;case 258:c=32>q>>>0?259:264;break;case 259:c=260;break;case 260:c=0==(l|
0)?261:262;break;case 261:c=565;break;case 262:l=l-1|0;var qa=k;k=qa+1|0;p=p+((HEAP8[qa]&255)<<q)|0;q=q+8|0;c=263;break;case 263:c=258;break;case 264:c=265;break;case 265:c=(p&65535|0)!=(p>>>16^65535|0)?266:267;break;case 266:HEAP32[(e+24|0)>>2]=25384;HEAP32[(f|0)>>2]=29;c=564;break;case 267:HEAP32[(f+64|0)>>2]=p&65535;c=268;break;case 268:q=p=0;c=269;break;case 269:HEAP32[(f|0)>>2]=14;c=6==(g|0)?270:271;break;case 270:c=565;break;case 271:c=272;break;case 272:HEAP32[(f|0)>>2]=15;c=273;break;case 273:s=
HEAP32[(f+64|0)>>2];c=0!=(s|0)?274:281;break;case 274:c=s>>>0>l>>>0?275:276;break;case 275:s=l;c=276;break;case 276:c=s>>>0>n>>>0?277:278;break;case 277:s=n;c=278;break;case 278:c=0==(s|0)?279:280;break;case 279:c=565;break;case 280:var ea=h,xa=k,ja=s;assert(0===ja%1);_memcpy(ea,xa,ja)|0;l=l-s|0;k=k+s|0;n=n-s|0;h=h+s|0;var da=f+64|0;HEAP32[da>>2]=HEAP32[da>>2]-s|0;c=564;break;case 281:HEAP32[(f|0)>>2]=11;c=564;break;case 282:c=283;break;case 283:c=284;break;case 284:c=14>q>>>0?285:290;break;case 285:c=
286;break;case 286:c=0==(l|0)?287:288;break;case 287:c=565;break;case 288:l=l-1|0;var Ga=k;k=Ga+1|0;p=p+((HEAP8[Ga]&255)<<q)|0;q=q+8|0;c=289;break;case 289:c=284;break;case 290:c=291;break;case 291:HEAP32[(f+96|0)>>2]=(p&31)+257|0;c=292;break;case 292:p>>>=5;q=q-5|0;c=293;break;case 293:HEAP32[(f+100|0)>>2]=(p&31)+1|0;c=294;break;case 294:p>>>=5;q=q-5|0;c=295;break;case 295:HEAP32[(f+92|0)>>2]=(p&15)+4|0;c=296;break;case 296:p>>>=4;q=q-4|0;c=297;break;case 297:c=286<HEAP32[(f+96|0)>>2]>>>0?299:298;
break;case 298:c=30<HEAP32[(f+100|0)>>2]>>>0?299:300;break;case 299:HEAP32[(e+24|0)>>2]=24048;HEAP32[(f|0)>>2]=29;c=564;break;case 300:HEAP32[(f+104|0)>>2]=0;HEAP32[(f|0)>>2]=17;c=301;break;case 301:c=302;break;case 302:c=HEAP32[(f+104|0)>>2]>>>0<HEAP32[(f+92|0)>>2]>>>0?303:315;break;case 303:c=304;break;case 304:c=305;break;case 305:c=3>q>>>0?306:311;break;case 306:c=307;break;case 307:c=0==(l|0)?308:309;break;case 308:c=565;break;case 309:l=l-1|0;var $=k;k=$+1|0;p=p+((HEAP8[$]&255)<<q)|0;q=q+8|
0;c=310;break;case 310:c=305;break;case 311:c=312;break;case 312:var ma=p&7,ra=f+104|0,Aa=HEAP32[ra>>2];HEAP32[ra>>2]=Aa+1|0;HEAP16[((f+112|0)+((HEAP16[(9256+(Aa<<1)|0)>>1]&65535)<<1)|0)>>1]=ma;c=313;break;case 313:p>>>=3;q=q-3|0;c=314;break;case 314:c=302;break;case 315:c=316;break;case 316:c=19>HEAP32[(f+104|0)>>2]>>>0?317:318;break;case 317:var Xa=f+104|0,Da=HEAP32[Xa>>2];HEAP32[Xa>>2]=Da+1|0;HEAP16[((f+112|0)+((HEAP16[(9256+(Da<<1)|0)>>1]&65535)<<1)|0)>>1]=0;c=316;break;case 318:HEAP32[(f+108|
0)>>2]=f+1328|0;HEAP32[(f+76|0)>>2]=HEAP32[(f+108|0)>>2];HEAP32[(f+84|0)>>2]=7;A=_inflate_table(0,f+112|0,19,f+108|0,f+84|0,f+752|0);c=0!=(A|0)?319:320;break;case 319:HEAP32[(e+24|0)>>2]=23336;HEAP32[(f|0)>>2]=29;c=564;break;case 320:HEAP32[(f+104|0)>>2]=0;HEAP32[(f|0)>>2]=18;c=321;break;case 321:c=322;break;case 322:c=HEAP32[(f+104|0)>>2]>>>0<(HEAP32[(f+96|0)>>2]+HEAP32[(f+100|0)>>2]|0)>>>0?323:389;break;case 323:c=324;break;case 324:var Ua=u,sa=HEAP32[(f+76|0)>>2]+((p&((1<<HEAP32[(f+84|0)>>2])-
1|0))<<2)|0;assert(!0);HEAP16[Ua>>1]=HEAP16[sa>>1];HEAP16[Ua+2>>1]=HEAP16[sa+2>>1];c=(HEAP8[u+1|0]&255)>>>0<=q>>>0?325:326;break;case 325:c=331;break;case 326:c=327;break;case 327:c=0==(l|0)?328:329;break;case 328:c=565;break;case 329:l=l-1|0;var ha=k;k=ha+1|0;p=p+((HEAP8[ha]&255)<<q)|0;q=q+8|0;c=330;break;case 330:c=324;break;case 331:c=16>(HEAP16[(u+2|0)>>1]&65535|0)?332:335;break;case 332:c=333;break;case 333:p>>>=(HEAP8[u+1|0]&255)>>>0;q=q-(HEAP8[u+1|0]&255)|0;c=334;break;case 334:var U=HEAP16[(u+
2|0)>>1],gb=f+104|0,Ka=HEAP32[gb>>2];HEAP32[gb>>2]=Ka+1|0;HEAP16[((f+112|0)+(Ka<<1)|0)>>1]=U;c=388;break;case 335:c=16==(HEAP16[(u+2|0)>>1]&65535|0)?336:352;break;case 336:c=337;break;case 337:c=338;break;case 338:c=q>>>0<((HEAP8[u+1|0]&255)+2|0)>>>0?339:344;break;case 339:c=340;break;case 340:c=0==(l|0)?341:342;break;case 341:c=565;break;case 342:l=l-1|0;var Ia=k;k=Ia+1|0;p=p+((HEAP8[Ia]&255)<<q)|0;q=q+8|0;c=343;break;case 343:c=338;break;case 344:c=345;break;case 345:c=346;break;case 346:p>>>=(HEAP8[u+
1|0]&255)>>>0;q=q-(HEAP8[u+1|0]&255)|0;c=347;break;case 347:c=0==(HEAP32[(f+104|0)>>2]|0)?348:349;break;case 348:HEAP32[(e+24|0)>>2]=42E3;HEAP32[(f|0)>>2]=29;c=389;break;case 349:y=HEAP16[((f+112|0)+((HEAP32[(f+104|0)>>2]-1|0)<<1)|0)>>1]&65535;s=(p&3)+3|0;c=350;break;case 350:p>>>=2;q=q-2|0;c=351;break;case 351:c=382;break;case 352:c=17==(HEAP16[(u+2|0)>>1]&65535|0)?353:367;break;case 353:c=354;break;case 354:c=355;break;case 355:c=q>>>0<((HEAP8[u+1|0]&255)+3|0)>>>0?356:361;break;case 356:c=357;break;
case 357:c=0==(l|0)?358:359;break;case 358:c=565;break;case 359:l=l-1|0;var ia=k;k=ia+1|0;p=p+((HEAP8[ia]&255)<<q)|0;q=q+8|0;c=360;break;case 360:c=355;break;case 361:c=362;break;case 362:c=363;break;case 363:p>>>=(HEAP8[u+1|0]&255)>>>0;q=q-(HEAP8[u+1|0]&255)|0;c=364;break;case 364:y=0;s=(p&7)+3|0;c=365;break;case 365:p>>>=3;q=q-3|0;c=366;break;case 366:c=381;break;case 367:c=368;break;case 368:c=369;break;case 369:c=q>>>0<((HEAP8[u+1|0]&255)+7|0)>>>0?370:375;break;case 370:c=371;break;case 371:c=
0==(l|0)?372:373;break;case 372:c=565;break;case 373:l=l-1|0;var Ba=k;k=Ba+1|0;p=p+((HEAP8[Ba]&255)<<q)|0;q=q+8|0;c=374;break;case 374:c=369;break;case 375:c=376;break;case 376:c=377;break;case 377:p>>>=(HEAP8[u+1|0]&255)>>>0;q=q-(HEAP8[u+1|0]&255)|0;c=378;break;case 378:y=0;s=(p&127)+11|0;c=379;break;case 379:p>>>=7;q=q-7|0;c=380;break;case 380:c=381;break;case 381:c=382;break;case 382:c=(HEAP32[(f+104|0)>>2]+s|0)>>>0>(HEAP32[(f+96|0)>>2]+HEAP32[(f+100|0)>>2]|0)>>>0?383:384;break;case 383:HEAP32[(e+
24|0)>>2]=42E3;HEAP32[(f|0)>>2]=29;c=389;break;case 384:c=385;break;case 385:var Ra=s;s=Ra-1|0;c=0!=(Ra|0)?386:387;break;case 386:var Sa=y&65535,ib=f+104|0,ua=HEAP32[ib>>2];HEAP32[ib>>2]=ua+1|0;HEAP16[((f+112|0)+(ua<<1)|0)>>1]=Sa;c=385;break;case 387:c=388;break;case 388:c=322;break;case 389:c=29==(HEAP32[(f|0)>>2]|0)?390:391;break;case 390:c=564;break;case 391:c=0==(HEAP16[((f+112|0)+512|0)>>1]&65535|0)?392:393;break;case 392:HEAP32[(e+24|0)>>2]=41376;HEAP32[(f|0)>>2]=29;c=564;break;case 393:HEAP32[(f+
108|0)>>2]=f+1328|0;HEAP32[(f+76|0)>>2]=HEAP32[(f+108|0)>>2];HEAP32[(f+84|0)>>2]=9;A=_inflate_table(1,f+112|0,HEAP32[(f+96|0)>>2],f+108|0,f+84|0,f+752|0);c=0!=(A|0)?394:395;break;case 394:HEAP32[(e+24|0)>>2]=40720;HEAP32[(f|0)>>2]=29;c=564;break;case 395:HEAP32[(f+80|0)>>2]=HEAP32[(f+108|0)>>2];HEAP32[(f+88|0)>>2]=6;A=_inflate_table(2,(f+112|0)+(HEAP32[(f+96|0)>>2]<<1)|0,HEAP32[(f+100|0)>>2],f+108|0,f+88|0,f+752|0);c=0!=(A|0)?396:397;break;case 396:HEAP32[(e+24|0)>>2]=40040;HEAP32[(f|0)>>2]=29;c=
564;break;case 397:HEAP32[(f|0)>>2]=19;c=6==(g|0)?398:399;break;case 398:c=565;break;case 399:c=400;break;case 400:HEAP32[(f|0)>>2]=20;c=401;break;case 401:c=6<=l>>>0?402:410;break;case 402:c=258<=n>>>0?403:410;break;case 403:c=404;break;case 404:HEAP32[(e+12|0)>>2]=h;HEAP32[(e+16|0)>>2]=n;HEAP32[(e|0)>>2]=k;HEAP32[(e+4|0)>>2]=l;HEAP32[(f+56|0)>>2]=p;HEAP32[(f+60|0)>>2]=q;c=405;break;case 405:_inflate_fast(e,r);c=406;break;case 406:h=HEAP32[(e+12|0)>>2];n=HEAP32[(e+16|0)>>2];k=HEAP32[(e|0)>>2];l=
HEAP32[(e+4|0)>>2];p=HEAP32[(f+56|0)>>2];q=HEAP32[(f+60|0)>>2];c=407;break;case 407:c=11==(HEAP32[(f|0)>>2]|0)?408:409;break;case 408:HEAP32[(f+7108|0)>>2]=-1;c=409;break;case 409:c=564;break;case 410:HEAP32[(f+7108|0)>>2]=0;c=411;break;case 411:var Va=u,eb=HEAP32[(f+76|0)>>2]+((p&((1<<HEAP32[(f+84|0)>>2])-1|0))<<2)|0;assert(!0);HEAP16[Va>>1]=HEAP16[eb>>1];HEAP16[Va+2>>1]=HEAP16[eb+2>>1];c=(HEAP8[u+1|0]&255)>>>0<=q>>>0?412:413;break;case 412:c=418;break;case 413:c=414;break;case 414:c=0==(l|0)?415:
416;break;case 415:c=565;break;case 416:l=l-1|0;var Ea=k;k=Ea+1|0;p=p+((HEAP8[Ea]&255)<<q)|0;q=q+8|0;c=417;break;case 417:c=411;break;case 418:c=0!=(HEAP8[u|0]&255|0)?419:431;break;case 419:c=0==(HEAP8[u|0]&240|0)?420:431;break;case 420:var Ya=w,La=u;assert(!0);HEAP16[Ya>>1]=HEAP16[La>>1];HEAP16[Ya+2>>1]=HEAP16[La+2>>1];c=421;break;case 421:var Ma=u,Fa=HEAP32[(f+76|0)>>2]+(((HEAP16[(w+2|0)>>1]&65535)+((p&((1<<((HEAP8[w+1|0]&255)+(HEAP8[w|0]&255)|0))-1|0))>>>((HEAP8[w+1|0]&255)>>>0))|0)<<2)|0;assert(!0);
HEAP16[Ma>>1]=HEAP16[Fa>>1];HEAP16[Ma+2>>1]=HEAP16[Fa+2>>1];c=((HEAP8[w+1|0]&255)+(HEAP8[u+1|0]&255)|0)>>>0<=q>>>0?422:423;break;case 422:c=428;break;case 423:c=424;break;case 424:c=0==(l|0)?425:426;break;case 425:c=565;break;case 426:l=l-1|0;var Na=k;k=Na+1|0;p=p+((HEAP8[Na]&255)<<q)|0;q=q+8|0;c=427;break;case 427:c=421;break;case 428:c=429;break;case 429:p>>>=(HEAP8[w+1|0]&255)>>>0;q=q-(HEAP8[w+1|0]&255)|0;c=430;break;case 430:var Oa=f+7108|0;HEAP32[Oa>>2]=HEAP32[Oa>>2]+(HEAP8[w+1|0]&255)|0;c=431;
break;case 431:c=432;break;case 432:p>>>=(HEAP8[u+1|0]&255)>>>0;q=q-(HEAP8[u+1|0]&255)|0;c=433;break;case 433:var jb=f+7108|0;HEAP32[jb>>2]=HEAP32[jb>>2]+(HEAP8[u+1|0]&255)|0;HEAP32[(f+64|0)>>2]=HEAP16[(u+2|0)>>1]&65535;c=0==(HEAP8[u|0]&255|0)?434:435;break;case 434:HEAP32[(f|0)>>2]=25;c=564;break;case 435:c=0!=(HEAP8[u|0]&32|0)?436:437;break;case 436:HEAP32[(f+7108|0)>>2]=-1;HEAP32[(f|0)>>2]=11;c=564;break;case 437:c=0!=(HEAP8[u|0]&64|0)?438:439;break;case 438:HEAP32[(e+24|0)>>2]=39456;HEAP32[(f|
0)>>2]=29;c=564;break;case 439:HEAP32[(f+72|0)>>2]=HEAP8[u|0]&15;HEAP32[(f|0)>>2]=21;c=440;break;case 440:c=0!=(HEAP32[(f+72|0)>>2]|0)?441:453;break;case 441:c=442;break;case 442:c=443;break;case 443:c=q>>>0<HEAP32[(f+72|0)>>2]>>>0?444:449;break;case 444:c=445;break;case 445:c=0==(l|0)?446:447;break;case 446:c=565;break;case 447:l=l-1|0;var Za=k;k=Za+1|0;p=p+((HEAP8[Za]&255)<<q)|0;q=q+8|0;c=448;break;case 448:c=443;break;case 449:c=450;break;case 450:var Ca=f+64|0;HEAP32[Ca>>2]=HEAP32[Ca>>2]+(p&((1<<
HEAP32[(f+72|0)>>2])-1|0))|0;c=451;break;case 451:p>>>=HEAP32[(f+72|0)>>2]>>>0;q=q-HEAP32[(f+72|0)>>2]|0;c=452;break;case 452:var $a=f+7108|0;HEAP32[$a>>2]=HEAP32[$a>>2]+HEAP32[(f+72|0)>>2]|0;c=453;break;case 453:HEAP32[(f+7112|0)>>2]=HEAP32[(f+64|0)>>2];HEAP32[(f|0)>>2]=22;c=454;break;case 454:c=455;break;case 455:var ab=u,Ha=HEAP32[(f+80|0)>>2]+((p&((1<<HEAP32[(f+88|0)>>2])-1|0))<<2)|0;assert(!0);HEAP16[ab>>1]=HEAP16[Ha>>1];HEAP16[ab+2>>1]=HEAP16[Ha+2>>1];c=(HEAP8[u+1|0]&255)>>>0<=q>>>0?456:457;
break;case 456:c=462;break;case 457:c=458;break;case 458:c=0==(l|0)?459:460;break;case 459:c=565;break;case 460:l=l-1|0;var Wa=k;k=Wa+1|0;p=p+((HEAP8[Wa]&255)<<q)|0;q=q+8|0;c=461;break;case 461:c=455;break;case 462:c=0==(HEAP8[u|0]&240|0)?463:474;break;case 463:var bb=w,Pa=u;assert(!0);HEAP16[bb>>1]=HEAP16[Pa>>1];HEAP16[bb+2>>1]=HEAP16[Pa+2>>1];c=464;break;case 464:var Ja=u,cb=HEAP32[(f+80|0)>>2]+(((HEAP16[(w+2|0)>>1]&65535)+((p&((1<<((HEAP8[w+1|0]&255)+(HEAP8[w|0]&255)|0))-1|0))>>>((HEAP8[w+1|0]&
255)>>>0))|0)<<2)|0;assert(!0);HEAP16[Ja>>1]=HEAP16[cb>>1];HEAP16[Ja+2>>1]=HEAP16[cb+2>>1];c=((HEAP8[w+1|0]&255)+(HEAP8[u+1|0]&255)|0)>>>0<=q>>>0?465:466;break;case 465:c=471;break;case 466:c=467;break;case 467:c=0==(l|0)?468:469;break;case 468:c=565;break;case 469:l=l-1|0;var Qa=k;k=Qa+1|0;p=p+((HEAP8[Qa]&255)<<q)|0;q=q+8|0;c=470;break;case 470:c=464;break;case 471:c=472;break;case 472:p>>>=(HEAP8[w+1|0]&255)>>>0;q=q-(HEAP8[w+1|0]&255)|0;c=473;break;case 473:var fb=f+7108|0;HEAP32[fb>>2]=HEAP32[fb>>
2]+(HEAP8[w+1|0]&255)|0;c=474;break;case 474:c=475;break;case 475:p>>>=(HEAP8[u+1|0]&255)>>>0;q=q-(HEAP8[u+1|0]&255)|0;c=476;break;case 476:var hb=f+7108|0;HEAP32[hb>>2]=HEAP32[hb>>2]+(HEAP8[u+1|0]&255)|0;c=0!=(HEAP8[u|0]&64|0)?477:478;break;case 477:HEAP32[(e+24|0)>>2]=38536;HEAP32[(f|0)>>2]=29;c=564;break;case 478:HEAP32[(f+68|0)>>2]=HEAP16[(u+2|0)>>1]&65535;HEAP32[(f+72|0)>>2]=HEAP8[u|0]&15;HEAP32[(f|0)>>2]=23;c=479;break;case 479:c=0!=(HEAP32[(f+72|0)>>2]|0)?480:492;break;case 480:c=481;break;
case 481:c=482;break;case 482:c=q>>>0<HEAP32[(f+72|0)>>2]>>>0?483:488;break;case 483:c=484;break;case 484:c=0==(l|0)?485:486;break;case 485:c=565;break;case 486:l=l-1|0;var ya=k;k=ya+1|0;p=p+((HEAP8[ya]&255)<<q)|0;q=q+8|0;c=487;break;case 487:c=482;break;case 488:c=489;break;case 489:var db=f+68|0;HEAP32[db>>2]=HEAP32[db>>2]+(p&((1<<HEAP32[(f+72|0)>>2])-1|0))|0;c=490;break;case 490:p>>>=HEAP32[(f+72|0)>>2]>>>0;q=q-HEAP32[(f+72|0)>>2]|0;c=491;break;case 491:var Ta=f+7108|0;HEAP32[Ta>>2]=HEAP32[Ta>>
2]+HEAP32[(f+72|0)>>2]|0;c=492;break;case 492:HEAP32[(f|0)>>2]=24;c=493;break;case 493:c=0==(n|0)?494:495;break;case 494:c=565;break;case 495:s=r-n|0;c=HEAP32[(f+68|0)>>2]>>>0>s>>>0?496:506;break;case 496:s=HEAP32[(f+68|0)>>2]-s|0;c=s>>>0>HEAP32[(f+44|0)>>2]>>>0?497:500;break;case 497:c=0!=(HEAP32[(f+7104|0)>>2]|0)?498:499;break;case 498:HEAP32[(e+24|0)>>2]=37704;HEAP32[(f|0)>>2]=29;c=564;break;case 499:c=500;break;case 500:c=s>>>0>HEAP32[(f+48|0)>>2]>>>0?501:502;break;case 501:s=s-HEAP32[(f+48|0)>>
2]|0;v=HEAP32[(f+52|0)>>2]+(HEAP32[(f+40|0)>>2]-s|0)|0;c=503;break;case 502:v=HEAP32[(f+52|0)>>2]+(HEAP32[(f+48|0)>>2]-s|0)|0;c=503;break;case 503:c=s>>>0>HEAP32[(f+64|0)>>2]>>>0?504:505;break;case 504:s=HEAP32[(f+64|0)>>2];c=505;break;case 505:c=507;break;case 506:v=h+(-HEAP32[(f+68|0)>>2]|0)|0;s=HEAP32[(f+64|0)>>2];c=507;break;case 507:c=s>>>0>n>>>0?508:509;break;case 508:s=n;c=509;break;case 509:n=n-s|0;var kb=f+64|0;HEAP32[kb>>2]=HEAP32[kb>>2]-s|0;c=510;break;case 510:var lb=v;v=lb+1|0;var mb=
HEAP8[lb],ta=h;h=ta+1|0;HEAP8[ta]=mb;c=511;break;case 511:var nb=s-1|0;s=nb;c=0!=(nb|0)?510:512;break;case 512:c=0==(HEAP32[(f+64|0)>>2]|0)?513:514;break;case 513:HEAP32[(f|0)>>2]=20;c=514;break;case 514:c=564;break;case 515:c=0==(n|0)?516:517;break;case 516:c=565;break;case 517:var pb=HEAP32[(f+64|0)>>2]&255,rb=h;h=rb+1|0;HEAP8[rb]=pb;n=n-1|0;HEAP32[(f|0)>>2]=20;c=564;break;case 518:c=0!=(HEAP32[(f+8|0)>>2]|0)?519:541;break;case 519:c=520;break;case 520:c=521;break;case 521:c=32>q>>>0?522:527;break;
case 522:c=523;break;case 523:c=0==(l|0)?524:525;break;case 524:c=565;break;case 525:l=l-1|0;var qb=k;k=qb+1|0;p=p+((HEAP8[qb]&255)<<q)|0;q=q+8|0;c=526;break;case 526:c=521;break;case 527:c=528;break;case 528:r=r-n|0;var sb=e+20|0;HEAP32[sb>>2]=HEAP32[sb>>2]+r|0;var vb=f+28|0;HEAP32[vb>>2]=HEAP32[vb>>2]+r|0;c=0!=(r|0)?529:533;break;case 529:c=0!=(HEAP32[(f+16|0)>>2]|0)?530:531;break;case 530:var wb=_crc32(HEAP32[(f+24|0)>>2],h+(-r|0)|0,r),c=532;break;case 531:wb=_adler32(HEAP32[(f+24|0)>>2],h+(-r|
0)|0,r);c=532;break;case 532:HEAP32[(f+24|0)>>2]=wb;HEAP32[(e+48|0)>>2]=wb;c=533;break;case 533:r=n;c=0!=(HEAP32[(f+16|0)>>2]|0)?534:535;break;case 534:var xb=p,c=536;break;case 535:xb=(((p>>>24&255)+(p>>>8&65280)|0)+((p&65280)<<8)|0)+((p&255)<<24)|0;c=536;break;case 536:c=(xb|0)!=(HEAP32[(f+24|0)>>2]|0)?537:538;break;case 537:HEAP32[(e+24|0)>>2]=37064;HEAP32[(f|0)>>2]=29;c=564;break;case 538:c=539;break;case 539:q=p=0;c=540;break;case 540:c=541;break;case 541:HEAP32[(f|0)>>2]=27;c=542;break;case 542:c=
0!=(HEAP32[(f+8|0)>>2]|0)?543:558;break;case 543:c=0!=(HEAP32[(f+16|0)>>2]|0)?544:558;break;case 544:c=545;break;case 545:c=546;break;case 546:c=32>q>>>0?547:552;break;case 547:c=548;break;case 548:c=0==(l|0)?549:550;break;case 549:c=565;break;case 550:l=l-1|0;var Db=k;k=Db+1|0;p=p+((HEAP8[Db]&255)<<q)|0;q=q+8|0;c=551;break;case 551:c=546;break;case 552:c=553;break;case 553:c=(p|0)!=(HEAP32[(f+28|0)>>2]|0)?554:555;break;case 554:HEAP32[(e+24|0)>>2]=36256;HEAP32[(f|0)>>2]=29;c=564;break;case 555:c=
556;break;case 556:q=p=0;c=557;break;case 557:c=558;break;case 558:HEAP32[(f|0)>>2]=28;c=559;break;case 559:A=1;c=565;break;case 560:A=-3;c=565;break;case 561:b=-4;c=589;break;case 562:c=563;break;case 563:b=-2;c=589;break;case 564:c=12;break;case 565:c=566;break;case 566:HEAP32[(e+12|0)>>2]=h;HEAP32[(e+16|0)>>2]=n;HEAP32[(e|0)>>2]=k;HEAP32[(e+4|0)>>2]=l;HEAP32[(f+56|0)>>2]=p;HEAP32[(f+60|0)>>2]=q;c=567;break;case 567:c=0!=(HEAP32[(f+40|0)>>2]|0)?572:568;break;case 568:c=(r|0)!=(HEAP32[(e+16|0)>>
2]|0)?569:575;break;case 569:c=29>HEAP32[(f|0)>>2]>>>0?570:575;break;case 570:c=26>HEAP32[(f|0)>>2]>>>0?572:571;break;case 571:c=4!=(g|0)?572:575;break;case 572:c=0!=(_updatewindow(e,HEAP32[(e+12|0)>>2],r-HEAP32[(e+16|0)>>2]|0)|0)?573:574;break;case 573:HEAP32[(f|0)>>2]=30;b=-4;c=589;break;case 574:c=575;break;case 575:t=t-HEAP32[(e+4|0)>>2]|0;r=r-HEAP32[(e+16|0)>>2]|0;var tb=e+8|0;HEAP32[tb>>2]=HEAP32[tb>>2]+t|0;var Gb=e+20|0;HEAP32[Gb>>2]=HEAP32[Gb>>2]+r|0;var yb=f+28|0;HEAP32[yb>>2]=HEAP32[yb>>
2]+r|0;c=0!=(HEAP32[(f+8|0)>>2]|0)?576:581;break;case 576:c=0!=(r|0)?577:581;break;case 577:c=0!=(HEAP32[(f+16|0)>>2]|0)?578:579;break;case 578:var ub=_crc32(HEAP32[(f+24|0)>>2],HEAP32[(e+12|0)>>2]+(-r|0)|0,r),c=580;break;case 579:ub=_adler32(HEAP32[(f+24|0)>>2],HEAP32[(e+12|0)>>2]+(-r|0)|0,r);c=580;break;case 580:HEAP32[(f+24|0)>>2]=ub;HEAP32[(e+48|0)>>2]=ub;c=581;break;case 581:var Ab=(HEAP32[(f+60|0)>>2]+(0!=(HEAP32[(f+4|0)>>2]|0)?64:0)|0)+(11==(HEAP32[(f|0)>>2]|0)?128:0)|0;if(19==(HEAP32[(f|0)>>
2]|0))var Tb=1,c=583;else c=582;break;case 582:Tb=14==(HEAP32[(f|0)>>2]|0);c=583;break;case 583:HEAP32[(e+44|0)>>2]=Ab+(Tb?256:0)|0;c=0==(t|0)?584:585;break;case 584:c=0==(r|0)?586:585;break;case 585:c=4==(g|0)?586:588;break;case 586:c=0==(A|0)?587:588;break;case 587:A=-5;c=588;break;case 588:b=A;c=589;break;case 589:var Kb=b;STACKTOP=a;return Kb;default:assert(0,"bad label: "+c)}}
function _fixedtables(m){HEAP32[(m+76|0)>>2]=9304;HEAP32[(m+84|0)>>2]=9;HEAP32[(m+80|0)>>2]=11352;HEAP32[(m+88|0)>>2]=5}
function _syncsearch(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k;b=m;e=d;g=c;f=HEAP32[b>>2];k=0;a=2;break;case 2:if(k>>>0<g>>>0)a=3;else var h=0,a=4;break;case 3:h=4>f>>>0;a=4;break;case 4:a=h?5:12;break;case 5:a=(HEAP8[e+k|0]&255|0)==((2>f>>>0?0:255)|0)?6:7;break;case 6:f=f+1|0;a=11;break;case 7:a=0!=HEAP8[e+k|0]<<24>>24?8:9;break;case 8:f=0;a=10;break;case 9:f=4-f|0;a=10;break;case 10:a=11;break;case 11:k=k+1|0;a=2;break;case 12:return HEAP32[b>>2]=f,k;default:assert(0,"bad label: "+
a)}}
function _updatewindow(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k,h;e=m;g=d;f=c;k=HEAP32[(e+28|0)>>2];a=0==(HEAP32[(k+52|0)>>2]|0)?2:5;break;case 2:a=FUNCTION_TABLE[HEAP32[(e+32|0)>>2]](HEAP32[(e+40|0)>>2],1<<HEAP32[(k+36|0)>>2],1);HEAP32[(k+52|0)>>2]=a;a=0==(HEAP32[(k+52|0)>>2]|0)?3:4;break;case 3:b=1;a=20;break;case 4:a=5;break;case 5:a=0==(HEAP32[(k+40|0)>>2]|0)?6:7;break;case 6:HEAP32[(k+40|0)>>2]=1<<HEAP32[(k+36|0)>>2];HEAP32[(k+48|0)>>2]=0;HEAP32[(k+44|0)>>2]=0;a=7;break;case 7:a=f>>>
0>=HEAP32[(k+40|0)>>2]>>>0?8:9;break;case 8:var a=HEAP32[(k+52|0)>>2],l=g+(-HEAP32[(k+40|0)>>2]|0)|0,n=HEAP32[(k+40|0)>>2];assert(0===n%1);_memcpy(a,l,n)|0;HEAP32[(k+48|0)>>2]=0;HEAP32[(k+44|0)>>2]=HEAP32[(k+40|0)>>2];a=19;break;case 9:h=HEAP32[(k+40|0)>>2]-HEAP32[(k+48|0)>>2]|0;a=h>>>0>f>>>0?10:11;break;case 10:h=f;a=11;break;case 11:a=HEAP32[(k+52|0)>>2]+HEAP32[(k+48|0)>>2]|0;l=g+(-f|0)|0;n=h;assert(0===n%1);_memcpy(a,l,n)|0;f=f-h|0;a=0!=(f|0)?12:13;break;case 12:a=HEAP32[(k+52|0)>>2];l=g+(-f|0)|
0;n=f;assert(0===n%1);_memcpy(a,l,n)|0;HEAP32[(k+48|0)>>2]=f;HEAP32[(k+44|0)>>2]=HEAP32[(k+40|0)>>2];a=18;break;case 13:a=k+48|0;HEAP32[a>>2]=HEAP32[a>>2]+h|0;a=(HEAP32[(k+48|0)>>2]|0)==(HEAP32[(k+40|0)>>2]|0)?14:15;break;case 14:HEAP32[(k+48|0)>>2]=0;a=15;break;case 15:a=HEAP32[(k+44|0)>>2]>>>0<HEAP32[(k+40|0)>>2]>>>0?16:17;break;case 16:a=k+44|0;HEAP32[a>>2]=HEAP32[a>>2]+h|0;a=17;break;case 17:a=18;break;case 18:a=19;break;case 19:b=0;a=20;break;case 20:return b;default:assert(0,"bad label: "+a)}}
function _inflateEnd(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b;a=m;d=0==(a|0)?4:2;break;case 2:d=0==(HEAP32[(a+28|0)>>2]|0)?4:3;break;case 3:d=0==(HEAP32[(a+36|0)>>2]|0)?4:5;break;case 4:c=-2;d=8;break;case 5:b=HEAP32[(a+28|0)>>2];d=0!=(HEAP32[(b+52|0)>>2]|0)?6:7;break;case 6:FUNCTION_TABLE[HEAP32[(a+36|0)>>2]](HEAP32[(a+40|0)>>2],HEAP32[(b+52|0)>>2]);d=7;break;case 7:FUNCTION_TABLE[HEAP32[(a+36|0)>>2]](HEAP32[(a+40|0)>>2],HEAP32[(a+28|0)>>2]);c=HEAP32[(a+28|0)>>2]=0;d=8;break;case 8:return c;
default:assert(0,"bad label: "+d)}}
function _inflateSync(m){var d=0,c=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(d=1;;)switch(d){case 1:var a,b,e,g=c,f;b=m;d=0==(b|0)?3:2;break;case 2:d=0==(HEAP32[(b+28|0)>>2]|0)?3:4;break;case 3:a=-2;d=15;break;case 4:f=HEAP32[(b+28|0)>>2];d=0==(HEAP32[(b+4|0)>>2]|0)?5:7;break;case 5:d=8>HEAP32[(f+60|0)>>2]>>>0?6:7;break;case 6:a=-5;d=15;break;case 7:d=31!=(HEAP32[(f|0)>>2]|0)?8:12;break;case 8:HEAP32[(f|0)>>2]=31;e=f+56|0;HEAP32[e>>2]<<=HEAP32[(f+60|0)>>2]&7;e=f+60|0;
HEAP32[e>>2]=HEAP32[e>>2]-(HEAP32[(f+60|0)>>2]&7)|0;e=0;d=9;break;case 9:d=8<=HEAP32[(f+60|0)>>2]>>>0?10:11;break;case 10:var d=HEAP32[(f+56|0)>>2]&255,k=e;e=k+1|0;HEAP8[g+k|0]=d;d=f+56|0;HEAP32[d>>2]>>>=8;d=f+60|0;HEAP32[d>>2]=HEAP32[d>>2]-8|0;d=9;break;case 11:HEAP32[(f+104|0)>>2]=0;_syncsearch(f+104|0,g|0,e);d=12;break;case 12:e=_syncsearch(f+104|0,HEAP32[(b|0)>>2],HEAP32[(b+4|0)>>2]);d=b+4|0;HEAP32[d>>2]=HEAP32[d>>2]-e|0;d=b|0;HEAP32[d>>2]=HEAP32[d>>2]+e|0;d=b+8|0;HEAP32[d>>2]=HEAP32[d>>2]+e|
0;d=4!=(HEAP32[(f+104|0)>>2]|0)?13:14;break;case 13:a=-3;d=15;break;case 14:a=HEAP32[(b+8|0)>>2];d=HEAP32[(b+20|0)>>2];_inflateReset(b);HEAP32[(b+8|0)>>2]=a;HEAP32[(b+20|0)>>2]=d;HEAP32[(f|0)>>2]=11;a=0;d=15;break;case 15:return m=a,STACKTOP=c,m;default:assert(0,"bad label: "+d)}}function _tr_static_init(){}
function _init_block(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;c=m;a=0;d=2;break;case 2:d=286>(a|0)?3:5;break;case 3:HEAP16[((c+148|0)+(a<<2)|0)>>1]=0;d=4;break;case 4:a=a+1|0;d=2;break;case 5:a=0;d=6;break;case 6:d=30>(a|0)?7:9;break;case 7:HEAP16[((c+2440|0)+(a<<2)|0)>>1]=0;d=8;break;case 8:a=a+1|0;d=6;break;case 9:a=0;d=10;break;case 10:d=19>(a|0)?11:13;break;case 11:HEAP16[((c+2684|0)+(a<<2)|0)>>1]=0;d=12;break;case 12:a=a+1|0;d=10;break;case 13:HEAP16[((c+148|0)+1024|0)>>1]=1;HEAP32[(c+5804|
0)>>2]=0;HEAP32[(c+5800|0)>>2]=0;HEAP32[(c+5808|0)>>2]=0;HEAP32[(c+5792|0)>>2]=0;return;default:assert(0,"bad label: "+d)}}
function _inflate_table(m,d,c,a,b,e){var g=0,f=STACKTOP;STACKTOP=STACKTOP+72|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(g=1;;)switch(g){case 1:var k,h,l,n,p,q,t,r,s,v,u,w,y,A,z,x,B,C,D,F,I,G=f,H,K,J,E,L=f+8,Q=f+40;h=m;l=d;n=c;p=a;q=b;t=e;r=0;g=2;break;case 2:g=15>=r>>>0?3:5;break;case 3:HEAP16[(L+(r<<1)|0)>>1]=0;g=4;break;case 4:r=r+1|0;g=2;break;case 5:s=0;g=6;break;case 6:g=s>>>0<n>>>0?7:9;break;case 7:g=L+((HEAP16[(l+(s<<1)|0)>>1]&65535)<<1)|0;HEAP16[g>>1]=HEAP16[g>>1]+1&65535;g=8;break;case 8:s=
s+1|0;g=6;break;case 9:w=HEAP32[q>>2];u=15;g=10;break;case 10:g=1<=u>>>0?11:15;break;case 11:g=0!=(HEAP16[(L+(u<<1)|0)>>1]&65535|0)?12:13;break;case 12:g=15;break;case 13:g=14;break;case 14:u=u-1|0;g=10;break;case 15:g=w>>>0>u>>>0?16:17;break;case 16:w=u;g=17;break;case 17:g=0==(u|0)?18:19;break;case 18:HEAP8[G|0]=64;HEAP8[G+1|0]=1;HEAP16[(G+2|0)>>1]=0;k=p;g=HEAP32[k>>2];HEAP32[k>>2]=g+4|0;k=g;g=G;assert(!0);HEAP16[k>>1]=HEAP16[g>>1];HEAP16[k+2>>1]=HEAP16[g+2>>1];k=p;g=HEAP32[k>>2];HEAP32[k>>2]=g+
4|0;k=g;g=G;assert(!0);HEAP16[k>>1]=HEAP16[g>>1];HEAP16[k+2>>1]=HEAP16[g+2>>1];HEAP32[q>>2]=1;k=0;g=95;break;case 19:v=1;g=20;break;case 20:g=v>>>0<u>>>0?21:25;break;case 21:g=0!=(HEAP16[(L+(v<<1)|0)>>1]&65535|0)?22:23;break;case 22:g=25;break;case 23:g=24;break;case 24:v=v+1|0;g=20;break;case 25:g=w>>>0<v>>>0?26:27;break;case 26:w=v;g=27;break;case 27:r=z=1;g=28;break;case 28:g=15>=r>>>0?29:33;break;case 29:z<<=1;z=z-(HEAP16[(L+(r<<1)|0)>>1]&65535)|0;g=0>(z|0)?30:31;break;case 30:k=-1;g=95;break;
case 31:g=32;break;case 32:r=r+1|0;g=28;break;case 33:g=0<(z|0)?34:37;break;case 34:g=0==(h|0)?36:35;break;case 35:g=1!=(u|0)?36:37;break;case 36:k=-1;g=95;break;case 37:HEAP16[(Q+2|0)>>1]=0;r=1;g=38;break;case 38:g=15>r>>>0?39:41;break;case 39:HEAP16[(Q+((r+1|0)<<1)|0)>>1]=((HEAP16[(Q+(r<<1)|0)>>1]&65535)+(HEAP16[(L+(r<<1)|0)>>1]&65535)|0)&65535;g=40;break;case 40:r=r+1|0;g=38;break;case 41:s=0;g=42;break;case 42:g=s>>>0<n>>>0?43:47;break;case 43:g=0!=(HEAP16[(l+(s<<1)|0)>>1]&65535|0)?44:45;break;
case 44:var g=s&65535,N=Q+((HEAP16[(l+(s<<1)|0)>>1]&65535)<<1)|0,P=HEAP16[N>>1];HEAP16[N>>1]=P+1&65535;HEAP16[(t+((P&65535)<<1)|0)>>1]=g;g=45;break;case 45:g=46;break;case 46:s=s+1|0;g=42;break;case 47:g=h;g=0==(g|0)?48:1==(g|0)?49:50;break;case 48:J=K=t;E=19;g=51;break;case 49:K=9064;K=K-514|0;J=9E3;J=J-514|0;E=256;g=51;break;case 50:K=9192;J=9128;E=-1;g=51;break;case 51:s=B=0;r=v;H=HEAP32[p>>2];y=w;A=0;F=-1;x=1<<w;I=x-1|0;g=1==(h|0)?52:53;break;case 52:g=852<x>>>0?55:53;break;case 53:g=2==(h|0)?
54:56;break;case 54:g=592<x>>>0?55:56;break;case 55:k=1;g=95;break;case 56:g=57;break;case 57:HEAP8[G+1|0]=(r-A|0)&255;g=(HEAP16[(t+(s<<1)|0)>>1]&65535|0)<(E|0)?58:59;break;case 58:HEAP8[G|0]=0;HEAP16[(G+2|0)>>1]=HEAP16[(t+(s<<1)|0)>>1];g=63;break;case 59:g=(HEAP16[(t+(s<<1)|0)>>1]&65535|0)>(E|0)?60:61;break;case 60:HEAP8[G|0]=HEAP16[(J+((HEAP16[(t+(s<<1)|0)>>1]&65535)<<1)|0)>>1]&255;HEAP16[(G+2|0)>>1]=HEAP16[(K+((HEAP16[(t+(s<<1)|0)>>1]&65535)<<1)|0)>>1];g=62;break;case 61:HEAP8[G|0]=96;HEAP16[(G+
2|0)>>1]=0;g=62;break;case 62:g=63;break;case 63:C=1<<(r-A|0);v=D=1<<y;g=64;break;case 64:D=D-C|0;g=H+(((B>>>(A>>>0))+D|0)<<2)|0;N=G;assert(!0);HEAP16[g>>1]=HEAP16[N>>1];HEAP16[g+2>>1]=HEAP16[N+2>>1];g=65;break;case 65:g=0!=(D|0)?64:66;break;case 66:C=1<<(r-1|0);g=67;break;case 67:g=0!=(B&C|0)?68:69;break;case 68:C>>>=1;g=67;break;case 69:g=0!=(C|0)?70:71;break;case 70:B&=C-1|0;B=B+C|0;g=72;break;case 71:B=0;g=72;break;case 72:s=s+1|0;g=L+(r<<1)|0;N=HEAP16[g>>1]-1&65535;HEAP16[g>>1]=N;g=0==(N&65535|
0)?73:76;break;case 73:g=(r|0)==(u|0)?74:75;break;case 74:g=92;break;case 75:r=HEAP16[(l+((HEAP16[(t+(s<<1)|0)>>1]&65535)<<1)|0)>>1]&65535;g=76;break;case 76:g=r>>>0>w>>>0?77:91;break;case 77:g=(B&I|0)!=(F|0)?78:91;break;case 78:g=0==(A|0)?79:80;break;case 79:A=w;g=80;break;case 80:H=H+(v<<2)|0;y=r-A|0;z=1<<y;g=81;break;case 81:g=(y+A|0)>>>0<u>>>0?82:85;break;case 82:z=z-(HEAP16[(L+((y+A|0)<<1)|0)>>1]&65535)|0;g=0>=(z|0)?83:84;break;case 83:g=85;break;case 84:y=y+1|0;z<<=1;g=81;break;case 85:x=x+
(1<<y)|0;g=1==(h|0)?86:87;break;case 86:g=852<x>>>0?89:87;break;case 87:g=2==(h|0)?88:90;break;case 88:g=592<x>>>0?89:90;break;case 89:k=1;g=95;break;case 90:F=B&I;HEAP8[HEAP32[p>>2]+(F<<2)|0]=y&255;HEAP8[(HEAP32[p>>2]+(F<<2)|0)+1|0]=w&255;HEAP16[((HEAP32[p>>2]+(F<<2)|0)+2|0)>>1]=(H-HEAP32[p>>2]|0)/4&65535;g=91;break;case 91:g=57;break;case 92:g=0!=(B|0)?93:94;break;case 93:HEAP8[G|0]=64;HEAP8[G+1|0]=(r-A|0)&255;HEAP16[(G+2|0)>>1]=0;g=H+(B<<2)|0;N=G;assert(!0);HEAP16[g>>1]=HEAP16[N>>1];HEAP16[g+2>>
1]=HEAP16[N+2>>1];g=94;break;case 94:k=p;HEAP32[k>>2]=HEAP32[k>>2]+(x<<2)|0;HEAP32[q>>2]=w;k=0;g=95;break;case 95:return m=k,STACKTOP=f,m;default:assert(0,"bad label: "+g)}}function __tr_init(m){_tr_static_init();HEAP32[(m+2840|0)>>2]=m+148|0;HEAP32[((m+2840|0)+8|0)>>2]=8352;HEAP32[(m+2852|0)>>2]=m+2440|0;HEAP32[((m+2852|0)+8|0)>>2]=8496;HEAP32[(m+2864|0)>>2]=m+2684|0;HEAP32[((m+2864|0)+8|0)>>2]=8520;HEAP16[(m+5816|0)>>1]=0;HEAP32[(m+5820|0)>>2]=0;_init_block(m)}
function _bi_flush(m){for(var d=0,d=1;;)switch(d){case 1:var c;c=m;d=16==(HEAP32[(c+5820|0)>>2]|0)?2:3;break;case 2:var d=HEAP16[(c+5816|0)>>1]&255,a=c+20|0,b=HEAP32[a>>2];HEAP32[a>>2]=b+1|0;HEAP8[HEAP32[(c+8|0)>>2]+b|0]=d;d=(HEAP16[(c+5816|0)>>1]&65535)>>8&255;a=c+20|0;b=HEAP32[a>>2];HEAP32[a>>2]=b+1|0;HEAP8[HEAP32[(c+8|0)>>2]+b|0]=d;HEAP16[(c+5816|0)>>1]=0;HEAP32[(c+5820|0)>>2]=0;d=6;break;case 3:d=8<=(HEAP32[(c+5820|0)>>2]|0)?4:5;break;case 4:d=HEAP16[(c+5816|0)>>1]&255;a=c+20|0;b=HEAP32[a>>2];
HEAP32[a>>2]=b+1|0;HEAP8[HEAP32[(c+8|0)>>2]+b|0]=d;d=c+5816|0;HEAP16[d>>1]=(HEAP16[d>>1]&65535)>>8&65535;d=c+5820|0;HEAP32[d>>2]=HEAP32[d>>2]-8|0;d=5;break;case 5:d=6;break;case 6:return;default:assert(0,"bad label: "+d)}}
function __tr_stored_block(m,d,c,a){for(var b=0,b=1;;)switch(b){case 1:var e,g,f,k,h;e=m;g=d;f=c;k=a;h=3;b=(HEAP32[(e+5820|0)>>2]|0)>(16-h|0)?2:3;break;case 2:var b=k|0,l=e+5816|0;HEAP16[l>>1]=(HEAP16[l>>1]&65535|(b&65535)<<HEAP32[(e+5820|0)>>2])&65535;var l=HEAP16[(e+5816|0)>>1]&255,n=e+20|0,p=HEAP32[n>>2];HEAP32[n>>2]=p+1|0;HEAP8[HEAP32[(e+8|0)>>2]+p|0]=l;l=(HEAP16[(e+5816|0)>>1]&65535)>>8&255;n=e+20|0;p=HEAP32[n>>2];HEAP32[n>>2]=p+1|0;HEAP8[HEAP32[(e+8|0)>>2]+p|0]=l;HEAP16[(e+5816|0)>>1]=(b&65535)>>
(16-HEAP32[(e+5820|0)>>2]|0)&65535;b=e+5820|0;HEAP32[b>>2]=HEAP32[b>>2]+(h-16|0)|0;b=4;break;case 3:b=e+5816|0;HEAP16[b>>1]=(HEAP16[b>>1]&65535|((k|0)&65535)<<HEAP32[(e+5820|0)>>2])&65535;b=e+5820|0;HEAP32[b>>2]=HEAP32[b>>2]+h|0;b=4;break;case 4:_copy_block(e,g,f,1);return;default:assert(0,"bad label: "+b)}}
function _copy_block(m,d,c,a){for(var b=0,b=1;;)switch(b){case 1:var e,g,f;e=m;g=d;f=c;b=a;_bi_windup(e);b=0!=(b|0)?2:3;break;case 2:var b=f&255,k=e+20|0,h=HEAP32[k>>2];HEAP32[k>>2]=h+1|0;HEAP8[HEAP32[(e+8|0)>>2]+h|0]=b;b=(f&65535)>>8&255;k=e+20|0;h=HEAP32[k>>2];HEAP32[k>>2]=h+1|0;HEAP8[HEAP32[(e+8|0)>>2]+h|0]=b;b=(f^-1)&255;k=e+20|0;h=HEAP32[k>>2];HEAP32[k>>2]=h+1|0;HEAP8[HEAP32[(e+8|0)>>2]+h|0]=b;b=((f^-1)&65535)>>8&255;k=e+20|0;h=HEAP32[k>>2];HEAP32[k>>2]=h+1|0;HEAP8[HEAP32[(e+8|0)>>2]+h|0]=b;
b=3;break;case 3:b=4;break;case 4:b=f;f=b-1|0;b=0!=(b|0)?5:6;break;case 5:b=g;g=b+1|0;b=HEAP8[b];k=e+20|0;h=HEAP32[k>>2];HEAP32[k>>2]=h+1|0;HEAP8[HEAP32[(e+8|0)>>2]+h|0]=b;b=4;break;case 6:return;default:assert(0,"bad label: "+b)}}function __tr_flush_bits(m){_bi_flush(m)}
function __tr_align(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b;c=m;a=3;d=(HEAP32[(c+5820|0)>>2]|0)>(16-a|0)?2:3;break;case 2:d=c+5816|0;HEAP16[d>>1]=(HEAP16[d>>1]&65535|2<<HEAP32[(c+5820|0)>>2])&65535;var d=HEAP16[(c+5816|0)>>1]&255,e=c+20|0,g=HEAP32[e>>2];HEAP32[e>>2]=g+1|0;HEAP8[HEAP32[(c+8|0)>>2]+g|0]=d;d=(HEAP16[(c+5816|0)>>1]&65535)>>8&255;e=c+20|0;g=HEAP32[e>>2];HEAP32[e>>2]=g+1|0;HEAP8[HEAP32[(c+8|0)>>2]+g|0]=d;HEAP16[(c+5816|0)>>1]=2>>(16-HEAP32[(c+5820|0)>>2]|0)&65535;d=c+5820|0;HEAP32[d>>
2]=HEAP32[d>>2]+(a-16|0)|0;d=4;break;case 3:d=c+5816|0;HEAP16[d>>1]=(HEAP16[d>>1]&65535|2<<HEAP32[(c+5820|0)>>2])&65535;d=c+5820|0;HEAP32[d>>2]=HEAP32[d>>2]+a|0;d=4;break;case 4:b=HEAP16[4113]&65535;d=(HEAP32[(c+5820|0)>>2]|0)>(16-b|0)?5:6;break;case 5:d=HEAP16[4112]&65535;e=c+5816|0;HEAP16[e>>1]=(HEAP16[e>>1]&65535|(d&65535)<<HEAP32[(c+5820|0)>>2])&65535;var e=HEAP16[(c+5816|0)>>1]&255,g=c+20|0,f=HEAP32[g>>2];HEAP32[g>>2]=f+1|0;HEAP8[HEAP32[(c+8|0)>>2]+f|0]=e;e=(HEAP16[(c+5816|0)>>1]&65535)>>8&255;
g=c+20|0;f=HEAP32[g>>2];HEAP32[g>>2]=f+1|0;HEAP8[HEAP32[(c+8|0)>>2]+f|0]=e;HEAP16[(c+5816|0)>>1]=(d&65535)>>(16-HEAP32[(c+5820|0)>>2]|0)&65535;d=c+5820|0;HEAP32[d>>2]=HEAP32[d>>2]+(b-16|0)|0;d=7;break;case 6:d=c+5816|0;HEAP16[d>>1]=(HEAP16[d>>1]&65535|(HEAP16[4112]&65535)<<HEAP32[(c+5820|0)>>2])&65535;d=c+5820|0;HEAP32[d>>2]=HEAP32[d>>2]+b|0;d=7;break;case 7:_bi_flush(c);return;default:assert(0,"bad label: "+d)}}
function __tr_flush_block(m,d,c,a){for(var b=0,b=1;;)switch(b){case 1:var e,g,f,k,h,l,n,p,q;e=m;g=d;f=c;k=a;n=0;b=0<(HEAP32[(e+132|0)>>2]|0)?2:7;break;case 2:b=2==(HEAP32[(HEAP32[(e|0)>>2]+44|0)>>2]|0)?3:4;break;case 3:b=_detect_data_type(e);HEAP32[(HEAP32[(e|0)>>2]+44|0)>>2]=b;b=4;break;case 4:_build_tree(e,e+2840|0);_build_tree(e,e+2852|0);n=_build_bl_tree(e);h=((HEAP32[(e+5800|0)>>2]+3|0)+7|0)>>>3;l=((HEAP32[(e+5804|0)>>2]+3|0)+7|0)>>>3;b=l>>>0<=h>>>0?5:6;break;case 5:h=l;b=6;break;case 6:b=8;
break;case 7:l=h=f+5|0;b=8;break;case 8:b=(f+4|0)>>>0<=h>>>0?9:11;break;case 9:b=0!=(g|0)?10:11;break;case 10:__tr_stored_block(e,g,f,k);b=22;break;case 11:b=4==(HEAP32[(e+136|0)>>2]|0)?13:12;break;case 12:b=(l|0)==(h|0)?13:17;break;case 13:p=3;b=(HEAP32[(e+5820|0)>>2]|0)>(16-p|0)?14:15;break;case 14:var b=k+2|0,t=e+5816|0;HEAP16[t>>1]=(HEAP16[t>>1]&65535|(b&65535)<<HEAP32[(e+5820|0)>>2])&65535;var t=HEAP16[(e+5816|0)>>1]&255,r=e+20|0,s=HEAP32[r>>2];HEAP32[r>>2]=s+1|0;HEAP8[HEAP32[(e+8|0)>>2]+s|0]=
t;t=(HEAP16[(e+5816|0)>>1]&65535)>>8&255;r=e+20|0;s=HEAP32[r>>2];HEAP32[r>>2]=s+1|0;HEAP8[HEAP32[(e+8|0)>>2]+s|0]=t;HEAP16[(e+5816|0)>>1]=(b&65535)>>(16-HEAP32[(e+5820|0)>>2]|0)&65535;b=e+5820|0;HEAP32[b>>2]=HEAP32[b>>2]+(p-16|0)|0;b=16;break;case 15:b=e+5816|0;HEAP16[b>>1]=(HEAP16[b>>1]&65535|((k+2|0)&65535)<<HEAP32[(e+5820|0)>>2])&65535;b=e+5820|0;HEAP32[b>>2]=HEAP32[b>>2]+p|0;b=16;break;case 16:_compress_block(e,7200,8376);b=21;break;case 17:q=3;b=(HEAP32[(e+5820|0)>>2]|0)>(16-q|0)?18:19;break;
case 18:b=k+4|0;t=e+5816|0;HEAP16[t>>1]=(HEAP16[t>>1]&65535|(b&65535)<<HEAP32[(e+5820|0)>>2])&65535;t=HEAP16[(e+5816|0)>>1]&255;r=e+20|0;s=HEAP32[r>>2];HEAP32[r>>2]=s+1|0;HEAP8[HEAP32[(e+8|0)>>2]+s|0]=t;t=(HEAP16[(e+5816|0)>>1]&65535)>>8&255;r=e+20|0;s=HEAP32[r>>2];HEAP32[r>>2]=s+1|0;HEAP8[HEAP32[(e+8|0)>>2]+s|0]=t;HEAP16[(e+5816|0)>>1]=(b&65535)>>(16-HEAP32[(e+5820|0)>>2]|0)&65535;b=e+5820|0;HEAP32[b>>2]=HEAP32[b>>2]+(q-16|0)|0;b=20;break;case 19:b=e+5816|0;HEAP16[b>>1]=(HEAP16[b>>1]&65535|((k+4|
0)&65535)<<HEAP32[(e+5820|0)>>2])&65535;b=e+5820|0;HEAP32[b>>2]=HEAP32[b>>2]+q|0;b=20;break;case 20:_send_all_trees(e,HEAP32[((e+2840|0)+4|0)>>2]+1|0,HEAP32[((e+2852|0)+4|0)>>2]+1|0,n+1|0);_compress_block(e,e+148|0,e+2440|0);b=21;break;case 21:b=22;break;case 22:_init_block(e);b=0!=(k|0)?23:24;break;case 23:_bi_windup(e);b=24;break;case 24:return;default:assert(0,"bad label: "+b)}}
function _detect_data_type(m){for(var d=0,d=1;;)switch(d){case 1:var c,a,b,e;a=m;b=-201342849;e=0;d=2;break;case 2:d=31>=(e|0)?3:8;break;case 3:d=0!=(b&1|0)?4:6;break;case 4:d=0!=(HEAP16[((a+148|0)+(e<<2)|0)>>1]&65535|0)?5:6;break;case 5:c=0;d=19;break;case 6:d=7;break;case 7:e=e+1|0;b>>>=1;d=2;break;case 8:d=0!=(HEAP16[((a+148|0)+36|0)>>1]&65535|0)?11:9;break;case 9:d=0!=(HEAP16[((a+148|0)+40|0)>>1]&65535|0)?11:10;break;case 10:d=0!=(HEAP16[((a+148|0)+52|0)>>1]&65535|0)?11:12;break;case 11:c=1;d=
19;break;case 12:e=32;d=13;break;case 13:d=256>(e|0)?14:18;break;case 14:d=0!=(HEAP16[((a+148|0)+(e<<2)|0)>>1]&65535|0)?15:16;break;case 15:c=1;d=19;break;case 16:d=17;break;case 17:e=e+1|0;d=13;break;case 18:c=0;d=19;break;case 19:return c;default:assert(0,"bad label: "+d)}}
function _build_tree(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e,g,f,k,h,l,n;a=m;b=d;e=HEAP32[(b|0)>>2];g=HEAP32[(HEAP32[(b+8|0)>>2]|0)>>2];f=HEAP32[(HEAP32[(b+8|0)>>2]+12|0)>>2];l=-1;HEAP32[(a+5200|0)>>2]=0;HEAP32[(a+5204|0)>>2]=573;k=0;c=2;break;case 2:c=(k|0)<(f|0)?3:8;break;case 3:c=0!=(HEAP16[(e+(k<<2)|0)>>1]&65535|0)?4:5;break;case 4:l=c=k;var p=a+5200|0,q=HEAP32[p>>2]+1|0;HEAP32[p>>2]=q;HEAP32[((a+2908|0)+(q<<2)|0)>>2]=c;HEAP8[(a+5208|0)+k|0]=0;c=6;break;case 5:HEAP16[((e+(k<<2)|0)+2|
0)>>1]=0;c=6;break;case 6:c=7;break;case 7:k=k+1|0;c=2;break;case 8:c=9;break;case 9:c=2>(HEAP32[(a+5200|0)>>2]|0)?10:16;break;case 10:c=2>(l|0)?11:12;break;case 11:var t=l+1|0;l=t;c=13;break;case 12:t=0;c=13;break;case 13:n=a+5200|0;c=HEAP32[n>>2]+1|0;HEAP32[n>>2]=c;n=HEAP32[((a+2908|0)+(c<<2)|0)>>2]=t;HEAP16[(e+(n<<2)|0)>>1]=1;HEAP8[(a+5208|0)+n|0]=0;c=a+5800|0;HEAP32[c>>2]=HEAP32[c>>2]-1|0;c=0!=(g|0)?14:15;break;case 14:c=a+5804|0;HEAP32[c>>2]=HEAP32[c>>2]-(HEAP16[((g+(n<<2)|0)+2|0)>>1]&65535)|
0;c=15;break;case 15:c=9;break;case 16:HEAP32[(b+4|0)>>2]=l;k=(HEAP32[(a+5200|0)>>2]|0)/2&-1;c=17;break;case 17:c=1<=(k|0)?18:20;break;case 18:_pqdownheap(a,e,k);c=19;break;case 19:k=k-1|0;c=17;break;case 20:n=f;c=21;break;case 21:k=HEAP32[((a+2908|0)+4|0)>>2];h=a+5200|0;c=HEAP32[h>>2];HEAP32[h>>2]=c-1|0;HEAP32[((a+2908|0)+4|0)>>2]=HEAP32[((a+2908|0)+(c<<2)|0)>>2];_pqdownheap(a,e,1);h=HEAP32[((a+2908|0)+4|0)>>2];c=k;p=a+5204|0;q=HEAP32[p>>2]-1|0;HEAP32[p>>2]=q;HEAP32[((a+2908|0)+(q<<2)|0)>>2]=c;c=
h;p=a+5204|0;q=HEAP32[p>>2]-1|0;HEAP32[p>>2]=q;HEAP32[((a+2908|0)+(q<<2)|0)>>2]=c;HEAP16[(e+(n<<2)|0)>>1]=((HEAP16[(e+(k<<2)|0)>>1]&65535)+(HEAP16[(e+(h<<2)|0)>>1]&65535)|0)&65535;c=(HEAP8[(a+5208|0)+k|0]&255|0)>=(HEAP8[(a+5208|0)+h|0]&255|0)?22:23;break;case 22:var r=HEAP8[(a+5208|0)+k|0]&255,c=24;break;case 23:r=HEAP8[(a+5208|0)+h|0]&255;c=24;break;case 24:HEAP8[(a+5208|0)+n|0]=(r+1|0)&255;c=n&65535;HEAP16[((e+(h<<2)|0)+2|0)>>1]=c;HEAP16[((e+(k<<2)|0)+2|0)>>1]=c;c=n;n=c+1|0;HEAP32[((a+2908|0)+4|
0)>>2]=c;_pqdownheap(a,e,1);c=25;break;case 25:c=2<=(HEAP32[(a+5200|0)>>2]|0)?21:26;break;case 26:g=HEAP32[((a+2908|0)+4|0)>>2];f=a+5204|0;k=HEAP32[f>>2]-1|0;HEAP32[f>>2]=k;HEAP32[((a+2908|0)+(k<<2)|0)>>2]=g;_gen_bitlen(a,b);_gen_codes(e,l,a+2876|0);return;default:assert(0,"bad label: "+c)}}
function _build_bl_tree(m){for(var d=0,d=1;;)switch(d){case 1:var c,a;c=m;_scan_tree(c,c+148|0,HEAP32[((c+2840|0)+4|0)>>2]);_scan_tree(c,c+2440|0,HEAP32[((c+2852|0)+4|0)>>2]);_build_tree(c,c+2864|0);a=18;d=2;break;case 2:d=3<=(a|0)?3:7;break;case 3:d=0!=(HEAP16[(((c+2684|0)+((HEAP8[22504+a|0]&255)<<2)|0)+2|0)>>1]&65535|0)?4:5;break;case 4:d=7;break;case 5:d=6;break;case 6:a=a-1|0;d=2;break;case 7:return m=c+5800|0,HEAP32[m>>2]=HEAP32[m>>2]+((((3*(a+1|0)&-1)+5|0)+5|0)+4|0)|0,a;default:assert(0,"bad label: "+
d)}}
function _compress_block(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k,h,l,n,p,q,t,r,s,v;b=m;e=d;g=c;h=0;a=0!=(HEAP32[(b+5792|0)>>2]|0)?2:31;break;case 2:a=3;break;case 3:f=HEAP16[(HEAP32[(b+5796|0)>>2]+(h<<1)|0)>>1]&65535;k=h;h=k+1|0;k=HEAP8[HEAP32[(b+5784|0)>>2]+k|0]&255;a=0==(f|0)?4:8;break;case 4:p=HEAP16[((e+(k<<2)|0)+2|0)>>1]&65535;a=(HEAP32[(b+5820|0)>>2]|0)>(16-p|0)?5:6;break;case 5:var a=HEAP16[(e+(k<<2)|0)>>1]&65535,u=b+5816|0;HEAP16[u>>1]=(HEAP16[u>>1]&65535|(a&65535)<<HEAP32[(b+5820|
0)>>2])&65535;var u=HEAP16[(b+5816|0)>>1]&255,w=b+20|0,y=HEAP32[w>>2];HEAP32[w>>2]=y+1|0;HEAP8[HEAP32[(b+8|0)>>2]+y|0]=u;u=(HEAP16[(b+5816|0)>>1]&65535)>>8&255;w=b+20|0;y=HEAP32[w>>2];HEAP32[w>>2]=y+1|0;HEAP8[HEAP32[(b+8|0)>>2]+y|0]=u;HEAP16[(b+5816|0)>>1]=(a&65535)>>(16-HEAP32[(b+5820|0)>>2]|0)&65535;a=b+5820|0;HEAP32[a>>2]=HEAP32[a>>2]+(p-16|0)|0;a=7;break;case 6:a=b+5816|0;HEAP16[a>>1]=(HEAP16[a>>1]&65535|(HEAP16[(e+(k<<2)|0)>>1]&65535)<<HEAP32[(b+5820|0)>>2])&65535;a=b+5820|0;HEAP32[a>>2]=HEAP32[a>>
2]+p|0;a=7;break;case 7:a=28;break;case 8:l=HEAP8[42184+k|0]&255;q=HEAP16[((e+(((l+256|0)+1|0)<<2)|0)+2|0)>>1]&65535;a=(HEAP32[(b+5820|0)>>2]|0)>(16-q|0)?9:10;break;case 9:a=HEAP16[(e+(((l+256|0)+1|0)<<2)|0)>>1]&65535;u=b+5816|0;HEAP16[u>>1]=(HEAP16[u>>1]&65535|(a&65535)<<HEAP32[(b+5820|0)>>2])&65535;u=HEAP16[(b+5816|0)>>1]&255;w=b+20|0;y=HEAP32[w>>2];HEAP32[w>>2]=y+1|0;HEAP8[HEAP32[(b+8|0)>>2]+y|0]=u;u=(HEAP16[(b+5816|0)>>1]&65535)>>8&255;w=b+20|0;y=HEAP32[w>>2];HEAP32[w>>2]=y+1|0;HEAP8[HEAP32[(b+
8|0)>>2]+y|0]=u;HEAP16[(b+5816|0)>>1]=(a&65535)>>(16-HEAP32[(b+5820|0)>>2]|0)&65535;a=b+5820|0;HEAP32[a>>2]=HEAP32[a>>2]+(q-16|0)|0;a=11;break;case 10:a=b+5816|0;HEAP16[a>>1]=(HEAP16[a>>1]&65535|(HEAP16[(e+(((l+256|0)+1|0)<<2)|0)>>1]&65535)<<HEAP32[(b+5820|0)>>2])&65535;a=b+5820|0;HEAP32[a>>2]=HEAP32[a>>2]+q|0;a=11;break;case 11:n=HEAP32[(11744+(l<<2)|0)>>2];a=0!=(n|0)?12:16;break;case 12:k=k-HEAP32[(22528+(l<<2)|0)>>2]|0;t=n;a=(HEAP32[(b+5820|0)>>2]|0)>(16-t|0)?13:14;break;case 13:a=k;u=b+5816|0;
HEAP16[u>>1]=(HEAP16[u>>1]&65535|(a&65535)<<HEAP32[(b+5820|0)>>2])&65535;u=HEAP16[(b+5816|0)>>1]&255;w=b+20|0;y=HEAP32[w>>2];HEAP32[w>>2]=y+1|0;HEAP8[HEAP32[(b+8|0)>>2]+y|0]=u;u=(HEAP16[(b+5816|0)>>1]&65535)>>8&255;w=b+20|0;y=HEAP32[w>>2];HEAP32[w>>2]=y+1|0;HEAP8[HEAP32[(b+8|0)>>2]+y|0]=u;HEAP16[(b+5816|0)>>1]=(a&65535)>>(16-HEAP32[(b+5820|0)>>2]|0)&65535;a=b+5820|0;HEAP32[a>>2]=HEAP32[a>>2]+(t-16|0)|0;a=15;break;case 14:a=b+5816|0;HEAP16[a>>1]=(HEAP16[a>>1]&65535|(k&65535)<<HEAP32[(b+5820|0)>>2])&
65535;a=b+5820|0;HEAP32[a>>2]=HEAP32[a>>2]+t|0;a=15;break;case 15:a=16;break;case 16:f=f-1|0;a=256>f>>>0?17:18;break;case 17:var A=HEAP8[42440+f|0]&255,a=19;break;case 18:A=HEAP8[42440+((f>>>7)+256|0)|0]&255;a=19;break;case 19:l=A;r=HEAP16[((g+(l<<2)|0)+2|0)>>1]&65535;a=(HEAP32[(b+5820|0)>>2]|0)>(16-r|0)?20:21;break;case 20:a=HEAP16[(g+(l<<2)|0)>>1]&65535;u=b+5816|0;HEAP16[u>>1]=(HEAP16[u>>1]&65535|(a&65535)<<HEAP32[(b+5820|0)>>2])&65535;u=HEAP16[(b+5816|0)>>1]&255;w=b+20|0;y=HEAP32[w>>2];HEAP32[w>>
2]=y+1|0;HEAP8[HEAP32[(b+8|0)>>2]+y|0]=u;u=(HEAP16[(b+5816|0)>>1]&65535)>>8&255;w=b+20|0;y=HEAP32[w>>2];HEAP32[w>>2]=y+1|0;HEAP8[HEAP32[(b+8|0)>>2]+y|0]=u;HEAP16[(b+5816|0)>>1]=(a&65535)>>(16-HEAP32[(b+5820|0)>>2]|0)&65535;a=b+5820|0;HEAP32[a>>2]=HEAP32[a>>2]+(r-16|0)|0;a=22;break;case 21:a=b+5816|0;HEAP16[a>>1]=(HEAP16[a>>1]&65535|(HEAP16[(g+(l<<2)|0)>>1]&65535)<<HEAP32[(b+5820|0)>>2])&65535;a=b+5820|0;HEAP32[a>>2]=HEAP32[a>>2]+r|0;a=22;break;case 22:n=HEAP32[(11864+(l<<2)|0)>>2];a=0!=(n|0)?23:27;
break;case 23:f=f-HEAP32[(22648+(l<<2)|0)>>2]|0;s=n;a=(HEAP32[(b+5820|0)>>2]|0)>(16-s|0)?24:25;break;case 24:a=f;u=b+5816|0;HEAP16[u>>1]=(HEAP16[u>>1]&65535|(a&65535)<<HEAP32[(b+5820|0)>>2])&65535;u=HEAP16[(b+5816|0)>>1]&255;w=b+20|0;y=HEAP32[w>>2];HEAP32[w>>2]=y+1|0;HEAP8[HEAP32[(b+8|0)>>2]+y|0]=u;u=(HEAP16[(b+5816|0)>>1]&65535)>>8&255;w=b+20|0;y=HEAP32[w>>2];HEAP32[w>>2]=y+1|0;HEAP8[HEAP32[(b+8|0)>>2]+y|0]=u;HEAP16[(b+5816|0)>>1]=(a&65535)>>(16-HEAP32[(b+5820|0)>>2]|0)&65535;a=b+5820|0;HEAP32[a>>
2]=HEAP32[a>>2]+(s-16|0)|0;a=26;break;case 25:a=b+5816|0;HEAP16[a>>1]=(HEAP16[a>>1]&65535|(f&65535)<<HEAP32[(b+5820|0)>>2])&65535;a=b+5820|0;HEAP32[a>>2]=HEAP32[a>>2]+s|0;a=26;break;case 26:a=27;break;case 27:a=28;break;case 28:a=29;break;case 29:a=h>>>0<HEAP32[(b+5792|0)>>2]>>>0?3:30;break;case 30:a=31;break;case 31:v=HEAP16[((e+1024|0)+2|0)>>1]&65535;a=(HEAP32[(b+5820|0)>>2]|0)>(16-v|0)?32:33;break;case 32:a=HEAP16[(e+1024|0)>>1]&65535;u=b+5816|0;HEAP16[u>>1]=(HEAP16[u>>1]&65535|(a&65535)<<HEAP32[(b+
5820|0)>>2])&65535;u=HEAP16[(b+5816|0)>>1]&255;w=b+20|0;y=HEAP32[w>>2];HEAP32[w>>2]=y+1|0;HEAP8[HEAP32[(b+8|0)>>2]+y|0]=u;u=(HEAP16[(b+5816|0)>>1]&65535)>>8&255;w=b+20|0;y=HEAP32[w>>2];HEAP32[w>>2]=y+1|0;HEAP8[HEAP32[(b+8|0)>>2]+y|0]=u;HEAP16[(b+5816|0)>>1]=(a&65535)>>(16-HEAP32[(b+5820|0)>>2]|0)&65535;a=b+5820|0;HEAP32[a>>2]=HEAP32[a>>2]+(v-16|0)|0;a=34;break;case 33:a=b+5816|0;HEAP16[a>>1]=(HEAP16[a>>1]&65535|(HEAP16[(e+1024|0)>>1]&65535)<<HEAP32[(b+5820|0)>>2])&65535;a=b+5820|0;HEAP32[a>>2]=HEAP32[a>>
2]+v|0;a=34;break;case 34:return;default:assert(0,"bad label: "+a)}}
function _bi_windup(m){for(var d=0,d=1;;)switch(d){case 1:var c;c=m;d=8<(HEAP32[(c+5820|0)>>2]|0)?2:3;break;case 2:var d=HEAP16[(c+5816|0)>>1]&255,a=c+20|0,b=HEAP32[a>>2];HEAP32[a>>2]=b+1|0;HEAP8[HEAP32[(c+8|0)>>2]+b|0]=d;d=(HEAP16[(c+5816|0)>>1]&65535)>>8&255;a=c+20|0;b=HEAP32[a>>2];HEAP32[a>>2]=b+1|0;HEAP8[HEAP32[(c+8|0)>>2]+b|0]=d;d=6;break;case 3:d=0<(HEAP32[(c+5820|0)>>2]|0)?4:5;break;case 4:d=HEAP16[(c+5816|0)>>1]&255;a=c+20|0;b=HEAP32[a>>2];HEAP32[a>>2]=b+1|0;HEAP8[HEAP32[(c+8|0)>>2]+b|0]=
d;d=5;break;case 5:d=6;break;case 6:HEAP16[(c+5816|0)>>1]=0;HEAP32[(c+5820|0)>>2]=0;return;default:assert(0,"bad label: "+d)}}
function _send_all_trees(m,d,c,a){for(var b=0,b=1;;)switch(b){case 1:var e,g,f,k,h,l,n,p,q;e=m;g=d;f=c;k=a;l=5;b=(HEAP32[(e+5820|0)>>2]|0)>(16-l|0)?2:3;break;case 2:var b=g-257|0,t=e+5816|0;HEAP16[t>>1]=(HEAP16[t>>1]&65535|(b&65535)<<HEAP32[(e+5820|0)>>2])&65535;var t=HEAP16[(e+5816|0)>>1]&255,r=e+20|0,s=HEAP32[r>>2];HEAP32[r>>2]=s+1|0;HEAP8[HEAP32[(e+8|0)>>2]+s|0]=t;t=(HEAP16[(e+5816|0)>>1]&65535)>>8&255;r=e+20|0;s=HEAP32[r>>2];HEAP32[r>>2]=s+1|0;HEAP8[HEAP32[(e+8|0)>>2]+s|0]=t;HEAP16[(e+5816|0)>>
1]=(b&65535)>>(16-HEAP32[(e+5820|0)>>2]|0)&65535;b=e+5820|0;HEAP32[b>>2]=HEAP32[b>>2]+(l-16|0)|0;b=4;break;case 3:b=e+5816|0;HEAP16[b>>1]=(HEAP16[b>>1]&65535|((g-257|0)&65535)<<HEAP32[(e+5820|0)>>2])&65535;b=e+5820|0;HEAP32[b>>2]=HEAP32[b>>2]+l|0;b=4;break;case 4:n=5;b=(HEAP32[(e+5820|0)>>2]|0)>(16-n|0)?5:6;break;case 5:b=f-1|0;t=e+5816|0;HEAP16[t>>1]=(HEAP16[t>>1]&65535|(b&65535)<<HEAP32[(e+5820|0)>>2])&65535;t=HEAP16[(e+5816|0)>>1]&255;r=e+20|0;s=HEAP32[r>>2];HEAP32[r>>2]=s+1|0;HEAP8[HEAP32[(e+
8|0)>>2]+s|0]=t;t=(HEAP16[(e+5816|0)>>1]&65535)>>8&255;r=e+20|0;s=HEAP32[r>>2];HEAP32[r>>2]=s+1|0;HEAP8[HEAP32[(e+8|0)>>2]+s|0]=t;HEAP16[(e+5816|0)>>1]=(b&65535)>>(16-HEAP32[(e+5820|0)>>2]|0)&65535;b=e+5820|0;HEAP32[b>>2]=HEAP32[b>>2]+(n-16|0)|0;b=7;break;case 6:b=e+5816|0;HEAP16[b>>1]=(HEAP16[b>>1]&65535|((f-1|0)&65535)<<HEAP32[(e+5820|0)>>2])&65535;b=e+5820|0;HEAP32[b>>2]=HEAP32[b>>2]+n|0;b=7;break;case 7:p=4;b=(HEAP32[(e+5820|0)>>2]|0)>(16-p|0)?8:9;break;case 8:b=k-4|0;t=e+5816|0;HEAP16[t>>1]=
(HEAP16[t>>1]&65535|(b&65535)<<HEAP32[(e+5820|0)>>2])&65535;t=HEAP16[(e+5816|0)>>1]&255;r=e+20|0;s=HEAP32[r>>2];HEAP32[r>>2]=s+1|0;HEAP8[HEAP32[(e+8|0)>>2]+s|0]=t;t=(HEAP16[(e+5816|0)>>1]&65535)>>8&255;r=e+20|0;s=HEAP32[r>>2];HEAP32[r>>2]=s+1|0;HEAP8[HEAP32[(e+8|0)>>2]+s|0]=t;HEAP16[(e+5816|0)>>1]=(b&65535)>>(16-HEAP32[(e+5820|0)>>2]|0)&65535;b=e+5820|0;HEAP32[b>>2]=HEAP32[b>>2]+(p-16|0)|0;b=10;break;case 9:b=e+5816|0;HEAP16[b>>1]=(HEAP16[b>>1]&65535|((k-4|0)&65535)<<HEAP32[(e+5820|0)>>2])&65535;
b=e+5820|0;HEAP32[b>>2]=HEAP32[b>>2]+p|0;b=10;break;case 10:h=0;b=11;break;case 11:b=(h|0)<(k|0)?12:17;break;case 12:q=3;b=(HEAP32[(e+5820|0)>>2]|0)>(16-q|0)?13:14;break;case 13:b=HEAP16[(((e+2684|0)+((HEAP8[22504+h|0]&255)<<2)|0)+2|0)>>1]&65535;t=e+5816|0;HEAP16[t>>1]=(HEAP16[t>>1]&65535|(b&65535)<<HEAP32[(e+5820|0)>>2])&65535;t=HEAP16[(e+5816|0)>>1]&255;r=e+20|0;s=HEAP32[r>>2];HEAP32[r>>2]=s+1|0;HEAP8[HEAP32[(e+8|0)>>2]+s|0]=t;t=(HEAP16[(e+5816|0)>>1]&65535)>>8&255;r=e+20|0;s=HEAP32[r>>2];HEAP32[r>>
2]=s+1|0;HEAP8[HEAP32[(e+8|0)>>2]+s|0]=t;HEAP16[(e+5816|0)>>1]=(b&65535)>>(16-HEAP32[(e+5820|0)>>2]|0)&65535;b=e+5820|0;HEAP32[b>>2]=HEAP32[b>>2]+(q-16|0)|0;b=15;break;case 14:b=e+5816|0;HEAP16[b>>1]=(HEAP16[b>>1]&65535|(HEAP16[(((e+2684|0)+((HEAP8[22504+h|0]&255)<<2)|0)+2|0)>>1]&65535)<<HEAP32[(e+5820|0)>>2])&65535;b=e+5820|0;HEAP32[b>>2]=HEAP32[b>>2]+q|0;b=15;break;case 15:b=16;break;case 16:h=h+1|0;b=11;break;case 17:_send_tree(e,e+148|0,g-1|0);_send_tree(e,e+2440|0,f-1|0);return;default:assert(0,
"bad label: "+b)}}
function _send_tree(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k,h,l,n,p,q,t,r,s,v,u,w,y,A,z,x,B,C,D,F,I,G;b=m;e=d;g=c;k=-1;l=HEAP16[((e|0)+2|0)>>1]&65535;n=0;p=7;q=4;a=0==(l|0)?2:3;break;case 2:p=138;a=q=3;break;case 3:f=0;a=4;break;case 4:a=(f|0)<=(g|0)?5:55;break;case 5:h=l;l=HEAP16[((e+((f+1|0)<<2)|0)+2|0)>>1]&65535;var H=n+1|0;n=H;a=(H|0)<(p|0)?6:8;break;case 6:a=(h|0)==(l|0)?7:8;break;case 7:a=54;break;case 8:a=(n|0)<(q|0)?9:16;break;case 9:a=10;break;case 10:t=HEAP16[(((b+2684|0)+
(h<<2)|0)+2|0)>>1]&65535;a=(HEAP32[(b+5820|0)>>2]|0)>(16-t|0)?11:12;break;case 11:r=HEAP16[((b+2684|0)+(h<<2)|0)>>1]&65535;var K=b+5816|0;HEAP16[K>>1]=(HEAP16[K>>1]&65535|(r&65535)<<HEAP32[(b+5820|0)>>2])&65535;var J=HEAP16[(b+5816|0)>>1]&255,E=b+20|0,L=HEAP32[E>>2];HEAP32[E>>2]=L+1|0;HEAP8[HEAP32[(b+8|0)>>2]+L|0]=J;var Q=(HEAP16[(b+5816|0)>>1]&65535)>>8&255,N=b+20|0,P=HEAP32[N>>2];HEAP32[N>>2]=P+1|0;HEAP8[HEAP32[(b+8|0)>>2]+P|0]=Q;HEAP16[(b+5816|0)>>1]=(r&65535)>>(16-HEAP32[(b+5820|0)>>2]|0)&65535;
var W=b+5820|0;HEAP32[W>>2]=HEAP32[W>>2]+(t-16|0)|0;a=13;break;case 12:var O=b+5816|0;HEAP16[O>>1]=(HEAP16[O>>1]&65535|(HEAP16[((b+2684|0)+(h<<2)|0)>>1]&65535)<<HEAP32[(b+5820|0)>>2])&65535;var T=b+5820|0;HEAP32[T>>2]=HEAP32[T>>2]+t|0;a=13;break;case 13:a=14;break;case 14:var Y=n-1|0;n=Y;a=0!=(Y|0)?10:15;break;case 15:a=46;break;case 16:a=0!=(h|0)?17:29;break;case 17:a=(h|0)!=(k|0)?18:22;break;case 18:s=HEAP16[(((b+2684|0)+(h<<2)|0)+2|0)>>1]&65535;a=(HEAP32[(b+5820|0)>>2]|0)>(16-s|0)?19:20;break;
case 19:v=HEAP16[((b+2684|0)+(h<<2)|0)>>1]&65535;var S=b+5816|0;HEAP16[S>>1]=(HEAP16[S>>1]&65535|(v&65535)<<HEAP32[(b+5820|0)>>2])&65535;var X=HEAP16[(b+5816|0)>>1]&255,R=b+20|0,V=HEAP32[R>>2];HEAP32[R>>2]=V+1|0;HEAP8[HEAP32[(b+8|0)>>2]+V|0]=X;var aa=(HEAP16[(b+5816|0)>>1]&65535)>>8&255,fa=b+20|0,Z=HEAP32[fa>>2];HEAP32[fa>>2]=Z+1|0;HEAP8[HEAP32[(b+8|0)>>2]+Z|0]=aa;HEAP16[(b+5816|0)>>1]=(v&65535)>>(16-HEAP32[(b+5820|0)>>2]|0)&65535;var ka=b+5820|0;HEAP32[ka>>2]=HEAP32[ka>>2]+(s-16|0)|0;a=21;break;
case 20:var M=b+5816|0;HEAP16[M>>1]=(HEAP16[M>>1]&65535|(HEAP16[((b+2684|0)+(h<<2)|0)>>1]&65535)<<HEAP32[(b+5820|0)>>2])&65535;var ga=b+5820|0;HEAP32[ga>>2]=HEAP32[ga>>2]+s|0;a=21;break;case 21:n=n-1|0;a=22;break;case 22:u=HEAP16[(((b+2684|0)+64|0)+2|0)>>1]&65535;a=(HEAP32[(b+5820|0)>>2]|0)>(16-u|0)?23:24;break;case 23:w=HEAP16[((b+2684|0)+64|0)>>1]&65535;var na=b+5816|0;HEAP16[na>>1]=(HEAP16[na>>1]&65535|(w&65535)<<HEAP32[(b+5820|0)>>2])&65535;var ba=HEAP16[(b+5816|0)>>1]&255,ca=b+20|0,oa=HEAP32[ca>>
2];HEAP32[ca>>2]=oa+1|0;HEAP8[HEAP32[(b+8|0)>>2]+oa|0]=ba;var va=(HEAP16[(b+5816|0)>>1]&65535)>>8&255,pa=b+20|0,la=HEAP32[pa>>2];HEAP32[pa>>2]=la+1|0;HEAP8[HEAP32[(b+8|0)>>2]+la|0]=va;HEAP16[(b+5816|0)>>1]=(w&65535)>>(16-HEAP32[(b+5820|0)>>2]|0)&65535;var wa=b+5820|0;HEAP32[wa>>2]=HEAP32[wa>>2]+(u-16|0)|0;a=25;break;case 24:var qa=b+5816|0;HEAP16[qa>>1]=(HEAP16[qa>>1]&65535|(HEAP16[((b+2684|0)+64|0)>>1]&65535)<<HEAP32[(b+5820|0)>>2])&65535;var ea=b+5820|0;HEAP32[ea>>2]=HEAP32[ea>>2]+u|0;a=25;break;
case 25:y=2;a=(HEAP32[(b+5820|0)>>2]|0)>(16-y|0)?26:27;break;case 26:A=n-3|0;var xa=b+5816|0;HEAP16[xa>>1]=(HEAP16[xa>>1]&65535|(A&65535)<<HEAP32[(b+5820|0)>>2])&65535;var ja=HEAP16[(b+5816|0)>>1]&255,da=b+20|0,Ga=HEAP32[da>>2];HEAP32[da>>2]=Ga+1|0;HEAP8[HEAP32[(b+8|0)>>2]+Ga|0]=ja;var $=(HEAP16[(b+5816|0)>>1]&65535)>>8&255,ma=b+20|0,ra=HEAP32[ma>>2];HEAP32[ma>>2]=ra+1|0;HEAP8[HEAP32[(b+8|0)>>2]+ra|0]=$;HEAP16[(b+5816|0)>>1]=(A&65535)>>(16-HEAP32[(b+5820|0)>>2]|0)&65535;var Aa=b+5820|0;HEAP32[Aa>>
2]=HEAP32[Aa>>2]+(y-16|0)|0;a=28;break;case 27:var Xa=b+5816|0;HEAP16[Xa>>1]=(HEAP16[Xa>>1]&65535|((n-3|0)&65535)<<HEAP32[(b+5820|0)>>2])&65535;var Da=b+5820|0;HEAP32[Da>>2]=HEAP32[Da>>2]+y|0;a=28;break;case 28:a=45;break;case 29:a=10>=(n|0)?30:37;break;case 30:z=HEAP16[(((b+2684|0)+68|0)+2|0)>>1]&65535;a=(HEAP32[(b+5820|0)>>2]|0)>(16-z|0)?31:32;break;case 31:x=HEAP16[((b+2684|0)+68|0)>>1]&65535;var Ua=b+5816|0;HEAP16[Ua>>1]=(HEAP16[Ua>>1]&65535|(x&65535)<<HEAP32[(b+5820|0)>>2])&65535;var sa=HEAP16[(b+
5816|0)>>1]&255,ha=b+20|0,U=HEAP32[ha>>2];HEAP32[ha>>2]=U+1|0;HEAP8[HEAP32[(b+8|0)>>2]+U|0]=sa;var gb=(HEAP16[(b+5816|0)>>1]&65535)>>8&255,Ka=b+20|0,Ia=HEAP32[Ka>>2];HEAP32[Ka>>2]=Ia+1|0;HEAP8[HEAP32[(b+8|0)>>2]+Ia|0]=gb;HEAP16[(b+5816|0)>>1]=(x&65535)>>(16-HEAP32[(b+5820|0)>>2]|0)&65535;var ia=b+5820|0;HEAP32[ia>>2]=HEAP32[ia>>2]+(z-16|0)|0;a=33;break;case 32:var Ba=b+5816|0;HEAP16[Ba>>1]=(HEAP16[Ba>>1]&65535|(HEAP16[((b+2684|0)+68|0)>>1]&65535)<<HEAP32[(b+5820|0)>>2])&65535;var Ra=b+5820|0;HEAP32[Ra>>
2]=HEAP32[Ra>>2]+z|0;a=33;break;case 33:B=3;a=(HEAP32[(b+5820|0)>>2]|0)>(16-B|0)?34:35;break;case 34:C=n-3|0;var Sa=b+5816|0;HEAP16[Sa>>1]=(HEAP16[Sa>>1]&65535|(C&65535)<<HEAP32[(b+5820|0)>>2])&65535;var ib=HEAP16[(b+5816|0)>>1]&255,ua=b+20|0,Va=HEAP32[ua>>2];HEAP32[ua>>2]=Va+1|0;HEAP8[HEAP32[(b+8|0)>>2]+Va|0]=ib;var eb=(HEAP16[(b+5816|0)>>1]&65535)>>8&255,Ea=b+20|0,Ya=HEAP32[Ea>>2];HEAP32[Ea>>2]=Ya+1|0;HEAP8[HEAP32[(b+8|0)>>2]+Ya|0]=eb;HEAP16[(b+5816|0)>>1]=(C&65535)>>(16-HEAP32[(b+5820|0)>>2]|0)&
65535;var La=b+5820|0;HEAP32[La>>2]=HEAP32[La>>2]+(B-16|0)|0;a=36;break;case 35:var Ma=b+5816|0;HEAP16[Ma>>1]=(HEAP16[Ma>>1]&65535|((n-3|0)&65535)<<HEAP32[(b+5820|0)>>2])&65535;var Fa=b+5820|0;HEAP32[Fa>>2]=HEAP32[Fa>>2]+B|0;a=36;break;case 36:a=44;break;case 37:D=HEAP16[(((b+2684|0)+72|0)+2|0)>>1]&65535;a=(HEAP32[(b+5820|0)>>2]|0)>(16-D|0)?38:39;break;case 38:F=HEAP16[((b+2684|0)+72|0)>>1]&65535;var Na=b+5816|0;HEAP16[Na>>1]=(HEAP16[Na>>1]&65535|(F&65535)<<HEAP32[(b+5820|0)>>2])&65535;var Oa=HEAP16[(b+
5816|0)>>1]&255,jb=b+20|0,Za=HEAP32[jb>>2];HEAP32[jb>>2]=Za+1|0;HEAP8[HEAP32[(b+8|0)>>2]+Za|0]=Oa;var Ca=(HEAP16[(b+5816|0)>>1]&65535)>>8&255,$a=b+20|0,ab=HEAP32[$a>>2];HEAP32[$a>>2]=ab+1|0;HEAP8[HEAP32[(b+8|0)>>2]+ab|0]=Ca;HEAP16[(b+5816|0)>>1]=(F&65535)>>(16-HEAP32[(b+5820|0)>>2]|0)&65535;var Ha=b+5820|0;HEAP32[Ha>>2]=HEAP32[Ha>>2]+(D-16|0)|0;a=40;break;case 39:var Wa=b+5816|0;HEAP16[Wa>>1]=(HEAP16[Wa>>1]&65535|(HEAP16[((b+2684|0)+72|0)>>1]&65535)<<HEAP32[(b+5820|0)>>2])&65535;var bb=b+5820|0;HEAP32[bb>>
2]=HEAP32[bb>>2]+D|0;a=40;break;case 40:I=7;a=(HEAP32[(b+5820|0)>>2]|0)>(16-I|0)?41:42;break;case 41:G=n-11|0;var Pa=b+5816|0;HEAP16[Pa>>1]=(HEAP16[Pa>>1]&65535|(G&65535)<<HEAP32[(b+5820|0)>>2])&65535;var Ja=HEAP16[(b+5816|0)>>1]&255,cb=b+20|0,Qa=HEAP32[cb>>2];HEAP32[cb>>2]=Qa+1|0;HEAP8[HEAP32[(b+8|0)>>2]+Qa|0]=Ja;var fb=(HEAP16[(b+5816|0)>>1]&65535)>>8&255,hb=b+20|0,ya=HEAP32[hb>>2];HEAP32[hb>>2]=ya+1|0;HEAP8[HEAP32[(b+8|0)>>2]+ya|0]=fb;HEAP16[(b+5816|0)>>1]=(G&65535)>>(16-HEAP32[(b+5820|0)>>2]|
0)&65535;var db=b+5820|0;HEAP32[db>>2]=HEAP32[db>>2]+(I-16|0)|0;a=43;break;case 42:var Ta=b+5816|0;HEAP16[Ta>>1]=(HEAP16[Ta>>1]&65535|((n-11|0)&65535)<<HEAP32[(b+5820|0)>>2])&65535;var kb=b+5820|0;HEAP32[kb>>2]=HEAP32[kb>>2]+I|0;a=43;break;case 43:a=44;break;case 44:a=45;break;case 45:a=46;break;case 46:a=47;break;case 47:n=0;k=h;a=0==(l|0)?48:49;break;case 48:p=138;q=3;a=53;break;case 49:a=(h|0)==(l|0)?50:51;break;case 50:p=6;q=3;a=52;break;case 51:p=7;q=4;a=52;break;case 52:a=53;break;case 53:a=
54;break;case 54:f=f+1|0;a=4;break;case 55:return;default:assert(0,"bad label: "+a)}}function _bi_reverse(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e;a=m;b=d;e=0;c=2;break;case 2:e|=a&1;a>>>=1;e<<=1;c=3;break;case 3:b=c=b-1|0;c=0<(c|0)?2:4;break;case 4:return e>>>1;default:assert(0,"bad label: "+c)}}
function _scan_tree(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k,h,l,n,p,q;b=m;e=d;g=c;k=-1;l=HEAP16[((e|0)+2|0)>>1]&65535;n=0;p=7;q=4;a=0==(l|0)?2:3;break;case 2:p=138;a=q=3;break;case 3:HEAP16[((e+((g+1|0)<<2)|0)+2|0)>>1]=-1;f=0;a=4;break;case 4:a=(f|0)<=(g|0)?5:28;break;case 5:h=l;l=HEAP16[((e+((f+1|0)<<2)|0)+2|0)>>1]&65535;n=a=n+1|0;a=(a|0)<(p|0)?6:8;break;case 6:a=(h|0)==(l|0)?7:8;break;case 7:a=27;break;case 8:a=(n|0)<(q|0)?9:10;break;case 9:a=(b+2684|0)+(h<<2)|0;HEAP16[a>>1]=((HEAP16[a>>
1]&65535)+n|0)&65535;a=19;break;case 10:a=0!=(h|0)?11:14;break;case 11:a=(h|0)!=(k|0)?12:13;break;case 12:a=(b+2684|0)+(h<<2)|0;HEAP16[a>>1]=HEAP16[a>>1]+1&65535;a=13;break;case 13:a=(b+2684|0)+64|0;HEAP16[a>>1]=HEAP16[a>>1]+1&65535;a=18;break;case 14:a=10>=(n|0)?15:16;break;case 15:a=(b+2684|0)+68|0;HEAP16[a>>1]=HEAP16[a>>1]+1&65535;a=17;break;case 16:a=(b+2684|0)+72|0;HEAP16[a>>1]=HEAP16[a>>1]+1&65535;a=17;break;case 17:a=18;break;case 18:a=19;break;case 19:a=20;break;case 20:n=0;k=h;a=0==(l|0)?
21:22;break;case 21:p=138;q=3;a=26;break;case 22:a=(h|0)==(l|0)?23:24;break;case 23:p=6;q=3;a=25;break;case 24:p=7;q=4;a=25;break;case 25:a=26;break;case 26:a=27;break;case 27:f=f+1|0;a=4;break;case 28:return;default:assert(0,"bad label: "+a)}}
function _pqdownheap(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k;b=m;e=d;g=c;f=HEAP32[((b+2908|0)+(g<<2)|0)>>2];k=g<<1;a=2;break;case 2:a=(k|0)<=(HEAP32[(b+5200|0)>>2]|0)?3:13;break;case 3:a=(k|0)<(HEAP32[(b+5200|0)>>2]|0)?4:8;break;case 4:a=(HEAP16[(e+(HEAP32[((b+2908|0)+((k+1|0)<<2)|0)>>2]<<2)|0)>>1]&65535|0)<(HEAP16[(e+(HEAP32[((b+2908|0)+(k<<2)|0)>>2]<<2)|0)>>1]&65535|0)?7:5;break;case 5:a=(HEAP16[(e+(HEAP32[((b+2908|0)+((k+1|0)<<2)|0)>>2]<<2)|0)>>1]&65535|0)==(HEAP16[(e+(HEAP32[((b+
2908|0)+(k<<2)|0)>>2]<<2)|0)>>1]&65535|0)?6:8;break;case 6:a=(HEAP8[(b+5208|0)+HEAP32[((b+2908|0)+((k+1|0)<<2)|0)>>2]|0]&255|0)<=(HEAP8[(b+5208|0)+HEAP32[((b+2908|0)+(k<<2)|0)>>2]|0]&255|0)?7:8;break;case 7:k=k+1|0;a=8;break;case 8:a=(HEAP16[(e+(f<<2)|0)>>1]&65535|0)<(HEAP16[(e+(HEAP32[((b+2908|0)+(k<<2)|0)>>2]<<2)|0)>>1]&65535|0)?11:9;break;case 9:a=(HEAP16[(e+(f<<2)|0)>>1]&65535|0)==(HEAP16[(e+(HEAP32[((b+2908|0)+(k<<2)|0)>>2]<<2)|0)>>1]&65535|0)?10:12;break;case 10:a=(HEAP8[(b+5208|0)+f|0]&255|
0)<=(HEAP8[(b+5208|0)+HEAP32[((b+2908|0)+(k<<2)|0)>>2]|0]&255|0)?11:12;break;case 11:a=13;break;case 12:HEAP32[((b+2908|0)+(g<<2)|0)>>2]=HEAP32[((b+2908|0)+(k<<2)|0)>>2];g=k;k<<=1;a=2;break;case 13:HEAP32[((b+2908|0)+(g<<2)|0)>>2]=f;return;default:assert(0,"bad label: "+a)}}
function _gen_bitlen(m,d){for(var c=0,c=1;;)switch(c){case 1:var a,b,e,g,f,k,h,l,n,p,q,t,r,s;a=m;b=d;e=HEAP32[(b|0)>>2];g=HEAP32[(b+4|0)>>2];f=HEAP32[(HEAP32[(b+8|0)>>2]|0)>>2];k=HEAP32[(HEAP32[(b+8|0)>>2]+4|0)>>2];h=HEAP32[(HEAP32[(b+8|0)>>2]+8|0)>>2];b=HEAP32[(HEAP32[(b+8|0)>>2]+16|0)>>2];q=s=0;c=2;break;case 2:c=15>=(q|0)?3:5;break;case 3:HEAP16[((a+2876|0)+(q<<1)|0)>>1]=0;c=4;break;case 4:q=q+1|0;c=2;break;case 5:HEAP16[((e+(HEAP32[((a+2908|0)+(HEAP32[(a+5204|0)>>2]<<2)|0)>>2]<<2)|0)+2|0)>>1]=
0;l=HEAP32[(a+5204|0)>>2]+1|0;c=6;break;case 6:c=573>(l|0)?7:17;break;case 7:n=HEAP32[((a+2908|0)+(l<<2)|0)>>2];q=(HEAP16[((e+((HEAP16[((e+(n<<2)|0)+2|0)>>1]&65535)<<2)|0)+2|0)>>1]&65535)+1|0;c=(q|0)>(b|0)?8:9;break;case 8:q=b;s=s+1|0;c=9;break;case 9:HEAP16[((e+(n<<2)|0)+2|0)>>1]=q&65535;c=(n|0)>(g|0)?10:11;break;case 10:c=16;break;case 11:t=(a+2876|0)+(q<<1)|0;HEAP16[t>>1]=HEAP16[t>>1]+1&65535;t=0;c=(n|0)>=(h|0)?12:13;break;case 12:t=HEAP32[(k+((n-h|0)<<2)|0)>>2];c=13;break;case 13:r=HEAP16[(e+
(n<<2)|0)>>1];var c=Math.imul(r&65535,q+t|0)|0,v=a+5800|0;HEAP32[v>>2]=HEAP32[v>>2]+c|0;c=0!=(f|0)?14:15;break;case 14:c=Math.imul(r&65535,(HEAP16[((f+(n<<2)|0)+2|0)>>1]&65535)+t|0)|0;v=a+5804|0;HEAP32[v>>2]=HEAP32[v>>2]+c|0;c=15;break;case 15:c=16;break;case 16:l=l+1|0;c=6;break;case 17:c=0==(s|0)?18:19;break;case 18:c=36;break;case 19:c=20;break;case 20:q=b-1|0;c=21;break;case 21:c=0==(HEAP16[((a+2876|0)+(q<<1)|0)>>1]&65535|0)?22:23;break;case 22:q=q-1|0;c=21;break;case 23:c=(a+2876|0)+(q<<1)|0;
HEAP16[c>>1]=HEAP16[c>>1]-1&65535;c=(a+2876|0)+((q+1|0)<<1)|0;HEAP16[c>>1]=((HEAP16[c>>1]&65535)+2|0)&65535;c=(a+2876|0)+(b<<1)|0;HEAP16[c>>1]=HEAP16[c>>1]-1&65535;s=s-2|0;c=24;break;case 24:c=0<(s|0)?20:25;break;case 25:q=b;c=26;break;case 26:c=0!=(q|0)?27:36;break;case 27:n=HEAP16[((a+2876|0)+(q<<1)|0)>>1]&65535;c=28;break;case 28:c=0!=(n|0)?29:34;break;case 29:l=p=l-1|0;p=HEAP32[((a+2908|0)+(p<<2)|0)>>2];c=(p|0)>(g|0)?30:31;break;case 30:c=28;break;case 31:c=(HEAP16[((e+(p<<2)|0)+2|0)>>1]&65535|
0)!=(q|0)?32:33;break;case 32:c=Math.imul(q-(HEAP16[((e+(p<<2)|0)+2|0)>>1]&65535)|0,HEAP16[(e+(p<<2)|0)>>1]&65535)|0;v=a+5800|0;HEAP32[v>>2]=HEAP32[v>>2]+c|0;HEAP16[((e+(p<<2)|0)+2|0)>>1]=q&65535;c=33;break;case 33:n=n-1|0;c=28;break;case 34:c=35;break;case 35:q=q-1|0;c=26;break;case 36:return;default:assert(0,"bad label: "+c)}}
function _gen_codes(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+32|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k=b,h,l,n,p;e=m;g=d;f=c;h=0;l=1;a=2;break;case 2:a=15>=(l|0)?3:5;break;case 3:h=a=((h&65535)+(HEAP16[(f+((l-1|0)<<1)|0)>>1]&65535)|0)<<1&65535;HEAP16[(k+(l<<1)|0)>>1]=a;a=4;break;case 4:l=l+1|0;a=2;break;case 5:n=0;a=6;break;case 6:a=(n|0)<=(g|0)?7:11;break;case 7:p=HEAP16[((e+(n<<2)|0)+2|0)>>1]&65535;a=0==(p|0)?8:9;break;case 8:a=10;break;case 9:var a=k+(p<<
1)|0,q=HEAP16[a>>1];HEAP16[a>>1]=q+1&65535;a=_bi_reverse(q&65535,p)&65535;HEAP16[(e+(n<<2)|0)>>1]=a;a=10;break;case 10:n=n+1|0;a=6;break;case 11:STACKTOP=b;return;default:assert(0,"bad label: "+a)}}function _zcalloc(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,a=m;b=d;e=c;a=0!=(a|0)?2:3;break;case 2:b=b+(e-e|0)|0;a=3;break;case 3:return m=Math.imul(b,e)|0,_malloc(m);default:assert(0,"bad label: "+a)}}
function _adler32(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f,k,h;e=m;g=d;f=c;k=e>>>16&65535;e&=65535;a=1==(f|0)?2:7;break;case 2:e=e+(HEAP8[g|0]&255)|0;a=65521<=e>>>0?3:4;break;case 3:e=e-65521|0;a=4;break;case 4:k=k+e|0;a=65521<=k>>>0?5:6;break;case 5:k=k-65521|0;a=6;break;case 6:b=e|k<<16;a=31;break;case 7:a=0==(g|0)?8:9;break;case 8:b=1;a=31;break;case 9:a=16>f>>>0?10:16;break;case 10:a=11;break;case 11:a=f;f=a-1|0;a=0!=(a|0)?12:13;break;case 12:a=g;g=a+1|0;e=e+(HEAP8[a]&255)|0;k=k+
e|0;a=11;break;case 13:a=65521<=e>>>0?14:15;break;case 14:e=e-65521|0;a=15;break;case 15:k=(k>>>0)%65521&-1;b=e|k<<16;a=31;break;case 16:a=17;break;case 17:a=5552<=f>>>0?18:22;break;case 18:f=f-5552|0;h=347;a=19;break;case 19:e=e+(HEAP8[g|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+1|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+2|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+3|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+4|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+5|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+6|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+7|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+
8|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+9|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+10|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+11|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+12|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+13|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+14|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+15|0]&255)|0;k=k+e|0;g=g+16|0;a=20;break;case 20:h=a=h-1|0;a=0!=(a|0)?19:21;break;case 21:e=(e>>>0)%65521&-1;k=(k>>>0)%65521&-1;a=17;break;case 22:a=0!=(f|0)?23:30;break;case 23:a=24;break;case 24:a=16<=f>>>0?25:26;break;case 25:f=f-16|0;e=e+(HEAP8[g|0]&255)|0;k=k+
e|0;e=e+(HEAP8[g+1|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+2|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+3|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+4|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+5|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+6|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+7|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+8|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+9|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+10|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+11|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+12|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+13|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+14|0]&255)|0;k=k+e|0;e=e+(HEAP8[g+15|0]&255)|0;k=k+
e|0;g=g+16|0;a=24;break;case 26:a=27;break;case 27:a=f;f=a-1|0;a=0!=(a|0)?28:29;break;case 28:a=g;g=a+1|0;e=e+(HEAP8[a]&255)|0;k=k+e|0;a=27;break;case 29:e=(e>>>0)%65521&-1;k=(k>>>0)%65521&-1;a=30;break;case 30:b=e|k<<16;a=31;break;case 31:return b;default:assert(0,"bad label: "+a)}}function _zcfree(m,d){for(var c=0,c=1;;)switch(c){case 1:c=m;_free(d);c=0!=(c|0)?2:3;break;case 2:c=3;break;case 3:return;default:assert(0,"bad label: "+c)}}
function _crc32(m,d,c){var a=0,b=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(a=1;;)switch(a){case 1:var e,g,f,k,h=b;g=m;f=d;k=c;a=0==(f|0)?2:3;break;case 2:e=0;a=6;break;case 3:HEAP32[h>>2]=1;a=0!=HEAP8[h]<<24>>24?4:5;break;case 4:e=_crc32_little(g,f,k);a=6;break;case 5:e=_crc32_big(g,f,k);a=6;break;case 6:return m=e,STACKTOP=b,m;default:assert(0,"bad label: "+a)}}
function _crc32_little(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f;b=m;e=d;g=c;b^=-1;a=2;break;case 2:if(0!=(g|0))a=3;else var k=0,a=4;break;case 3:k=0!=(e&3|0);a=4;break;case 4:a=k?5:6;break;case 5:var a=b,h=e;e=h+1|0;b=HEAP32[(14192+(((a^HEAP8[h]&255)&255)<<2)|0)>>2]^b>>>8;g=g-1|0;a=2;break;case 6:f=e;a=7;break;case 7:a=32<=g>>>0?8:9;break;case 8:a=f;f=a+4|0;b^=HEAP32[a>>2];b=HEAP32[(17264+((b&255)<<2)|0)>>2]^HEAP32[(16240+((b>>>8&255)<<2)|0)>>2]^HEAP32[(15216+((b>>>16&255)<<2)|0)>>2]^
HEAP32[(14192+(b>>>24<<2)|0)>>2];a=f;f=a+4|0;b^=HEAP32[a>>2];b=HEAP32[(17264+((b&255)<<2)|0)>>2]^HEAP32[(16240+((b>>>8&255)<<2)|0)>>2]^HEAP32[(15216+((b>>>16&255)<<2)|0)>>2]^HEAP32[(14192+(b>>>24<<2)|0)>>2];a=f;f=a+4|0;b^=HEAP32[a>>2];b=HEAP32[(17264+((b&255)<<2)|0)>>2]^HEAP32[(16240+((b>>>8&255)<<2)|0)>>2]^HEAP32[(15216+((b>>>16&255)<<2)|0)>>2]^HEAP32[(14192+(b>>>24<<2)|0)>>2];a=f;f=a+4|0;b^=HEAP32[a>>2];b=HEAP32[(17264+((b&255)<<2)|0)>>2]^HEAP32[(16240+((b>>>8&255)<<2)|0)>>2]^HEAP32[(15216+((b>>>
16&255)<<2)|0)>>2]^HEAP32[(14192+(b>>>24<<2)|0)>>2];a=f;f=a+4|0;b^=HEAP32[a>>2];b=HEAP32[(17264+((b&255)<<2)|0)>>2]^HEAP32[(16240+((b>>>8&255)<<2)|0)>>2]^HEAP32[(15216+((b>>>16&255)<<2)|0)>>2]^HEAP32[(14192+(b>>>24<<2)|0)>>2];a=f;f=a+4|0;b^=HEAP32[a>>2];b=HEAP32[(17264+((b&255)<<2)|0)>>2]^HEAP32[(16240+((b>>>8&255)<<2)|0)>>2]^HEAP32[(15216+((b>>>16&255)<<2)|0)>>2]^HEAP32[(14192+(b>>>24<<2)|0)>>2];a=f;f=a+4|0;b^=HEAP32[a>>2];b=HEAP32[(17264+((b&255)<<2)|0)>>2]^HEAP32[(16240+((b>>>8&255)<<2)|0)>>2]^
HEAP32[(15216+((b>>>16&255)<<2)|0)>>2]^HEAP32[(14192+(b>>>24<<2)|0)>>2];a=f;f=a+4|0;b^=HEAP32[a>>2];b=HEAP32[(17264+((b&255)<<2)|0)>>2]^HEAP32[(16240+((b>>>8&255)<<2)|0)>>2]^HEAP32[(15216+((b>>>16&255)<<2)|0)>>2]^HEAP32[(14192+(b>>>24<<2)|0)>>2];g=g-32|0;a=7;break;case 9:a=10;break;case 10:a=4<=g>>>0?11:12;break;case 11:a=f;f=a+4|0;b^=HEAP32[a>>2];b=HEAP32[(17264+((b&255)<<2)|0)>>2]^HEAP32[(16240+((b>>>8&255)<<2)|0)>>2]^HEAP32[(15216+((b>>>16&255)<<2)|0)>>2]^HEAP32[(14192+(b>>>24<<2)|0)>>2];g=g-4|
0;a=10;break;case 12:e=f;a=0!=(g|0)?13:17;break;case 13:a=14;break;case 14:a=b;h=e;e=h+1|0;b=HEAP32[(14192+(((a^HEAP8[h]&255)&255)<<2)|0)>>2]^b>>>8;a=15;break;case 15:g=a=g-1|0;a=0!=(a|0)?14:16;break;case 16:a=17;break;case 17:return b^=-1;default:assert(0,"bad label: "+a)}}
function _crc32_big(m,d,c){for(var a=0,a=1;;)switch(a){case 1:var b,e,g,f;b=m;e=d;g=c;b=(((b>>>24&255)+(b>>>8&65280)|0)+((b&65280)<<8)|0)+((b&255)<<24)|0;b^=-1;a=2;break;case 2:if(0!=(g|0))a=3;else var k=0,a=4;break;case 3:k=0!=(e&3|0);a=4;break;case 4:a=k?5:6;break;case 5:var a=b>>>24,h=e;e=h+1|0;b=HEAP32[(18288+((a^HEAP8[h]&255)<<2)|0)>>2]^b<<8;g=g-1|0;a=2;break;case 6:f=e;f=f-4|0;a=7;break;case 7:a=32<=g>>>0?8:9;break;case 8:f=a=f+4|0;b^=HEAP32[a>>2];b=HEAP32[(18288+((b&255)<<2)|0)>>2]^HEAP32[(19312+
((b>>>8&255)<<2)|0)>>2]^HEAP32[(20336+((b>>>16&255)<<2)|0)>>2]^HEAP32[(21360+(b>>>24<<2)|0)>>2];f=a=f+4|0;b^=HEAP32[a>>2];b=HEAP32[(18288+((b&255)<<2)|0)>>2]^HEAP32[(19312+((b>>>8&255)<<2)|0)>>2]^HEAP32[(20336+((b>>>16&255)<<2)|0)>>2]^HEAP32[(21360+(b>>>24<<2)|0)>>2];f=a=f+4|0;b^=HEAP32[a>>2];b=HEAP32[(18288+((b&255)<<2)|0)>>2]^HEAP32[(19312+((b>>>8&255)<<2)|0)>>2]^HEAP32[(20336+((b>>>16&255)<<2)|0)>>2]^HEAP32[(21360+(b>>>24<<2)|0)>>2];f=a=f+4|0;b^=HEAP32[a>>2];b=HEAP32[(18288+((b&255)<<2)|0)>>2]^
HEAP32[(19312+((b>>>8&255)<<2)|0)>>2]^HEAP32[(20336+((b>>>16&255)<<2)|0)>>2]^HEAP32[(21360+(b>>>24<<2)|0)>>2];f=a=f+4|0;b^=HEAP32[a>>2];b=HEAP32[(18288+((b&255)<<2)|0)>>2]^HEAP32[(19312+((b>>>8&255)<<2)|0)>>2]^HEAP32[(20336+((b>>>16&255)<<2)|0)>>2]^HEAP32[(21360+(b>>>24<<2)|0)>>2];f=a=f+4|0;b^=HEAP32[a>>2];b=HEAP32[(18288+((b&255)<<2)|0)>>2]^HEAP32[(19312+((b>>>8&255)<<2)|0)>>2]^HEAP32[(20336+((b>>>16&255)<<2)|0)>>2]^HEAP32[(21360+(b>>>24<<2)|0)>>2];f=a=f+4|0;b^=HEAP32[a>>2];b=HEAP32[(18288+((b&255)<<
2)|0)>>2]^HEAP32[(19312+((b>>>8&255)<<2)|0)>>2]^HEAP32[(20336+((b>>>16&255)<<2)|0)>>2]^HEAP32[(21360+(b>>>24<<2)|0)>>2];f=a=f+4|0;b^=HEAP32[a>>2];b=HEAP32[(18288+((b&255)<<2)|0)>>2]^HEAP32[(19312+((b>>>8&255)<<2)|0)>>2]^HEAP32[(20336+((b>>>16&255)<<2)|0)>>2]^HEAP32[(21360+(b>>>24<<2)|0)>>2];g=g-32|0;a=7;break;case 9:a=10;break;case 10:a=4<=g>>>0?11:12;break;case 11:f=a=f+4|0;b^=HEAP32[a>>2];b=HEAP32[(18288+((b&255)<<2)|0)>>2]^HEAP32[(19312+((b>>>8&255)<<2)|0)>>2]^HEAP32[(20336+((b>>>16&255)<<2)|0)>>
2]^HEAP32[(21360+(b>>>24<<2)|0)>>2];g=g-4|0;a=10;break;case 12:e=f=f+4|0;a=0!=(g|0)?13:17;break;case 13:a=14;break;case 14:a=b>>>24;h=e;e=h+1|0;b=HEAP32[(18288+((a^HEAP8[h]&255)<<2)|0)>>2]^b<<8;a=15;break;case 15:g=a=g-1|0;a=0!=(a|0)?14:16;break;case 16:a=17;break;case 17:return b^=-1,(((b>>>24&255)+(b>>>8&65280)|0)+((b&65280)<<8)|0)+((b&255)<<24)|0;default:assert(0,"bad label: "+a)}}
function _inflate_fast(m,d){var c=0,a=STACKTOP;STACKTOP=STACKTOP+8|0;assert((STACKTOP|0)<(STACK_MAX|0))|0;for(c=1;;)switch(c){case 1:var b,e,g,f,k,h,l,n,p,q,t,r,s,v,u,w,y,A=a,z,x,B,C;b=m;e=d;g=HEAP32[(b+28|0)>>2];f=HEAP32[(b|0)>>2]-1|0;k=f+(HEAP32[(b+4|0)>>2]-5|0)|0;h=HEAP32[(b+12|0)>>2]-1|0;e=h+(-(e-HEAP32[(b+16|0)>>2]|0)|0)|0;l=h+(HEAP32[(b+16|0)>>2]-257|0)|0;n=HEAP32[(g+40|0)>>2];p=HEAP32[(g+44|0)>>2];q=HEAP32[(g+48|0)>>2];t=HEAP32[(g+52|0)>>2];r=HEAP32[(g+56|0)>>2];s=HEAP32[(g+60|0)>>2];v=HEAP32[(g+
76|0)>>2];u=HEAP32[(g+80|0)>>2];w=(1<<HEAP32[(g+84|0)>>2])-1|0;y=(1<<HEAP32[(g+88|0)>>2])-1|0;c=2;break;case 2:c=15>s>>>0?3:4;break;case 3:f=c=f+1|0;r=r+((HEAP8[c]&255)<<s)|0;s=s+8|0;f=c=f+1|0;r=r+((HEAP8[c]&255)<<s)|0;s=s+8|0;c=4;break;case 4:var c=A,D=v+((r&w)<<2)|0;assert(!0);HEAP16[c>>1]=HEAP16[D>>1];HEAP16[c+2>>1]=HEAP16[D+2>>1];c=5;break;case 5:z=HEAP8[A+1|0]&255;r>>>=z>>>0;s=s-z|0;z=HEAP8[A|0]&255;c=0==(z|0)?6:7;break;case 6:c=HEAP16[(A+2|0)>>1]&255;h=D=h+1|0;HEAP8[D]=c;c=78;break;case 7:c=
0!=(z&16|0)?8:72;break;case 8:x=HEAP16[(A+2|0)>>1]&65535;z&=15;c=0!=(z|0)?9:12;break;case 9:c=s>>>0<z>>>0?10:11;break;case 10:f=c=f+1|0;r=r+((HEAP8[c]&255)<<s)|0;s=s+8|0;c=11;break;case 11:x=x+(r&((1<<z)-1|0))|0;r>>>=z>>>0;s=s-z|0;c=12;break;case 12:c=15>s>>>0?13:14;break;case 13:f=c=f+1|0;r=r+((HEAP8[c]&255)<<s)|0;s=s+8|0;f=c=f+1|0;r=r+((HEAP8[c]&255)<<s)|0;s=s+8|0;c=14;break;case 14:c=A;D=u+((r&y)<<2)|0;assert(!0);HEAP16[c>>1]=HEAP16[D>>1];HEAP16[c+2>>1]=HEAP16[D+2>>1];c=15;break;case 15:z=HEAP8[A+
1|0]&255;r>>>=z>>>0;s=s-z|0;z=HEAP8[A|0]&255;c=0!=(z&16|0)?16:68;break;case 16:B=HEAP16[(A+2|0)>>1]&65535;z&=15;c=s>>>0<z>>>0?17:20;break;case 17:f=c=f+1|0;r=r+((HEAP8[c]&255)<<s)|0;s=s+8|0;c=s>>>0<z>>>0?18:19;break;case 18:f=c=f+1|0;r=r+((HEAP8[c]&255)<<s)|0;s=s+8|0;c=19;break;case 19:c=20;break;case 20:B=B+(r&((1<<z)-1|0))|0;r>>>=z>>>0;s=s-z|0;z=h-e|0;c=B>>>0>z>>>0?21:59;break;case 21:z=B-z|0;c=z>>>0>p>>>0?22:25;break;case 22:c=0!=(HEAP32[(g+7104|0)>>2]|0)?23:24;break;case 23:HEAP32[(b+24|0)>>2]=
31672;HEAP32[(g|0)>>2]=29;c=82;break;case 24:c=25;break;case 25:C=t-1|0;c=0==(q|0)?26:32;break;case 26:C=C+(n-z|0)|0;c=z>>>0<x>>>0?27:31;break;case 27:x=x-z|0;c=28;break;case 28:C=c=C+1|0;c=HEAP8[c];h=D=h+1|0;HEAP8[D]=c;c=29;break;case 29:z=c=z-1|0;c=0!=(c|0)?28:30;break;case 30:C=h+(-B|0)|0;c=31;break;case 31:c=51;break;case 32:c=q>>>0<z>>>0?33:44;break;case 33:C=C+((n+q|0)-z|0)|0;z=z-q|0;c=z>>>0<x>>>0?34:43;break;case 34:x=x-z|0;c=35;break;case 35:C=c=C+1|0;c=HEAP8[c];h=D=h+1|0;HEAP8[D]=c;c=36;
break;case 36:z=c=z-1|0;c=0!=(c|0)?35:37;break;case 37:C=t-1|0;c=q>>>0<x>>>0?38:42;break;case 38:z=q;x=x-z|0;c=39;break;case 39:C=c=C+1|0;c=HEAP8[c];h=D=h+1|0;HEAP8[D]=c;c=40;break;case 40:z=c=z-1|0;c=0!=(c|0)?39:41;break;case 41:C=h+(-B|0)|0;c=42;break;case 42:c=43;break;case 43:c=50;break;case 44:C=C+(q-z|0)|0;c=z>>>0<x>>>0?45:49;break;case 45:x=x-z|0;c=46;break;case 46:C=c=C+1|0;c=HEAP8[c];h=D=h+1|0;HEAP8[D]=c;c=47;break;case 47:z=c=z-1|0;c=0!=(c|0)?46:48;break;case 48:C=h+(-B|0)|0;c=49;break;
case 49:c=50;break;case 50:c=51;break;case 51:c=52;break;case 52:c=2<x>>>0?53:54;break;case 53:C=c=C+1|0;c=HEAP8[c];h=D=h+1|0;HEAP8[D]=c;C=c=C+1|0;c=HEAP8[c];h=D=h+1|0;HEAP8[D]=c;C=c=C+1|0;c=HEAP8[c];h=D=h+1|0;HEAP8[D]=c;x=x-3|0;c=52;break;case 54:c=0!=(x|0)?55:58;break;case 55:C=c=C+1|0;c=HEAP8[c];h=D=h+1|0;HEAP8[D]=c;c=1<x>>>0?56:57;break;case 56:C=c=C+1|0;c=HEAP8[c];h=D=h+1|0;HEAP8[D]=c;c=57;break;case 57:c=58;break;case 58:c=67;break;case 59:C=h+(-B|0)|0;c=60;break;case 60:C=c=C+1|0;c=HEAP8[c];
h=D=h+1|0;HEAP8[D]=c;C=c=C+1|0;c=HEAP8[c];h=D=h+1|0;HEAP8[D]=c;C=c=C+1|0;c=HEAP8[c];h=D=h+1|0;HEAP8[D]=c;x=x-3|0;c=61;break;case 61:c=2<x>>>0?60:62;break;case 62:c=0!=(x|0)?63:66;break;case 63:C=c=C+1|0;c=HEAP8[c];h=D=h+1|0;HEAP8[D]=c;c=1<x>>>0?64:65;break;case 64:C=c=C+1|0;c=HEAP8[c];h=D=h+1|0;HEAP8[D]=c;c=65;break;case 65:c=66;break;case 66:c=67;break;case 67:c=71;break;case 68:c=0==(z&64|0)?69:70;break;case 69:c=A;D=u+(((HEAP16[(A+2|0)>>1]&65535)+(r&((1<<z)-1|0))|0)<<2)|0;assert(!0);HEAP16[c>>
1]=HEAP16[D>>1];HEAP16[c+2>>1]=HEAP16[D+2>>1];c=15;break;case 70:HEAP32[(b+24|0)>>2]=40248;HEAP32[(g|0)>>2]=29;c=82;break;case 71:c=77;break;case 72:c=0==(z&64|0)?73:74;break;case 73:c=A;D=v+(((HEAP16[(A+2|0)>>1]&65535)+(r&((1<<z)-1|0))|0)<<2)|0;assert(!0);HEAP16[c>>1]=HEAP16[D>>1];HEAP16[c+2>>1]=HEAP16[D+2>>1];c=5;break;case 74:c=0!=(z&32|0)?75:76;break;case 75:HEAP32[(g|0)>>2]=11;c=82;break;case 76:HEAP32[(b+24|0)>>2]=33600;HEAP32[(g|0)>>2]=29;c=82;break;case 77:c=78;break;case 78:c=79;break;case 79:if(f>>>
0<k>>>0)c=80;else var F=0,c=81;break;case 80:F=h>>>0<l>>>0;c=81;break;case 81:c=F?2:82;break;case 82:x=s>>>3;f=f+(-x|0)|0;s=s-(x<<3)|0;r&=(1<<s)-1|0;HEAP32[(b|0)>>2]=f+1|0;HEAP32[(b+12|0)>>2]=h+1|0;c=f>>>0<k>>>0?83:84;break;case 83:var I=(k-f|0)+5|0,c=85;break;case 84:I=5-(f-k|0)|0;c=85;break;case 85:HEAP32[(b+4|0)>>2]=I;c=h>>>0<l>>>0?86:87;break;case 86:var G=(l-h|0)+257|0,c=88;break;case 87:G=257-(h-l|0)|0;c=88;break;case 88:HEAP32[(b+16|0)>>2]=G;HEAP32[(g+56|0)>>2]=r;HEAP32[(g+60|0)>>2]=s;STACKTOP=
a;return;default:assert(0,"bad label: "+c)}}
function _malloc(m){for(var d=0,d=1;;)switch(d){case 1:d=245>m>>>0?2:78;break;case 2:if(11>m>>>0)var c=16,d=4;else d=3;break;case 3:c=(m+11|0)&-8;d=4;break;case 4:var a=c>>>3,b=HEAP32[37264],e=b>>>(a>>>0),d=0==(e&3|0)?12:5;break;case 5:var g=(e&1^1)+a|0,f=g<<1,k=149096+(f<<2)|0,h=149096+((f+2|0)<<2)|0,l=HEAP32[h>>2],n=l+8|0,p=HEAP32[n>>2],d=(k|0)==(p|0)?6:7;break;case 6:HEAP32[37264]=b&(1<<g^-1);d=11;break;case 7:d=p>>>0<HEAP32[37268]>>>0?10:8;break;case 8:var q=p+12|0,d=(HEAP32[q>>2]|0)==(l|0)?9:
10;break;case 9:HEAP32[q>>2]=k;HEAP32[h>>2]=p;d=11;break;case 10:throw _abort(),"Reached an unreachable!";case 11:var t=g<<3;HEAP32[(l+4|0)>>2]=t|3;var r=l+(t|4)|0;HEAP32[r>>2]|=1;var s=n,d=344;break;case 12:if(c>>>0>HEAP32[37266]>>>0)d=13;else var v=c,d=161;break;case 13:d=0==(e|0)?27:14;break;case 14:var u=2<<a,w=e<<a&(u|-u|0),y=(w&(-w|0))-1|0,A=y>>>12&16,z=y>>>(A>>>0),x=z>>>5&8,B=z>>>(x>>>0),C=B>>>2&4,D=B>>>(C>>>0),F=D>>>1&2,I=D>>>(F>>>0),G=I>>>1&1,H=(x|A|C|F|G)+(I>>>(G>>>0))|0,K=H<<1,J=149096+
(K<<2)|0,E=149096+((K+2|0)<<2)|0,L=HEAP32[E>>2],Q=L+8|0,N=HEAP32[Q>>2],d=(J|0)==(N|0)?15:16;break;case 15:HEAP32[37264]=b&(1<<H^-1);d=20;break;case 16:d=N>>>0<HEAP32[37268]>>>0?19:17;break;case 17:var P=N+12|0,d=(HEAP32[P>>2]|0)==(L|0)?18:19;break;case 18:HEAP32[P>>2]=J;HEAP32[E>>2]=N;d=20;break;case 19:throw _abort(),"Reached an unreachable!";case 20:var W=H<<3,O=W-c|0;HEAP32[(L+4|0)>>2]=c|3;var T=L,Y=T+c|0;HEAP32[(T+(c|4)|0)>>2]=O|1;HEAP32[(T+W|0)>>2]=O;var S=HEAP32[37266],d=0==(S|0)?26:21;break;
case 21:var X=HEAP32[37269],R=S>>>3,V=R<<1,aa=149096+(V<<2)|0,fa=HEAP32[37264],Z=1<<R,d=0==(fa&Z|0)?22:23;break;case 22:HEAP32[37264]=fa|Z;var ka=aa,M=149096+((V+2|0)<<2)|0,d=25;break;case 23:var ga=149096+((V+2|0)<<2)|0,na=HEAP32[ga>>2];na>>>0<HEAP32[37268]>>>0?d=24:(ka=na,M=ga,d=25);break;case 24:throw _abort(),"Reached an unreachable!";case 25:HEAP32[M>>2]=X;HEAP32[(ka+12|0)>>2]=X;HEAP32[(X+8|0)>>2]=ka;HEAP32[(X+12|0)>>2]=aa;d=26;break;case 26:HEAP32[37266]=O;HEAP32[37269]=Y;s=Q;d=344;break;case 27:var ba=
HEAP32[37265];0==(ba|0)?(v=c,d=161):d=28;break;case 28:var ca=(ba&(-ba|0))-1|0,oa=ca>>>12&16,va=ca>>>(oa>>>0),pa=va>>>5&8,la=va>>>(pa>>>0),wa=la>>>2&4,qa=la>>>(wa>>>0),ea=qa>>>1&2,xa=qa>>>(ea>>>0),ja=xa>>>1&1,da=HEAP32[(149360+(((pa|oa|wa|ea|ja)+(xa>>>(ja>>>0))|0)<<2)|0)>>2],Ga=da,$=da,ma=(HEAP32[(da+4|0)>>2]&-8)-c|0,d=29;break;case 29:var ra=HEAP32[(Ga+16|0)>>2];if(0==(ra|0))d=30;else var Aa=ra,d=31;break;case 30:var Xa=HEAP32[(Ga+20|0)>>2];0==(Xa|0)?d=32:(Aa=Xa,d=31);break;case 31:var Da=(HEAP32[(Aa+
4|0)>>2]&-8)-c|0,Ua=Da>>>0<ma>>>0,sa=Ua?Da:ma,ha=Ua?Aa:$,Ga=Aa,$=ha,ma=sa,d=29;break;case 32:var U=$,gb=HEAP32[37268],d=U>>>0<gb>>>0?76:33;break;case 33:var Ka=U+c|0,Ia=Ka,d=U>>>0<Ka>>>0?34:76;break;case 34:var ia=HEAP32[($+24|0)>>2],Ba=HEAP32[($+12|0)>>2],d=(Ba|0)==($|0)?40:35;break;case 35:var Ra=HEAP32[($+8|0)>>2],d=Ra>>>0<gb>>>0?39:36;break;case 36:var Sa=Ra+12|0,d=(HEAP32[Sa>>2]|0)==($|0)?37:39;break;case 37:var ib=Ba+8|0,d=(HEAP32[ib>>2]|0)==($|0)?38:39;break;case 38:HEAP32[Sa>>2]=Ba;HEAP32[ib>>
2]=Ra;var ua=Ba,d=47;break;case 39:throw _abort(),"Reached an unreachable!";case 40:var Va=$+20|0,eb=HEAP32[Va>>2];if(0==(eb|0))d=41;else var Ea=eb,Ya=Va,d=42;break;case 41:var La=$+16|0,Ma=HEAP32[La>>2];0==(Ma|0)?(ua=0,d=47):(Ea=Ma,Ya=La,d=42);break;case 42:var Fa=Ea+20|0,Na=HEAP32[Fa>>2];0==(Na|0)?d=43:(Ea=Na,Ya=Fa,d=42);break;case 43:var Oa=Ea+16|0,jb=HEAP32[Oa>>2];0==(jb|0)?d=44:(Ea=jb,Ya=Oa,d=42);break;case 44:d=Ya>>>0<gb>>>0?46:45;break;case 45:HEAP32[Ya>>2]=0;ua=Ea;d=47;break;case 46:throw _abort(),
"Reached an unreachable!";case 47:d=0==(ia|0)?67:48;break;case 48:var Za=$+28|0,Ca=149360+(HEAP32[Za>>2]<<2)|0,d=($|0)==(HEAP32[Ca>>2]|0)?49:51;break;case 49:HEAP32[Ca>>2]=ua;d=0==(ua|0)?50:57;break;case 50:HEAP32[37265]&=1<<HEAP32[Za>>2]^-1;d=67;break;case 51:d=ia>>>0<HEAP32[37268]>>>0?55:52;break;case 52:var $a=ia+16|0,d=(HEAP32[$a>>2]|0)==($|0)?53:54;break;case 53:HEAP32[$a>>2]=ua;d=56;break;case 54:HEAP32[(ia+20|0)>>2]=ua;d=56;break;case 55:throw _abort(),"Reached an unreachable!";case 56:d=0==
(ua|0)?67:57;break;case 57:d=ua>>>0<HEAP32[37268]>>>0?66:58;break;case 58:HEAP32[(ua+24|0)>>2]=ia;var ab=HEAP32[($+16|0)>>2],d=0==(ab|0)?62:59;break;case 59:d=ab>>>0<HEAP32[37268]>>>0?61:60;break;case 60:HEAP32[(ua+16|0)>>2]=ab;HEAP32[(ab+24|0)>>2]=ua;d=62;break;case 61:throw _abort(),"Reached an unreachable!";case 62:var Ha=HEAP32[($+20|0)>>2],d=0==(Ha|0)?67:63;break;case 63:d=Ha>>>0<HEAP32[37268]>>>0?65:64;break;case 64:HEAP32[(ua+20|0)>>2]=Ha;HEAP32[(Ha+24|0)>>2]=ua;d=67;break;case 65:throw _abort(),
"Reached an unreachable!";case 66:throw _abort(),"Reached an unreachable!";case 67:d=16>ma>>>0?68:69;break;case 68:var Wa=ma+c|0;HEAP32[($+4|0)>>2]=Wa|3;var bb=U+(Wa+4|0)|0;HEAP32[bb>>2]|=1;d=77;break;case 69:HEAP32[($+4|0)>>2]=c|3;HEAP32[(U+(c|4)|0)>>2]=ma|1;HEAP32[(U+(ma+c|0)|0)>>2]=ma;var Pa=HEAP32[37266],d=0==(Pa|0)?75:70;break;case 70:var Ja=HEAP32[37269],cb=Pa>>>3,Qa=cb<<1,fb=149096+(Qa<<2)|0,hb=HEAP32[37264],ya=1<<cb,d=0==(hb&ya|0)?71:72;break;case 71:HEAP32[37264]=hb|ya;var db=fb,Ta=149096+
((Qa+2|0)<<2)|0,d=74;break;case 72:var kb=149096+((Qa+2|0)<<2)|0,lb=HEAP32[kb>>2];lb>>>0<HEAP32[37268]>>>0?d=73:(db=lb,Ta=kb,d=74);break;case 73:throw _abort(),"Reached an unreachable!";case 74:HEAP32[Ta>>2]=Ja;HEAP32[(db+12|0)>>2]=Ja;HEAP32[(Ja+8|0)>>2]=db;HEAP32[(Ja+12|0)>>2]=fb;d=75;break;case 75:HEAP32[37266]=ma;HEAP32[37269]=Ia;d=77;break;case 76:throw _abort(),"Reached an unreachable!";case 77:s=$+8|0;d=344;break;case 78:4294967231<m>>>0?(v=-1,d=161):d=79;break;case 79:var mb=m+11|0,ta=mb&-8,
nb=HEAP32[37265];0==(nb|0)?(v=ta,d=161):d=80;break;case 80:var pb=-ta|0,rb=mb>>>8;if(0==(rb|0))var qb=0,d=83;else d=81;break;case 81:16777215<ta>>>0?(qb=31,d=83):d=82;break;case 82:var sb=(rb+1048320|0)>>>16&8,vb=rb<<sb,wb=(vb+520192|0)>>>16&4,xb=vb<<wb,Db=(xb+245760|0)>>>16&2,tb=(14-(wb|sb|Db)|0)+(xb<<Db>>>15)|0,qb=ta>>>((tb+7|0)>>>0)&1|tb<<1,d=83;break;case 83:var Gb=HEAP32[(149360+(qb<<2)|0)>>2];if(0==(Gb|0))var yb=0,ub=pb,Ab=0,d=90;else d=84;break;case 84:if(31==(qb|0))var Tb=0,d=86;else d=85;
break;case 85:Tb=25-(qb>>>1)|0;d=86;break;case 86:var Kb=0,ac=pb,Hb=Gb,Ob=ta<<Tb,bc=0,d=87;break;case 87:var Lb=HEAP32[(Hb+4|0)>>2]&-8,Ub=Lb-ta|0;if(Ub>>>0<ac>>>0)d=88;else var Pb=Kb,cc=ac,d=89;break;case 88:(Lb|0)==(ta|0)?(yb=Hb,ub=Ub,Ab=Hb,d=90):(Pb=Hb,cc=Ub,d=89);break;case 89:var Vb=HEAP32[(Hb+20|0)>>2],Mb=HEAP32[(Hb+16+(Ob>>>31<<2)|0)>>2],fc=0==(Vb|0)|(Vb|0)==(Mb|0)?bc:Vb,Wb=Ob<<1;0==(Mb|0)?(yb=Pb,ub=cc,Ab=fc,d=90):(Kb=Pb,ac=cc,Hb=Mb,Ob=Wb,bc=fc,d=87);break;case 90:if(0==(Ab|0)&0==(yb|0))d=91;
else var gc=Ab,d=93;break;case 91:var dc=2<<qb,Xb=nb&(dc|-dc|0);0==(Xb|0)?(v=ta,d=161):d=92;break;case 92:var Yb=(Xb&(-Xb|0))-1|0,oc=Yb>>>12&16,Qb=Yb>>>(oc>>>0),hc=Qb>>>5&8,ic=Qb>>>(hc>>>0),ec=ic>>>2&4,kc=ic>>>(ec>>>0),jc=kc>>>1&2,Zb=kc>>>(jc>>>0),lc=Zb>>>1&1,gc=HEAP32[(149360+(((hc|oc|ec|jc|lc)+(Zb>>>(lc>>>0))|0)<<2)|0)>>2],d=93;break;case 93:if(0==(gc|0))var Bb=ub,ob=yb,d=96;else var Rb=gc,Nb=ub,$b=yb,d=94;break;case 94:var pc=(HEAP32[(Rb+4|0)>>2]&-8)-ta|0,Bc=pc>>>0<Nb>>>0,wc=Bc?pc:Nb,xc=Bc?Rb:
$b,Lc=HEAP32[(Rb+16|0)>>2];0==(Lc|0)?d=95:(Rb=Lc,Nb=wc,$b=xc,d=94);break;case 95:var Cc=HEAP32[(Rb+20|0)>>2];0==(Cc|0)?(Bb=wc,ob=xc,d=96):(Rb=Cc,Nb=wc,$b=xc,d=94);break;case 96:0==(ob|0)?(v=ta,d=161):d=97;break;case 97:Bb>>>0<(HEAP32[37266]-ta|0)>>>0?d=98:(v=ta,d=161);break;case 98:var Cb=ob,Gc=HEAP32[37268],d=Cb>>>0<Gc>>>0?159:99;break;case 99:var qc=Cb+ta|0,Mc=qc,d=Cb>>>0<qc>>>0?100:159;break;case 100:var Hc=HEAP32[(ob+24|0)>>2],rc=HEAP32[(ob+12|0)>>2],d=(rc|0)==(ob|0)?106:101;break;case 101:var ed=
HEAP32[(ob+8|0)>>2],d=ed>>>0<Gc>>>0?105:102;break;case 102:var Nc=ed+12|0,d=(HEAP32[Nc>>2]|0)==(ob|0)?103:105;break;case 103:var Oc=rc+8|0,d=(HEAP32[Oc>>2]|0)==(ob|0)?104:105;break;case 104:HEAP32[Nc>>2]=rc;HEAP32[Oc>>2]=ed;var Sb=rc,d=113;break;case 105:throw _abort(),"Reached an unreachable!";case 106:var Pc=ob+20|0,Qc=HEAP32[Pc>>2];if(0==(Qc|0))d=107;else var Dc=Qc,Fb=Pc,d=108;break;case 107:var Rc=ob+16|0,od=HEAP32[Rc>>2];0==(od|0)?(Sb=0,d=113):(Dc=od,Fb=Rc,d=108);break;case 108:var Ic=Dc+20|
0,pd=HEAP32[Ic>>2];0==(pd|0)?d=109:(Dc=pd,Fb=Ic,d=108);break;case 109:var Ec=Dc+16|0,qd=HEAP32[Ec>>2];0==(qd|0)?d=110:(Dc=qd,Fb=Ec,d=108);break;case 110:d=Fb>>>0<Gc>>>0?112:111;break;case 111:HEAP32[Fb>>2]=0;Sb=Dc;d=113;break;case 112:throw _abort(),"Reached an unreachable!";case 113:d=0==(Hc|0)?133:114;break;case 114:var Sc=ob+28|0,Tc=149360+(HEAP32[Sc>>2]<<2)|0,d=(ob|0)==(HEAP32[Tc>>2]|0)?115:117;break;case 115:HEAP32[Tc>>2]=Sb;d=0==(Sb|0)?116:123;break;case 116:HEAP32[37265]&=1<<HEAP32[Sc>>2]^
-1;d=133;break;case 117:d=Hc>>>0<HEAP32[37268]>>>0?121:118;break;case 118:var Uc=Hc+16|0,d=(HEAP32[Uc>>2]|0)==(ob|0)?119:120;break;case 119:HEAP32[Uc>>2]=Sb;d=122;break;case 120:HEAP32[(Hc+20|0)>>2]=Sb;d=122;break;case 121:throw _abort(),"Reached an unreachable!";case 122:d=0==(Sb|0)?133:123;break;case 123:d=Sb>>>0<HEAP32[37268]>>>0?132:124;break;case 124:HEAP32[(Sb+24|0)>>2]=Hc;var Vc=HEAP32[(ob+16|0)>>2],d=0==(Vc|0)?128:125;break;case 125:d=Vc>>>0<HEAP32[37268]>>>0?127:126;break;case 126:HEAP32[(Sb+
16|0)>>2]=Vc;HEAP32[(Vc+24|0)>>2]=Sb;d=128;break;case 127:throw _abort(),"Reached an unreachable!";case 128:var sc=HEAP32[(ob+20|0)>>2],d=0==(sc|0)?133:129;break;case 129:d=sc>>>0<HEAP32[37268]>>>0?131:130;break;case 130:HEAP32[(Sb+20|0)>>2]=sc;HEAP32[(sc+24|0)>>2]=Sb;d=133;break;case 131:throw _abort(),"Reached an unreachable!";case 132:throw _abort(),"Reached an unreachable!";case 133:d=16>Bb>>>0?134:135;break;case 134:var rd=Bb+ta|0;HEAP32[(ob+4|0)>>2]=rd|3;var yc=Cb+(rd+4|0)|0;HEAP32[yc>>2]|=
1;d=160;break;case 135:HEAP32[(ob+4|0)>>2]=ta|3;HEAP32[(Cb+(ta|4)|0)>>2]=Bb|1;HEAP32[(Cb+(Bb+ta|0)|0)>>2]=Bb;var Wc=Bb>>>3,d=256>Bb>>>0?136:141;break;case 136:var fd=Wc<<1,zc=149096+(fd<<2)|0,Xc=HEAP32[37264],sd=1<<Wc,d=0==(Xc&sd|0)?137:138;break;case 137:HEAP32[37264]=Xc|sd;var Jc=zc,Yc=149096+((fd+2|0)<<2)|0,d=140;break;case 138:var Zc=149096+((fd+2|0)<<2)|0,Ib=HEAP32[Zc>>2];Ib>>>0<HEAP32[37268]>>>0?d=139:(Jc=Ib,Yc=Zc,d=140);break;case 139:throw _abort(),"Reached an unreachable!";case 140:HEAP32[Yc>>
2]=Mc;HEAP32[(Jc+12|0)>>2]=Mc;HEAP32[(Cb+(ta+8|0)|0)>>2]=Jc;HEAP32[(Cb+(ta+12|0)|0)>>2]=zc;d=160;break;case 141:var mc=qc,Fc=Bb>>>8;if(0==(Fc|0))var Ac=0,d=144;else d=142;break;case 142:16777215<Bb>>>0?(Ac=31,d=144):d=143;break;case 143:var td=(Fc+1048320|0)>>>16&8,$c=Fc<<td,gd=($c+520192|0)>>>16&4,ud=$c<<gd,ad=(ud+245760|0)>>>16&2,vd=(14-(gd|td|ad)|0)+(ud<<ad>>>15)|0,Ac=Bb>>>((vd+7|0)>>>0)&1|vd<<1,d=144;break;case 144:var bd=149360+(Ac<<2)|0;HEAP32[(Cb+(ta+28|0)|0)>>2]=Ac;var hd=Cb+(ta+16|0)|0;HEAP32[(Cb+
(ta+20|0)|0)>>2]=0;HEAP32[hd>>2]=0;var Zd=HEAP32[37265],$d=1<<Ac,d=0==(Zd&$d|0)?145:146;break;case 145:HEAP32[37265]=Zd|$d;HEAP32[bd>>2]=mc;HEAP32[(Cb+(ta+24|0)|0)>>2]=bd;HEAP32[(Cb+(ta+12|0)|0)>>2]=mc;HEAP32[(Cb+(ta+8|0)|0)>>2]=mc;d=160;break;case 146:var id=HEAP32[bd>>2];if(31==(Ac|0))var ae=0,d=148;else d=147;break;case 147:ae=25-(Ac>>>1)|0;d=148;break;case 148:if((HEAP32[(id+4|0)>>2]&-8|0)==(Bb|0))var wd=id,d=155;else d=149;break;case 149:var jd=id,Md=Bb<<ae,d=151;break;case 150:var be=Md<<1;
(HEAP32[(xd+4|0)>>2]&-8|0)==(Bb|0)?(wd=xd,d=155):(jd=xd,Md=be,d=151);break;case 151:var Nd=jd+16+(Md>>>31<<2)|0,xd=HEAP32[Nd>>2],d=0==(xd|0)?152:150;break;case 152:d=Nd>>>0<HEAP32[37268]>>>0?154:153;break;case 153:HEAP32[Nd>>2]=mc;HEAP32[(Cb+(ta+24|0)|0)>>2]=jd;HEAP32[(Cb+(ta+12|0)|0)>>2]=mc;HEAP32[(Cb+(ta+8|0)|0)>>2]=mc;d=160;break;case 154:throw _abort(),"Reached an unreachable!";case 155:var yd=wd+8|0,zd=HEAP32[yd>>2],Od=HEAP32[37268],d=wd>>>0<Od>>>0?158:156;break;case 156:d=zd>>>0<Od>>>0?158:
157;break;case 157:HEAP32[(zd+12|0)>>2]=mc;HEAP32[yd>>2]=mc;HEAP32[(Cb+(ta+8|0)|0)>>2]=zd;HEAP32[(Cb+(ta+12|0)|0)>>2]=wd;HEAP32[(Cb+(ta+24|0)|0)>>2]=0;d=160;break;case 158:throw _abort(),"Reached an unreachable!";case 159:throw _abort(),"Reached an unreachable!";case 160:s=ob+8|0;d=344;break;case 161:var kd=HEAP32[37266],d=v>>>0>kd>>>0?166:162;break;case 162:var Ad=kd-v|0,Kc=HEAP32[37269],d=15<Ad>>>0?163:164;break;case 163:var Bd=Kc;HEAP32[37269]=Bd+v|0;HEAP32[37266]=Ad;HEAP32[(Bd+(v+4|0)|0)>>2]=
Ad|1;HEAP32[(Bd+kd|0)>>2]=Ad;HEAP32[(Kc+4|0)>>2]=v|3;d=165;break;case 164:HEAP32[37266]=0;HEAP32[37269]=0;HEAP32[(Kc+4|0)>>2]=kd|3;var ce=Kc+(kd+4|0)|0;HEAP32[ce>>2]|=1;d=165;break;case 165:s=Kc+8|0;d=344;break;case 166:var Cd=HEAP32[37267],d=v>>>0<Cd>>>0?167:168;break;case 167:var de=Cd-v|0;HEAP32[37267]=de;var Pd=HEAP32[37270],Dd=Pd;HEAP32[37270]=Dd+v|0;HEAP32[(Dd+(v+4|0)|0)>>2]=de|1;HEAP32[(Pd+4|0)>>2]=v|3;s=Pd+8|0;d=344;break;case 168:d=0==(HEAP32[37250]|0)?169:172;break;case 169:var Ed=_sysconf(8),
d=0==((Ed-1|0)&Ed|0)?171:170;break;case 170:throw _abort(),"Reached an unreachable!";case 171:HEAP32[37252]=Ed;HEAP32[37251]=Ed;HEAP32[37253]=-1;HEAP32[37254]=2097152;HEAP32[37255]=0;HEAP32[37375]=0;var Ae=_time(0)&-16^1431655768;HEAP32[37250]=Ae;d=172;break;case 172:var th=v+48|0,kf=HEAP32[37252],lf=v+47|0,mf=kf+lf|0,nf=-kf|0,Fd=mf&nf;Fd>>>0>v>>>0?d=173:(s=0,d=344);break;case 173:var of=HEAP32[37374],d=0==(of|0)?175:174;break;case 174:var pf=HEAP32[37372],qf=pf+Fd|0;qf>>>0<=pf>>>0|qf>>>0>of>>>0?
(s=0,d=344):d=175;break;case 175:if(0==(HEAP32[37375]&4|0))d=176;else var rf=0,d=199;break;case 176:var sf=HEAP32[37270],d=0==(sf|0)?182:177;break;case 177:var tf=sf,Qd=149504,d=178;break;case 178:var uf=Qd|0,vf=HEAP32[uf>>2],d=vf>>>0>tf>>>0?180:179;break;case 179:var wf=Qd+4|0,d=(vf+HEAP32[wf>>2]|0)>>>0>tf>>>0?181:180;break;case 180:var xf=HEAP32[(Qd+8|0)>>2];0==(xf|0)?d=182:(Qd=xf,d=178);break;case 181:d=0==(Qd|0)?182:189;break;case 182:var ee=_sbrk(0);if(-1==(ee|0))var Gd=0,d=198;else d=183;break;
case 183:var Be=ee,yf=HEAP32[37251],zf=yf-1|0;if(0==(zf&Be|0))var ld=Fd,d=185;else d=184;break;case 184:ld=(Fd-Be|0)+((zf+Be|0)&(-yf|0))|0;d=185;break;case 185:var Af=HEAP32[37372],Bf=Af+ld|0;ld>>>0>v>>>0&2147483647>ld>>>0?d=186:(Gd=0,d=198);break;case 186:var Cf=HEAP32[37374],d=0==(Cf|0)?188:187;break;case 187:Bf>>>0<=Af>>>0|Bf>>>0>Cf>>>0?(Gd=0,d=198):d=188;break;case 188:var Df=_sbrk(ld),Ef=(Df|0)==(ee|0),Ce=Ef?ee:-1,fe=Ef?ld:0,ge=Df,cd=ld,d=191;break;case 189:var he=(mf-HEAP32[37267]|0)&nf;2147483647>
he>>>0?d=190:(Gd=0,d=198);break;case 190:var De=_sbrk(he),Ff=(De|0)==(HEAP32[uf>>2]+HEAP32[wf>>2]|0),uh=Ff?he:0,Ce=Ff?De:-1,fe=uh,ge=De,cd=he,d=191;break;case 191:var vh=-cd|0;if(-1==(Ce|0))d=192;else var Eb=fe,za=Ce,d=202;break;case 192:if(-1!=(ge|0)&2147483647>cd>>>0&cd>>>0<th>>>0)d=193;else var Ee=cd,d=197;break;case 193:var Gf=HEAP32[37252],Fe=((lf-cd|0)+Gf|0)&(-Gf|0);2147483647>Fe>>>0?d=194:(Ee=cd,d=197);break;case 194:d=-1==(_sbrk(Fe)|0)?196:195;break;case 195:Ee=Fe+cd|0;d=197;break;case 196:_sbrk(vh);
Gd=fe;d=198;break;case 197:-1==(ge|0)?(Gd=fe,d=198):(Eb=Ee,za=ge,d=202);break;case 198:HEAP32[37375]|=4;rf=Gd;d=199;break;case 199:d=2147483647>Fd>>>0?200:343;break;case 200:var ie=_sbrk(Fd),Ge=_sbrk(0),d=-1!=(Ge|0)&-1!=(ie|0)&ie>>>0<Ge>>>0?201:343;break;case 201:var Hf=Ge-ie|0,If=Hf>>>0>(v+40|0)>>>0,wh=If?Hf:rf;If?(Eb=wh,za=ie,d=202):d=343;break;case 202:var He=HEAP32[37372]+Eb|0;HEAP32[37372]=He;d=He>>>0>HEAP32[37373]>>>0?203:204;break;case 203:HEAP32[37373]=He;d=204;break;case 204:var zb=HEAP32[37270];
if(0==(zb|0))d=205;else var Rd=149504,d=212;break;case 205:var Jf=HEAP32[37268],d=0==(Jf|0)|za>>>0<Jf>>>0?206:207;break;case 206:HEAP32[37268]=za;d=207;break;case 207:HEAP32[37376]=za;HEAP32[37377]=Eb;HEAP32[37379]=0;HEAP32[37273]=HEAP32[37250];HEAP32[37272]=-1;var Ie=0,d=208;break;case 208:var Je=Ie<<1,Kf=149096+(Je<<2)|0;HEAP32[(149096+((Je+3|0)<<2)|0)>>2]=Kf;HEAP32[(149096+((Je+2|0)<<2)|0)>>2]=Kf;var Lf=Ie+1|0;32>Lf>>>0?(Ie=Lf,d=208):d=209;break;case 209:var xh=Eb-40|0,Mf=za+8|0;if(0==(Mf&7|0))var je=
0,d=211;else d=210;break;case 210:je=(-Mf|0)&7;d=211;break;case 211:var Nf=xh-je|0;HEAP32[37270]=za+je|0;HEAP32[37267]=Nf;HEAP32[(za+(je+4|0)|0)>>2]=Nf|1;HEAP32[(za+(Eb-36|0)|0)>>2]=40;HEAP32[37271]=HEAP32[37254];d=341;break;case 212:var Of=HEAP32[(Rd|0)>>2],Pf=Rd+4|0,Qf=HEAP32[Pf>>2],d=(za|0)==(Of+Qf|0)?214:213;break;case 213:var Rf=HEAP32[(Rd+8|0)>>2];0==(Rf|0)?d=219:(Rd=Rf,d=212);break;case 214:d=0==(HEAP32[(Rd+12|0)>>2]&8|0)?215:219;break;case 215:var Sf=zb,d=Sf>>>0>=Of>>>0&Sf>>>0<za>>>0?216:
219;break;case 216:HEAP32[Pf>>2]=Qf+Eb|0;var Tf=HEAP32[37270],Uf=HEAP32[37267]+Eb|0,Ke=Tf,Vf=Tf+8|0;if(0==(Vf&7|0))var ke=0,d=218;else d=217;break;case 217:ke=(-Vf|0)&7;d=218;break;case 218:var Wf=Uf-ke|0;HEAP32[37270]=Ke+ke|0;HEAP32[37267]=Wf;HEAP32[(Ke+(ke+4|0)|0)>>2]=Wf|1;HEAP32[(Ke+(Uf+4|0)|0)>>2]=40;HEAP32[37271]=HEAP32[37254];d=341;break;case 219:d=za>>>0<HEAP32[37268]>>>0?220:221;break;case 220:HEAP32[37268]=za;d=221;break;case 221:var yh=za+Eb|0,Sd=149504,d=222;break;case 222:var Xf=Sd|0,
d=(HEAP32[Xf>>2]|0)==(yh|0)?224:223;break;case 223:var Yf=HEAP32[(Sd+8|0)>>2];0==(Yf|0)?d=306:(Sd=Yf,d=222);break;case 224:d=0==(HEAP32[(Sd+12|0)>>2]&8|0)?225:306;break;case 225:HEAP32[Xf>>2]=za;var Zf=Sd+4|0;HEAP32[Zf>>2]=HEAP32[Zf>>2]+Eb|0;var $f=za+8|0;if(0==($f&7|0))var Td=0,d=227;else d=226;break;case 226:Td=(-$f|0)&7;d=227;break;case 227:var zh=za+Td|0,ag=za+(Eb+8|0)|0;if(0==(ag&7|0))var tc=0,d=229;else d=228;break;case 228:tc=(-ag|0)&7;d=229;break;case 229:var Le=za+(tc+Eb|0)|0,Ud=Le,Jb=Td+
v|0,bg=za+Jb|0,le=bg,me=(Le-zh|0)-v|0;HEAP32[(za+(Td+4|0)|0)>>2]=v|3;d=(Ud|0)==(HEAP32[37270]|0)?230:231;break;case 230:var cg=HEAP32[37267]+me|0;HEAP32[37267]=cg;HEAP32[37270]=le;HEAP32[(za+(Jb+4|0)|0)>>2]=cg|1;d=305;break;case 231:d=(Ud|0)==(HEAP32[37269]|0)?232:233;break;case 232:var ne=HEAP32[37266]+me|0;HEAP32[37266]=ne;HEAP32[37269]=le;HEAP32[(za+(Jb+4|0)|0)>>2]=ne|1;HEAP32[(za+(ne+Jb|0)|0)>>2]=ne;d=305;break;case 233:var Me=Eb+4|0,oe=HEAP32[(za+(Me+tc|0)|0)>>2];if(1==(oe&3|0))d=234;else var dg=
Ud,uc=me,d=281;break;case 234:var eg=oe&-8,fg=oe>>>3,d=256>oe>>>0?235:247;break;case 235:var Hd=HEAP32[(za+((tc|8)+Eb|0)|0)>>2],Id=HEAP32[(za+((Eb+12|0)+tc|0)|0)>>2],gg=149096+(fg<<1<<2)|0,d=(Hd|0)==(gg|0)?238:236;break;case 236:d=Hd>>>0<HEAP32[37268]>>>0?246:237;break;case 237:d=(HEAP32[(Hd+12|0)>>2]|0)==(Ud|0)?238:246;break;case 238:d=(Id|0)==(Hd|0)?239:240;break;case 239:HEAP32[37264]&=1<<fg^-1;d=280;break;case 240:d=(Id|0)==(gg|0)?241:242;break;case 241:var hg=Id+8|0,d=244;break;case 242:d=Id>>>
0<HEAP32[37268]>>>0?245:243;break;case 243:var ig=Id+8|0;(HEAP32[ig>>2]|0)==(Ud|0)?(hg=ig,d=244):d=245;break;case 244:HEAP32[(Hd+12|0)>>2]=Id;HEAP32[hg>>2]=Hd;d=280;break;case 245:throw _abort(),"Reached an unreachable!";case 246:throw _abort(),"Reached an unreachable!";case 247:var Vd=Le,Wd=HEAP32[(za+((tc|24)+Eb|0)|0)>>2],pe=HEAP32[(za+((Eb+12|0)+tc|0)|0)>>2],d=(pe|0)==(Vd|0)?253:248;break;case 248:var Ne=HEAP32[(za+((tc|8)+Eb|0)|0)>>2],d=Ne>>>0<HEAP32[37268]>>>0?252:249;break;case 249:var jg=Ne+
12|0,d=(HEAP32[jg>>2]|0)==(Vd|0)?250:252;break;case 250:var kg=pe+8|0,d=(HEAP32[kg>>2]|0)==(Vd|0)?251:252;break;case 251:HEAP32[jg>>2]=pe;HEAP32[kg>>2]=Ne;var nc=pe,d=260;break;case 252:throw _abort(),"Reached an unreachable!";case 253:var lg=tc|16,mg=za+(Me+lg|0)|0,ng=HEAP32[mg>>2];if(0==(ng|0))d=254;else var Jd=ng,Xd=mg,d=255;break;case 254:var og=za+(lg+Eb|0)|0,pg=HEAP32[og>>2];0==(pg|0)?(nc=0,d=260):(Jd=pg,Xd=og,d=255);break;case 255:var qg=Jd+20|0,rg=HEAP32[qg>>2];0==(rg|0)?d=256:(Jd=rg,Xd=qg,
d=255);break;case 256:var sg=Jd+16|0,tg=HEAP32[sg>>2];0==(tg|0)?d=257:(Jd=tg,Xd=sg,d=255);break;case 257:d=Xd>>>0<HEAP32[37268]>>>0?259:258;break;case 258:HEAP32[Xd>>2]=0;nc=Jd;d=260;break;case 259:throw _abort(),"Reached an unreachable!";case 260:d=0==(Wd|0)?280:261;break;case 261:var ug=za+((Eb+28|0)+tc|0)|0,vg=149360+(HEAP32[ug>>2]<<2)|0,d=(Vd|0)==(HEAP32[vg>>2]|0)?262:264;break;case 262:HEAP32[vg>>2]=nc;d=0==(nc|0)?263:270;break;case 263:HEAP32[37265]&=1<<HEAP32[ug>>2]^-1;d=280;break;case 264:d=
Wd>>>0<HEAP32[37268]>>>0?268:265;break;case 265:var wg=Wd+16|0,d=(HEAP32[wg>>2]|0)==(Vd|0)?266:267;break;case 266:HEAP32[wg>>2]=nc;d=269;break;case 267:HEAP32[(Wd+20|0)>>2]=nc;d=269;break;case 268:throw _abort(),"Reached an unreachable!";case 269:d=0==(nc|0)?280:270;break;case 270:d=nc>>>0<HEAP32[37268]>>>0?279:271;break;case 271:HEAP32[(nc+24|0)>>2]=Wd;var xg=tc|16,qe=HEAP32[(za+(xg+Eb|0)|0)>>2],d=0==(qe|0)?275:272;break;case 272:d=qe>>>0<HEAP32[37268]>>>0?274:273;break;case 273:HEAP32[(nc+16|0)>>
2]=qe;HEAP32[(qe+24|0)>>2]=nc;d=275;break;case 274:throw _abort(),"Reached an unreachable!";case 275:var re=HEAP32[(za+(Me+xg|0)|0)>>2],d=0==(re|0)?280:276;break;case 276:d=re>>>0<HEAP32[37268]>>>0?278:277;break;case 277:HEAP32[(nc+20|0)>>2]=re;HEAP32[(re+24|0)>>2]=nc;d=280;break;case 278:throw _abort(),"Reached an unreachable!";case 279:throw _abort(),"Reached an unreachable!";case 280:var Ah=eg+me|0,dg=za+((eg|tc)+Eb|0)|0,uc=Ah,d=281;break;case 281:var yg=dg+4|0;HEAP32[yg>>2]&=-2;HEAP32[(za+(Jb+
4|0)|0)>>2]=uc|1;HEAP32[(za+(uc+Jb|0)|0)>>2]=uc;var zg=uc>>>3,d=256>uc>>>0?282:287;break;case 282:var Oe=zg<<1,Ag=149096+(Oe<<2)|0,Bg=HEAP32[37264],Cg=1<<zg,d=0==(Bg&Cg|0)?283:284;break;case 283:HEAP32[37264]=Bg|Cg;var Pe=Ag,Dg=149096+((Oe+2|0)<<2)|0,d=286;break;case 284:var Eg=149096+((Oe+2|0)<<2)|0,Fg=HEAP32[Eg>>2];Fg>>>0<HEAP32[37268]>>>0?d=285:(Pe=Fg,Dg=Eg,d=286);break;case 285:throw _abort(),"Reached an unreachable!";case 286:HEAP32[Dg>>2]=le;HEAP32[(Pe+12|0)>>2]=le;HEAP32[(za+(Jb+8|0)|0)>>2]=
Pe;HEAP32[(za+(Jb+12|0)|0)>>2]=Ag;d=305;break;case 287:var dd=bg,Qe=uc>>>8;if(0==(Qe|0))var md=0,d=290;else d=288;break;case 288:16777215<uc>>>0?(md=31,d=290):d=289;break;case 289:var Gg=(Qe+1048320|0)>>>16&8,Hg=Qe<<Gg,Ig=(Hg+520192|0)>>>16&4,Jg=Hg<<Ig,Kg=(Jg+245760|0)>>>16&2,Lg=(14-(Ig|Gg|Kg)|0)+(Jg<<Kg>>>15)|0,md=uc>>>((Lg+7|0)>>>0)&1|Lg<<1,d=290;break;case 290:var Re=149360+(md<<2)|0;HEAP32[(za+(Jb+28|0)|0)>>2]=md;var Bh=za+(Jb+16|0)|0;HEAP32[(za+(Jb+20|0)|0)>>2]=0;HEAP32[Bh>>2]=0;var Mg=HEAP32[37265],
Ng=1<<md,d=0==(Mg&Ng|0)?291:292;break;case 291:HEAP32[37265]=Mg|Ng;HEAP32[Re>>2]=dd;HEAP32[(za+(Jb+24|0)|0)>>2]=Re;HEAP32[(za+(Jb+12|0)|0)>>2]=dd;HEAP32[(za+(Jb+8|0)|0)>>2]=dd;d=305;break;case 292:var Se=HEAP32[Re>>2];if(31==(md|0))var Og=0,d=294;else d=293;break;case 293:Og=25-(md>>>1)|0;d=294;break;case 294:if((HEAP32[(Se+4|0)>>2]&-8|0)==(uc|0))var se=Se,d=301;else d=295;break;case 295:var Te=Se,Ue=uc<<Og,d=297;break;case 296:var Ch=Ue<<1;(HEAP32[(te+4|0)>>2]&-8|0)==(uc|0)?(se=te,d=301):(Te=te,
Ue=Ch,d=297);break;case 297:var Ve=Te+16+(Ue>>>31<<2)|0,te=HEAP32[Ve>>2],d=0==(te|0)?298:296;break;case 298:d=Ve>>>0<HEAP32[37268]>>>0?300:299;break;case 299:HEAP32[Ve>>2]=dd;HEAP32[(za+(Jb+24|0)|0)>>2]=Te;HEAP32[(za+(Jb+12|0)|0)>>2]=dd;HEAP32[(za+(Jb+8|0)|0)>>2]=dd;d=305;break;case 300:throw _abort(),"Reached an unreachable!";case 301:var Pg=se+8|0,We=HEAP32[Pg>>2],Qg=HEAP32[37268],d=se>>>0<Qg>>>0?304:302;break;case 302:d=We>>>0<Qg>>>0?304:303;break;case 303:HEAP32[(We+12|0)>>2]=dd;HEAP32[Pg>>2]=
dd;HEAP32[(za+(Jb+8|0)|0)>>2]=We;HEAP32[(za+(Jb+12|0)|0)>>2]=se;HEAP32[(za+(Jb+24|0)|0)>>2]=0;d=305;break;case 304:throw _abort(),"Reached an unreachable!";case 305:s=za+(Td|8)|0;d=344;break;case 306:var Kd=zb,ue=149504,d=307;break;case 307:var ve=HEAP32[(ue|0)>>2],d=ve>>>0>Kd>>>0?309:308;break;case 308:var Xe=HEAP32[(ue+4|0)>>2],Ye=ve+Xe|0,d=Ye>>>0>Kd>>>0?310:309;break;case 309:ue=HEAP32[(ue+8|0)>>2];d=307;break;case 310:var Dh=Xe-47|0,Rg=ve+(Xe-39|0)|0;if(0==(Rg&7|0))var Sg=0,d=312;else d=311;break;
case 311:Sg=(-Rg|0)&7;d=312;break;case 312:var Tg=ve+(Dh+Sg|0)|0,Ld=Tg>>>0<(zb+16|0)>>>0?Kd:Tg,Yd=Ld+8|0,Eh=Yd,Fh=Eb-40|0,Ug=za+8|0;if(0==(Ug&7|0))var we=0,d=314;else d=313;break;case 313:we=(-Ug|0)&7;d=314;break;case 314:var Vg=Fh-we|0;HEAP32[37270]=za+we|0;HEAP32[37267]=Vg;HEAP32[(za+(we+4|0)|0)>>2]=Vg|1;HEAP32[(za+(Eb-36|0)|0)>>2]=40;HEAP32[37271]=HEAP32[37254];HEAP32[(Ld+4|0)>>2]=27;assert(!0);HEAP32[Yd>>2]=HEAP32[37376];HEAP32[Yd+4>>2]=HEAP32[37377];HEAP32[Yd+8>>2]=HEAP32[37378];HEAP32[Yd+12>>
2]=HEAP32[37379];HEAP32[37376]=za;HEAP32[37377]=Eb;HEAP32[37379]=0;HEAP32[37378]=Eh;var Wg=Ld+28|0;HEAP32[Wg>>2]=7;if((Ld+32|0)>>>0<Ye>>>0)var Ze=Wg,d=315;else d=316;break;case 315:var Xg=Ze+4|0;HEAP32[Xg>>2]=7;(Ze+8|0)>>>0<Ye>>>0?(Ze=Xg,d=315):d=316;break;case 316:d=(Ld|0)==(Kd|0)?341:317;break;case 317:var vc=Ld-zb|0,Gh=Kd+vc|0,Yg=Kd+(vc+4|0)|0;HEAP32[Yg>>2]&=-2;HEAP32[(zb+4|0)>>2]=vc|1;HEAP32[Gh>>2]=vc;var Zg=vc>>>3,d=256>vc>>>0?318:323;break;case 318:var $e=Zg<<1,$g=149096+($e<<2)|0,ah=HEAP32[37264],
bh=1<<Zg,d=0==(ah&bh|0)?319:320;break;case 319:HEAP32[37264]=ah|bh;var af=$g,ch=149096+(($e+2|0)<<2)|0,d=322;break;case 320:var dh=149096+(($e+2|0)<<2)|0,eh=HEAP32[dh>>2];eh>>>0<HEAP32[37268]>>>0?d=321:(af=eh,ch=dh,d=322);break;case 321:throw _abort(),"Reached an unreachable!";case 322:HEAP32[ch>>2]=zb;HEAP32[(af+12|0)>>2]=zb;HEAP32[(zb+8|0)>>2]=af;HEAP32[(zb+12|0)>>2]=$g;d=341;break;case 323:var xe=zb,bf=vc>>>8;if(0==(bf|0))var nd=0,d=326;else d=324;break;case 324:16777215<vc>>>0?(nd=31,d=326):d=
325;break;case 325:var fh=(bf+1048320|0)>>>16&8,gh=bf<<fh,hh=(gh+520192|0)>>>16&4,ih=gh<<hh,jh=(ih+245760|0)>>>16&2,kh=(14-(hh|fh|jh)|0)+(ih<<jh>>>15)|0,nd=vc>>>((kh+7|0)>>>0)&1|kh<<1,d=326;break;case 326:var cf=149360+(nd<<2)|0;HEAP32[(zb+28|0)>>2]=nd;HEAP32[(zb+20|0)>>2]=0;HEAP32[(zb+16|0)>>2]=0;var lh=HEAP32[37265],mh=1<<nd,d=0==(lh&mh|0)?327:328;break;case 327:HEAP32[37265]=lh|mh;HEAP32[cf>>2]=xe;HEAP32[(zb+24|0)>>2]=cf;HEAP32[(zb+12|0)>>2]=zb;HEAP32[(zb+8|0)>>2]=zb;d=341;break;case 328:var df=
HEAP32[cf>>2];if(31==(nd|0))var nh=0,d=330;else d=329;break;case 329:nh=25-(nd>>>1)|0;d=330;break;case 330:if((HEAP32[(df+4|0)>>2]&-8|0)==(vc|0))var ye=df,d=337;else d=331;break;case 331:var ef=df,ff=vc<<nh,d=333;break;case 332:var Hh=ff<<1;(HEAP32[(ze+4|0)>>2]&-8|0)==(vc|0)?(ye=ze,d=337):(ef=ze,ff=Hh,d=333);break;case 333:var gf=ef+16+(ff>>>31<<2)|0,ze=HEAP32[gf>>2],d=0==(ze|0)?334:332;break;case 334:d=gf>>>0<HEAP32[37268]>>>0?336:335;break;case 335:HEAP32[gf>>2]=xe;HEAP32[(zb+24|0)>>2]=ef;HEAP32[(zb+
12|0)>>2]=zb;HEAP32[(zb+8|0)>>2]=zb;d=341;break;case 336:throw _abort(),"Reached an unreachable!";case 337:var oh=ye+8|0,hf=HEAP32[oh>>2],ph=HEAP32[37268],d=ye>>>0<ph>>>0?340:338;break;case 338:d=hf>>>0<ph>>>0?340:339;break;case 339:HEAP32[(hf+12|0)>>2]=xe;HEAP32[oh>>2]=xe;HEAP32[(zb+8|0)>>2]=hf;HEAP32[(zb+12|0)>>2]=ye;HEAP32[(zb+24|0)>>2]=0;d=341;break;case 340:throw _abort(),"Reached an unreachable!";case 341:var qh=HEAP32[37267],d=qh>>>0>v>>>0?342:343;break;case 342:var rh=qh-v|0;HEAP32[37267]=
rh;var jf=HEAP32[37270],sh=jf;HEAP32[37270]=sh+v|0;HEAP32[(sh+(v+4|0)|0)>>2]=rh|1;HEAP32[(jf+4|0)>>2]=v|3;s=jf+8|0;d=344;break;case 343:var Ih=___errno_location();HEAP32[Ih>>2]=12;s=0;d=344;break;case 344:return s;default:assert(0,"bad label: "+d)}}Module._malloc=_malloc;
function _free(m){for(var d=0,d=1;;)switch(d){case 1:d=0==(m|0)?143:2;break;case 2:var c=m-8|0,a=c,b=HEAP32[37268],d=c>>>0<b>>>0?142:3;break;case 3:var e=HEAP32[(m-4|0)>>2],g=e&3,d=1==(g|0)?142:4;break;case 4:var f=e&-8,k=m+(f-8|0)|0,h=k;if(0==(e&1|0))d=5;else var l=a,n=f,d=56;break;case 5:var p=HEAP32[c>>2],d=0==(g|0)?143:6;break;case 6:var q=-8-p|0,t=m+q|0,r=t,s=p+f|0,d=t>>>0<b>>>0?142:7;break;case 7:d=(r|0)==(HEAP32[37269]|0)?54:8;break;case 8:var v=p>>>3,d=256>p>>>0?9:21;break;case 9:var u=HEAP32[(m+
(q+8|0)|0)>>2],w=HEAP32[(m+(q+12|0)|0)>>2],y=149096+(v<<1<<2)|0,d=(u|0)==(y|0)?12:10;break;case 10:d=u>>>0<b>>>0?20:11;break;case 11:d=(HEAP32[(u+12|0)>>2]|0)==(r|0)?12:20;break;case 12:d=(w|0)==(u|0)?13:14;break;case 13:HEAP32[37264]&=1<<v^-1;l=r;n=s;d=56;break;case 14:d=(w|0)==(y|0)?15:16;break;case 15:var A=w+8|0,d=18;break;case 16:d=w>>>0<b>>>0?19:17;break;case 17:var z=w+8|0;(HEAP32[z>>2]|0)==(r|0)?(A=z,d=18):d=19;break;case 18:HEAP32[(u+12|0)>>2]=w;HEAP32[A>>2]=u;l=r;n=s;d=56;break;case 19:throw _abort(),
"Reached an unreachable!";case 20:throw _abort(),"Reached an unreachable!";case 21:var x=t,B=HEAP32[(m+(q+24|0)|0)>>2],C=HEAP32[(m+(q+12|0)|0)>>2],d=(C|0)==(x|0)?27:22;break;case 22:var D=HEAP32[(m+(q+8|0)|0)>>2],d=D>>>0<b>>>0?26:23;break;case 23:var F=D+12|0,d=(HEAP32[F>>2]|0)==(x|0)?24:26;break;case 24:var I=C+8|0,d=(HEAP32[I>>2]|0)==(x|0)?25:26;break;case 25:HEAP32[F>>2]=C;HEAP32[I>>2]=D;var G=C,d=34;break;case 26:throw _abort(),"Reached an unreachable!";case 27:var H=m+(q+20|0)|0,K=HEAP32[H>>
2];if(0==(K|0))d=28;else var J=K,E=H,d=29;break;case 28:var L=m+(q+16|0)|0,Q=HEAP32[L>>2];0==(Q|0)?(G=0,d=34):(J=Q,E=L,d=29);break;case 29:var N=J+20|0,P=HEAP32[N>>2];0==(P|0)?d=30:(J=P,E=N,d=29);break;case 30:var W=J+16|0,O=HEAP32[W>>2];0==(O|0)?d=31:(J=O,E=W,d=29);break;case 31:d=E>>>0<b>>>0?33:32;break;case 32:HEAP32[E>>2]=0;G=J;d=34;break;case 33:throw _abort(),"Reached an unreachable!";case 34:0==(B|0)?(l=r,n=s,d=56):d=35;break;case 35:var T=m+(q+28|0)|0,Y=149360+(HEAP32[T>>2]<<2)|0,d=(x|0)==
(HEAP32[Y>>2]|0)?36:38;break;case 36:HEAP32[Y>>2]=G;d=0==(G|0)?37:44;break;case 37:HEAP32[37265]&=1<<HEAP32[T>>2]^-1;l=r;n=s;d=56;break;case 38:d=B>>>0<HEAP32[37268]>>>0?42:39;break;case 39:var S=B+16|0,d=(HEAP32[S>>2]|0)==(x|0)?40:41;break;case 40:HEAP32[S>>2]=G;d=43;break;case 41:HEAP32[(B+20|0)>>2]=G;d=43;break;case 42:throw _abort(),"Reached an unreachable!";case 43:0==(G|0)?(l=r,n=s,d=56):d=44;break;case 44:d=G>>>0<HEAP32[37268]>>>0?53:45;break;case 45:HEAP32[(G+24|0)>>2]=B;var X=HEAP32[(m+(q+
16|0)|0)>>2],d=0==(X|0)?49:46;break;case 46:d=X>>>0<HEAP32[37268]>>>0?48:47;break;case 47:HEAP32[(G+16|0)>>2]=X;HEAP32[(X+24|0)>>2]=G;d=49;break;case 48:throw _abort(),"Reached an unreachable!";case 49:var R=HEAP32[(m+(q+20|0)|0)>>2];0==(R|0)?(l=r,n=s,d=56):d=50;break;case 50:d=R>>>0<HEAP32[37268]>>>0?52:51;break;case 51:HEAP32[(G+20|0)>>2]=R;HEAP32[(R+24|0)>>2]=G;l=r;n=s;d=56;break;case 52:throw _abort(),"Reached an unreachable!";case 53:throw _abort(),"Reached an unreachable!";case 54:var V=m+(f-
4|0)|0;3==(HEAP32[V>>2]&3|0)?d=55:(l=r,n=s,d=56);break;case 55:HEAP32[37266]=s;HEAP32[V>>2]&=-2;HEAP32[(m+(q+4|0)|0)>>2]=s|1;HEAP32[k>>2]=s;d=143;break;case 56:var aa=l,d=aa>>>0<k>>>0?57:142;break;case 57:var fa=m+(f-4|0)|0,Z=HEAP32[fa>>2],d=0==(Z&1|0)?142:58;break;case 58:d=0==(Z&2|0)?59:114;break;case 59:d=(h|0)==(HEAP32[37270]|0)?60:64;break;case 60:var ka=HEAP32[37267]+n|0;HEAP32[37267]=ka;HEAP32[37270]=l;HEAP32[(l+4|0)>>2]=ka|1;d=(l|0)==(HEAP32[37269]|0)?61:62;break;case 61:HEAP32[37269]=0;HEAP32[37266]=
0;d=62;break;case 62:d=ka>>>0>HEAP32[37271]>>>0?63:143;break;case 63:_sys_trim(0);d=143;break;case 64:d=(h|0)==(HEAP32[37269]|0)?65:66;break;case 65:var M=HEAP32[37266]+n|0;HEAP32[37266]=M;HEAP32[37269]=l;HEAP32[(l+4|0)>>2]=M|1;HEAP32[(aa+M|0)>>2]=M;d=143;break;case 66:var ga=(Z&-8)+n|0,na=Z>>>3,d=256>Z>>>0?67:79;break;case 67:var ba=HEAP32[(m+f|0)>>2],ca=HEAP32[(m+(f|4)|0)>>2],oa=149096+(na<<1<<2)|0,d=(ba|0)==(oa|0)?70:68;break;case 68:d=ba>>>0<HEAP32[37268]>>>0?78:69;break;case 69:d=(HEAP32[(ba+
12|0)>>2]|0)==(h|0)?70:78;break;case 70:d=(ca|0)==(ba|0)?71:72;break;case 71:HEAP32[37264]&=1<<na^-1;d=112;break;case 72:d=(ca|0)==(oa|0)?73:74;break;case 73:var va=ca+8|0,d=76;break;case 74:d=ca>>>0<HEAP32[37268]>>>0?77:75;break;case 75:var pa=ca+8|0;(HEAP32[pa>>2]|0)==(h|0)?(va=pa,d=76):d=77;break;case 76:HEAP32[(ba+12|0)>>2]=ca;HEAP32[va>>2]=ba;d=112;break;case 77:throw _abort(),"Reached an unreachable!";case 78:throw _abort(),"Reached an unreachable!";case 79:var la=k,wa=HEAP32[(m+(f+16|0)|0)>>
2],qa=HEAP32[(m+(f|4)|0)>>2],d=(qa|0)==(la|0)?85:80;break;case 80:var ea=HEAP32[(m+f|0)>>2],d=ea>>>0<HEAP32[37268]>>>0?84:81;break;case 81:var xa=ea+12|0,d=(HEAP32[xa>>2]|0)==(la|0)?82:84;break;case 82:var ja=qa+8|0,d=(HEAP32[ja>>2]|0)==(la|0)?83:84;break;case 83:HEAP32[xa>>2]=qa;HEAP32[ja>>2]=ea;var da=qa,d=92;break;case 84:throw _abort(),"Reached an unreachable!";case 85:var Ga=m+(f+12|0)|0,$=HEAP32[Ga>>2];if(0==($|0))d=86;else var ma=$,ra=Ga,d=87;break;case 86:var Aa=m+(f+8|0)|0,Xa=HEAP32[Aa>>
2];0==(Xa|0)?(da=0,d=92):(ma=Xa,ra=Aa,d=87);break;case 87:var Da=ma+20|0,Ua=HEAP32[Da>>2];0==(Ua|0)?d=88:(ma=Ua,ra=Da,d=87);break;case 88:var sa=ma+16|0,ha=HEAP32[sa>>2];0==(ha|0)?d=89:(ma=ha,ra=sa,d=87);break;case 89:d=ra>>>0<HEAP32[37268]>>>0?91:90;break;case 90:HEAP32[ra>>2]=0;da=ma;d=92;break;case 91:throw _abort(),"Reached an unreachable!";case 92:d=0==(wa|0)?112:93;break;case 93:var U=m+(f+20|0)|0,gb=149360+(HEAP32[U>>2]<<2)|0,d=(la|0)==(HEAP32[gb>>2]|0)?94:96;break;case 94:HEAP32[gb>>2]=da;
d=0==(da|0)?95:102;break;case 95:HEAP32[37265]&=1<<HEAP32[U>>2]^-1;d=112;break;case 96:d=wa>>>0<HEAP32[37268]>>>0?100:97;break;case 97:var Ka=wa+16|0,d=(HEAP32[Ka>>2]|0)==(la|0)?98:99;break;case 98:HEAP32[Ka>>2]=da;d=101;break;case 99:HEAP32[(wa+20|0)>>2]=da;d=101;break;case 100:throw _abort(),"Reached an unreachable!";case 101:d=0==(da|0)?112:102;break;case 102:d=da>>>0<HEAP32[37268]>>>0?111:103;break;case 103:HEAP32[(da+24|0)>>2]=wa;var Ia=HEAP32[(m+(f+8|0)|0)>>2],d=0==(Ia|0)?107:104;break;case 104:d=
Ia>>>0<HEAP32[37268]>>>0?106:105;break;case 105:HEAP32[(da+16|0)>>2]=Ia;HEAP32[(Ia+24|0)>>2]=da;d=107;break;case 106:throw _abort(),"Reached an unreachable!";case 107:var ia=HEAP32[(m+(f+12|0)|0)>>2],d=0==(ia|0)?112:108;break;case 108:d=ia>>>0<HEAP32[37268]>>>0?110:109;break;case 109:HEAP32[(da+20|0)>>2]=ia;HEAP32[(ia+24|0)>>2]=da;d=112;break;case 110:throw _abort(),"Reached an unreachable!";case 111:throw _abort(),"Reached an unreachable!";case 112:HEAP32[(l+4|0)>>2]=ga|1;HEAP32[(aa+ga|0)>>2]=ga;
if((l|0)==(HEAP32[37269]|0))d=113;else var Ba=ga,d=115;break;case 113:HEAP32[37266]=ga;d=143;break;case 114:HEAP32[fa>>2]=Z&-2;HEAP32[(l+4|0)>>2]=n|1;Ba=HEAP32[(aa+n|0)>>2]=n;d=115;break;case 115:var Ra=Ba>>>3,d=256>Ba>>>0?116:121;break;case 116:var Sa=Ra<<1,ib=149096+(Sa<<2)|0,ua=HEAP32[37264],Va=1<<Ra,d=0==(ua&Va|0)?117:118;break;case 117:HEAP32[37264]=ua|Va;var eb=ib,Ea=149096+((Sa+2|0)<<2)|0,d=120;break;case 118:var Ya=149096+((Sa+2|0)<<2)|0,La=HEAP32[Ya>>2];La>>>0<HEAP32[37268]>>>0?d=119:(eb=
La,Ea=Ya,d=120);break;case 119:throw _abort(),"Reached an unreachable!";case 120:HEAP32[Ea>>2]=l;HEAP32[(eb+12|0)>>2]=l;HEAP32[(l+8|0)>>2]=eb;HEAP32[(l+12|0)>>2]=ib;d=143;break;case 121:var Ma=l,Fa=Ba>>>8;if(0==(Fa|0))var Na=0,d=124;else d=122;break;case 122:16777215<Ba>>>0?(Na=31,d=124):d=123;break;case 123:var Oa=(Fa+1048320|0)>>>16&8,jb=Fa<<Oa,Za=(jb+520192|0)>>>16&4,Ca=jb<<Za,$a=(Ca+245760|0)>>>16&2,ab=(14-(Za|Oa|$a)|0)+(Ca<<$a>>>15)|0,Na=Ba>>>((ab+7|0)>>>0)&1|ab<<1,d=124;break;case 124:var Ha=
149360+(Na<<2)|0;HEAP32[(l+28|0)>>2]=Na;HEAP32[(l+20|0)>>2]=0;HEAP32[(l+16|0)>>2]=0;var Wa=HEAP32[37265],bb=1<<Na,d=0==(Wa&bb|0)?125:126;break;case 125:HEAP32[37265]=Wa|bb;HEAP32[Ha>>2]=Ma;HEAP32[(l+24|0)>>2]=Ha;HEAP32[(l+12|0)>>2]=l;HEAP32[(l+8|0)>>2]=l;d=139;break;case 126:var Pa=HEAP32[Ha>>2];if(31==(Na|0))var Ja=0,d=128;else d=127;break;case 127:Ja=25-(Na>>>1)|0;d=128;break;case 128:if((HEAP32[(Pa+4|0)>>2]&-8|0)==(Ba|0))var cb=Pa,d=135;else d=129;break;case 129:var Qa=Pa,fb=Ba<<Ja,d=131;break;
case 130:var hb=fb<<1;(HEAP32[(db+4|0)>>2]&-8|0)==(Ba|0)?(cb=db,d=135):(Qa=db,fb=hb,d=131);break;case 131:var ya=Qa+16+(fb>>>31<<2)|0,db=HEAP32[ya>>2],d=0==(db|0)?132:130;break;case 132:d=ya>>>0<HEAP32[37268]>>>0?134:133;break;case 133:HEAP32[ya>>2]=Ma;HEAP32[(l+24|0)>>2]=Qa;HEAP32[(l+12|0)>>2]=l;HEAP32[(l+8|0)>>2]=l;d=139;break;case 134:throw _abort(),"Reached an unreachable!";case 135:var Ta=cb+8|0,kb=HEAP32[Ta>>2],lb=HEAP32[37268],d=cb>>>0<lb>>>0?138:136;break;case 136:d=kb>>>0<lb>>>0?138:137;
break;case 137:HEAP32[(kb+12|0)>>2]=Ma;HEAP32[Ta>>2]=Ma;HEAP32[(l+8|0)>>2]=kb;HEAP32[(l+12|0)>>2]=cb;HEAP32[(l+24|0)>>2]=0;d=139;break;case 138:throw _abort(),"Reached an unreachable!";case 139:var mb=HEAP32[37272]-1|0;HEAP32[37272]=mb;if(0==(mb|0))var ta=149512,d=140;else d=143;break;case 140:var nb=HEAP32[ta>>2],pb=nb+8|0;0==(nb|0)?d=141:(ta=pb,d=140);break;case 141:HEAP32[37272]=-1;d=143;break;case 142:throw _abort(),"Reached an unreachable!";case 143:return;default:assert(0,"bad label: "+d)}}
Module._free=_free;
function _realloc(m,d){for(var c=0,c=1;;)switch(c){case 1:c=0==(m|0)?2:3;break;case 2:var a=_malloc(d),c=11;break;case 3:c=4294967231<d>>>0?4:5;break;case 4:c=___errno_location();HEAP32[c>>2]=12;a=0;c=11;break;case 5:if(11>d>>>0)var b=16,c=7;else c=6;break;case 6:b=(d+11|0)&-8;c=7;break;case 7:var e=_try_realloc_chunk(m-8|0,b),c=0==(e|0)?9:8;break;case 8:a=e+8|0;c=11;break;case 9:var g=_malloc(d);0==(g|0)?(a=0,c=11):c=10;break;case 10:c=HEAP32[(m-4|0)>>2];c=(c&-8)-(0==(c&3|0)?8:4)|0;c=c>>>0<d>>>0?
c:d;assert(0===c%1);_memcpy(g,m,c)|0;_free(m);a=g;c=11;break;case 11:return a;default:assert(0,"bad label: "+c)}}Module._realloc=_realloc;
function _sys_trim(m){for(var d=0,d=1;;)switch(d){case 1:d=0==(HEAP32[37250]|0)?2:5;break;case 2:var c=_sysconf(8),d=0==((c-1|0)&c|0)?4:3;break;case 3:throw _abort(),"Reached an unreachable!";case 4:HEAP32[37252]=c;HEAP32[37251]=c;HEAP32[37253]=-1;HEAP32[37254]=2097152;HEAP32[37255]=0;HEAP32[37375]=0;d=_time(0)&-16^1431655768;HEAP32[37250]=d;d=5;break;case 5:if(4294967232>m>>>0)d=6;else var a=0,d=21;break;case 6:var b=HEAP32[37270];0==(b|0)?(a=0,d=21):d=7;break;case 7:var e=HEAP32[37267],d=e>>>0>
(m+40|0)>>>0?8:19;break;case 8:var g=HEAP32[37252],f=((((((-40-m|0)-1|0)+e|0)+g|0)>>>0)/(g>>>0)&-1)-1|0,k=b,h=149504,d=9;break;case 9:var l=h|0,n=HEAP32[l>>2],d=n>>>0>k>>>0?11:10;break;case 10:var p=h+4|0,d=(n+HEAP32[p>>2]|0)>>>0>k>>>0?12:11;break;case 11:h=HEAP32[(h+8|0)>>2];d=9;break;case 12:var q=Math.imul(f,g)|0,d=0==(HEAP32[(h+12|0)>>2]&8|0)?13:19;break;case 13:var t=_sbrk(0),d=(t|0)==(HEAP32[l>>2]+HEAP32[p>>2]|0)?14:19;break;case 14:var r=-2147483648-g|0,d=_sbrk(-(2147483646<q>>>0?r:q)|0),r=
_sbrk(0),d=-1!=(d|0)&r>>>0<t>>>0?15:19;break;case 15:var s=t-r|0,d=(t|0)==(r|0)?19:16;break;case 16:HEAP32[p>>2]=HEAP32[p>>2]-s|0;HEAP32[37372]=HEAP32[37372]-s|0;var v=HEAP32[37270],u=HEAP32[37267]-s|0,w=v,v=v+8|0;if(0==(v&7|0))var y=0,d=18;else d=17;break;case 17:y=(-v|0)&7;d=18;break;case 18:a=u-y|0;HEAP32[37270]=w+y|0;HEAP32[37267]=a;HEAP32[(w+(y+4|0)|0)>>2]=a|1;HEAP32[(w+(u+4|0)|0)>>2]=40;HEAP32[37271]=HEAP32[37254];a=(t|0)!=(r|0)&1;d=21;break;case 19:HEAP32[37267]>>>0>HEAP32[37271]>>>0?d=20:
(a=0,d=21);break;case 20:HEAP32[37271]=-1;a=0;d=21;break;case 21:return a;default:assert(0,"bad label: "+d)}}
function _try_realloc_chunk(m,d){for(var c=0,c=1;;)switch(c){case 1:var a=m+4|0,b=HEAP32[a>>2],e=b&-8,g=m,f=g+e|0,k=f,h=HEAP32[37268],c=g>>>0<h>>>0?72:2;break;case 2:var l=b&3,c=1!=(l|0)&g>>>0<f>>>0?3:72;break;case 3:var n=g+(e|4)|0,p=HEAP32[n>>2],c=0==(p&1|0)?72:4;break;case 4:c=0==(l|0)?5:9;break;case 5:if(256>d>>>0)var q=0,c=73;else c=6;break;case 6:c=e>>>0<(d+4|0)>>>0?8:7;break;case 7:(e-d|0)>>>0>HEAP32[37252]<<1>>>0?c=8:(q=m,c=73);break;case 8:q=0;c=73;break;case 9:c=e>>>0<d>>>0?12:10;break;
case 10:var t=e-d|0;15<t>>>0?c=11:(q=m,c=73);break;case 11:q=g+d|0;HEAP32[a>>2]=b&1|d|2;HEAP32[(g+(d+4|0)|0)>>2]=t|3;HEAP32[n>>2]|=1;_dispose_chunk(q,t);q=m;c=73;break;case 12:c=(k|0)==(HEAP32[37270]|0)?13:15;break;case 13:var r=HEAP32[37267]+e|0;r>>>0>d>>>0?c=14:(q=0,c=73);break;case 14:q=r-d|0;c=g+d|0;HEAP32[a>>2]=b&1|d|2;HEAP32[(g+(d+4|0)|0)>>2]=q|1;HEAP32[37270]=c;HEAP32[37267]=q;q=m;c=73;break;case 15:c=(k|0)==(HEAP32[37269]|0)?16:21;break;case 16:var s=HEAP32[37266]+e|0;s>>>0<d>>>0?(q=0,c=73):
c=17;break;case 17:var v=s-d|0,c=15<v>>>0?18:19;break;case 18:var u=g+d|0,w=g+s|0;HEAP32[a>>2]=b&1|d|2;HEAP32[(g+(d+4|0)|0)>>2]=v|1;HEAP32[w>>2]=v;w=g+(s+4|0)|0;HEAP32[w>>2]&=-2;w=v;c=20;break;case 19:HEAP32[a>>2]=b&1|s|2;u=g+(s+4|0)|0;HEAP32[u>>2]|=1;w=u=0;c=20;break;case 20:HEAP32[37266]=w;HEAP32[37269]=u;q=m;c=73;break;case 21:0==(p&2|0)?c=22:(q=0,c=73);break;case 22:var y=(p&-8)+e|0;y>>>0<d>>>0?(q=0,c=73):c=23;break;case 23:var A=y-d|0,z=p>>>3,c=256>p>>>0?24:36;break;case 24:var x=HEAP32[(g+(e+
8|0)|0)>>2],B=HEAP32[(g+(e+12|0)|0)>>2],C=149096+(z<<1<<2)|0,c=(x|0)==(C|0)?27:25;break;case 25:c=x>>>0<h>>>0?35:26;break;case 26:c=(HEAP32[(x+12|0)>>2]|0)==(k|0)?27:35;break;case 27:c=(B|0)==(x|0)?28:29;break;case 28:HEAP32[37264]&=1<<z^-1;c=69;break;case 29:c=(B|0)==(C|0)?30:31;break;case 30:var D=B+8|0,c=33;break;case 31:c=B>>>0<h>>>0?34:32;break;case 32:c=B+8|0;(HEAP32[c>>2]|0)==(k|0)?(D=c,c=33):c=34;break;case 33:HEAP32[(x+12|0)>>2]=B;HEAP32[D>>2]=x;c=69;break;case 34:throw _abort(),"Reached an unreachable!";
case 35:throw _abort(),"Reached an unreachable!";case 36:var F=f,I=HEAP32[(g+(e+24|0)|0)>>2],G=HEAP32[(g+(e+12|0)|0)>>2],c=(G|0)==(F|0)?42:37;break;case 37:var H=HEAP32[(g+(e+8|0)|0)>>2],c=H>>>0<h>>>0?41:38;break;case 38:var K=H+12|0,c=(HEAP32[K>>2]|0)==(F|0)?39:41;break;case 39:var J=G+8|0,c=(HEAP32[J>>2]|0)==(F|0)?40:41;break;case 40:HEAP32[K>>2]=G;HEAP32[J>>2]=H;var E=G,c=49;break;case 41:throw _abort(),"Reached an unreachable!";case 42:var c=g+(e+20|0)|0,L=HEAP32[c>>2];if(0==(L|0))c=43;else var Q=
L,N=c,c=44;break;case 43:c=g+(e+16|0)|0;L=HEAP32[c>>2];0==(L|0)?(E=0,c=49):(Q=L,N=c,c=44);break;case 44:c=Q+20|0;L=HEAP32[c>>2];0==(L|0)?c=45:(Q=L,N=c,c=44);break;case 45:c=Q+16|0;L=HEAP32[c>>2];0==(L|0)?c=46:(Q=L,N=c,c=44);break;case 46:c=N>>>0<h>>>0?48:47;break;case 47:HEAP32[N>>2]=0;E=Q;c=49;break;case 48:throw _abort(),"Reached an unreachable!";case 49:c=0==(I|0)?69:50;break;case 50:var P=g+(e+28|0)|0,W=149360+(HEAP32[P>>2]<<2)|0,c=(F|0)==(HEAP32[W>>2]|0)?51:53;break;case 51:HEAP32[W>>2]=E;c=
0==(E|0)?52:59;break;case 52:HEAP32[37265]&=1<<HEAP32[P>>2]^-1;c=69;break;case 53:c=I>>>0<HEAP32[37268]>>>0?57:54;break;case 54:var O=I+16|0,c=(HEAP32[O>>2]|0)==(F|0)?55:56;break;case 55:HEAP32[O>>2]=E;c=58;break;case 56:HEAP32[(I+20|0)>>2]=E;c=58;break;case 57:throw _abort(),"Reached an unreachable!";case 58:c=0==(E|0)?69:59;break;case 59:c=E>>>0<HEAP32[37268]>>>0?68:60;break;case 60:HEAP32[(E+24|0)>>2]=I;var T=HEAP32[(g+(e+16|0)|0)>>2],c=0==(T|0)?64:61;break;case 61:c=T>>>0<HEAP32[37268]>>>0?63:
62;break;case 62:HEAP32[(E+16|0)>>2]=T;HEAP32[(T+24|0)>>2]=E;c=64;break;case 63:throw _abort(),"Reached an unreachable!";case 64:var Y=HEAP32[(g+(e+20|0)|0)>>2],c=0==(Y|0)?69:65;break;case 65:c=Y>>>0<HEAP32[37268]>>>0?67:66;break;case 66:HEAP32[(E+20|0)>>2]=Y;HEAP32[(Y+24|0)>>2]=E;c=69;break;case 67:throw _abort(),"Reached an unreachable!";case 68:throw _abort(),"Reached an unreachable!";case 69:c=16>A>>>0?70:71;break;case 70:HEAP32[a>>2]=y|HEAP32[a>>2]&1|2;q=g+(y|4)|0;HEAP32[q>>2]|=1;q=m;c=73;break;
case 71:q=g+d|0;HEAP32[a>>2]=HEAP32[a>>2]&1|d|2;HEAP32[(g+(d+4|0)|0)>>2]=A|3;c=g+(y|4)|0;HEAP32[c>>2]|=1;_dispose_chunk(q,A);q=m;c=73;break;case 72:throw _abort(),"Reached an unreachable!";case 73:return q;default:assert(0,"bad label: "+c)}}
function _dispose_chunk(m,d){for(var c=0,c=1;;)switch(c){case 1:var a=m,b=a+d|0,e=b,g=HEAP32[(m+4|0)>>2];if(0==(g&1|0))c=2;else var f=m,k=d,c=54;break;case 2:var h=HEAP32[(m|0)>>2],c=0==(g&3|0)?135:3;break;case 3:var l=a+(-h|0)|0,n=l,p=h+d|0,q=HEAP32[37268],c=l>>>0<q>>>0?53:4;break;case 4:c=(n|0)==(HEAP32[37269]|0)?51:5;break;case 5:var t=h>>>3,c=256>h>>>0?6:18;break;case 6:var r=HEAP32[(a+(8-h|0)|0)>>2],s=HEAP32[(a+(12-h|0)|0)>>2],v=149096+(t<<1<<2)|0,c=(r|0)==(v|0)?9:7;break;case 7:c=r>>>0<q>>>
0?17:8;break;case 8:c=(HEAP32[(r+12|0)>>2]|0)==(n|0)?9:17;break;case 9:c=(s|0)==(r|0)?10:11;break;case 10:HEAP32[37264]&=1<<t^-1;f=n;k=p;c=54;break;case 11:c=(s|0)==(v|0)?12:13;break;case 12:var u=s+8|0,c=15;break;case 13:c=s>>>0<q>>>0?16:14;break;case 14:var w=s+8|0;(HEAP32[w>>2]|0)==(n|0)?(u=w,c=15):c=16;break;case 15:HEAP32[(r+12|0)>>2]=s;HEAP32[u>>2]=r;f=n;k=p;c=54;break;case 16:throw _abort(),"Reached an unreachable!";case 17:throw _abort(),"Reached an unreachable!";case 18:var y=l,A=HEAP32[(a+
(24-h|0)|0)>>2],z=HEAP32[(a+(12-h|0)|0)>>2],c=(z|0)==(y|0)?24:19;break;case 19:var x=HEAP32[(a+(8-h|0)|0)>>2],c=x>>>0<q>>>0?23:20;break;case 20:var B=x+12|0,c=(HEAP32[B>>2]|0)==(y|0)?21:23;break;case 21:var C=z+8|0,c=(HEAP32[C>>2]|0)==(y|0)?22:23;break;case 22:HEAP32[B>>2]=z;HEAP32[C>>2]=x;var D=z,c=31;break;case 23:throw _abort(),"Reached an unreachable!";case 24:var F=16-h|0,I=a+(F+4|0)|0,G=HEAP32[I>>2];if(0==(G|0))c=25;else var H=G,K=I,c=26;break;case 25:var J=a+F|0,E=HEAP32[J>>2];0==(E|0)?(D=
0,c=31):(H=E,K=J,c=26);break;case 26:var L=H+20|0,Q=HEAP32[L>>2];0==(Q|0)?c=27:(H=Q,K=L,c=26);break;case 27:var N=H+16|0,P=HEAP32[N>>2];0==(P|0)?c=28:(H=P,K=N,c=26);break;case 28:c=K>>>0<q>>>0?30:29;break;case 29:HEAP32[K>>2]=0;D=H;c=31;break;case 30:throw _abort(),"Reached an unreachable!";case 31:0==(A|0)?(f=n,k=p,c=54):c=32;break;case 32:var W=a+(28-h|0)|0,O=149360+(HEAP32[W>>2]<<2)|0,c=(y|0)==(HEAP32[O>>2]|0)?33:35;break;case 33:HEAP32[O>>2]=D;c=0==(D|0)?34:41;break;case 34:HEAP32[37265]&=1<<
HEAP32[W>>2]^-1;f=n;k=p;c=54;break;case 35:c=A>>>0<HEAP32[37268]>>>0?39:36;break;case 36:var T=A+16|0,c=(HEAP32[T>>2]|0)==(y|0)?37:38;break;case 37:HEAP32[T>>2]=D;c=40;break;case 38:HEAP32[(A+20|0)>>2]=D;c=40;break;case 39:throw _abort(),"Reached an unreachable!";case 40:0==(D|0)?(f=n,k=p,c=54):c=41;break;case 41:c=D>>>0<HEAP32[37268]>>>0?50:42;break;case 42:HEAP32[(D+24|0)>>2]=A;var Y=16-h|0,S=HEAP32[(a+Y|0)>>2],c=0==(S|0)?46:43;break;case 43:c=S>>>0<HEAP32[37268]>>>0?45:44;break;case 44:HEAP32[(D+
16|0)>>2]=S;HEAP32[(S+24|0)>>2]=D;c=46;break;case 45:throw _abort(),"Reached an unreachable!";case 46:var X=HEAP32[(a+(Y+4|0)|0)>>2];0==(X|0)?(f=n,k=p,c=54):c=47;break;case 47:c=X>>>0<HEAP32[37268]>>>0?49:48;break;case 48:HEAP32[(D+20|0)>>2]=X;HEAP32[(X+24|0)>>2]=D;f=n;k=p;c=54;break;case 49:throw _abort(),"Reached an unreachable!";case 50:throw _abort(),"Reached an unreachable!";case 51:var R=a+(d+4|0)|0;3==(HEAP32[R>>2]&3|0)?c=52:(f=n,k=p,c=54);break;case 52:HEAP32[37266]=p;HEAP32[R>>2]&=-2;HEAP32[(a+
(4-h|0)|0)>>2]=p|1;HEAP32[b>>2]=p;c=135;break;case 53:throw _abort(),"Reached an unreachable!";case 54:var V=HEAP32[37268],c=b>>>0<V>>>0?134:55;break;case 55:var aa=a+(d+4|0)|0,fa=HEAP32[aa>>2],c=0==(fa&2|0)?56:109;break;case 56:c=(e|0)==(HEAP32[37270]|0)?57:59;break;case 57:var Z=HEAP32[37267]+k|0;HEAP32[37267]=Z;HEAP32[37270]=f;HEAP32[(f+4|0)>>2]=Z|1;c=(f|0)==(HEAP32[37269]|0)?58:135;break;case 58:HEAP32[37269]=0;HEAP32[37266]=0;c=135;break;case 59:c=(e|0)==(HEAP32[37269]|0)?60:61;break;case 60:var ka=
HEAP32[37266]+k|0;HEAP32[37266]=ka;HEAP32[37269]=f;HEAP32[(f+4|0)>>2]=ka|1;HEAP32[(f+ka|0)>>2]=ka;c=135;break;case 61:var M=(fa&-8)+k|0,ga=fa>>>3,c=256>fa>>>0?62:74;break;case 62:var na=HEAP32[(a+(d+8|0)|0)>>2],ba=HEAP32[(a+(d+12|0)|0)>>2],ca=149096+(ga<<1<<2)|0,c=(na|0)==(ca|0)?65:63;break;case 63:c=na>>>0<V>>>0?73:64;break;case 64:c=(HEAP32[(na+12|0)>>2]|0)==(e|0)?65:73;break;case 65:c=(ba|0)==(na|0)?66:67;break;case 66:HEAP32[37264]&=1<<ga^-1;c=107;break;case 67:c=(ba|0)==(ca|0)?68:69;break;case 68:var oa=
ba+8|0,c=71;break;case 69:c=ba>>>0<V>>>0?72:70;break;case 70:var va=ba+8|0;(HEAP32[va>>2]|0)==(e|0)?(oa=va,c=71):c=72;break;case 71:HEAP32[(na+12|0)>>2]=ba;HEAP32[oa>>2]=na;c=107;break;case 72:throw _abort(),"Reached an unreachable!";case 73:throw _abort(),"Reached an unreachable!";case 74:var pa=b,la=HEAP32[(a+(d+24|0)|0)>>2],wa=HEAP32[(a+(d+12|0)|0)>>2],c=(wa|0)==(pa|0)?80:75;break;case 75:var qa=HEAP32[(a+(d+8|0)|0)>>2],c=qa>>>0<V>>>0?79:76;break;case 76:var ea=qa+12|0,c=(HEAP32[ea>>2]|0)==(pa|
0)?77:79;break;case 77:var xa=wa+8|0,c=(HEAP32[xa>>2]|0)==(pa|0)?78:79;break;case 78:HEAP32[ea>>2]=wa;HEAP32[xa>>2]=qa;var ja=wa,c=87;break;case 79:throw _abort(),"Reached an unreachable!";case 80:var da=a+(d+20|0)|0,Ga=HEAP32[da>>2];if(0==(Ga|0))c=81;else var $=Ga,ma=da,c=82;break;case 81:var ra=a+(d+16|0)|0,Aa=HEAP32[ra>>2];0==(Aa|0)?(ja=0,c=87):($=Aa,ma=ra,c=82);break;case 82:var Xa=$+20|0,Da=HEAP32[Xa>>2];0==(Da|0)?c=83:($=Da,ma=Xa,c=82);break;case 83:var Ua=$+16|0,sa=HEAP32[Ua>>2];0==(sa|0)?
c=84:($=sa,ma=Ua,c=82);break;case 84:c=ma>>>0<V>>>0?86:85;break;case 85:HEAP32[ma>>2]=0;ja=$;c=87;break;case 86:throw _abort(),"Reached an unreachable!";case 87:c=0==(la|0)?107:88;break;case 88:var ha=a+(d+28|0)|0,U=149360+(HEAP32[ha>>2]<<2)|0,c=(pa|0)==(HEAP32[U>>2]|0)?89:91;break;case 89:HEAP32[U>>2]=ja;c=0==(ja|0)?90:97;break;case 90:HEAP32[37265]&=1<<HEAP32[ha>>2]^-1;c=107;break;case 91:c=la>>>0<HEAP32[37268]>>>0?95:92;break;case 92:var gb=la+16|0,c=(HEAP32[gb>>2]|0)==(pa|0)?93:94;break;case 93:HEAP32[gb>>
2]=ja;c=96;break;case 94:HEAP32[(la+20|0)>>2]=ja;c=96;break;case 95:throw _abort(),"Reached an unreachable!";case 96:c=0==(ja|0)?107:97;break;case 97:c=ja>>>0<HEAP32[37268]>>>0?106:98;break;case 98:HEAP32[(ja+24|0)>>2]=la;var Ka=HEAP32[(a+(d+16|0)|0)>>2],c=0==(Ka|0)?102:99;break;case 99:c=Ka>>>0<HEAP32[37268]>>>0?101:100;break;case 100:HEAP32[(ja+16|0)>>2]=Ka;HEAP32[(Ka+24|0)>>2]=ja;c=102;break;case 101:throw _abort(),"Reached an unreachable!";case 102:var Ia=HEAP32[(a+(d+20|0)|0)>>2],c=0==(Ia|0)?
107:103;break;case 103:c=Ia>>>0<HEAP32[37268]>>>0?105:104;break;case 104:HEAP32[(ja+20|0)>>2]=Ia;HEAP32[(Ia+24|0)>>2]=ja;c=107;break;case 105:throw _abort(),"Reached an unreachable!";case 106:throw _abort(),"Reached an unreachable!";case 107:HEAP32[(f+4|0)>>2]=M|1;HEAP32[(f+M|0)>>2]=M;if((f|0)==(HEAP32[37269]|0))c=108;else var ia=M,c=110;break;case 108:HEAP32[37266]=M;c=135;break;case 109:HEAP32[aa>>2]=fa&-2;HEAP32[(f+4|0)>>2]=k|1;ia=HEAP32[(f+k|0)>>2]=k;c=110;break;case 110:var Ba=ia>>>3,c=256>ia>>>
0?111:116;break;case 111:var Ra=Ba<<1,Sa=149096+(Ra<<2)|0,ib=HEAP32[37264],ua=1<<Ba,c=0==(ib&ua|0)?112:113;break;case 112:HEAP32[37264]=ib|ua;var Va=Sa,eb=149096+((Ra+2|0)<<2)|0,c=115;break;case 113:var Ea=149096+((Ra+2|0)<<2)|0,Ya=HEAP32[Ea>>2];Ya>>>0<HEAP32[37268]>>>0?c=114:(Va=Ya,eb=Ea,c=115);break;case 114:throw _abort(),"Reached an unreachable!";case 115:HEAP32[eb>>2]=f;HEAP32[(Va+12|0)>>2]=f;HEAP32[(f+8|0)>>2]=Va;HEAP32[(f+12|0)>>2]=Sa;c=135;break;case 116:var La=f,Ma=ia>>>8;if(0==(Ma|0))var Fa=
0,c=119;else c=117;break;case 117:16777215<ia>>>0?(Fa=31,c=119):c=118;break;case 118:var Na=(Ma+1048320|0)>>>16&8,Oa=Ma<<Na,jb=(Oa+520192|0)>>>16&4,Za=Oa<<jb,Ca=(Za+245760|0)>>>16&2,$a=(14-(jb|Na|Ca)|0)+(Za<<Ca>>>15)|0,Fa=ia>>>(($a+7|0)>>>0)&1|$a<<1,c=119;break;case 119:var ab=149360+(Fa<<2)|0;HEAP32[(f+28|0)>>2]=Fa;HEAP32[(f+20|0)>>2]=0;HEAP32[(f+16|0)>>2]=0;var Ha=HEAP32[37265],Wa=1<<Fa,c=0==(Ha&Wa|0)?120:121;break;case 120:HEAP32[37265]=Ha|Wa;HEAP32[ab>>2]=La;HEAP32[(f+24|0)>>2]=ab;HEAP32[(f+12|
0)>>2]=f;HEAP32[(f+8|0)>>2]=f;c=135;break;case 121:var bb=HEAP32[ab>>2];if(31==(Fa|0))var Pa=0,c=123;else c=122;break;case 122:Pa=25-(Fa>>>1)|0;c=123;break;case 123:if((HEAP32[(bb+4|0)>>2]&-8|0)==(ia|0))var Ja=bb,c=130;else c=124;break;case 124:var cb=bb,Qa=ia<<Pa,c=126;break;case 125:var fb=Qa<<1;(HEAP32[(ya+4|0)>>2]&-8|0)==(ia|0)?(Ja=ya,c=130):(cb=ya,Qa=fb,c=126);break;case 126:var hb=cb+16+(Qa>>>31<<2)|0,ya=HEAP32[hb>>2],c=0==(ya|0)?127:125;break;case 127:c=hb>>>0<HEAP32[37268]>>>0?129:128;break;
case 128:HEAP32[hb>>2]=La;HEAP32[(f+24|0)>>2]=cb;HEAP32[(f+12|0)>>2]=f;HEAP32[(f+8|0)>>2]=f;c=135;break;case 129:throw _abort(),"Reached an unreachable!";case 130:var db=Ja+8|0,Ta=HEAP32[db>>2],kb=HEAP32[37268],c=Ja>>>0<kb>>>0?133:131;break;case 131:c=Ta>>>0<kb>>>0?133:132;break;case 132:HEAP32[(Ta+12|0)>>2]=La;HEAP32[db>>2]=La;HEAP32[(f+8|0)>>2]=Ta;HEAP32[(f+12|0)>>2]=Ja;HEAP32[(f+24|0)>>2]=0;c=135;break;case 133:throw _abort(),"Reached an unreachable!";case 134:throw _abort(),"Reached an unreachable!";
case 135:return;default:assert(0,"bad label: "+c)}}function _i64Add(m,d,c,a){m|=0;var b=0,e=0,b=m+(c|0)>>>0,e=(d|0)+(a|0)+(b>>>0<m>>>0|0)>>>0;return tempRet0=e,b|0}function _i64Subtract(m,d,c,a){m|=0;c|=0;var b=0,b=(d|0)-(a|0)-(c>>>0>m>>>0|0)>>>0;return tempRet0=b,m-c>>>0|0}function _bitshift64Shl(m,d,c){m|=0;c|=0;if(32>(c|0))return tempRet0=(d|0)<<c|(m&((1<<c)-1|0)<<32-c)>>>32-c,m<<c;tempRet0=m<<c-32;return 0}
function _bitshift64Lshr(m,d,c){d|=0;c|=0;if(32>(c|0))return tempRet0=d>>>c,(m|0)>>>c|(d&((1<<c)-1|0))<<32-c;tempRet0=0;return d>>>c-32|0}function _bitshift64Ashr(m,d,c){d|=0;c|=0;if(32>(c|0))return tempRet0=d>>c,(m|0)>>>c|(d&((1<<c)-1|0))<<32-c;tempRet0=0>(d|0)?-1:0;return d>>c-32|0}
function _llvm_ctlz_i32(m){m|=0;var d=0,d=HEAP8[ctlz_i8+(m>>>24)|0];if(8>(d|0))return d|0;d=HEAP8[ctlz_i8+(m>>16&255)|0];if(8>(d|0))return d+8|0;d=HEAP8[ctlz_i8+(m>>8&255)|0];return 8>(d|0)?d+16|0:HEAP8[ctlz_i8+(m&255)|0]+24|0}
var ctlz_i8=allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"i8",ALLOC_DYNAMIC);function _llvm_cttz_i32(m){m|=0;var d=0,d=HEAP8[cttz_i8+(m&255)|0];if(8>(d|0))return d|0;d=HEAP8[cttz_i8+(m>>8&255)|0];if(8>(d|0))return d+8|0;d=HEAP8[cttz_i8+(m>>16&255)|0];return 8>(d|0)?d+16|0:HEAP8[cttz_i8+(m>>>24)|0]+24|0}
var cttz_i8=allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,
4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0],"i8",ALLOC_DYNAMIC);function ___muldsi3(m,d){m|=0;d|=0;var c=0,a=0,b=0,e=0,g=a=0,c=0,c=m&65535,a=d&65535,b=Math.imul(a,c)|0,e=m>>>16,a=(b>>>16)+(Math.imul(a,e)|0)|0,g=d>>>16,c=Math.imul(g,c)|0;return(tempRet0=((a>>>16)+(Math.imul(g,e)|0)|0)+(((a&65535)+c|0)>>>16)|0,0|a+c<<16|b&65535)|0}
function ___divdi3(m,d,c,a){d|=0;c|=0;a|=0;var b=0,e=0,g=0,f=0,k=0,h=0,l=0,k=k=e=b=0,b=d>>31|(0>(d|0)?-1:0)<<1,e=(0>(d|0)?-1:0)>>31|(0>(d|0)?-1:0)<<1,g=a>>31|(0>(a|0)?-1:0)<<1,f=(0>(a|0)?-1:0)>>31|(0>(a|0)?-1:0)<<1,k=_i64Subtract(b^(m|0),e^d,b,e)|0,h=tempRet0,l=_i64Subtract(g^c,f^a,g,f)|0,b=g^b,e=f^e,k=___udivmoddi4(k,h,l,tempRet0,0)|0,k=_i64Subtract(k^b,tempRet0^e,b,e)|0;return k|0}
function ___remdi3(m,d,c,a){d|=0;c|=0;a|=0;var b=0,e=0,g=0,f=0,k=0,h=0,l=0,n=e=b=f=0,n=STACKTOP;STACKTOP=STACKTOP+8|0;b=n|0;e=d>>31|(0>(d|0)?-1:0)<<1;g=(0>(d|0)?-1:0)>>31|(0>(d|0)?-1:0)<<1;f=a>>31|(0>(a|0)?-1:0)<<1;k=(0>(a|0)?-1:0)>>31|(0>(a|0)?-1:0)<<1;h=_i64Subtract(e^(m|0),g^d,e,g)|0;l=tempRet0;f=_i64Subtract(f^c,k^a,f,k)|0;___udivmoddi4(h,l,f,tempRet0,b)|0;b=_i64Subtract(HEAP32[b>>2]^e,HEAP32[b+4>>2]^g,e,g)|0;e=tempRet0;STACKTOP=n;return(tempRet0=e,b)|0}
function ___muldi3(m,d,c,a){d|=0;a|=0;var b=0,e=0,g=0,f=0,e=0,b=m|0,e=c|0,g=___muldsi3(b,e)|0,f=tempRet0,e=Math.imul(d,e)|0;return(tempRet0=((Math.imul(a,b)|0)+e|0)+f|f&0,0|g&-1)|0}function ___udivdi3(m,d,c,a){var b=0,b=___udivmoddi4(m|0,d|0,c|0,a|0,0)|0;return b|0}function ___uremdi3(m,d,c,a){var b=0,e=0,e=STACKTOP;STACKTOP=STACKTOP+8|0;b=e|0;___udivmoddi4(m|0,d|0,c|0,a|0,b)|0;STACKTOP=e;return(tempRet0=HEAP32[b+4>>2]|0,HEAP32[b>>2]|0)|0}
function ___udivmoddi4(m,d,c,a,b){m|=0;d|=0;c|=0;a|=0;b|=0;var e=0,g=0,f=0,k=0,h=0,l=0,n=0,p=0,q=0,t=q=q=0,r=0,s=r=q=n=q=0,v=0,u=0,w=0,y=r=l=g=k=q=q=t=0,A=q=t=0,z=n=k=p=l=t=q=A=g=h=f=e=0,x=0,B=0,C=k=A=0,h=e=k=g=e=g=f=A=h=q=q=B=x=x=0,e=m,f=g=d,k=c,l=h=a;if(0==(f|0)){n=0!=(b|0);if(0==(l|0))n&&(HEAP32[b>>2]=(e>>>0)%(k>>>0),HEAP32[b+4>>2]=0),h=0,e=(e>>>0)/(k>>>0)>>>0;else{if(!n)return(tempRet0=0,0)|0;HEAP32[b>>2]=m&-1;HEAP32[b+4>>2]=d&0;e=h=0}return(tempRet0=h,e)|0}p=0==(l|0);do if(0==(k|0)){if(p)return 0!=
(b|0)&&(HEAP32[b>>2]=(f>>>0)%(k>>>0),HEAP32[b+4>>2]=0),h=0,e=(f>>>0)/(k>>>0)>>>0,(tempRet0=h,e)|0;if(0==(e|0))return 0!=(b|0)&&(HEAP32[b>>2]=0,HEAP32[b+4>>2]=(f>>>0)%(l>>>0)),h=0,e=(f>>>0)/(l>>>0)>>>0,(tempRet0=h,e)|0;q=l-1|0;if(0==(q&l|0))return 0!=(b|0)&&(HEAP32[b>>2]=0|m&-1,HEAP32[b+4>>2]=q&f|d&0),h=0,e=f>>>((_llvm_cttz_i32(l|0)|0)>>>0),(tempRet0=h,e)|0;q=_llvm_ctlz_i32(l|0)|0;q=q-(_llvm_ctlz_i32(f|0)|0)|0;if(30>=q>>>0)t=q+1|0,r=31-q|0,A=t,q=f<<r|e>>>(t>>>0),t=f>>>(t>>>0),y=0,r=e<<r;else{if(0==
(b|0))return e=h=0,(tempRet0=h,e)|0;HEAP32[b>>2]=0|m&-1;HEAP32[b+4>>2]=g|d&0;e=h=0;return(tempRet0=h,e)|0}}else{if(!p){q=_llvm_ctlz_i32(l|0)|0;q=q-(_llvm_ctlz_i32(f|0)|0)|0;if(31>=q>>>0){k=q+1|0;g=31-q|0;l=q-31>>31;A=k;q=e>>>(k>>>0)&l|f<<g;t=f>>>(k>>>0)&l;y=0;r=e<<g;break}if(0==(b|0))return e=h=0,(tempRet0=h,e)|0;HEAP32[b>>2]=0|m&-1;HEAP32[b+4>>2]=g|d&0;e=h=0;return(tempRet0=h,e)|0}q=k-1|0;if(0!=(q&k|0))q=(_llvm_ctlz_i32(k|0)|0)+33|0,r=q-(_llvm_ctlz_i32(f|0)|0)|0,s=64-r|0,v=32-r|0,u=v>>31,w=r-32|
0,t=w>>31,A=r,q=v-1>>31&f>>>(w>>>0)|(f<<v|e>>>(r>>>0))&t,t&=f>>>(r>>>0),y=e<<s&u,r=(f<<s|e>>>(w>>>0))&u|e<<v&r-33>>31;else return 0!=(b|0)&&(HEAP32[b>>2]=q&e,HEAP32[b+4>>2]=0),1==(k|0)?(h=g|d&0,e=0|m&-1):(n=_llvm_cttz_i32(k|0)|0,h=0|f>>>(n>>>0),e=f<<32-n|e>>>(n>>>0)|0),(tempRet0=h,e)|0}while(0);if(0==(A|0))e=r,g=y,f=t,A=q,q=h=0;else{e=0|c&-1;f=h|a&0;h=_i64Add(e,f,-1,-1)|0;g=tempRet0;k=r;p=y;l=t;t=q;q=A;for(A=0;n=p>>>31|k<<1,z=A|p<<1,x=0|t<<1|k>>>31,B=t>>>31|l<<1|0,_i64Subtract(h,g,x,B)|0,A=tempRet0,
k=A>>31|(0>(A|0)?-1:0)<<1,C=k&1,x=_i64Subtract(x,B,k&e,((0>(A|0)?-1:0)>>31|(0>(A|0)?-1:0)<<1)&f)|0,B=tempRet0,q=q-1|0,0!=(q|0);)k=n,p=z,l=B,t=x,A=C;e=n;g=z;f=B;A=x;h=0;q=C}k=0;0!=(b|0)&&(HEAP32[b>>2]=0|A,HEAP32[b+4>>2]=f|0);h|=(0|g)>>>31|(e|k)<<1|(k<<1|g>>>31)&0;return(tempRet0=h,(g<<1|0)&-2|q)|0}
var i64Math=function(){function m(a,b,c){null!=a&&("number"==typeof a?this.fromNumber(a,b,c):null==b&&"string"!=typeof a?this.fromString(a,256):this.fromString(a,b))}function d(){return new m(null)}function c(a,b){var c=k[a.charCodeAt(b)];return null==c?-1:c}function a(a){var b=d();b.fromInt(a);return b}function b(a){var b=1,c;0!=(c=a>>>16)&&(a=c,b+=16);0!=(c=a>>8)&&(a=c,b+=8);0!=(c=a>>4)&&(a=c,b+=4);0!=(c=a>>2)&&(a=c,b+=2);0!=a>>1&&(b+=1);return b}function e(a){this.m=a}function g(a){this.m=a;this.mp=
a.invDigit();this.mpl=this.mp&32767;this.mph=this.mp>>15;this.um=(1<<a.DB-15)-1;this.mt2=2*a.t}var f=function(a,b){this.low_=a|0;this.high_=b|0};f.IntCache_={};f.fromInt=function(a){if(-128<=a&&128>a){var b=f.IntCache_[a];if(b)return b}b=new f(a|0,0>a?-1:0);-128<=a&&128>a&&(f.IntCache_[a]=b);return b};f.fromNumber=function(a){return isNaN(a)||!isFinite(a)?f.ZERO:a<=-f.TWO_PWR_63_DBL_?f.MIN_VALUE:a+1>=f.TWO_PWR_63_DBL_?f.MAX_VALUE:0>a?f.fromNumber(-a).negate():new f(a%f.TWO_PWR_32_DBL_|0,a/f.TWO_PWR_32_DBL_|
0)};f.fromBits=function(a,b){return new f(a,b)};f.fromString=function(a,b){if(0==a.length)throw Error("number format error: empty string");var c=b||10;if(2>c||36<c)throw Error("radix out of range: "+c);if("-"==a.charAt(0))return f.fromString(a.substring(1),c).negate();if(0<=a.indexOf("-"))throw Error('number format error: interior "-" character: '+a);for(var d=f.fromNumber(Math.pow(c,8)),e=f.ZERO,g=0;g<a.length;g+=8){var h=Math.min(8,a.length-g),k=parseInt(a.substring(g,g+h),c);8>h?(h=f.fromNumber(Math.pow(c,
h)),e=e.multiply(h).add(f.fromNumber(k))):(e=e.multiply(d),e=e.add(f.fromNumber(k)))}return e};f.TWO_PWR_16_DBL_=65536;f.TWO_PWR_24_DBL_=16777216;f.TWO_PWR_32_DBL_=f.TWO_PWR_16_DBL_*f.TWO_PWR_16_DBL_;f.TWO_PWR_31_DBL_=f.TWO_PWR_32_DBL_/2;f.TWO_PWR_48_DBL_=f.TWO_PWR_32_DBL_*f.TWO_PWR_16_DBL_;f.TWO_PWR_64_DBL_=f.TWO_PWR_32_DBL_*f.TWO_PWR_32_DBL_;f.TWO_PWR_63_DBL_=f.TWO_PWR_64_DBL_/2;f.ZERO=f.fromInt(0);f.ONE=f.fromInt(1);f.NEG_ONE=f.fromInt(-1);f.MAX_VALUE=f.fromBits(-1,2147483647);f.MIN_VALUE=f.fromBits(0,
-2147483648);f.TWO_PWR_24_=f.fromInt(16777216);f.prototype.toInt=function(){return this.low_};f.prototype.toNumber=function(){return this.high_*f.TWO_PWR_32_DBL_+this.getLowBitsUnsigned()};f.prototype.toString=function(a){a=a||10;if(2>a||36<a)throw Error("radix out of range: "+a);if(this.isZero())return"0";if(this.isNegative()){if(this.equals(f.MIN_VALUE)){var b=f.fromNumber(a),c=this.div(b),b=c.multiply(b).subtract(this);return c.toString(a)+b.toInt().toString(a)}return"-"+this.negate().toString(a)}for(var c=
f.fromNumber(Math.pow(a,6)),b=this,d="";;){var e=b.div(c),g=b.subtract(e.multiply(c)).toInt().toString(a),b=e;if(b.isZero())return g+d;for(;6>g.length;)g="0"+g;d=""+g+d}};f.prototype.getHighBits=function(){return this.high_};f.prototype.getLowBits=function(){return this.low_};f.prototype.getLowBitsUnsigned=function(){return 0<=this.low_?this.low_:f.TWO_PWR_32_DBL_+this.low_};f.prototype.getNumBitsAbs=function(){if(this.isNegative())return this.equals(f.MIN_VALUE)?64:this.negate().getNumBitsAbs();
for(var a=0!=this.high_?this.high_:this.low_,b=31;0<b&&0==(a&1<<b);b--);return 0!=this.high_?b+33:b+1};f.prototype.isZero=function(){return 0==this.high_&&0==this.low_};f.prototype.isNegative=function(){return 0>this.high_};f.prototype.isOdd=function(){return 1==(this.low_&1)};f.prototype.equals=function(a){return this.high_==a.high_&&this.low_==a.low_};f.prototype.notEquals=function(a){return this.high_!=a.high_||this.low_!=a.low_};f.prototype.lessThan=function(a){return 0>this.compare(a)};f.prototype.lessThanOrEqual=
function(a){return 0>=this.compare(a)};f.prototype.greaterThan=function(a){return 0<this.compare(a)};f.prototype.greaterThanOrEqual=function(a){return 0<=this.compare(a)};f.prototype.compare=function(a){if(this.equals(a))return 0;var b=this.isNegative(),c=a.isNegative();return b&&!c?-1:!b&&c?1:this.subtract(a).isNegative()?-1:1};f.prototype.negate=function(){return this.equals(f.MIN_VALUE)?f.MIN_VALUE:this.not().add(f.ONE)};f.prototype.add=function(a){var b=this.high_>>>16,c=this.high_&65535,d=this.low_>>>
16,e=a.high_>>>16,g=a.high_&65535,h=a.low_>>>16,k;k=0+((this.low_&65535)+(a.low_&65535));a=0+(k>>>16);a+=d+h;d=0+(a>>>16);d+=c+g;c=0+(d>>>16);c=c+(b+e)&65535;return f.fromBits((a&65535)<<16|k&65535,c<<16|d&65535)};f.prototype.subtract=function(a){return this.add(a.negate())};f.prototype.multiply=function(a){if(this.isZero()||a.isZero())return f.ZERO;if(this.equals(f.MIN_VALUE))return a.isOdd()?f.MIN_VALUE:f.ZERO;if(a.equals(f.MIN_VALUE))return this.isOdd()?f.MIN_VALUE:f.ZERO;if(this.isNegative())return a.isNegative()?
this.negate().multiply(a.negate()):this.negate().multiply(a).negate();if(a.isNegative())return this.multiply(a.negate()).negate();if(this.lessThan(f.TWO_PWR_24_)&&a.lessThan(f.TWO_PWR_24_))return f.fromNumber(this.toNumber()*a.toNumber());var b=this.high_>>>16,c=this.high_&65535,d=this.low_>>>16,e=this.low_&65535,g=a.high_>>>16,h=a.high_&65535,k=a.low_>>>16;a=a.low_&65535;var l,m,n,x;x=0+e*a;n=0+(x>>>16);n+=d*a;m=0+(n>>>16);n=(n&65535)+e*k;m+=n>>>16;n&=65535;m+=c*a;l=0+(m>>>16);m=(m&65535)+d*k;l+=
m>>>16;m&=65535;m+=e*h;l+=m>>>16;m&=65535;l=l+(b*a+c*k+d*h+e*g)&65535;return f.fromBits(n<<16|x&65535,l<<16|m)};f.prototype.div=function(a){if(a.isZero())throw Error("division by zero");if(this.isZero())return f.ZERO;if(this.equals(f.MIN_VALUE)){if(a.equals(f.ONE)||a.equals(f.NEG_ONE))return f.MIN_VALUE;if(a.equals(f.MIN_VALUE))return f.ONE;var b=this.shiftRight(1).div(a).shiftLeft(1);if(b.equals(f.ZERO))return a.isNegative()?f.ONE:f.NEG_ONE;var c=this.subtract(a.multiply(b));return b.add(c.div(a))}if(a.equals(f.MIN_VALUE))return f.ZERO;
if(this.isNegative())return a.isNegative()?this.negate().div(a.negate()):this.negate().div(a).negate();if(a.isNegative())return this.div(a.negate()).negate();for(var d=f.ZERO,c=this;c.greaterThanOrEqual(a);){for(var b=Math.max(1,Math.floor(c.toNumber()/a.toNumber())),e=Math.ceil(Math.log(b)/Math.LN2),e=48>=e?1:Math.pow(2,e-48),g=f.fromNumber(b),h=g.multiply(a);h.isNegative()||h.greaterThan(c);)b-=e,g=f.fromNumber(b),h=g.multiply(a);g.isZero()&&(g=f.ONE);d=d.add(g);c=c.subtract(h)}return d};f.prototype.modulo=
function(a){return this.subtract(this.div(a).multiply(a))};f.prototype.not=function(){return f.fromBits(~this.low_,~this.high_)};f.prototype.and=function(a){return f.fromBits(this.low_&a.low_,this.high_&a.high_)};f.prototype.or=function(a){return f.fromBits(this.low_|a.low_,this.high_|a.high_)};f.prototype.xor=function(a){return f.fromBits(this.low_^a.low_,this.high_^a.high_)};f.prototype.shiftLeft=function(a){a&=63;if(0==a)return this;var b=this.low_;return 32>a?f.fromBits(b<<a,this.high_<<a|b>>>
32-a):f.fromBits(0,b<<a-32)};f.prototype.shiftRight=function(a){a&=63;if(0==a)return this;var b=this.high_;return 32>a?f.fromBits(this.low_>>>a|b<<32-a,b>>a):f.fromBits(b>>a-32,0<=b?0:-1)};f.prototype.shiftRightUnsigned=function(a){a&=63;if(0==a)return this;var b=this.high_;return 32>a?f.fromBits(this.low_>>>a|b<<32-a,b>>>a):32==a?f.fromBits(b,0):f.fromBits(b>>>a-32,0)};m.prototype.am=function(a,b,c,d,e,f){for(;0<=--f;){var g=b*this[a++]+c[d]+e;e=Math.floor(g/67108864);c[d++]=g&67108863}return e};
m.prototype.DB=26;m.prototype.DM=67108863;m.prototype.DV=67108864;m.prototype.FV=Math.pow(2,52);m.prototype.F1=26;m.prototype.F2=0;var k=[],h,l;h=48;for(l=0;9>=l;++l)k[h++]=l;h=97;for(l=10;36>l;++l)k[h++]=l;h=65;for(l=10;36>l;++l)k[h++]=l;e.prototype.convert=function(a){return 0>a.s||0<=a.compareTo(this.m)?a.mod(this.m):a};e.prototype.revert=function(a){return a};e.prototype.reduce=function(a){a.divRemTo(this.m,null,a)};e.prototype.mulTo=function(a,b,c){a.multiplyTo(b,c);this.reduce(c)};e.prototype.sqrTo=
function(a,b){a.squareTo(b);this.reduce(b)};g.prototype.convert=function(a){var b=d();a.abs().dlShiftTo(this.m.t,b);b.divRemTo(this.m,null,b);0>a.s&&0<b.compareTo(m.ZERO)&&this.m.subTo(b,b);return b};g.prototype.revert=function(a){var b=d();a.copyTo(b);this.reduce(b);return b};g.prototype.reduce=function(a){for(;a.t<=this.mt2;)a[a.t++]=0;for(var b=0;b<this.m.t;++b){var c=a[b]&32767,d=c*this.mpl+((c*this.mph+(a[b]>>15)*this.mpl&this.um)<<15)&a.DM,c=b+this.m.t;for(a[c]+=this.m.am(0,d,a,b,0,this.m.t);a[c]>=
a.DV;)a[c]-=a.DV,a[++c]++}a.clamp();a.drShiftTo(this.m.t,a);0<=a.compareTo(this.m)&&a.subTo(this.m,a)};g.prototype.mulTo=function(a,b,c){a.multiplyTo(b,c);this.reduce(c)};g.prototype.sqrTo=function(a,b){a.squareTo(b);this.reduce(b)};m.prototype.copyTo=function(a){for(var b=this.t-1;0<=b;--b)a[b]=this[b];a.t=this.t;a.s=this.s};m.prototype.fromInt=function(a){this.t=1;this.s=0>a?-1:0;0<a?this[0]=a:-1>a?this[0]=a+DV:this.t=0};m.prototype.fromString=function(a,b){var d;if(16==b)d=4;else if(8==b)d=3;else if(256==
b)d=8;else if(2==b)d=1;else if(32==b)d=5;else if(4==b)d=2;else{this.fromRadix(a,b);return}this.s=this.t=0;for(var e=a.length,f=!1,g=0;0<=--e;){var h=8==d?a[e]&255:c(a,e);0>h?"-"==a.charAt(e)&&(f=!0):(f=!1,0==g?this[this.t++]=h:g+d>this.DB?(this[this.t-1]|=(h&(1<<this.DB-g)-1)<<g,this[this.t++]=h>>this.DB-g):this[this.t-1]|=h<<g,g+=d,g>=this.DB&&(g-=this.DB))}8==d&&0!=(a[0]&128)&&(this.s=-1,0<g&&(this[this.t-1]|=(1<<this.DB-g)-1<<g));this.clamp();f&&m.ZERO.subTo(this,this)};m.prototype.clamp=function(){for(var a=
this.s&this.DM;0<this.t&&this[this.t-1]==a;)--this.t};m.prototype.dlShiftTo=function(a,b){var c;for(c=this.t-1;0<=c;--c)b[c+a]=this[c];for(c=a-1;0<=c;--c)b[c]=0;b.t=this.t+a;b.s=this.s};m.prototype.drShiftTo=function(a,b){for(var c=a;c<this.t;++c)b[c-a]=this[c];b.t=Math.max(this.t-a,0);b.s=this.s};m.prototype.lShiftTo=function(a,b){var c=a%this.DB,d=this.DB-c,e=(1<<d)-1,f=Math.floor(a/this.DB),g=this.s<<c&this.DM,h;for(h=this.t-1;0<=h;--h)b[h+f+1]=this[h]>>d|g,g=(this[h]&e)<<c;for(h=f-1;0<=h;--h)b[h]=
0;b[f]=g;b.t=this.t+f+1;b.s=this.s;b.clamp()};m.prototype.rShiftTo=function(a,b){b.s=this.s;var c=Math.floor(a/this.DB);if(c>=this.t)b.t=0;else{var d=a%this.DB,e=this.DB-d,f=(1<<d)-1;b[0]=this[c]>>d;for(var g=c+1;g<this.t;++g)b[g-c-1]|=(this[g]&f)<<e,b[g-c]=this[g]>>d;0<d&&(b[this.t-c-1]|=(this.s&f)<<e);b.t=this.t-c;b.clamp()}};m.prototype.subTo=function(a,b){for(var c=0,d=0,e=Math.min(a.t,this.t);c<e;)d+=this[c]-a[c],b[c++]=d&this.DM,d>>=this.DB;if(a.t<this.t){for(d-=a.s;c<this.t;)d+=this[c],b[c++]=
d&this.DM,d>>=this.DB;d+=this.s}else{for(d+=this.s;c<a.t;)d-=a[c],b[c++]=d&this.DM,d>>=this.DB;d-=a.s}b.s=0>d?-1:0;-1>d?b[c++]=this.DV+d:0<d&&(b[c++]=d);b.t=c;b.clamp()};m.prototype.multiplyTo=function(a,b){var c=this.abs(),d=a.abs(),e=c.t;for(b.t=e+d.t;0<=--e;)b[e]=0;for(e=0;e<d.t;++e)b[e+c.t]=c.am(0,d[e],b,e,0,c.t);b.s=0;b.clamp();this.s!=a.s&&m.ZERO.subTo(b,b)};m.prototype.squareTo=function(a){for(var b=this.abs(),c=a.t=2*b.t;0<=--c;)a[c]=0;for(c=0;c<b.t-1;++c){var d=b.am(c,b[c],a,2*c,0,1);(a[c+
b.t]+=b.am(c+1,2*b[c],a,2*c+1,d,b.t-c-1))>=b.DV&&(a[c+b.t]-=b.DV,a[c+b.t+1]=1)}0<a.t&&(a[a.t-1]+=b.am(c,b[c],a,2*c,0,1));a.s=0;a.clamp()};m.prototype.divRemTo=function(a,c,e){var f=a.abs();if(!(0>=f.t)){var g=this.abs();if(g.t<f.t)null!=c&&c.fromInt(0),null!=e&&this.copyTo(e);else{null==e&&(e=d());var h=d(),k=this.s;a=a.s;var l=this.DB-b(f[f.t-1]);0<l?(f.lShiftTo(l,h),g.lShiftTo(l,e)):(f.copyTo(h),g.copyTo(e));f=h.t;g=h[f-1];if(0!=g){var n=g*(1<<this.F1)+(1<f?h[f-2]>>this.F2:0),A=this.FV/n,n=(1<<
this.F1)/n,z=1<<this.F2,x=e.t,B=x-f,C=null==c?d():c;h.dlShiftTo(B,C);0<=e.compareTo(C)&&(e[e.t++]=1,e.subTo(C,e));m.ONE.dlShiftTo(f,C);for(C.subTo(h,h);h.t<f;)h[h.t++]=0;for(;0<=--B;){var D=e[--x]==g?this.DM:Math.floor(e[x]*A+(e[x-1]+z)*n);if((e[x]+=h.am(0,D,e,B,0,f))<D)for(h.dlShiftTo(B,C),e.subTo(C,e);e[x]<--D;)e.subTo(C,e)}null!=c&&(e.drShiftTo(f,c),k!=a&&m.ZERO.subTo(c,c));e.t=f;e.clamp();0<l&&e.rShiftTo(l,e);0>k&&m.ZERO.subTo(e,e)}}}};m.prototype.invDigit=function(){if(1>this.t)return 0;var a=
this[0];if(0==(a&1))return 0;var b=a&3,b=b*(2-(a&15)*b)&15,b=b*(2-(a&255)*b)&255,b=b*(2-((a&65535)*b&65535))&65535,b=b*(2-a*b%this.DV)%this.DV;return 0<b?this.DV-b:-b};m.prototype.isEven=function(){return 0==(0<this.t?this[0]&1:this.s)};m.prototype.exp=function(a,c){if(4294967295<a||1>a)return m.ONE;var e=d(),f=d(),g=c.convert(this),h=b(a)-1;for(g.copyTo(e);0<=--h;)if(c.sqrTo(e,f),0<(a&1<<h))c.mulTo(f,g,e);else var k=e,e=f,f=k;return c.revert(e)};m.prototype.toString=function(a){if(0>this.s)return"-"+
this.negate().toString(a);if(16==a)a=4;else if(8==a)a=3;else if(2==a)a=1;else if(32==a)a=5;else if(4==a)a=2;else return this.toRadix(a);var b=(1<<a)-1,c,d=!1,e="",f=this.t,g=this.DB-f*this.DB%a;if(0<f--)for(g<this.DB&&0<(c=this[f]>>g)&&(d=!0,e="0123456789abcdefghijklmnopqrstuvwxyz".charAt(c));0<=f;)g<a?(c=(this[f]&(1<<g)-1)<<a-g,c|=this[--f]>>(g+=this.DB-a)):(c=this[f]>>(g-=a)&b,0>=g&&(g+=this.DB,--f)),0<c&&(d=!0),d&&(e+="0123456789abcdefghijklmnopqrstuvwxyz".charAt(c));return d?e:"0"};m.prototype.negate=
function(){var a=d();m.ZERO.subTo(this,a);return a};m.prototype.abs=function(){return 0>this.s?this.negate():this};m.prototype.compareTo=function(a){var b=this.s-a.s;if(0!=b)return b;var c=this.t,b=c-a.t;if(0!=b)return 0>this.s?-b:b;for(;0<=--c;)if(0!=(b=this[c]-a[c]))return b;return 0};m.prototype.bitLength=function(){return 0>=this.t?0:this.DB*(this.t-1)+b(this[this.t-1]^this.s&this.DM)};m.prototype.mod=function(a){var b=d();this.abs().divRemTo(a,null,b);0>this.s&&0<b.compareTo(m.ZERO)&&a.subTo(b,
b);return b};m.prototype.modPowInt=function(a,b){var c;c=256>a||b.isEven()?new e(b):new g(b);return this.exp(a,c)};m.ZERO=a(0);m.ONE=a(1);m.prototype.fromRadix=function(a,b){this.fromInt(0);null==b&&(b=10);for(var d=this.chunkSize(b),e=Math.pow(b,d),f=!1,g=0,h=0,k=0;k<a.length;++k){var l=c(a,k);0>l?"-"==a.charAt(k)&&0==this.signum()&&(f=!0):(h=b*h+l,++g>=d&&(this.dMultiply(e),this.dAddOffset(h,0),h=g=0))}0<g&&(this.dMultiply(Math.pow(b,g)),this.dAddOffset(h,0));f&&m.ZERO.subTo(this,this)};m.prototype.chunkSize=
function(a){return Math.floor(Math.LN2*this.DB/Math.log(a))};m.prototype.signum=function(){return 0>this.s?-1:0>=this.t||1==this.t&&0>=this[0]?0:1};m.prototype.dMultiply=function(a){this[this.t]=this.am(0,a-1,this,0,0,this.t);++this.t;this.clamp()};m.prototype.dAddOffset=function(a,b){if(0!=a){for(;this.t<=b;)this[this.t++]=0;for(this[b]+=a;this[b]>=this.DV;)this[b]-=this.DV,++b>=this.t&&(this[this.t++]=0),++this[b]}};m.prototype.toRadix=function(b){null==b&&(b=10);if(0==this.signum()||2>b||36<b)return"0";
var c=this.chunkSize(b),c=Math.pow(b,c),e=a(c),f=d(),g=d(),h="";for(this.divRemTo(e,f,g);0<f.signum();)h=(c+g.intValue()).toString(b).substr(1)+h,f.divRemTo(e,f,g);return g.intValue().toString(b)+h};m.prototype.intValue=function(){if(0>this.s){if(1==this.t)return this[0]-this.DV;if(0==this.t)return-1}else{if(1==this.t)return this[0];if(0==this.t)return 0}return(this[1]&(1<<32-this.DB)-1)<<this.DB|this[0]};m.prototype.addTo=function(a,b){for(var c=0,d=0,e=Math.min(a.t,this.t);c<e;)d+=this[c]+a[c],
b[c++]=d&this.DM,d>>=this.DB;if(a.t<this.t){for(d+=a.s;c<this.t;)d+=this[c],b[c++]=d&this.DM,d>>=this.DB;d+=this.s}else{for(d+=this.s;c<a.t;)d+=a[c],b[c++]=d&this.DM,d>>=this.DB;d+=a.s}b.s=0>d?-1:0;0<d?b[c++]=d:-1>d&&(b[c++]=this.DV+d);b.t=c;b.clamp()};var n={abs:function(a,b){var c=new f(a,b),c=c.isNegative()?c.negate():c;HEAP32[tempDoublePtr>>2]=c.low_;HEAP32[tempDoublePtr+4>>2]=c.high_},ensureTemps:function(){n.ensuredTemps||(n.ensuredTemps=!0,n.two32=new m,n.two32.fromString("4294967296",10),
n.two64=new m,n.two64.fromString("18446744073709551616",10),n.temp1=new m,n.temp2=new m)},lh2bignum:function(a,b){var c=new m;c.fromString(b.toString(),10);var d=new m;c.multiplyTo(n.two32,d);c=new m;c.fromString(a.toString(),10);var e=new m;c.addTo(d,e);return e},stringify:function(a,b,c){a=(new f(a,b)).toString();c&&"-"==a[0]&&(n.ensureTemps(),c=new m,c.fromString(a,10),a=new m,n.two64.addTo(c,a),a=a.toString(10));return a},fromString:function(a,b,c,d,e){n.ensureTemps();var g=new m;g.fromString(a,
b);a=new m;a.fromString(c,10);c=new m;c.fromString(d,10);e&&0>g.compareTo(m.ZERO)&&(d=new m,g.addTo(n.two64,d),g=d);d=!1;0>g.compareTo(a)?(g=a,d=!0):0<g.compareTo(c)&&(g=c,d=!0);g=f.fromString(g.toString());HEAP32[tempDoublePtr>>2]=g.low_;HEAP32[tempDoublePtr+4>>2]=g.high_;if(d)throw"range error";}};return n}(),initialStackTop,inMain;
Module.callMain=Module.callMain=function(m){function d(){for(var b=0;3>b;b++)a.push(0)}assert(0==runDependencies,"cannot call main when async dependencies remain! (listen on __ATMAIN__)");assert(0==__ATPRERUN__.length,"cannot call main when preRun functions remain to be called");m=m||[];ensureInitRuntime();var c=m.length+1,a=[allocate(intArrayFromString("/bin/this.program"),"i8",ALLOC_NORMAL)];d();for(var b=0;b<c-1;b+=1)a.push(allocate(intArrayFromString(m[b]),"i8",ALLOC_NORMAL)),d();a.push(0);a=
allocate(a,"i32",ALLOC_NORMAL);initialStackTop=STACKTOP;inMain=!0;var e;try{e=Module._main(c,a,0)}catch(g){if(g&&"object"==typeof g&&"ExitStatus"==g.type)return Module.print("Exit Status: "+g.value),g.value;if("SimulateInfiniteLoop"==g)Module.noExitRuntime=!0;else throw g;}finally{inMain=!1}Module.noExitRuntime||exit(e)};
function run(m){function d(){ensureInitRuntime();preMain();calledRun=!0;Module._main&&shouldRunNow&&Module.callMain(m);postRun()}m=m||Module.arguments;0<runDependencies?Module.printErr("run() called, but dependencies remain, so not running"):(preRun(),0<runDependencies||(Module.setStatus?(Module.setStatus("Running..."),setTimeout(function(){setTimeout(function(){Module.setStatus("")},1);ABORT||d()},1)):d()))}Module.run=Module.run=run;
function exit(m){ABORT=!0;STACKTOP=initialStackTop;exitRuntime();if(inMain)throw{type:"ExitStatus",value:m};}Module.exit=Module.exit=exit;function abort(m){m&&Module.print(m);ABORT=!0;throw"abort() at "+Error().stack;}Module.abort=Module.abort=abort;if(Module.preInit)for("function"==typeof Module.preInit&&(Module.preInit=[Module.preInit]);0<Module.preInit.length;)Module.preInit.pop()();var shouldRunNow=!0;Module.noInitialRun&&(shouldRunNow=!1);run();
var TIFFFileToRGBAData=cwrap("TIFFFileToRGBAData","number",["string","number","number","number"]),malloc=cwrap("malloc","number",["number"]),free=cwrap("free","number",["number"]),Tiff=function(){function m(c){this.buffer=c}m.prototype.toDataURL=function(){var c=this.toCanvas();return c?c.toDataURL():""};var d=0;m.prototype.toCanvas=function(){var c=malloc(4),a=malloc(4),b=malloc(4),e=++d+".tiff",g=null;try{Module.FS.createDataFile("/",e,new Uint8Array(this.buffer),!0,!1);if(0!==TIFFFileToRGBAData(e,
c,a,b))return null;var f=getValue(c,"i32*"),k=getValue(a,"i32*"),h=getValue(b,"i32*"),g=document.createElement("canvas"),l=HEAPU8.subarray(h,h+4*f*k),m=g.getContext("2d"),p=m.createImageData(f,k),q=p.data;if("set"in q)q.set(l);else for(var t=0,r=l.length;t<r;++t)q[t]=l[t];g.width=f;g.height=k;m.putImageData(p,0,0)}finally{free(h),Module.FS.deleteFile(e)}free(b);free(a);free(c);return g};return m}();
"function"===typeof define&&define.amd?define("tiff",[],function(){return Tiff}):"object"===typeof window&&"object"===typeof window.document&&(window.Tiff=Tiff);})(window);
